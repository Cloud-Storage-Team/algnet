<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="549" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="549" > </text>
<g id="frames">
<g >
<title>[libc.so.6] (40,404,040 samples, 0.21%)</title><rect x="112.3" y="293" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="115.31" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.8" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.80" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1172.4" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.43" y="175.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.11%)</title><rect x="1151.1" y="373" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1154.09" y="383.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (40,404,040 samples, 0.21%)</title><rect x="881.2" y="357" width="2.5" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="884.19" y="367.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="325" width="5.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.10" y="335.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (30,303,030 samples, 0.16%)</title><rect x="339.5" y="325" width="1.9" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="342.52" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="53.9" y="117" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.94" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1137.9" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1140.90" y="255.5" ></text>
</g>
<g >
<title>std::locale::operator= (10,101,010 samples, 0.05%)</title><rect x="1096.5" y="309" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1099.48" y="319.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="205.2" y="277" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="208.20" y="287.5" ></text>
</g>
<g >
<title>sim::SendData::operator (696,969,690 samples, 3.67%)</title><rect x="1082.0" y="389" width="43.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1085.04" y="399.5" >sim:..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="859.2" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="862.22" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1172.4" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.43" y="223.5" ></text>
</g>
<g >
<title>operator delete (10,101,010 samples, 0.05%)</title><rect x="1150.5" y="373" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1153.46" y="383.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (90,909,090 samples, 0.48%)</title><rect x="1097.1" y="341" width="5.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1100.11" y="351.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (111,111,110 samples, 0.59%)</title><rect x="347.1" y="341" width="6.9" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="350.05" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::~MetricsCollector (10,101,010 samples, 0.05%)</title><rect x="23.8" y="405" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="26.81" y="415.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="1121.6" y="325" width="0.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1124.59" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.8" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.80" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="355.8" y="325" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="358.84" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1151.7" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1154.71" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="219.6" y="229" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="222.64" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="29.5" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.46" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (60,606,060 samples, 0.32%)</title><rect x="391.6" y="373" width="3.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="394.62" y="383.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleDocument (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="357" width="5.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1186.10" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.37" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.8" y="117" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.81" y="127.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (10,101,010 samples, 0.05%)</title><rect x="1095.9" y="325" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1098.85" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.8" y="165" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.80" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="108.5" y="37" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="111.54" y="47.5" ></text>
</g>
<g >
<title>vsnprintf (70,707,070 samples, 0.37%)</title><rect x="874.9" y="293" width="4.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="877.91" y="303.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (10,101,010 samples, 0.05%)</title><rect x="1187.5" y="181" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1190.49" y="191.5" ></text>
</g>
<g >
<title>main (18,757,575,570 samples, 98.78%)</title><rect x="24.4" y="437" width="1165.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="27.44" y="447.5" >main</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (40,404,040 samples, 0.21%)</title><rect x="1173.1" y="357" width="2.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1176.05" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.37" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="99.8" y="149" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="102.76" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.32%)</title><rect x="106.0" y="181" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.03" y="191.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1186.9" y="165" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1189.86" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.05%)</title><rect x="364.6" y="261" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="367.63" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="52.7" y="181" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.68" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (70,707,070 samples, 0.37%)</title><rect x="1136.6" y="373" width="4.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1139.65" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt;, std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, sim::MetricsStorage&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, sim::MetricsStorage&gt; &gt;, std::less&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, sim::MetricsStorage&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="102.3" y="293" width="0.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="105.27" y="303.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (232,323,230 samples, 1.22%)</title><rect x="774.5" y="325" width="14.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="777.49" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.8" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.81" y="271.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (50,505,050 samples, 0.27%)</title><rect x="111.7" y="373" width="3.1" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="114.68" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.27%)</title><rect x="1086.4" y="309" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1089.44" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::weak_ptr&lt;sim::ILink&gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (20,202,020 samples, 0.11%)</title><rect x="1135.4" y="373" width="1.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1138.39" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (18,979,797,790 samples, 99.95%)</title><rect x="10.6" y="453" width="1179.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.63" y="463.5" >[libc.so.6]</text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1187.5" y="133" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.49" y="143.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::update (181,818,180 samples, 0.96%)</title><rect x="361.5" y="357" width="11.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="364.49" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (212,121,210 samples, 1.12%)</title><rect x="85.9" y="293" width="13.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="88.95" y="303.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="149" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.23" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.8" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.83" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.43%)</title><rect x="18.8" y="325" width="5.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.79" y="335.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (30,303,030 samples, 0.16%)</title><rect x="920.1" y="357" width="1.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="923.11" y="367.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (80,808,080 samples, 0.43%)</title><rect x="1183.7" y="261" width="5.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.72" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt;, std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, sim::MetricsStorage&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, sim::MetricsStorage&gt; &gt;, std::less&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, sim::MetricsStorage&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="102.3" y="389" width="0.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="105.27" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="53.3" y="53" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.31" y="63.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1183.1" y="165" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1186.10" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="52.7" y="213" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.68" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.37%)</title><rect x="105.4" y="197" width="4.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.40" y="207.5" ></text>
</g>
<g >
<title>YAML::Scanner::InsertPotentialSimpleKey (10,101,010 samples, 0.05%)</title><rect x="1183.1" y="213" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1186.10" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.43%)</title><rect x="348.3" y="277" width="5.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="351.31" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="48.9" y="325" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="51.91" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.8" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.80" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.8" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.80" y="191.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="345.8" y="277" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="348.80" y="287.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (20,202,020 samples, 0.11%)</title><rect x="208.3" y="341" width="1.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="211.34" y="351.5" ></text>
</g>
<g >
<title>YAML::Stream::get (20,202,020 samples, 0.11%)</title><rect x="1184.4" y="181" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1187.35" y="191.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.16%)</title><rect x="26.9" y="389" width="1.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="29.95" y="399.5" ></text>
</g>
<g >
<title>cfree (323,232,320 samples, 1.70%)</title><rect x="180.7" y="389" width="20.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="183.72" y="399.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (171,717,170 samples, 0.90%)</title><rect x="851.1" y="357" width="10.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="854.06" y="367.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (20,202,020 samples, 0.11%)</title><rect x="354.0" y="325" width="1.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="356.96" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.8" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.81" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="854.2" y="325" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="857.20" y="335.5" ></text>
</g>
<g >
<title>malloc (161,616,160 samples, 0.85%)</title><rect x="1052.5" y="341" width="10.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1055.54" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="77.2" y="261" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="80.16" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (10,101,010 samples, 0.05%)</title><rect x="1102.1" y="293" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1105.13" y="303.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (20,202,020 samples, 0.11%)</title><rect x="1112.8" y="325" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1115.80" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1162.4" y="341" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1165.38" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::memory_holder*,  (10,101,010 samples, 0.05%)</title><rect x="1188.7" y="389" width="0.7" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1191.74" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1111.5" y="213" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1114.54" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="52.7" y="293" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.68" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1137.9" y="165" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1140.90" y="175.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (10,101,010 samples, 0.05%)</title><rect x="1093.3" y="325" width="0.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1096.34" y="335.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (20,202,020 samples, 0.11%)</title><rect x="340.1" y="309" width="1.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="343.15" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (10,101,010 samples, 0.05%)</title><rect x="1122.2" y="357" width="0.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1125.21" y="367.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="133" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.23" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.05%)</title><rect x="345.8" y="293" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="348.80" y="303.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (333,333,330 samples, 1.76%)</title><rect x="79.7" y="357" width="20.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="82.67" y="367.5" ></text>
</g>
<g >
<title>vsnprintf (111,111,110 samples, 0.59%)</title><rect x="214.0" y="293" width="6.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="216.99" y="303.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (111,111,110 samples, 0.59%)</title><rect x="347.1" y="325" width="6.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="350.05" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="365.9" y="229" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="368.88" y="239.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (10,101,010 samples, 0.05%)</title><rect x="1183.1" y="245" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1186.10" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.8" y="133" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.83" y="143.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.11%)</title><rect x="1135.4" y="357" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1138.39" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="859.2" y="85" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="862.22" y="95.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (40,404,040 samples, 0.21%)</title><rect x="1184.4" y="213" width="2.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1187.35" y="223.5" ></text>
</g>
<g >
<title>YAML::Scanner::PushIndentTo (10,101,010 samples, 0.05%)</title><rect x="1183.1" y="197" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1186.10" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.8" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.83" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 1.17%)</title><rect x="788.9" y="341" width="13.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="791.93" y="351.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::SimplePacketQueue (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="325" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1192.37" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="859.2" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="862.22" y="223.5" ></text>
</g>
<g >
<title>brk (10,101,010 samples, 0.05%)</title><rect x="205.2" y="229" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="208.20" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1186.9" y="69" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.86" y="79.5" ></text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks (10,101,010 samples, 0.05%)</title><rect x="346.4" y="341" width="0.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="349.43" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1172.4" y="181" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.43" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt;, std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, sim::MetricsStorage&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, sim::MetricsStorage&gt; &gt;, std::less&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, sim::MetricsStorage&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="102.3" y="373" width="0.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="105.27" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt;, std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, sim::MetricsStorage&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, sim::MetricsStorage&gt; &gt;, std::less&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, sim::MetricsStorage&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="102.3" y="341" width="0.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="105.27" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1151.7" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1154.71" y="287.5" ></text>
</g>
<g >
<title>cfree (313,131,310 samples, 1.65%)</title><rect x="618.2" y="357" width="19.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="621.20" y="367.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (272,727,270 samples, 1.44%)</title><rect x="576.1" y="341" width="17.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="579.15" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="859.2" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="862.22" y="175.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (10,101,010 samples, 0.05%)</title><rect x="848.6" y="309" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="851.55" y="319.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.05%)</title><rect x="209.0" y="325" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="211.97" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="52.7" y="101" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.68" y="111.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (10,101,010 samples, 0.05%)</title><rect x="212.7" y="341" width="0.7" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="215.73" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="29.5" y="165" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.46" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="52.7" y="261" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.68" y="271.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="293" width="5.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.10" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="29.5" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.46" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.8" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.83" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (80,808,080 samples, 0.43%)</title><rect x="854.8" y="325" width="5.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="857.83" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1149.8" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1152.83" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1186.9" y="37" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.86" y="47.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt;, std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, sim::MetricsStorage&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, sim::MetricsStorage&gt; &gt;, std::less&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, sim::MetricsStorage&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="102.3" y="325" width="0.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="105.27" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.37%)</title><rect x="874.9" y="277" width="4.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="877.91" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (20,202,020 samples, 0.11%)</title><rect x="1154.9" y="357" width="1.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1157.85" y="367.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (20,202,020 samples, 0.11%)</title><rect x="370.9" y="325" width="1.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="373.90" y="335.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (20,202,020 samples, 0.11%)</title><rect x="354.0" y="341" width="1.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="356.96" y="351.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (40,404,040 samples, 0.21%)</title><rect x="1184.4" y="197" width="2.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1187.35" y="207.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (141,414,140 samples, 0.74%)</title><rect x="1103.4" y="341" width="8.8" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1106.38" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="149" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.37" y="159.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (40,404,040 samples, 0.21%)</title><rect x="112.3" y="357" width="2.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="115.31" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="859.2" y="181" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="862.22" y="191.5" ></text>
</g>
<g >
<title>sim::LinkQueue::empty (40,404,040 samples, 0.21%)</title><rect x="863.0" y="357" width="2.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="865.99" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="21.9" y="293" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="24.93" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="29.5" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.46" y="335.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (10,101,010 samples, 0.05%)</title><rect x="1093.3" y="341" width="0.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1096.34" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="99.8" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="102.76" y="207.5" ></text>
</g>
<g >
<title>sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::recalculate_paths (858,585,850 samples, 4.52%)</title><rect x="1129.7" y="405" width="53.4" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="1132.74" y="415.5" >sim::..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1149.8" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1152.83" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (20,202,020 samples, 0.11%)</title><rect x="222.8" y="325" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="225.78" y="335.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.11%)</title><rect x="1174.3" y="341" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1177.31" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="133" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.37" y="143.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (70,707,070 samples, 0.37%)</title><rect x="105.4" y="357" width="4.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="108.40" y="367.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (10,101,010 samples, 0.05%)</title><rect x="1094.0" y="357" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1096.97" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.8" y="181" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.83" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="55.2" y="53" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.19" y="63.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (101,010,100 samples, 0.53%)</title><rect x="381.6" y="373" width="6.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="384.57" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 1.17%)</title><rect x="10.6" y="437" width="13.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.63" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (10,101,010 samples, 0.05%)</title><rect x="104.8" y="389" width="0.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="107.78" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.21%)</title><rect x="357.7" y="213" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="360.72" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.27%)</title><rect x="15.6" y="325" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.65" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.8" y="133" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.81" y="143.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (30,303,030 samples, 0.16%)</title><rect x="52.1" y="373" width="1.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="55.05" y="383.5" ></text>
</g>
<g >
<title>sim::Parser&lt;sim::Link&gt;::parse_object (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="373" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1192.37" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="53.9" y="149" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.94" y="159.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.16%)</title><rect x="1139.2" y="325" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1142.16" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.8" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.83" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.8" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.81" y="287.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1187.5" y="149" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.49" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (20,202,020 samples, 0.11%)</title><rect x="370.9" y="309" width="1.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="373.90" y="319.5" ></text>
</g>
<g >
<title>malloc (90,909,090 samples, 0.48%)</title><rect x="1044.4" y="357" width="5.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1047.38" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="99.8" y="37" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="102.76" y="47.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (20,202,020 samples, 0.11%)</title><rect x="1095.9" y="341" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1098.85" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.8" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.80" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="114.2" y="261" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="117.19" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="469" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (10,101,010 samples, 0.05%)</title><rect x="865.5" y="325" width="0.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="868.50" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="110.4" y="293" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="113.43" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.05%)</title><rect x="1134.8" y="373" width="0.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1137.77" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::export_metrics_to_files (1,464,646,450 samples, 7.71%)</title><rect x="24.4" y="421" width="91.0" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="27.44" y="431.5" >sim::Metri..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="1151.1" y="293" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1154.09" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="53.9" y="165" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.94" y="175.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (121,212,120 samples, 0.64%)</title><rect x="213.4" y="309" width="7.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="216.36" y="319.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (20,202,020 samples, 0.11%)</title><rect x="365.3" y="309" width="1.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="368.26" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (10,101,010 samples, 0.05%)</title><rect x="869.9" y="293" width="0.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="872.89" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="53.9" y="133" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.94" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.21%)</title><rect x="876.8" y="245" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="879.80" y="255.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (20,202,020 samples, 0.11%)</title><rect x="229.1" y="325" width="1.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="232.05" y="335.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="111.1" y="341" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="114.05" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_erase (20,202,020 samples, 0.11%)</title><rect x="1158.0" y="373" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1160.99" y="383.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="205.2" y="293" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="208.20" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="855.5" y="309" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="858.46" y="319.5" ></text>
</g>
<g >
<title>brk (10,101,010 samples, 0.05%)</title><rect x="23.8" y="341" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="26.81" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="205.8" y="293" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="208.83" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="53.9" y="101" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.94" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1172.4" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.43" y="303.5" ></text>
</g>
<g >
<title>fopen (30,303,030 samples, 0.16%)</title><rect x="53.9" y="341" width="1.9" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="56.94" y="351.5" ></text>
</g>
<g >
<title>__default_morecore (10,101,010 samples, 0.05%)</title><rect x="205.2" y="245" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="208.20" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.37%)</title><rect x="105.4" y="277" width="4.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.40" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.05%)</title><rect x="1181.2" y="389" width="0.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1184.21" y="399.5" ></text>
</g>
<g >
<title>Logger::get_instance (50,505,050 samples, 0.27%)</title><rect x="675.3" y="341" width="3.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="678.32" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1104.0" y="325" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1107.01" y="335.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (40,404,040 samples, 0.21%)</title><rect x="362.7" y="309" width="2.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="365.74" y="319.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.05%)</title><rect x="220.9" y="309" width="0.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="223.89" y="319.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (20,202,020 samples, 0.11%)</title><rect x="210.9" y="325" width="1.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="213.85" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (30,303,030 samples, 0.16%)</title><rect x="102.9" y="389" width="1.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="105.89" y="399.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (50,505,050 samples, 0.27%)</title><rect x="203.3" y="357" width="3.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="206.32" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="352.1" y="229" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="355.07" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1186.9" y="101" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.86" y="111.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (40,404,040 samples, 0.21%)</title><rect x="1184.4" y="245" width="2.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1187.35" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.37" y="255.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::export_to_files (1,303,030,290 samples, 6.86%)</title><rect x="24.4" y="405" width="81.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="27.44" y="415.5" >sim::Link..</text>
</g>
<g >
<title>sim::bfs[abi:cxx11] (565,656,560 samples, 2.98%)</title><rect x="1141.0" y="389" width="35.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1144.04" y="399.5" >si..</text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.43%)</title><rect x="18.8" y="309" width="5.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.79" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="858.6" y="245" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="861.60" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="205.2" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="208.20" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="205.2" y="149" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="208.20" y="159.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (50,505,050 samples, 0.27%)</title><rect x="357.1" y="277" width="3.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="360.10" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1172.4" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.43" y="239.5" ></text>
</g>
<g >
<title>vsnprintf (80,808,080 samples, 0.43%)</title><rect x="348.3" y="293" width="5.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="351.31" y="303.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.05%)</title><rect x="229.7" y="309" width="0.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="232.68" y="319.5" ></text>
</g>
<g >
<title>sim::Switch::process (9,565,656,470 samples, 50.37%)</title><rect x="396.0" y="373" width="594.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="399.01" y="383.5" >sim::Switch::process</text>
</g>
<g >
<title>[libc.so.6] (272,727,270 samples, 1.44%)</title><rect x="61.5" y="309" width="16.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="64.47" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="99.8" y="165" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="102.76" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="1139.2" y="309" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1142.16" y="319.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.16%)</title><rect x="1139.2" y="341" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1142.16" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.37" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1186.9" y="53" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.86" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="205.2" y="117" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="208.20" y="127.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.16%)</title><rect x="26.9" y="373" width="1.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="29.95" y="383.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (10,101,010 samples, 0.05%)</title><rect x="221.5" y="309" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="224.52" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.32%)</title><rect x="349.6" y="245" width="3.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="352.56" y="255.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="353.3" y="309" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="356.33" y="319.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::close (10,101,010 samples, 0.05%)</title><rect x="52.1" y="357" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="55.05" y="367.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="117" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.23" y="127.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.05%)</title><rect x="101.6" y="357" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="104.64" y="367.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.05%)</title><rect x="865.5" y="341" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="868.50" y="351.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.11%)</title><rect x="1174.3" y="325" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1177.31" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (40,404,040 samples, 0.21%)</title><rect x="1138.5" y="357" width="2.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1141.53" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="52.7" y="277" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.68" y="287.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="341" width="5.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.10" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="847.3" y="309" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="850.30" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="23.8" y="373" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="26.81" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt;, std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, sim::MetricsStorage&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, sim::MetricsStorage&gt; &gt;, std::less&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, sim::MetricsStorage&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="102.3" y="357" width="0.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="105.27" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (151,515,150 samples, 0.80%)</title><rect x="628.2" y="341" width="9.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="631.24" y="351.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::data[abi:cxx11] (20,202,020 samples, 0.11%)</title><rect x="28.8" y="389" width="1.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="31.83" y="399.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (60,606,060 samples, 0.32%)</title><rect x="356.5" y="325" width="3.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="359.47" y="335.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="1124.1" y="341" width="0.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1127.10" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="29.5" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.46" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="25.7" y="357" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.69" y="367.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (70,707,070 samples, 0.37%)</title><rect x="225.9" y="357" width="4.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="228.91" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="25.1" y="389" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.06" y="399.5" ></text>
</g>
<g >
<title>auto sim::YamlParser::process_links (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="389" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1192.37" y="399.5" ></text>
</g>
<g >
<title>operator delete (131,313,130 samples, 0.69%)</title><rect x="284.3" y="373" width="8.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="287.29" y="383.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (10,101,010 samples, 0.05%)</title><rect x="1188.1" y="213" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1191.12" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1172.4" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.43" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.8" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.83" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt;, std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::less&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (10,101,010 samples, 0.05%)</title><rect x="205.8" y="309" width="0.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="208.83" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (20,202,020 samples, 0.11%)</title><rect x="1166.8" y="373" width="1.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1169.78" y="383.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (30,303,030 samples, 0.16%)</title><rect x="1122.8" y="357" width="1.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1125.84" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="53.9" y="261" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.94" y="271.5" ></text>
</g>
<g >
<title>__libc_start_main (18,979,797,790 samples, 99.95%)</title><rect x="10.6" y="469" width="1179.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.63" y="479.5" >__libc_start_main</text>
</g>
<g >
<title>sim::Link::get_max_to_ingress_queue_size (101,010,100 samples, 0.53%)</title><rect x="375.3" y="373" width="6.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="378.30" y="383.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (10,101,010 samples, 0.05%)</title><rect x="1187.5" y="197" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1190.49" y="207.5" ></text>
</g>
<g >
<title>sim::BaseHasher::get_hash (10,101,010 samples, 0.05%)</title><rect x="1121.6" y="341" width="0.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1124.59" y="351.5" ></text>
</g>
<g >
<title>sim::Link::transmit (80,808,080 samples, 0.43%)</title><rect x="225.3" y="373" width="5.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="228.29" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (60,606,060 samples, 0.32%)</title><rect x="1163.0" y="373" width="3.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1166.01" y="383.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (70,707,070 samples, 0.37%)</title><rect x="362.7" y="341" width="4.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="365.74" y="351.5" ></text>
</g>
<g >
<title>sim::RoutingModule::update_routing_table (111,111,110 samples, 0.59%)</title><rect x="1134.1" y="389" width="6.9" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1137.14" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.11%)</title><rect x="52.7" y="341" width="1.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="55.68" y="351.5" ></text>
</g>
<g >
<title>YAML::Load (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="389" width="5.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1186.10" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (1,101,010,090 samples, 5.80%)</title><rect x="922.0" y="357" width="68.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="924.99" y="367.5" >std::_R..</text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="821.6" y="341" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="824.56" y="351.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::send_packets (90,909,090 samples, 0.48%)</title><rect x="355.8" y="357" width="5.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="358.84" y="367.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (141,414,140 samples, 0.74%)</title><rect x="852.9" y="341" width="8.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="855.95" y="351.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="870.5" y="261" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="873.52" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.48%)</title><rect x="215.2" y="245" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="218.24" y="255.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (20,202,020 samples, 0.11%)</title><rect x="205.2" y="325" width="1.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="208.20" y="335.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (70,707,070 samples, 0.37%)</title><rect x="105.4" y="373" width="4.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="108.40" y="383.5" ></text>
</g>
<g >
<title>YAML::detail::memory::create_node (10,101,010 samples, 0.05%)</title><rect x="1186.9" y="197" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1189.86" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.21%)</title><rect x="226.5" y="325" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="229.54" y="335.5" ></text>
</g>
<g >
<title>sim::Event::Event (10,101,010 samples, 0.05%)</title><rect x="1092.7" y="341" width="0.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1095.71" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="99.8" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="102.76" y="223.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (60,606,060 samples, 0.32%)</title><rect x="1112.2" y="341" width="3.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1115.17" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="51.4" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="54.43" y="303.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (80,808,080 samples, 0.43%)</title><rect x="355.8" y="341" width="5.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="358.84" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (30,303,030 samples, 0.16%)</title><rect x="1176.2" y="389" width="1.9" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1179.19" y="399.5" ></text>
</g>
<g >
<title>fclose (10,101,010 samples, 0.05%)</title><rect x="52.1" y="341" width="0.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="55.05" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (60,606,060 samples, 0.32%)</title><rect x="226.5" y="341" width="3.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="229.54" y="351.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (20,202,020 samples, 0.11%)</title><rect x="341.4" y="341" width="1.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="344.40" y="351.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (373,737,370 samples, 1.97%)</title><rect x="55.8" y="373" width="23.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="58.82" y="383.5" >s..</text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (30,303,030 samples, 0.16%)</title><rect x="847.3" y="325" width="1.9" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="850.30" y="335.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (40,404,040 samples, 0.21%)</title><rect x="112.3" y="341" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="115.31" y="351.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (30,303,030 samples, 0.16%)</title><rect x="1186.9" y="245" width="1.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.86" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1137.9" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1140.90" y="223.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (20,202,020 samples, 0.11%)</title><rect x="109.8" y="341" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="112.80" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="16.9" y="309" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="19.90" y="319.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.05%)</title><rect x="879.3" y="309" width="0.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="882.31" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.8" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.80" y="303.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1186.9" y="181" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1189.86" y="191.5" ></text>
</g>
<g >
<title>memcpy@plt (10,101,010 samples, 0.05%)</title><rect x="123.0" y="405" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="125.98" y="415.5" ></text>
</g>
<g >
<title>sim::Process::operator (13,606,060,470 samples, 71.65%)</title><rect x="230.3" y="389" width="845.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="233.31" y="399.5" >sim::Process::operator</text>
</g>
<g >
<title>cfree (80,808,080 samples, 0.43%)</title><rect x="18.8" y="341" width="5.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="21.79" y="351.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (30,303,030 samples, 0.16%)</title><rect x="1156.1" y="373" width="1.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1159.11" y="383.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (10,101,010 samples, 0.05%)</title><rect x="360.9" y="341" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="363.86" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="1151.1" y="309" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1154.09" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="99.8" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="102.76" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="52.7" y="133" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.68" y="143.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (40,404,040 samples, 0.21%)</title><rect x="857.3" y="309" width="2.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="860.34" y="319.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,101,010 samples, 0.05%)</title><rect x="661.5" y="357" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="664.51" y="367.5" ></text>
</g>
<g >
<title>operator delete (40,404,040 samples, 0.21%)</title><rect x="123.6" y="405" width="2.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="126.61" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="29.5" y="341" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="32.46" y="351.5" ></text>
</g>
<g >
<title>sim::Event::get_time (121,212,120 samples, 0.64%)</title><rect x="126.1" y="405" width="7.5" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="129.12" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1183.1" y="149" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1186.10" y="159.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (10,101,010 samples, 0.05%)</title><rect x="355.2" y="357" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="358.21" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.8" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.81" y="191.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (60,606,060 samples, 0.32%)</title><rect x="867.4" y="325" width="3.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="870.38" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1149.8" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1152.83" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.27%)</title><rect x="106.7" y="85" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.66" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="53.9" y="181" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.94" y="191.5" ></text>
</g>
<g >
<title>std::ostream::put (30,303,030 samples, 0.16%)</title><rect x="100.4" y="373" width="1.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="103.38" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="367.1" y="293" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="370.14" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (191,919,190 samples, 1.01%)</title><rect x="66.5" y="277" width="11.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="69.49" y="287.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.21%)</title><rect x="292.4" y="373" width="2.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="295.45" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="453" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.32%)</title><rect x="106.0" y="133" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.03" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1172.4" y="325" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1175.43" y="335.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="102.3" y="277" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="105.27" y="287.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (10,101,010 samples, 0.05%)</title><rect x="208.3" y="325" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="211.34" y="335.5" ></text>
</g>
<g >
<title>vsnprintf (20,202,020 samples, 0.11%)</title><rect x="109.8" y="325" width="1.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="112.80" y="335.5" ></text>
</g>
<g >
<title>Logger::get_instance (40,404,040 samples, 0.21%)</title><rect x="442.5" y="357" width="2.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="445.46" y="367.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1187.5" y="165" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.49" y="175.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.05%)</title><rect x="880.6" y="325" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="883.56" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (40,404,040 samples, 0.21%)</title><rect x="368.4" y="309" width="2.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="371.39" y="319.5" ></text>
</g>
<g >
<title>vsnprintf (40,404,040 samples, 0.21%)</title><rect x="112.3" y="325" width="2.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="115.31" y="335.5" ></text>
</g>
<g >
<title>std::locale::operator= (10,101,010 samples, 0.05%)</title><rect x="341.4" y="309" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="344.40" y="319.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="849.2" y="309" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="852.18" y="319.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (80,808,080 samples, 0.43%)</title><rect x="1086.4" y="341" width="5.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1089.44" y="351.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (50,505,050 samples, 0.27%)</title><rect x="357.1" y="309" width="3.1" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="360.10" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.32%)</title><rect x="106.0" y="101" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.03" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.21%)</title><rect x="112.3" y="277" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="115.31" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.05%)</title><rect x="1102.1" y="309" width="0.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1105.13" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.8" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.81" y="255.5" ></text>
</g>
<g >
<title>sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::start (17,131,312,960 samples, 90.21%)</title><rect x="118.6" y="421" width="1064.5" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="121.59" y="431.5" >sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::start</text>
</g>
<g >
<title>sim::Link::Arrive::~Arrive (10,101,010 samples, 0.05%)</title><rect x="142.4" y="405" width="0.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="145.44" y="415.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (40,404,040 samples, 0.21%)</title><rect x="1184.4" y="229" width="2.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1187.35" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.37%)</title><rect x="105.4" y="245" width="4.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.40" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1186.9" y="117" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.86" y="127.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (111,111,110 samples, 0.59%)</title><rect x="873.0" y="341" width="6.9" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="876.03" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (404,040,400 samples, 2.13%)</title><rect x="593.1" y="357" width="25.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="596.10" y="367.5" >[..</text>
</g>
<g >
<title>sim::is_valid_link (10,101,010 samples, 0.05%)</title><rect x="1134.1" y="373" width="0.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1137.14" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="51.4" y="325" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="54.43" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="53.9" y="197" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.94" y="207.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (30,303,030 samples, 0.16%)</title><rect x="204.6" y="341" width="1.9" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="207.57" y="351.5" ></text>
</g>
<g >
<title>sim::Link::arrive (383,838,380 samples, 2.02%)</title><rect x="201.4" y="373" width="23.9" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="204.44" y="383.5" >s..</text>
</g>
<g >
<title>virtual thunk to sim::RoutingModule::get_id[abi:cxx11] (10,101,010 samples, 0.05%)</title><rect x="1175.6" y="373" width="0.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1178.56" y="383.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="1102.8" y="341" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1105.76" y="351.5" ></text>
</g>
<g >
<title>all (18,989,898,800 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (121,212,120 samples, 0.64%)</title><rect x="1104.6" y="325" width="7.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1107.64" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1149.8" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1152.83" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="52.7" y="117" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.68" y="127.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="51.4" y="357" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="54.43" y="367.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (343,434,340 samples, 1.81%)</title><rect x="57.7" y="357" width="21.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="60.70" y="367.5" >s..</text>
</g>
<g >
<title>sim::Link::schedule_arrival (90,909,090 samples, 0.48%)</title><rect x="1085.8" y="357" width="5.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1088.81" y="367.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="1102.1" y="325" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1105.13" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.37%)</title><rect x="105.4" y="229" width="4.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.40" y="239.5" ></text>
</g>
<g >
<title>vsnprintf (121,212,120 samples, 0.64%)</title><rect x="1104.6" y="293" width="7.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1107.64" y="303.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (30,303,030 samples, 0.16%)</title><rect x="344.5" y="325" width="1.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="347.54" y="335.5" ></text>
</g>
<g >
<title>malloc (343,434,340 samples, 1.81%)</title><rect x="826.0" y="325" width="21.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="828.96" y="335.5" >m..</text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="356.5" y="309" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="359.47" y="319.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (90,909,090 samples, 0.48%)</title><rect x="347.7" y="309" width="5.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="350.68" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.05%)</title><rect x="870.5" y="293" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="873.52" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.37%)</title><rect x="348.9" y="261" width="4.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="351.94" y="271.5" ></text>
</g>
<g >
<title>cfree (303,030,300 samples, 1.60%)</title><rect x="802.7" y="341" width="18.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="805.73" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="339.5" y="309" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="342.52" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.8" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.83" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (202,020,200 samples, 1.06%)</title><rect x="86.6" y="277" width="12.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="89.57" y="287.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (30,303,030 samples, 0.16%)</title><rect x="339.5" y="341" width="1.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="342.52" y="351.5" ></text>
</g>
<g >
<title>nons (18,989,898,800 samples, 100.00%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >nons</text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.05%)</title><rect x="356.5" y="293" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="359.47" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.32%)</title><rect x="106.0" y="117" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.03" y="127.5" ></text>
</g>
<g >
<title>Logger::warn (2,363,636,340 samples, 12.45%)</title><rect x="446.2" y="357" width="146.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="449.22" y="367.5" >Logger::warn</text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.05%)</title><rect x="1090.8" y="293" width="0.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1093.83" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.8" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.81" y="239.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="309" width="5.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.10" y="319.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.11%)</title><rect x="25.7" y="389" width="1.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="28.69" y="399.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="51.4" y="341" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="54.43" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (30,303,030 samples, 0.16%)</title><rect x="47.7" y="373" width="1.8" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="50.66" y="383.5" ></text>
</g>
<g >
<title>__default_morecore (10,101,010 samples, 0.05%)</title><rect x="23.8" y="357" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="26.81" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="99.8" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="102.76" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="859.2" y="69" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="862.22" y="79.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.11%)</title><rect x="1151.1" y="357" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1154.09" y="367.5" ></text>
</g>
<g >
<title>sim::Link::get_to_ingress_queue_size (60,606,060 samples, 0.32%)</title><rect x="387.9" y="373" width="3.7" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="390.85" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1186.9" y="133" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.86" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="365.9" y="213" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="368.88" y="223.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (50,505,050 samples, 0.27%)</title><rect x="115.4" y="421" width="3.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="118.45" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.8" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.80" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1137.9" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1140.90" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="28.2" y="341" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="31.20" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;YAML::detail::node&gt;, std::shared_ptr&lt;YAML::detail::node&gt;, std::_Identity&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt;, std::less&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="1188.7" y="357" width="0.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1191.74" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.05%)</title><rect x="205.2" y="309" width="0.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="208.20" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="29.5" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.46" y="287.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (10,101,010 samples, 0.05%)</title><rect x="114.8" y="389" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="117.82" y="399.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (141,414,140 samples, 0.74%)</title><rect x="213.4" y="325" width="8.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="216.36" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.8" y="149" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.81" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.21%)</title><rect x="357.7" y="229" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="360.72" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (40,404,040 samples, 0.21%)</title><rect x="209.6" y="341" width="2.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="212.60" y="351.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (20,202,020 samples, 0.11%)</title><rect x="52.7" y="357" width="1.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="55.68" y="367.5" ></text>
</g>
<g >
<title>strlen@plt (20,202,020 samples, 0.11%)</title><rect x="849.8" y="341" width="1.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="852.81" y="351.5" ></text>
</g>
<g >
<title>sim::Process::~Process (70,707,070 samples, 0.37%)</title><rect x="150.0" y="405" width="4.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="152.97" y="415.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.11%)</title><rect x="1185.6" y="181" width="1.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1188.61" y="191.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="212.1" y="341" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="215.11" y="351.5" ></text>
</g>
<g >
<title>Logger::get_instance (10,101,010 samples, 0.05%)</title><rect x="1082.0" y="373" width="0.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1085.04" y="383.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::operator (80,808,080 samples, 0.43%)</title><rect x="225.3" y="389" width="5.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="228.29" y="399.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (40,404,040 samples, 0.21%)</title><rect x="1091.5" y="357" width="2.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1094.46" y="367.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="870.5" y="277" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="873.52" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="485" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::get_max_size (10,101,010 samples, 0.05%)</title><rect x="395.4" y="373" width="0.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="398.38" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="97.9" y="261" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="100.87" y="271.5" ></text>
</g>
<g >
<title>sim::Switch::notify_about_arrival (10,101,010 samples, 0.05%)</title><rect x="224.7" y="357" width="0.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="227.66" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1172.4" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.43" y="287.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (30,303,030 samples, 0.16%)</title><rect x="871.1" y="325" width="1.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="874.15" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;Time&lt;Nanosecond&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (30,303,030 samples, 0.16%)</title><rect x="50.2" y="373" width="1.9" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="53.17" y="383.5" ></text>
</g>
<g >
<title>sim::Host::send_packet (676,767,670 samples, 3.56%)</title><rect x="1082.7" y="373" width="42.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1085.67" y="383.5" >sim..</text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.05%)</title><rect x="365.9" y="277" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="368.88" y="287.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (50,505,050 samples, 0.27%)</title><rect x="357.1" y="293" width="3.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="360.10" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1158.0" y="341" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1160.99" y="351.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="78.4" y="341" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="81.41" y="351.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (30,303,030 samples, 0.16%)</title><rect x="859.9" y="325" width="1.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="862.85" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.8" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.81" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="29.5" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.46" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (262,626,260 samples, 1.38%)</title><rect x="82.8" y="309" width="16.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="85.81" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 1.17%)</title><rect x="10.6" y="421" width="13.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.63" y="431.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (141,414,140 samples, 0.74%)</title><rect x="213.4" y="341" width="8.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="216.36" y="351.5" ></text>
</g>
<g >
<title>sim::Link::Link (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="357" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1192.37" y="367.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="309" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1192.37" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="99.8" y="69" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="102.76" y="79.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1136.0" y="325" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1139.02" y="335.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="1162.4" y="357" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1165.38" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="29.5" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.46" y="319.5" ></text>
</g>
<g >
<title>Logger::warn (10,101,010 samples, 0.05%)</title><rect x="283.7" y="373" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="286.66" y="383.5" ></text>
</g>
<g >
<title>Logger::info (10,101,010 samples, 0.05%)</title><rect x="202.7" y="357" width="0.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="205.69" y="367.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (10,101,010 samples, 0.05%)</title><rect x="1183.1" y="229" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1186.10" y="239.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Switch::process (70,707,070 samples, 0.37%)</title><rect x="1125.4" y="389" width="4.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1128.35" y="399.5" ></text>
</g>
<g >
<title>write (20,202,020 samples, 0.11%)</title><rect x="52.7" y="309" width="1.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="55.68" y="319.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (30,303,030 samples, 0.16%)</title><rect x="1089.6" y="309" width="1.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1092.57" y="319.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.11%)</title><rect x="1135.4" y="341" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1138.39" y="351.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (3,040,404,010 samples, 16.01%)</title><rect x="662.1" y="357" width="189.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="665.14" y="367.5" >sim::Link::get_packet</text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="29.5" y="357" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="32.46" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="99.8" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="102.76" y="191.5" ></text>
</g>
<g >
<title>malloc (70,707,070 samples, 0.37%)</title><rect x="637.7" y="357" width="4.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="640.66" y="367.5" ></text>
</g>
<g >
<title>operator new (202,020,200 samples, 1.06%)</title><rect x="1050.0" y="357" width="12.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1053.03" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="165" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.37" y="175.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;, std::weak_ptr&lt;sim::IProcessingDevice&gt;&amp;&gt; (1,373,737,360 samples, 7.23%)</title><rect x="990.4" y="373" width="85.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="993.40" y="383.5" >void sim::..</text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (30,303,030 samples, 0.16%)</title><rect x="109.8" y="357" width="1.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="112.80" y="367.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (50,505,050 samples, 0.27%)</title><rect x="367.8" y="325" width="3.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="370.77" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="25.7" y="373" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.69" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.05%)</title><rect x="49.5" y="373" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="52.54" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.8" y="165" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.81" y="175.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (202,020,200 samples, 1.06%)</title><rect x="11.3" y="373" width="12.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="14.26" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1121.0" y="341" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1123.96" y="351.5" ></text>
</g>
<g >
<title>operator delete (60,606,060 samples, 0.32%)</title><rect x="642.1" y="357" width="3.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="645.05" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1137.9" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1140.90" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.37" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1151.1" y="341" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1154.09" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.8" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.83" y="351.5" ></text>
</g>
<g >
<title>sim::LinkQueue::LinkQueue (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="341" width="0.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1192.37" y="351.5" ></text>
</g>
<g >
<title>YAML::LoadFile (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="405" width="5.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1186.10" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1176.8" y="357" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1179.82" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.8" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.80" y="287.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (30,303,030 samples, 0.16%)</title><rect x="109.8" y="373" width="1.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="112.80" y="383.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (15,696,969,540 samples, 82.66%)</title><rect x="154.4" y="405" width="975.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="157.36" y="415.5" >sim::Scheduler::tick</text>
</g>
<g >
<title>std::locale::locale (10,101,010 samples, 0.05%)</title><rect x="209.0" y="309" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="211.97" y="319.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (585,858,580 samples, 3.09%)</title><rect x="883.7" y="357" width="36.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="886.70" y="367.5" >sim..</text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (20,202,020 samples, 0.11%)</title><rect x="365.3" y="293" width="1.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="368.26" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="53.9" y="85" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.94" y="95.5" ></text>
</g>
<g >
<title>operator new (404,040,400 samples, 2.13%)</title><rect x="822.2" y="341" width="25.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="825.19" y="351.5" >o..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.8" y="133" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.80" y="143.5" ></text>
</g>
<g >
<title>writev (10,101,010 samples, 0.05%)</title><rect x="99.8" y="325" width="0.6" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="102.76" y="335.5" ></text>
</g>
<g >
<title>vsnprintf (10,101,010 samples, 0.05%)</title><rect x="365.9" y="261" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="368.88" y="271.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (20,202,020 samples, 0.11%)</title><rect x="52.7" y="325" width="1.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="55.68" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="29.5" y="117" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.46" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="99.8" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="102.76" y="239.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="101" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.23" y="111.5" ></text>
</g>
<g >
<title>fopen (70,707,070 samples, 0.37%)</title><rect x="105.4" y="341" width="4.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="108.40" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="51.4" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="54.43" y="319.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1137.9" y="357" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1140.90" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (303,030,300 samples, 1.60%)</title><rect x="59.6" y="341" width="18.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="62.59" y="351.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (30,303,030 samples, 0.16%)</title><rect x="363.4" y="293" width="1.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="366.37" y="303.5" ></text>
</g>
<g >
<title>Logger::info (20,202,020 samples, 0.11%)</title><rect x="445.0" y="357" width="1.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="447.97" y="367.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (393,939,390 samples, 2.07%)</title><rect x="200.8" y="389" width="24.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="203.81" y="399.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="29.5" y="133" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.46" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="10.6" y="373" width="0.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.63" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.8" y="149" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.83" y="159.5" ></text>
</g>
<g >
<title>operator new (252,525,250 samples, 1.33%)</title><rect x="645.8" y="357" width="15.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="648.82" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="53.9" y="245" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.94" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="365.9" y="245" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="368.88" y="255.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="48.9" y="341" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="51.91" y="351.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (292,929,290 samples, 1.54%)</title><rect x="206.5" y="357" width="18.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="209.46" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.05%)</title><rect x="367.1" y="325" width="0.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="370.14" y="335.5" ></text>
</g>
<g >
<title>cfree (50,505,050 samples, 0.27%)</title><rect x="15.6" y="341" width="3.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="18.65" y="351.5" ></text>
</g>
<g >
<title>sim::Host::~Host (10,101,010 samples, 0.05%)</title><rect x="10.6" y="341" width="0.7" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="13.63" y="351.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_outlinks (30,303,030 samples, 0.16%)</title><rect x="1154.2" y="373" width="1.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1157.22" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="205.2" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="208.20" y="207.5" ></text>
</g>
<g >
<title>vsnprintf (282,828,280 samples, 1.49%)</title><rect x="60.8" y="325" width="17.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="63.84" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (171,717,170 samples, 0.90%)</title><rect x="190.1" y="373" width="10.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="193.14" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1137.9" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1140.90" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="117" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.37" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1137.9" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1140.90" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.32%)</title><rect x="875.5" y="261" width="3.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="878.54" y="271.5" ></text>
</g>
<g >
<title>virtual thunk to sim::RoutingModule::get_id[abi:cxx11] (10,101,010 samples, 0.05%)</title><rect x="374.7" y="357" width="0.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="377.67" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.8" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.80" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="859.2" y="149" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="862.22" y="159.5" ></text>
</g>
<g >
<title>_IO_file_fopen (30,303,030 samples, 0.16%)</title><rect x="53.9" y="325" width="1.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="56.94" y="335.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.05%)</title><rect x="360.2" y="325" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="363.23" y="335.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (101,010,100 samples, 0.53%)</title><rect x="1115.9" y="357" width="6.3" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1118.94" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="205.2" y="165" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="208.20" y="175.5" ></text>
</g>
<g >
<title>sim::write_to_csv (1,161,616,150 samples, 6.12%)</title><rect x="30.1" y="389" width="72.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="33.09" y="399.5" >sim::wri..</text>
</g>
<g >
<title>YAML::Scanner::empty (10,101,010 samples, 0.05%)</title><rect x="1183.1" y="261" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1186.10" y="271.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="293" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1192.37" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (161,616,160 samples, 0.85%)</title><rect x="811.5" y="325" width="10.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="814.52" y="335.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (20,202,020 samples, 0.11%)</title><rect x="861.7" y="357" width="1.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="864.73" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="52.7" y="149" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.68" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="99.8" y="117" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="102.76" y="127.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (252,525,250 samples, 1.33%)</title><rect x="865.5" y="357" width="15.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="868.50" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="858.6" y="229" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="861.60" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.21%)</title><rect x="107.3" y="53" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.29" y="63.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (30,303,030 samples, 0.16%)</title><rect x="1114.1" y="325" width="1.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1117.05" y="335.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_RTT (60,606,060 samples, 0.32%)</title><rect x="367.1" y="341" width="3.8" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="370.14" y="351.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (20,202,020 samples, 0.11%)</title><rect x="341.4" y="325" width="1.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="344.40" y="335.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="354.6" y="309" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="357.59" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.27%)</title><rect x="357.1" y="245" width="3.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="360.10" y="255.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (282,828,280 samples, 1.49%)</title><rect x="81.6" y="341" width="17.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="84.55" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1137.9" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1140.90" y="303.5" ></text>
</g>
<g >
<title>virtual thunk to sim::RoutingModule::get_id[abi:cxx11] (10,101,010 samples, 0.05%)</title><rect x="372.2" y="341" width="0.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="375.16" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1137.9" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1140.90" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.64%)</title><rect x="1104.6" y="277" width="7.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1107.64" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="52.7" y="69" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.68" y="79.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="277" width="5.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.10" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.11%)</title><rect x="364.0" y="277" width="1.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="367.00" y="287.5" ></text>
</g>
<g >
<title>open64 (30,303,030 samples, 0.16%)</title><rect x="53.9" y="293" width="1.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="56.94" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;sim::IHost,  (10,101,010 samples, 0.05%)</title><rect x="374.0" y="357" width="0.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="377.04" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.8" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.83" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="52.7" y="85" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.68" y="95.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (111,111,110 samples, 0.59%)</title><rect x="1183.1" y="421" width="6.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1186.10" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="866.8" y="325" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="869.76" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="204.6" y="325" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="207.57" y="335.5" ></text>
</g>
<g >
<title>YAML::Stream::_ReadAheadTo (20,202,020 samples, 0.11%)</title><rect x="1184.4" y="165" width="1.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1187.35" y="175.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="165" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.23" y="175.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1137.9" y="341" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1140.90" y="351.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (40,404,040 samples, 0.21%)</title><rect x="222.1" y="341" width="2.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="225.15" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="858.6" y="277" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="861.60" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1137.9" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1140.90" y="271.5" ></text>
</g>
<g >
<title>vsnprintf (272,727,270 samples, 1.44%)</title><rect x="82.2" y="325" width="16.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="85.18" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.37" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="99.8" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="102.76" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.64%)</title><rect x="1104.6" y="261" width="7.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1107.64" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="362.1" y="341" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="365.12" y="351.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="210.2" y="325" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="213.22" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.64%)</title><rect x="1104.6" y="245" width="7.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1107.64" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="99.8" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="102.76" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="1151.1" y="325" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1154.09" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1100.9" y="325" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1103.87" y="335.5" ></text>
</g>
<g >
<title>YAML::Node::~Node (10,101,010 samples, 0.05%)</title><rect x="1188.7" y="405" width="0.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1191.74" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (50,505,050 samples, 0.27%)</title><rect x="1178.1" y="389" width="3.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1181.07" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="1158.6" y="357" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1161.62" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1137.9" y="325" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1140.90" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="358.4" y="197" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="361.35" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="52.7" y="165" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.68" y="175.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1183.1" y="181" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1186.10" y="191.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (30,303,030 samples, 0.16%)</title><rect x="53.9" y="373" width="1.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="56.94" y="383.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (10,101,010 samples, 0.05%)</title><rect x="10.6" y="357" width="0.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.63" y="367.5" ></text>
</g>
<g >
<title>sim::Link::get_to (20,202,020 samples, 0.11%)</title><rect x="1153.0" y="373" width="1.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1155.97" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="99.8" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="102.76" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.37%)</title><rect x="105.4" y="213" width="4.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.40" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>sim::Link::get_to (10,101,010 samples, 0.05%)</title><rect x="1134.1" y="357" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1137.14" y="367.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet const&amp;&gt; (10,101,010 samples, 0.05%)</title><rect x="366.5" y="325" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="369.51" y="335.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="345.8" y="261" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="348.80" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="421" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (40,404,040 samples, 0.21%)</title><rect x="847.3" y="341" width="2.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="850.30" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.32%)</title><rect x="106.0" y="165" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.03" y="175.5" ></text>
</g>
<g >
<title>cfree (30,303,030 samples, 0.16%)</title><rect x="1176.2" y="373" width="1.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1179.19" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.8" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.80" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (121,212,120 samples, 0.64%)</title><rect x="1168.0" y="373" width="7.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1171.03" y="383.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (30,303,030 samples, 0.16%)</title><rect x="336.4" y="373" width="1.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="339.38" y="383.5" ></text>
</g>
<g >
<title>sim::TcpTahoeCC::get_pacing_delay (10,101,010 samples, 0.05%)</title><rect x="372.8" y="357" width="0.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="375.79" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.05%)</title><rect x="1095.2" y="341" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1098.22" y="351.5" ></text>
</g>
<g >
<title>_start (18,979,797,790 samples, 99.95%)</title><rect x="10.6" y="485" width="1179.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.63" y="495.5" >_start</text>
</g>
<g >
<title>sim::Host::~Host (121,212,120 samples, 0.64%)</title><rect x="11.3" y="357" width="7.5" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="14.26" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.8" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.81" y="319.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnScalar (10,101,010 samples, 0.05%)</title><rect x="1186.9" y="229" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1189.86" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.8" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.81" y="207.5" ></text>
</g>
<g >
<title>malloc (212,121,210 samples, 1.12%)</title><rect x="648.3" y="341" width="13.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="651.33" y="351.5" ></text>
</g>
<g >
<title>_IO_file_open (30,303,030 samples, 0.16%)</title><rect x="53.9" y="309" width="1.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="56.94" y="319.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (141,414,140 samples, 0.74%)</title><rect x="133.6" y="405" width="8.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="136.65" y="415.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (343,434,340 samples, 1.81%)</title><rect x="79.0" y="373" width="21.4" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="82.04" y="383.5" >s..</text>
</g>
<g >
<title>sim::Link::get_packet (30,303,030 samples, 0.16%)</title><rect x="339.5" y="357" width="1.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="342.52" y="367.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (10,101,010 samples, 0.05%)</title><rect x="1187.5" y="229" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1190.49" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="99.8" y="133" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="102.76" y="143.5" ></text>
</g>
<g >
<title>YAML::Parser::HandleNextDocument (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="373" width="5.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1186.10" y="383.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.05%)</title><rect x="111.7" y="357" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="114.68" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="437" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="205.2" y="133" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="208.20" y="143.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="224.0" y="309" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="227.03" y="319.5" ></text>
</g>
<g >
<title>__close_nocancel (10,101,010 samples, 0.05%)</title><rect x="52.1" y="325" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="55.05" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (111,111,110 samples, 0.59%)</title><rect x="214.0" y="277" width="6.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="216.99" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (10,101,010 samples, 0.05%)</title><rect x="1159.2" y="373" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1162.24" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.21%)</title><rect x="107.3" y="69" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.29" y="79.5" ></text>
</g>
<g >
<title>sim::Host::process (595,959,590 samples, 3.14%)</title><rect x="338.3" y="373" width="37.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="341.27" y="383.5" >sim..</text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (121,212,120 samples, 0.64%)</title><rect x="1104.6" y="309" width="7.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1107.64" y="319.5" ></text>
</g>
<g >
<title>__uselocale@plt (10,101,010 samples, 0.05%)</title><rect x="99.1" y="341" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="102.13" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1172.4" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.43" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1151.7" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1154.71" y="239.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (222,222,220 samples, 1.17%)</title><rect x="341.4" y="357" width="13.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="344.40" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="858.6" y="261" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="861.60" y="271.5" ></text>
</g>
<g >
<title>sim::Link::~Link (80,808,080 samples, 0.43%)</title><rect x="18.8" y="357" width="5.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="21.79" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="29.5" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.46" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1174.3" y="309" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1177.31" y="319.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::export_to_files (161,616,160 samples, 0.85%)</title><rect x="105.4" y="405" width="10.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="108.40" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1172.4" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.43" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.37%)</title><rect x="105.4" y="261" width="4.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.40" y="271.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (20,202,020 samples, 0.11%)</title><rect x="860.5" y="309" width="1.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="863.48" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_pbump (10,101,010 samples, 0.05%)</title><rect x="210.2" y="309" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="213.22" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="99.8" y="85" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="102.76" y="95.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (10,101,010 samples, 0.05%)</title><rect x="849.2" y="325" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="852.18" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="859.2" y="117" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="862.22" y="127.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (60,606,060 samples, 0.32%)</title><rect x="342.7" y="341" width="3.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="345.66" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (20,202,020 samples, 0.11%)</title><rect x="858.6" y="293" width="1.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="861.60" y="303.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (10,101,010 samples, 0.05%)</title><rect x="1187.5" y="213" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1190.49" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1186.9" y="85" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.86" y="95.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="367.1" y="309" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="370.14" y="319.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="1158.0" y="357" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1160.99" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.8" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.80" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="48.9" y="357" width="0.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="51.91" y="367.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (60,606,060 samples, 0.32%)</title><rect x="362.7" y="325" width="3.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="365.74" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.8" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.83" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt;, std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, sim::MetricsStorage&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, sim::MetricsStorage&gt; &gt;, std::less&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, sim::MetricsStorage&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="102.3" y="309" width="0.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="105.27" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;* std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_Alloc_node&gt; (20,202,020 samples, 0.11%)</title><rect x="1181.8" y="389" width="1.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1184.84" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="99.8" y="53" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="102.76" y="63.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (80,808,080 samples, 0.43%)</title><rect x="874.3" y="309" width="5.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="877.29" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="54.6" y="69" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.56" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="52.7" y="245" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.68" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.21%)</title><rect x="112.3" y="309" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="115.31" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 1.17%)</title><rect x="64.6" y="293" width="13.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="67.61" y="303.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_links (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="405" width="0.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1192.37" y="415.5" ></text>
</g>
<g >
<title>sim::Event::Event (212,121,210 samples, 1.12%)</title><rect x="1062.6" y="357" width="13.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1065.59" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="277" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1192.37" y="287.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (80,808,080 samples, 0.43%)</title><rect x="1086.4" y="325" width="5.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1089.44" y="335.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnScalar (10,101,010 samples, 0.05%)</title><rect x="1183.7" y="245" width="0.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1186.72" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="859.2" y="101" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="862.22" y="111.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (111,111,110 samples, 0.59%)</title><rect x="866.1" y="341" width="6.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="869.13" y="351.5" ></text>
</g>
<g >
<title>Logger::info (1,777,777,760 samples, 9.36%)</title><rect x="678.5" y="341" width="110.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="681.46" y="351.5" >Logger::info</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.8" y="149" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.80" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>sim::Link::get_from (10,101,010 samples, 0.05%)</title><rect x="1152.3" y="373" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1155.34" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.32%)</title><rect x="1108.4" y="229" width="3.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1111.40" y="239.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (10,101,010 samples, 0.05%)</title><rect x="873.0" y="325" width="0.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="876.03" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.11%)</title><rect x="345.2" y="309" width="1.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="348.17" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="205.2" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="208.20" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1151.7" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1154.71" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="99.8" y="101" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="102.76" y="111.5" ></text>
</g>
<g >
<title>sim::Process::operator (111,111,110 samples, 0.59%)</title><rect x="143.1" y="405" width="6.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="146.06" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="343.3" y="325" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="346.29" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="53.9" y="213" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.94" y="223.5" ></text>
</g>
<g >
<title>Logger::info (20,202,020 samples, 0.11%)</title><rect x="1083.3" y="357" width="1.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1086.30" y="367.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="23.8" y="389" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="26.81" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="52.7" y="229" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.68" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.53%)</title><rect x="214.6" y="261" width="6.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="217.62" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::export_to_file (151,515,150 samples, 0.80%)</title><rect x="105.4" y="389" width="9.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="108.40" y="399.5" ></text>
</g>
<g >
<title>sim::IdentifierFactory::~IdentifierFactory (212,121,210 samples, 1.12%)</title><rect x="10.6" y="405" width="13.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="13.63" y="415.5" ></text>
</g>
<g >
<title>sim::Process::~Process (101,010,100 samples, 0.53%)</title><rect x="1075.8" y="389" width="6.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1078.77" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_delivery_rate (20,202,020 samples, 0.11%)</title><rect x="370.9" y="341" width="1.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="373.90" y="351.5" ></text>
</g>
<g >
<title>_IO_file_open (70,707,070 samples, 0.37%)</title><rect x="105.4" y="309" width="4.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="108.40" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="26.9" y="357" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="29.95" y="367.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (434,343,430 samples, 2.29%)</title><rect x="309.4" y="373" width="27.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="312.39" y="383.5" >s..</text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="99.8" y="341" width="0.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="102.76" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::memory*,  (10,101,010 samples, 0.05%)</title><rect x="1188.7" y="373" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1191.74" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="29.5" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.46" y="191.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,101,010 samples, 0.05%)</title><rect x="224.0" y="325" width="0.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="227.03" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1171.8" y="357" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1174.80" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="53.9" y="229" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.94" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (10,101,010 samples, 0.05%)</title><rect x="373.4" y="357" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="376.41" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="52.7" y="197" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.68" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.8" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.83" y="239.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1172.4" y="357" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1175.43" y="367.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::Push (10,101,010 samples, 0.05%)</title><rect x="1186.9" y="213" width="0.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1189.86" y="223.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (101,010,100 samples, 0.53%)</title><rect x="873.7" y="325" width="6.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="876.66" y="335.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.05%)</title><rect x="1096.5" y="325" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1099.48" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="109.8" y="309" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="112.80" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="51.4" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="54.43" y="287.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="1124.7" y="373" width="0.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1127.72" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (212,121,210 samples, 1.12%)</title><rect x="10.6" y="389" width="13.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.63" y="399.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (343,434,340 samples, 1.81%)</title><rect x="1094.6" y="357" width="21.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1097.60" y="367.5" >s..</text>
</g>
<g >
<title>std::locale::~locale (10,101,010 samples, 0.05%)</title><rect x="342.0" y="309" width="0.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="345.03" y="319.5" ></text>
</g>
<g >
<title>sim::Event::Event (232,323,230 samples, 1.22%)</title><rect x="295.0" y="373" width="14.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="297.96" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="80.3" y="341" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="83.30" y="351.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (30,303,030 samples, 0.16%)</title><rect x="53.9" y="357" width="1.9" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="56.94" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (50,505,050 samples, 0.27%)</title><rect x="868.0" y="309" width="3.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="871.01" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.8" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.83" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="29.5" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.46" y="255.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="29.5" y="373" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="32.46" y="383.5" ></text>
</g>
<g >
<title>vsnprintf (50,505,050 samples, 0.27%)</title><rect x="357.1" y="261" width="3.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="360.10" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="859.2" y="133" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="862.22" y="143.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (20,202,020 samples, 0.11%)</title><rect x="879.9" y="341" width="1.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="882.94" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_erase (50,505,050 samples, 0.27%)</title><rect x="1159.9" y="373" width="3.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1162.87" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="53.9" y="277" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.94" y="287.5" ></text>
</g>
<g >
<title>sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int&gt;::set_flag (10,101,010 samples, 0.05%)</title><rect x="338.9" y="357" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="341.89" y="367.5" ></text>
</g>
<g >
<title>_IO_file_fopen (70,707,070 samples, 0.37%)</title><rect x="105.4" y="325" width="4.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="108.40" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="205.2" y="261" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="208.20" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1084.6" y="357" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1087.55" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.8" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.83" y="319.5" ></text>
</g>
<g >
<title>open64 (70,707,070 samples, 0.37%)</title><rect x="105.4" y="293" width="4.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="108.40" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="79.0" y="357" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="82.04" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1186.9" y="149" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1189.86" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.32%)</title><rect x="106.0" y="149" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.03" y="159.5" ></text>
</g>
<g >
<title>YAML::Scanner::pop (10,101,010 samples, 0.05%)</title><rect x="1188.1" y="229" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1191.12" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1172.4" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.43" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.8" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.81" y="303.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1172.4" y="341" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1175.43" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.8" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.83" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="29.5" y="149" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.46" y="159.5" ></text>
</g>
</g>
</svg>
