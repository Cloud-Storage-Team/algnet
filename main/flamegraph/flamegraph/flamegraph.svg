<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="614.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="597" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="597" > </text>
<g id="frames">
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="1179.7" y="373" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1182.69" y="383.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleDocument (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="405" width="3.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1189.09" y="415.5" ></text>
</g>
<g >
<title>sim::Link::get_from (10,101,010 samples, 0.03%)</title><rect x="1170.1" y="421" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1173.08" y="431.5" ></text>
</g>
<g >
<title>malloc (90,909,090 samples, 0.27%)</title><rect x="1125.6" y="309" width="3.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1128.63" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="66.2" y="437" width="0.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="69.19" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="49.8" y="277" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="52.83" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1159.4" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1162.42" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="66.2" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.19" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="329.7" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="332.72" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="308.0" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="311.02" y="415.5" ></text>
</g>
<g >
<title>sim::SendData::operator (666,666,660 samples, 1.99%)</title><rect x="1122.4" y="437" width="23.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1125.43" y="447.5" >s..</text>
</g>
<g >
<title>std::_Hash_bytes (20,202,020 samples, 0.06%)</title><rect x="1143.1" y="389" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1146.06" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (60,606,060 samples, 0.18%)</title><rect x="70.8" y="389" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="73.81" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="32.0" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.05" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1159.4" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1162.42" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="17.8" y="341" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.82" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.36" y="287.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (10,101,010 samples, 0.03%)</title><rect x="1130.3" y="373" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1133.25" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1160.8" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.84" y="319.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="1165.8" y="421" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1168.82" y="431.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1162.3" y="405" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1165.26" y="415.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::get_max_size (10,101,010 samples, 0.03%)</title><rect x="615.3" y="421" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="618.29" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="329.7" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="332.72" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (60,606,060 samples, 0.18%)</title><rect x="33.8" y="421" width="2.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="36.83" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="69.7" y="85" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.75" y="95.5" ></text>
</g>
<g >
<title>sim::Process::operator (22,464,646,240 samples, 67.03%)</title><rect x="330.1" y="437" width="790.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="333.07" y="447.5" >sim::Process::operator</text>
</g>
<g >
<title>sim::TcpFlow::update (373,737,370 samples, 1.12%)</title><rect x="591.5" y="405" width="13.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="594.46" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="49.8" y="293" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="52.83" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="364.6" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="367.57" y="207.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="902.3" y="341" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="905.29" y="351.5" ></text>
</g>
<g >
<title>pthread_once (10,101,010 samples, 0.03%)</title><rect x="599.3" y="325" width="0.3" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="602.29" y="335.5" ></text>
</g>
<g >
<title>YAML::Parser::HandleNextDocument (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="421" width="3.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1189.09" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="437" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="1150.5" y="325" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1153.52" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="69.4" y="149" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.39" y="159.5" ></text>
</g>
<g >
<title>Logger::info (2,111,111,090 samples, 6.30%)</title><rect x="770.0" y="389" width="74.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="772.99" y="399.5" >Logger::..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1159.4" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1162.42" y="367.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_packet_now (121,212,120 samples, 0.36%)</title><rect x="587.2" y="389" width="4.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="590.20" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_erase (20,202,020 samples, 0.06%)</title><rect x="1175.4" y="421" width="0.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1178.42" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1179.0" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1181.98" y="383.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (20,202,020 samples, 0.06%)</title><rect x="904.4" y="373" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="907.42" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_cwnd (40,404,040 samples, 0.12%)</title><rect x="601.4" y="389" width="1.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="604.42" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.6" y="421" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.60" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="328.6" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="331.65" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.0" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.03" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="364.6" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="367.57" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="315.8" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="318.85" y="191.5" ></text>
</g>
<g >
<title>void sim::YamlParser::process_identifiables&lt;sim::IFlow&gt; (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="421" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1192.29" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="601.4" y="325" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="604.42" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="328.6" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="331.65" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="38.1" y="165" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.10" y="175.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (121,212,120 samples, 0.36%)</title><rect x="1124.6" y="357" width="4.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1127.56" y="367.5" ></text>
</g>
<g >
<title>YAML::Load (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="437" width="3.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1189.09" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.4" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.38" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="315.8" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="318.85" y="271.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (20,202,020 samples, 0.06%)</title><rect x="1186.1" y="261" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1189.09" y="271.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="389" width="3.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.09" y="399.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (10,101,010 samples, 0.03%)</title><rect x="586.5" y="405" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="589.49" y="415.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (141,414,140 samples, 0.42%)</title><rect x="1138.8" y="405" width="5.0" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1141.79" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="909.8" y="309" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="912.76" y="319.5" ></text>
</g>
<g >
<title>sim::Switch::process (11,707,070,590 samples, 34.93%)</title><rect x="615.6" y="421" width="412.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="618.65" y="431.5" >sim::Switch::process</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="329.7" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="332.72" y="159.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="911.9" y="357" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="914.89" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (30,303,030 samples, 0.09%)</title><rect x="1176.8" y="421" width="1.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1179.84" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (20,202,020 samples, 0.06%)</title><rect x="36.0" y="421" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="38.96" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1182.5" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.53" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="485" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="74.4" y="325" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="77.37" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1182.5" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.53" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="908.7" y="325" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="911.69" y="335.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.03%)</title><rect x="1129.9" y="373" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1132.90" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1131.0" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1133.96" y="383.5" ></text>
</g>
<g >
<title>writev (30,303,030 samples, 0.09%)</title><rect x="49.8" y="373" width="1.1" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="52.83" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (131,313,130 samples, 0.39%)</title><rect x="1133.1" y="357" width="4.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1136.10" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="600.7" y="309" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="603.71" y="319.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="594.3" y="389" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="597.31" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="590.4" y="309" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="593.40" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="32.0" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.05" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.6" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.60" y="399.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="66.2" y="341" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="69.19" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1179.7" y="341" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1182.69" y="351.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_flows (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="437" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1192.29" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="68.7" y="309" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.68" y="319.5" ></text>
</g>
<g >
<title>cfree (414,141,410 samples, 1.24%)</title><rect x="854.6" y="389" width="14.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="857.64" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="364.6" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="367.57" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="69.4" y="165" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.39" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.4" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.38" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="34.9" y="389" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="37.89" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (20,202,020 samples, 0.06%)</title><rect x="1173.6" y="405" width="0.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1176.64" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="364.6" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="367.57" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.4" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.38" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="389" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (141,414,140 samples, 0.42%)</title><rect x="1132.7" y="373" width="5.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1135.74" y="383.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (50,505,050 samples, 0.15%)</title><rect x="68.7" y="405" width="1.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="71.68" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1168.0" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.95" y="191.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::data[abi:cxx11] (30,303,030 samples, 0.09%)</title><rect x="21.0" y="437" width="1.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="24.02" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="62.6" y="293" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="65.63" y="303.5" ></text>
</g>
<g >
<title>cfree (40,404,040 samples, 0.12%)</title><rect x="14.6" y="389" width="1.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="17.62" y="399.5" ></text>
</g>
<g >
<title>_IO_file_finish (10,101,010 samples, 0.03%)</title><rect x="36.7" y="389" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="39.67" y="399.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.15%)</title><rect x="599.6" y="341" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="602.64" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="590.4" y="245" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="593.40" y="255.5" ></text>
</g>
<g >
<title>sim::bfs[abi:cxx11] (585,858,580 samples, 1.75%)</title><rect x="1162.6" y="437" width="20.6" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1165.62" y="447.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1159.4" y="405" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1162.42" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (242,424,240 samples, 0.72%)</title><rect x="10.7" y="469" width="8.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.71" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1159.4" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1162.42" y="159.5" ></text>
</g>
<g >
<title>sim::BaseHasher::get_hash (20,202,020 samples, 0.06%)</title><rect x="911.5" y="389" width="0.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="914.54" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="329.7" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="332.72" y="271.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="311.9" y="389" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="314.93" y="399.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.06%)</title><rect x="1186.1" y="213" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.09" y="223.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_RTT (50,505,050 samples, 0.15%)</title><rect x="599.6" y="389" width="1.8" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="602.64" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.36" y="255.5" ></text>
</g>
<g >
<title>std::ostream::put (50,505,050 samples, 0.15%)</title><rect x="64.4" y="421" width="1.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="67.41" y="431.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (60,606,060 samples, 0.18%)</title><rect x="327.9" y="373" width="2.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="330.94" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.0" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.03" y="191.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="310.5" y="357" width="0.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="313.51" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::shared_ptr&lt;sim::IFlow&gt;  (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="405" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1192.29" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.36%)</title><rect x="318.7" y="309" width="4.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="321.69" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="38.1" y="117" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.10" y="127.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1172.9" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1175.93" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.18%)</title><rect x="37.4" y="277" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.38" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.0" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.03" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="66.2" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.19" y="255.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (131,313,130 samples, 0.39%)</title><rect x="1124.2" y="373" width="4.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1127.21" y="383.5" ></text>
</g>
<g >
<title>sim::LinkQueue::empty (20,202,020 samples, 0.06%)</title><rect x="903.4" y="405" width="0.7" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="906.36" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.4" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.38" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="329.4" y="293" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="332.36" y="303.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (50,505,050 samples, 0.15%)</title><rect x="328.3" y="357" width="1.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="331.29" y="367.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (515,151,510 samples, 1.54%)</title><rect x="306.6" y="437" width="18.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="309.60" y="447.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (191,919,190 samples, 0.57%)</title><rect x="904.1" y="405" width="6.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="907.07" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="15.3" y="357" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.33" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="69.4" y="117" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.39" y="127.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1179.0" y="389" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1181.98" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1150.5" y="261" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1153.52" y="271.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1131.3" y="325" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1134.32" y="335.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (40,404,040 samples, 0.12%)</title><rect x="585.1" y="389" width="1.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="588.06" y="399.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (70,707,070 samples, 0.21%)</title><rect x="1186.8" y="261" width="2.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1189.80" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="32.0" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.05" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="310.5" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="313.51" y="351.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.03%)</title><rect x="595.7" y="357" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="598.73" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="68.7" y="229" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.68" y="239.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1142.7" y="357" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1145.70" y="367.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (10,101,010 samples, 0.03%)</title><rect x="1150.5" y="341" width="0.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1153.52" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="589.3" y="325" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="592.33" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="61.6" y="309" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="64.57" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.4" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.38" y="207.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="308.4" y="405" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="311.38" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="66.2" y="357" width="0.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="69.19" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1167.6" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.59" y="335.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.06%)</title><rect x="1186.1" y="181" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.09" y="191.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (30,303,030 samples, 0.09%)</title><rect x="585.4" y="373" width="1.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="588.42" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1168.0" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.95" y="175.5" ></text>
</g>
<g >
<title>sim::Scheduler::get_current_time (10,101,010 samples, 0.03%)</title><rect x="614.9" y="421" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="617.94" y="431.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (20,202,020 samples, 0.06%)</title><rect x="1186.1" y="293" width="0.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1189.09" y="303.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.12%)</title><rect x="1160.1" y="389" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1163.13" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="329.7" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="332.72" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="50.2" y="149" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="53.19" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="328.6" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="331.65" y="351.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (101,010,100 samples, 0.30%)</title><rect x="73.3" y="405" width="3.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="76.30" y="415.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (141,414,140 samples, 0.42%)</title><rect x="897.7" y="389" width="4.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="900.67" y="399.5" ></text>
</g>
<g >
<title>vsnprintf (10,101,010 samples, 0.03%)</title><rect x="590.4" y="293" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="593.40" y="303.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_insert_unique&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; const&amp;&gt; (80,808,080 samples, 0.24%)</title><rect x="1180.4" y="421" width="2.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1183.40" y="431.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="603.2" y="373" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="606.20" y="383.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (30,303,030 samples, 0.09%)</title><rect x="904.4" y="389" width="1.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="907.42" y="399.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (20,202,020 samples, 0.06%)</title><rect x="1150.2" y="389" width="0.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1153.17" y="399.5" ></text>
</g>
<g >
<title>virtual thunk to sim::RoutingModule::get_id[abi:cxx11] (10,101,010 samples, 0.03%)</title><rect x="603.9" y="389" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="606.91" y="399.5" ></text>
</g>
<g >
<title>sim::write_to_csv (1,252,525,240 samples, 3.74%)</title><rect x="22.1" y="437" width="44.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="25.09" y="447.5" >sim:..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.0" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.03" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="899.4" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="902.45" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.6" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.60" y="271.5" ></text>
</g>
<g >
<title>std::ostream::put (10,101,010 samples, 0.03%)</title><rect x="68.3" y="437" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="71.32" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="68.7" y="213" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.68" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="364.6" y="389" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="367.57" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1184.0" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1186.95" y="415.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="20.7" y="421" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="23.67" y="431.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (10,101,010 samples, 0.03%)</title><rect x="903.0" y="405" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="906.00" y="415.5" ></text>
</g>
<g >
<title>operator new (90,909,090 samples, 0.27%)</title><rect x="1125.6" y="325" width="3.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1128.63" y="335.5" ></text>
</g>
<g >
<title>malloc@plt (20,202,020 samples, 0.06%)</title><rect x="870.6" y="389" width="0.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="873.64" y="399.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (111,111,110 samples, 0.33%)</title><rect x="898.4" y="357" width="3.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="901.38" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1125.6" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1128.63" y="255.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="595.0" y="373" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="598.02" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="49.8" y="309" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="52.83" y="319.5" ></text>
</g>
<g >
<title>vsnprintf (60,606,060 samples, 0.18%)</title><rect x="70.8" y="373" width="2.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="73.81" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="66.2" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.19" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1159.4" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1162.42" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.7" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.74" y="383.5" ></text>
</g>
<g >
<title>sim::Link::transmit (121,212,120 samples, 0.36%)</title><rect x="325.8" y="421" width="4.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="328.80" y="431.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (30,303,030 samples, 0.09%)</title><rect x="1137.7" y="389" width="1.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1140.72" y="399.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (10,101,010 samples, 0.03%)</title><rect x="312.3" y="373" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="315.29" y="383.5" ></text>
</g>
<g >
<title>sim::Event::get_time (90,909,090 samples, 0.27%)</title><rect x="81.8" y="453" width="3.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="84.84" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.03%)</title><rect x="1185.0" y="437" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1188.02" y="447.5" ></text>
</g>
<g >
<title>operator new (212,121,210 samples, 0.63%)</title><rect x="1100.0" y="405" width="7.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1103.02" y="415.5" ></text>
</g>
<g >
<title>sim::TcpFlow::Timeout::operator (141,414,140 samples, 0.42%)</title><rect x="1145.9" y="437" width="5.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1148.90" y="447.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="329.0" y="325" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="332.01" y="335.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_outlinks (101,010,100 samples, 0.30%)</title><rect x="1171.2" y="421" width="3.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1174.15" y="431.5" ></text>
</g>
<g >
<title>Logger::info (10,101,010 samples, 0.03%)</title><rect x="1122.4" y="405" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1125.43" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="38.5" y="101" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.45" y="111.5" ></text>
</g>
<g >
<title>strlen@plt (10,101,010 samples, 0.03%)</title><rect x="897.0" y="389" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="899.96" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="740.5" y="389" width="2.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="743.48" y="399.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="906.6" y="373" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="909.56" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.4" y="405" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.38" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="315.8" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="318.85" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1159.4" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1162.42" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1168.0" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.95" y="239.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (80,808,080 samples, 0.24%)</title><rect x="582.2" y="389" width="2.9" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="585.22" y="399.5" ></text>
</g>
<g >
<title>vsnprintf (131,313,130 samples, 0.39%)</title><rect x="1133.1" y="341" width="4.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1136.10" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (262,626,260 samples, 0.78%)</title><rect x="860.0" y="373" width="9.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="862.97" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (101,010,100 samples, 0.30%)</title><rect x="326.5" y="389" width="3.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="329.52" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1161.2" y="341" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.19" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="49.8" y="357" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="52.83" y="367.5" ></text>
</g>
<g >
<title>all (33,515,151,180 samples, 100%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (60,606,060 samples, 0.18%)</title><rect x="597.5" y="357" width="2.1" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="600.51" y="367.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Host::process (10,101,010 samples, 0.03%)</title><rect x="1150.9" y="437" width="0.3" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1153.88" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1125.6" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1128.63" y="271.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (111,111,110 samples, 0.33%)</title><rect x="312.6" y="389" width="4.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="315.65" y="399.5" ></text>
</g>
<g >
<title>sim::Link::get_to (20,202,020 samples, 0.06%)</title><rect x="1156.9" y="421" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1159.93" y="431.5" ></text>
</g>
<g >
<title>vsnprintf (10,101,010 samples, 0.03%)</title><rect x="64.1" y="389" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="67.06" y="399.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (20,202,020 samples, 0.06%)</title><rect x="1128.8" y="373" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1131.83" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1182.5" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.53" y="367.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="579.4" y="405" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="582.37" y="415.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="309" width="3.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.09" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.4" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.38" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="40.6" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="43.58" y="415.5" ></text>
</g>
<g >
<title>sim::Link::get_to (10,101,010 samples, 0.03%)</title><rect x="1156.2" y="437" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1159.21" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1182.5" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.53" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (40,404,040 samples, 0.12%)</title><rect x="314.8" y="341" width="1.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="317.78" y="351.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (50,505,050 samples, 0.15%)</title><rect x="68.7" y="421" width="1.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="71.68" y="431.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (60,606,060 samples, 0.18%)</title><rect x="1187.2" y="213" width="2.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.15" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (202,020,200 samples, 0.60%)</title><rect x="299.5" y="421" width="7.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="302.49" y="431.5" ></text>
</g>
<g >
<title>sim::Process::~Process (40,404,040 samples, 0.12%)</title><rect x="1121.0" y="437" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1124.01" y="447.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (60,606,060 samples, 0.18%)</title><rect x="1130.6" y="389" width="2.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1133.61" y="399.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="315.5" y="309" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="318.49" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="582.9" y="325" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="585.93" y="335.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (10,101,010 samples, 0.03%)</title><rect x="317.6" y="373" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="320.63" y="383.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (10,101,010 samples, 0.03%)</title><rect x="591.1" y="357" width="0.4" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="594.11" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.4" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.38" y="303.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (60,606,060 samples, 0.18%)</title><rect x="37.4" y="405" width="2.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="40.38" y="415.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (101,010,100 samples, 0.30%)</title><rect x="326.5" y="405" width="3.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="329.52" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="1126.0" y="277" width="2.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1128.99" y="287.5" ></text>
</g>
<g >
<title>Logger::get_instance (30,303,030 samples, 0.09%)</title><rect x="362.8" y="421" width="1.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="365.79" y="431.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_packets (131,313,130 samples, 0.39%)</title><rect x="586.8" y="405" width="4.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="589.84" y="415.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_packet_now (20,202,020 samples, 0.06%)</title><rect x="1150.2" y="405" width="0.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1153.17" y="415.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1144.8" y="389" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1147.83" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1160.8" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.84" y="335.5" ></text>
</g>
<g >
<title>sim::IdentifierFactory::~IdentifierFactory (242,424,240 samples, 0.72%)</title><rect x="10.7" y="453" width="8.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="13.71" y="463.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="906.9" y="325" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="909.91" y="335.5" ></text>
</g>
<g >
<title>Logger::info (10,101,010 samples, 0.03%)</title><rect x="307.7" y="405" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="310.67" y="415.5" ></text>
</g>
<g >
<title>__libc_start_main (33,494,949,160 samples, 99.94%)</title><rect x="10.7" y="517" width="1179.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.71" y="527.5" >__libc_start_main</text>
</g>
<g >
<title>sim::Link::~Link (90,909,090 samples, 0.27%)</title><rect x="16.0" y="405" width="3.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="19.05" y="415.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (151,515,150 samples, 0.45%)</title><rect x="1124.2" y="389" width="5.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1127.21" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="310.5" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="313.51" y="319.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (10,101,010 samples, 0.03%)</title><rect x="311.6" y="405" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="314.58" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="32.0" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.05" y="191.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer (10,101,010 samples, 0.03%)</title><rect x="39.5" y="405" width="0.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="42.52" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (90,909,090 samples, 0.27%)</title><rect x="1125.6" y="341" width="3.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1128.63" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="66.2" y="421" width="0.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="69.19" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="32.0" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.05" y="351.5" ></text>
</g>
<g >
<title>vsnprintf (10,101,010 samples, 0.03%)</title><rect x="1150.5" y="309" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1153.52" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="20.0" y="421" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.96" y="431.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.03%)</title><rect x="312.3" y="389" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="315.29" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1125.6" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1128.63" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="329.7" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="332.72" y="191.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::export_to_file (232,323,230 samples, 0.69%)</title><rect x="68.7" y="437" width="8.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="71.68" y="447.5" ></text>
</g>
<g >
<title>YAML::Stream::_ReadAheadTo (10,101,010 samples, 0.03%)</title><rect x="1187.9" y="181" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1190.87" y="191.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::export_to_files (232,323,230 samples, 0.69%)</title><rect x="68.7" y="453" width="8.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="71.68" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="329.7" y="117" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="332.72" y="127.5" ></text>
</g>
<g >
<title>main (33,252,524,920 samples, 99.22%)</title><rect x="19.2" y="485" width="1170.8" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="22.25" y="495.5" >main</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1142.0" y="325" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1144.99" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1150.5" y="245" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1153.52" y="255.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.15%)</title><rect x="599.6" y="357" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="602.64" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="48.4" y="309" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="51.41" y="319.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="586.1" y="357" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="589.13" y="367.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (70,707,070 samples, 0.21%)</title><rect x="1186.8" y="245" width="2.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1189.80" y="255.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (70,707,070 samples, 0.21%)</title><rect x="908.0" y="373" width="2.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="910.98" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="580.1" y="357" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="583.08" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1136.7" y="277" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1139.65" y="287.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (353,535,350 samples, 1.05%)</title><rect x="311.9" y="405" width="12.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="314.93" y="415.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="149" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.93" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 0.66%)</title><rect x="55.5" y="325" width="7.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="58.52" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="364.6" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="367.57" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::weak_ptr&lt;sim::ILink&gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1158.7" y="421" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1161.70" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1159.4" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1162.42" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="321.9" y="277" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="324.89" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="71.2" y="325" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="74.17" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="49.8" y="245" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="52.83" y="255.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (10,101,010 samples, 0.03%)</title><rect x="595.4" y="373" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="598.38" y="383.5" ></text>
</g>
<g >
<title>sim::Link::get_from (10,101,010 samples, 0.03%)</title><rect x="1156.6" y="421" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1159.57" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="66.2" y="325" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="69.19" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1159.4" y="373" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1162.42" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="69.4" y="133" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.39" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1182.9" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.89" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="597.5" y="277" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="600.51" y="287.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (90,909,090 samples, 0.27%)</title><rect x="588.3" y="373" width="3.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="591.26" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.03%)</title><rect x="581.9" y="357" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="584.86" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="66.2" y="117" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.19" y="127.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="77.6" y="453" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="80.57" y="463.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (70,707,070 samples, 0.21%)</title><rect x="1186.8" y="229" width="2.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1189.80" y="239.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="910.5" y="357" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="913.47" y="367.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::close (10,101,010 samples, 0.03%)</title><rect x="36.7" y="405" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="39.67" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="601.8" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="604.78" y="287.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Switch::process (111,111,110 samples, 0.33%)</title><rect x="1151.2" y="437" width="3.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1154.24" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="315.8" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="318.85" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1179.0" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.98" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="15.0" y="373" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.98" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="405" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="315.8" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="318.85" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="590.4" y="277" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="593.40" y="287.5" ></text>
</g>
<g >
<title>malloc (101,010,100 samples, 0.30%)</title><rect x="1166.5" y="405" width="3.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1169.53" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (50,505,050 samples, 0.15%)</title><rect x="599.6" y="373" width="1.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="602.64" y="383.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1179.0" y="405" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1181.98" y="415.5" ></text>
</g>
<g >
<title>Logger::info (10,101,010 samples, 0.03%)</title><rect x="588.3" y="357" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="591.26" y="367.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="1172.2" y="389" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1175.22" y="399.5" ></text>
</g>
<g >
<title>__libc_alloca_cutoff (10,101,010 samples, 0.03%)</title><rect x="63.3" y="325" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="66.35" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="32.0" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.05" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (40,404,040 samples, 0.12%)</title><rect x="66.5" y="437" width="1.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="69.55" y="447.5" ></text>
</g>
<g >
<title>sim::Link::arrive (515,151,510 samples, 1.54%)</title><rect x="306.6" y="421" width="18.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="309.60" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (171,717,170 samples, 0.51%)</title><rect x="890.2" y="357" width="6.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="893.20" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.0" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.03" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1182.5" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.53" y="271.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1162.3" y="421" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1165.26" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="50.2" y="133" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="53.19" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="329.7" y="133" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="332.72" y="143.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (70,707,070 samples, 0.21%)</title><rect x="1186.8" y="277" width="2.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1189.80" y="287.5" ></text>
</g>
<g >
<title>sim::Link::get_to_ingress_queue_size (90,909,090 samples, 0.27%)</title><rect x="610.3" y="421" width="3.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="613.31" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="364.6" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="367.57" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (292,929,290 samples, 0.87%)</title><rect x="844.3" y="389" width="10.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="847.32" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="899.4" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="902.45" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (242,424,240 samples, 0.72%)</title><rect x="10.7" y="437" width="8.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.71" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1158.7" y="373" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.70" y="383.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="34.5" y="405" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="37.54" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1179.0" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.98" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.0" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.03" y="351.5" ></text>
</g>
<g >
<title>write (10,101,010 samples, 0.03%)</title><rect x="37.0" y="357" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="40.03" y="367.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="590.8" y="341" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="593.75" y="351.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (5,696,969,640 samples, 17.00%)</title><rect x="375.6" y="421" width="200.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="378.59" y="431.5" >sim::Event::operator&gt;</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="315.8" y="101" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="318.85" y="111.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (10,101,010 samples, 0.03%)</title><rect x="1150.5" y="357" width="0.4" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1153.52" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1160.8" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.84" y="207.5" ></text>
</g>
<g >
<title>malloc (656,565,650 samples, 1.96%)</title><rect x="873.1" y="373" width="23.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="876.13" y="383.5" >m..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="328.6" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="331.65" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1168.0" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.95" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="315.8" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="318.85" y="287.5" ></text>
</g>
<g >
<title>sim::Event::Event (101,010,100 samples, 0.30%)</title><rect x="372.0" y="421" width="3.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="375.04" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (50,505,050 samples, 0.15%)</title><rect x="314.4" y="357" width="1.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="317.42" y="367.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::export_to_files (1,404,040,390 samples, 4.19%)</title><rect x="19.2" y="453" width="49.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="22.25" y="463.5" >sim:..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.7" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.74" y="367.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="896.6" y="357" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="899.60" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (20,202,020 samples, 0.06%)</title><rect x="1177.9" y="421" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1180.91" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1179.7" y="357" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1182.69" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="329.7" y="69" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="332.72" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1159.4" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1162.42" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="601.8" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="604.78" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="49.8" y="213" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="52.83" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.03%)</title><rect x="906.9" y="357" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="909.91" y="367.5" ></text>
</g>
<g >
<title>malloc (90,909,090 samples, 0.27%)</title><rect x="899.1" y="309" width="3.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="902.09" y="319.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::shared_ptr&lt;sim::ILink&gt;  (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="405" width="0.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1192.64" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="49.8" y="341" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="52.83" y="351.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (10,101,010 samples, 0.03%)</title><rect x="316.6" y="389" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="319.56" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="310.5" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="313.51" y="335.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (242,424,240 samples, 0.72%)</title><rect x="709.2" y="389" width="8.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="712.18" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1182.9" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.89" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="20.7" y="389" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="23.67" y="399.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.03%)</title><rect x="595.7" y="341" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="598.73" y="351.5" ></text>
</g>
<g >
<title>YAML::Node const YAML::Node::operator[]&lt;char [3]&gt; (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="357" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1192.29" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.27%)</title><rect x="899.1" y="293" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="902.09" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;sim::IHost,  (10,101,010 samples, 0.03%)</title><rect x="604.6" y="405" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="607.62" y="415.5" ></text>
</g>
<g >
<title>vsnprintf (262,626,260 samples, 0.78%)</title><rect x="54.5" y="373" width="9.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="57.45" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="315.8" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="318.85" y="239.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="597.2" y="341" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="600.15" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (232,323,230 samples, 0.69%)</title><rect x="55.5" y="341" width="8.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="58.52" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="328.6" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="331.65" y="287.5" ></text>
</g>
<g >
<title>vsnprintf (191,919,190 samples, 0.57%)</title><rect x="42.4" y="373" width="6.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="45.36" y="383.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (60,606,060 samples, 0.18%)</title><rect x="589.0" y="357" width="2.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="591.98" y="367.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="316.2" y="373" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="319.20" y="383.5" ></text>
</g>
<g >
<title>cfree (90,909,090 samples, 0.27%)</title><rect x="16.0" y="389" width="3.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="19.05" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1167.2" y="373" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.24" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1160.8" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.84" y="191.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (90,909,090 samples, 0.27%)</title><rect x="73.7" y="389" width="3.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="76.66" y="399.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="373" width="3.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.09" y="383.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (10,101,010 samples, 0.03%)</title><rect x="590.4" y="325" width="0.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="593.40" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1168.0" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.95" y="255.5" ></text>
</g>
<g >
<title>cfree (30,303,030 samples, 0.09%)</title><rect x="77.9" y="453" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="80.93" y="463.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="602.8" y="373" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="605.85" y="383.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (20,202,020 samples, 0.06%)</title><rect x="1174.7" y="421" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1177.71" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.0" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.03" y="207.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (40,404,040 samples, 0.12%)</title><rect x="908.7" y="357" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="911.69" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (30,303,030 samples, 0.09%)</title><rect x="1179.3" y="405" width="1.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1182.33" y="415.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1142.0" y="357" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1144.99" y="367.5" ></text>
</g>
<g >
<title>malloc (202,020,200 samples, 0.60%)</title><rect x="1100.4" y="389" width="7.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1103.38" y="399.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (50,505,050 samples, 0.15%)</title><rect x="905.5" y="389" width="1.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="908.49" y="399.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (333,333,330 samples, 0.99%)</title><rect x="52.7" y="405" width="11.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="55.68" y="415.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1131.3" y="309" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1134.32" y="319.5" ></text>
</g>
<g >
<title>sim::Link::get_to (10,101,010 samples, 0.03%)</title><rect x="1158.0" y="405" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1160.99" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="590.4" y="213" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="593.40" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1182.5" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.53" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="453" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (26,353,535,090 samples, 78.63%)</title><rect x="227.3" y="453" width="927.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="230.29" y="463.5" >sim::Scheduler::tick</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="70.1" y="69" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.10" y="79.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (60,606,060 samples, 0.18%)</title><rect x="1187.2" y="197" width="2.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.15" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="32.0" y="389" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="35.05" y="399.5" ></text>
</g>
<g >
<title>operator new (90,909,090 samples, 0.27%)</title><rect x="899.1" y="325" width="3.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="902.09" y="335.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (171,717,170 samples, 0.51%)</title><rect x="1123.5" y="405" width="6.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1126.50" y="415.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (30,303,030 samples, 0.09%)</title><rect x="948.2" y="405" width="1.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="951.17" y="415.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.12%)</title><rect x="869.2" y="389" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="872.22" y="399.5" ></text>
</g>
<g >
<title>Size&lt;Byte&gt; parse_with_default&lt;Size&lt;Byte&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="357" width="0.4" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="1192.64" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="37.7" y="229" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.74" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="76.5" y="293" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="79.50" y="303.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (50,505,050 samples, 0.15%)</title><rect x="314.4" y="373" width="1.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="317.42" y="383.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="910.5" y="373" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="913.47" y="383.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (20,202,020 samples, 0.06%)</title><rect x="1142.3" y="373" width="0.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1145.34" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="68.7" y="293" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.68" y="303.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (50,505,050 samples, 0.15%)</title><rect x="579.7" y="405" width="1.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="582.73" y="415.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (111,111,110 samples, 0.33%)</title><rect x="1186.1" y="469" width="3.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1189.09" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (33,494,949,160 samples, 99.94%)</title><rect x="10.7" y="501" width="1179.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.71" y="511.5" >[libc.so.6]</text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.12%)</title><rect x="1160.1" y="373" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1163.13" y="383.5" ></text>
</g>
<g >
<title>YAML::LoadFile (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="453" width="3.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1189.09" y="463.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (60,606,060 samples, 0.18%)</title><rect x="70.8" y="405" width="2.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="73.81" y="415.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.09%)</title><rect x="329.0" y="341" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="332.01" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (30,303,030 samples, 0.09%)</title><rect x="580.1" y="373" width="1.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="583.08" y="383.5" ></text>
</g>
<g >
<title>sim::Host::send_packet (646,464,640 samples, 1.93%)</title><rect x="1122.4" y="421" width="22.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1125.43" y="431.5" >s..</text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.15%)</title><rect x="1098.2" y="405" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1101.25" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="1129.9" y="357" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1132.90" y="367.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="323.7" y="373" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="326.67" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="315.8" y="133" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="318.85" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1182.5" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.53" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="364.6" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="367.57" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="66.2" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.19" y="239.5" ></text>
</g>
<g >
<title>vsnprintf (90,909,090 samples, 0.27%)</title><rect x="73.7" y="373" width="3.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="76.66" y="383.5" ></text>
</g>
<g >
<title>__default_morecore (10,101,010 samples, 0.03%)</title><rect x="66.2" y="309" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="69.19" y="319.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (3,818,181,780 samples, 11.39%)</title><rect x="85.0" y="453" width="134.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="88.04" y="463.5" >sim::Event::oper..</text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="581.2" y="357" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="584.15" y="367.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="165" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.93" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="21.7" y="389" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="24.74" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1159.4" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1162.42" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="70.1" y="37" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.10" y="47.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="71.2" y="341" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="74.17" y="351.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="311.9" y="373" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="314.93" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (50,505,050 samples, 0.15%)</title><rect x="597.5" y="325" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="600.51" y="335.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="149" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.44" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="20.0" y="405" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.96" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.30%)</title><rect x="1134.2" y="309" width="3.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1137.17" y="319.5" ></text>
</g>
<g >
<title>vsnprintf (60,606,060 samples, 0.18%)</title><rect x="582.9" y="341" width="2.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="585.93" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1137.4" y="261" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1140.37" y="271.5" ></text>
</g>
<g >
<title>fopen (50,505,050 samples, 0.15%)</title><rect x="68.7" y="389" width="1.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="71.68" y="399.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (20,202,020 samples, 0.06%)</title><rect x="1186.1" y="245" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1189.09" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="70.8" y="357" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="73.81" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="329.7" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="332.72" y="207.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="324.0" y="357" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="327.03" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.6" y="437" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.60" y="447.5" ></text>
</g>
<g >
<title>YAML::Node const YAML::Node::operator[]&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="341" width="0.4" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1192.64" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="32.0" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.05" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="329.0" y="309" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="332.01" y="319.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (80,808,080 samples, 0.24%)</title><rect x="907.6" y="389" width="2.9" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="910.63" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1167.6" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.59" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="364.6" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="367.57" y="319.5" ></text>
</g>
<g >
<title>cfree (303,030,300 samples, 0.90%)</title><rect x="295.9" y="437" width="10.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="298.93" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_pbump (10,101,010 samples, 0.03%)</title><rect x="1132.4" y="341" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1135.39" y="351.5" ></text>
</g>
<g >
<title>sim::Process::~Process (151,515,150 samples, 0.45%)</title><rect x="222.0" y="453" width="5.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="224.96" y="463.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="21.7" y="421" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="24.74" y="431.5" ></text>
</g>
<g >
<title>operator new (707,070,700 samples, 2.11%)</title><rect x="871.4" y="389" width="24.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="874.35" y="399.5" >o..</text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (20,202,020 samples, 0.06%)</title><rect x="581.5" y="389" width="0.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="584.51" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.03%)</title><rect x="1131.3" y="341" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1134.32" y="351.5" ></text>
</g>
<g >
<title>memcpy@plt (10,101,010 samples, 0.03%)</title><rect x="72.6" y="325" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="75.59" y="335.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,101,010 samples, 0.03%)</title><rect x="587.9" y="373" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="590.91" y="383.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="1138.4" y="373" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1141.43" y="383.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1142.0" y="373" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1144.99" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="69.0" y="181" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.04" y="191.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (70,707,070 samples, 0.21%)</title><rect x="582.6" y="373" width="2.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="585.57" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1179.0" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.98" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="329.7" y="85" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="332.72" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="49.8" y="261" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="52.83" y="271.5" ></text>
</g>
<g >
<title>operator delete (40,404,040 samples, 0.12%)</title><rect x="745.8" y="405" width="1.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="748.81" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.30%)</title><rect x="1166.5" y="389" width="3.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1169.53" y="399.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="325" width="3.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.09" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.6" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.60" y="303.5" ></text>
</g>
<g >
<title>_IO_file_fopen (50,505,050 samples, 0.15%)</title><rect x="68.7" y="373" width="1.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="71.68" y="383.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (292,929,290 samples, 0.87%)</title><rect x="40.9" y="405" width="10.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="43.94" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1159.4" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1162.42" y="207.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.03%)</title><rect x="905.1" y="373" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="908.14" y="383.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (40,404,040 samples, 0.12%)</title><rect x="1131.3" y="373" width="1.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1134.32" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="328.6" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="331.65" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1142.0" y="341" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1144.99" y="351.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (161,616,160 samples, 0.48%)</title><rect x="897.3" y="405" width="5.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="900.31" y="415.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (40,404,040 samples, 0.12%)</title><rect x="1143.8" y="405" width="1.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1146.77" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (20,202,020 samples, 0.06%)</title><rect x="10.7" y="421" width="0.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.71" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1179.0" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.98" y="287.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.06%)</title><rect x="1186.1" y="197" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.09" y="207.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (30,303,030 samples, 0.09%)</title><rect x="324.7" y="421" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="327.74" y="431.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1159.4" y="389" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1162.42" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (70,707,070 samples, 0.21%)</title><rect x="1159.1" y="421" width="2.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1162.06" y="431.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="596.8" y="341" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="599.80" y="351.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (70,707,070 samples, 0.21%)</title><rect x="37.4" y="421" width="2.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="40.38" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (242,424,240 samples, 0.72%)</title><rect x="10.7" y="485" width="8.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.71" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="579.0" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="582.02" y="415.5" ></text>
</g>
<g >
<title>sim::FlowParser::parse_tcp_flow (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="373" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1192.29" y="383.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="21.7" y="405" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="24.74" y="415.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (40,404,040 samples, 0.12%)</title><rect x="910.8" y="405" width="1.4" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="913.83" y="415.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.12%)</title><rect x="1181.8" y="389" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1184.82" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1182.5" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.53" y="287.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (131,313,130 samples, 0.39%)</title><rect x="595.0" y="389" width="4.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="598.02" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.27%)</title><rect x="73.7" y="357" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="76.66" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="364.6" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="367.57" y="287.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (20,202,020 samples, 0.06%)</title><rect x="10.7" y="405" width="0.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.71" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.7" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.74" y="351.5" ></text>
</g>
<g >
<title>Logger::warn (2,252,525,230 samples, 6.72%)</title><rect x="638.4" y="405" width="79.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="641.41" y="415.5" >Logger::w..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="68.7" y="277" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.68" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="421" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>sim::RoutingModule::update_routing_table (161,616,160 samples, 0.48%)</title><rect x="1156.6" y="437" width="5.7" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1159.57" y="447.5" ></text>
</g>
<g >
<title>_IO_file_open (60,606,060 samples, 0.18%)</title><rect x="37.4" y="357" width="2.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="40.38" y="367.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="308.7" y="405" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="311.73" y="415.5" ></text>
</g>
<g >
<title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (10,101,010 samples, 0.03%)</title><rect x="50.9" y="389" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="53.90" y="399.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (151,515,150 samples, 0.45%)</title><rect x="317.6" y="389" width="5.4" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="320.63" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="315.8" y="117" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="318.85" y="127.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.12%)</title><rect x="32.0" y="421" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="35.05" y="431.5" ></text>
</g>
<g >
<title>sim::Event::Event (383,838,380 samples, 1.15%)</title><rect x="1107.5" y="405" width="13.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1110.49" y="415.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.03%)</title><rect x="37.0" y="389" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="40.03" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="309.1" y="373" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="312.09" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="66.2" y="133" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.19" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.4" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.38" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="328.6" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="331.65" y="319.5" ></text>
</g>
<g >
<title>__mmap (10,101,010 samples, 0.03%)</title><rect x="329.7" y="277" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="332.72" y="287.5" ></text>
</g>
<g >
<title>vsnprintf (40,404,040 samples, 0.12%)</title><rect x="908.7" y="341" width="1.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="911.69" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.0" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.03" y="319.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (40,404,040 samples, 0.12%)</title><rect x="323.0" y="389" width="1.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="325.96" y="399.5" ></text>
</g>
<g >
<title>malloc@plt (10,101,010 samples, 0.03%)</title><rect x="39.5" y="389" width="0.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="42.52" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.03%)</title><rect x="906.9" y="341" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="909.91" y="351.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="315.5" y="325" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="318.49" y="335.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="601.4" y="357" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="604.42" y="367.5" ></text>
</g>
<g >
<title>virtual thunk to sim::RoutingModule::get_id[abi:cxx11] (20,202,020 samples, 0.06%)</title><rect x="1161.5" y="421" width="0.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1164.55" y="431.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (313,131,310 samples, 0.93%)</title><rect x="833.3" y="373" width="11.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="836.30" y="383.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (252,525,250 samples, 0.75%)</title><rect x="1129.9" y="405" width="8.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1132.90" y="415.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (10,101,010 samples, 0.03%)</title><rect x="76.9" y="469" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="79.86" y="479.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (10,101,010 samples, 0.03%)</title><rect x="1129.5" y="405" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1132.54" y="415.5" ></text>
</g>
<g >
<title>sim::Process::operator (70,707,070 samples, 0.21%)</title><rect x="219.5" y="453" width="2.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="222.47" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="66.2" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.19" y="271.5" ></text>
</g>
<g >
<title>Logger::warn (30,303,030 samples, 0.09%)</title><rect x="363.9" y="421" width="1.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="366.86" y="431.5" ></text>
</g>
<g >
<title>sim::Host::~Host (131,313,130 samples, 0.39%)</title><rect x="11.4" y="405" width="4.6" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="14.42" y="415.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="910.5" y="389" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="913.47" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.6" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.60" y="319.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10,101,010 samples, 0.03%)</title><rect x="1158.3" y="421" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1161.35" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="329.7" y="101" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="332.72" y="111.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="581.9" y="373" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="584.86" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;* std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_Alloc_node&gt; (20,202,020 samples, 0.06%)</title><rect x="1185.4" y="437" width="0.7" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1188.38" y="447.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="1145.2" y="389" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1148.19" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (131,313,130 samples, 0.39%)</title><rect x="44.5" y="325" width="4.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="47.50" y="335.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (20,202,020 samples, 0.06%)</title><rect x="1189.3" y="453" width="0.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1192.29" y="463.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,101,010 samples, 0.03%)</title><rect x="594.7" y="389" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="597.67" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1150.5" y="277" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1153.52" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="326.5" y="373" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="329.52" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1179.0" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.98" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="38.8" y="69" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.81" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1160.8" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.84" y="303.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (20,202,020 samples, 0.06%)</title><rect x="896.2" y="373" width="0.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="899.24" y="383.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="325" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1192.64" y="335.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1158.7" y="389" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1161.70" y="399.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.06%)</title><rect x="1186.1" y="165" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.09" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="69.4" y="101" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.39" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.18%)</title><rect x="37.4" y="261" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.38" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1160.8" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.84" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.03%)</title><rect x="596.8" y="325" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="599.80" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="315.8" y="85" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="318.85" y="95.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (4,020,201,980 samples, 12.00%)</title><rect x="755.8" y="405" width="141.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="758.77" y="415.5" >sim::Link::get_pa..</text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (10,101,010 samples, 0.03%)</title><rect x="902.3" y="357" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="905.29" y="367.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (10,101,010 samples, 0.03%)</title><rect x="316.9" y="389" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="319.91" y="399.5" ></text>
</g>
<g >
<title>sim::Simulator::get_devices (10,101,010 samples, 0.03%)</title><rect x="1162.3" y="437" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1165.26" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="590.8" y="309" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="593.75" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="517" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="70.1" y="53" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.10" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1182.9" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.89" y="191.5" ></text>
</g>
<g >
<title>operator delete (80,808,080 samples, 0.24%)</title><rect x="79.0" y="453" width="2.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="81.99" y="463.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.03%)</title><rect x="910.1" y="357" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="913.11" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1179.0" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.98" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="598.9" y="245" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="601.93" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="66.2" y="389" width="0.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="69.19" y="399.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="1183.6" y="421" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1186.60" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="601.8" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="604.78" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="908.3" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="911.34" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="32.0" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.05" y="207.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (131,313,130 samples, 0.39%)</title><rect x="318.3" y="357" width="4.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="321.34" y="367.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (10,101,010 samples, 0.03%)</title><rect x="588.6" y="357" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="591.62" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.4" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.38" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="66.2" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.19" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1172.6" y="373" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1175.57" y="383.5" ></text>
</g>
<g >
<title>malloc (70,707,070 samples, 0.21%)</title><rect x="743.3" y="405" width="2.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="746.32" y="415.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (111,111,110 samples, 0.33%)</title><rect x="595.7" y="373" width="3.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="598.73" y="383.5" ></text>
</g>
<g >
<title>sim::Host::process (737,373,730 samples, 2.20%)</title><rect x="579.0" y="421" width="26.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="582.02" y="431.5" >s..</text>
</g>
<g >
<title>nons (33,515,151,180 samples, 100.00%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >nons</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="32.0" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.05" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="49.8" y="197" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="52.83" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1167.2" y="357" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.24" y="367.5" ></text>
</g>
<g >
<title>sim::is_valid_link (20,202,020 samples, 0.06%)</title><rect x="1157.6" y="421" width="0.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1160.64" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (131,313,130 samples, 0.39%)</title><rect x="1133.1" y="325" width="4.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1136.10" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1167.2" y="341" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.24" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.27%)</title><rect x="1125.6" y="293" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1128.63" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.6" y="405" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.60" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.03%)</title><rect x="906.6" y="357" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="909.56" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1176.5" y="389" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1179.49" y="399.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="324.0" y="373" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="327.03" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="66.2" y="405" width="0.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="69.19" y="415.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (20,202,020 samples, 0.06%)</title><rect x="589.7" y="341" width="0.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="592.69" y="351.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (10,101,010 samples, 0.03%)</title><rect x="70.5" y="421" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="73.46" y="431.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (1,020,202,010 samples, 3.04%)</title><rect x="912.2" y="405" width="36.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="915.25" y="415.5" >sim..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_erase (20,202,020 samples, 0.06%)</title><rect x="1176.1" y="421" width="0.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1179.13" y="431.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="601.4" y="341" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="604.42" y="351.5" ></text>
</g>
<g >
<title>vsnprintf (121,212,120 samples, 0.36%)</title><rect x="318.7" y="341" width="4.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="321.69" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1182.2" y="373" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1185.18" y="383.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (20,202,020 samples, 0.06%)</title><rect x="1129.9" y="389" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1132.90" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (50,505,050 samples, 0.15%)</title><rect x="1159.8" y="405" width="1.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1162.77" y="415.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="52.0" y="405" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="54.97" y="415.5" ></text>
</g>
<g >
<title>sim::LinkParser::parse_default_link (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="373" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1192.64" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="38.1" y="197" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.10" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="315.8" y="293" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="318.85" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1182.9" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.89" y="207.5" ></text>
</g>
<g >
<title>malloc (161,616,160 samples, 0.48%)</title><rect x="750.1" y="389" width="5.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="753.08" y="399.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (141,414,140 samples, 0.42%)</title><rect x="1132.7" y="389" width="5.0" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1135.74" y="399.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (40,404,040 samples, 0.12%)</title><rect x="309.8" y="373" width="1.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="312.80" y="383.5" ></text>
</g>
<g >
<title>open64 (50,505,050 samples, 0.15%)</title><rect x="68.7" y="341" width="1.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="71.68" y="351.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (10,101,010 samples, 0.03%)</title><rect x="37.0" y="405" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="40.03" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.27%)</title><rect x="16.0" y="373" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="19.05" y="383.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (20,202,020 samples, 0.06%)</title><rect x="51.3" y="405" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="54.25" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (20,202,020 samples, 0.06%)</title><rect x="35.3" y="405" width="0.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="38.25" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1160.8" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.84" y="271.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (10,101,010 samples, 0.03%)</title><rect x="37.0" y="373" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="40.03" y="383.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (10,101,010 samples, 0.03%)</title><rect x="907.6" y="373" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="910.63" y="383.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="341" width="3.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.09" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="75.8" y="309" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="78.79" y="319.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (141,414,140 samples, 0.42%)</title><rect x="581.5" y="405" width="5.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="584.51" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (20,202,020 samples, 0.06%)</title><rect x="603.2" y="357" width="0.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="606.20" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="32.0" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.05" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1159.4" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1162.42" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.6" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.60" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="584.7" y="277" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="587.71" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="71.9" y="309" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="74.88" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="32.4" y="373" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="35.41" y="383.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (10,101,010 samples, 0.03%)</title><rect x="1150.2" y="357" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1153.17" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="32.0" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.05" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1179.0" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.98" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (131,313,130 samples, 0.39%)</title><rect x="891.6" y="341" width="4.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="894.62" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="364.6" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="367.57" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="590.4" y="229" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="593.40" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1179.0" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.98" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1168.0" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.95" y="223.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (30,303,030 samples, 0.09%)</title><rect x="1188.2" y="181" width="1.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.22" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1122.8" y="405" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1125.78" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="364.6" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="367.57" y="335.5" ></text>
</g>
<g >
<title>sim::BaseHasher::get_hash (30,303,030 samples, 0.09%)</title><rect x="1142.0" y="389" width="1.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1144.99" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.6" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.60" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.18%)</title><rect x="37.4" y="293" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.38" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1168.0" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.95" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1182.9" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.89" y="159.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="63.7" y="389" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="66.70" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="20.7" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="23.67" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.27%)</title><rect x="16.0" y="357" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="19.05" y="367.5" ></text>
</g>
<g >
<title>sim::FlowParser::parse_i_flow (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="389" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1192.29" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="899.4" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="902.45" y="223.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (60,606,060 samples, 0.18%)</title><rect x="597.5" y="341" width="2.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="600.51" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="896.2" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="899.24" y="367.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (10,101,010 samples, 0.03%)</title><rect x="581.2" y="373" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="584.15" y="383.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (10,101,010 samples, 0.03%)</title><rect x="68.0" y="437" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="70.97" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="68.7" y="325" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.68" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="68.7" y="261" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.68" y="271.5" ></text>
</g>
<g >
<title>_start (33,494,949,160 samples, 99.94%)</title><rect x="10.7" y="533" width="1179.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.71" y="543.5" >_start</text>
</g>
<g >
<title>[libc.so.6] (191,919,190 samples, 0.57%)</title><rect x="42.4" y="357" width="6.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="45.36" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="328.6" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="331.65" y="271.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (40,404,040 samples, 0.12%)</title><rect x="596.1" y="357" width="1.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="599.09" y="367.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="1179.7" y="389" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1182.69" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_delivery_rate (30,303,030 samples, 0.09%)</title><rect x="602.8" y="389" width="1.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="605.85" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1168.0" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.95" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="32.0" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.05" y="271.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.12%)</title><rect x="32.0" y="405" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="35.05" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="66.2" y="373" width="0.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="69.19" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (30,303,030 samples, 0.09%)</title><rect x="1183.2" y="437" width="1.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1186.24" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="74.0" y="341" width="2.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="77.01" y="351.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (10,101,010 samples, 0.03%)</title><rect x="590.4" y="341" width="0.4" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="593.40" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::export_metrics_to_files (1,636,363,620 samples, 4.88%)</title><rect x="19.2" y="469" width="57.7" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="22.25" y="479.5" >sim::M..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1179.0" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.98" y="223.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::SendData, Time&lt;Nanosecond&gt;, std::weak_ptr&lt;sim::IHost&gt;&amp;&gt; (20,202,020 samples, 0.06%)</title><rect x="1145.2" y="421" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1148.19" y="431.5" ></text>
</g>
<g >
<title>std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;::size_type std::__detail::__erase_nodes_if&lt;std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;, std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;, sim::RoutingModule::correctify_outlinks (10,101,010 samples, 0.03%)</title><rect x="1174.4" y="405" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1177.35" y="415.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.06%)</title><rect x="1186.1" y="229" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.09" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.4" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.38" y="223.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="357" width="3.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.09" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="49.8" y="229" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="52.83" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="899.4" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="902.45" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1179.0" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.98" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="322.6" y="261" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="325.60" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="49.8" y="165" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="52.83" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="909.8" y="277" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="912.76" y="287.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (20,202,020 samples, 0.06%)</title><rect x="1186.1" y="277" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1189.09" y="287.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="20.0" y="437" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="22.96" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1150.5" y="293" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1153.52" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (20,202,020 samples, 0.06%)</title><rect x="1184.3" y="437" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1187.31" y="447.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (50,505,050 samples, 0.15%)</title><rect x="49.1" y="389" width="1.8" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="52.12" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (60,606,060 samples, 0.18%)</title><rect x="582.9" y="357" width="2.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="585.93" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (252,525,250 samples, 0.75%)</title><rect x="54.8" y="357" width="8.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="57.81" y="367.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.09%)</title><rect x="1172.2" y="405" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1175.22" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="599.6" y="325" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="602.64" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.0" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.03" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="597.5" y="293" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="600.51" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1159.4" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1162.42" y="271.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (70,707,070 samples, 0.21%)</title><rect x="1186.8" y="293" width="2.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.80" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="469" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="899.8" y="277" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="902.80" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (50,505,050 samples, 0.15%)</title><rect x="1178.6" y="421" width="1.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1181.62" y="431.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="1176.1" y="405" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1179.13" y="415.5" ></text>
</g>
<g >
<title>__munmap (10,101,010 samples, 0.03%)</title><rect x="21.4" y="421" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="24.38" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="315.8" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="318.85" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="1168.3" y="373" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1171.31" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1166.2" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1169.17" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="899.4" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="902.45" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.30%)</title><rect x="1134.2" y="293" width="3.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1137.17" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1168.0" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.95" y="303.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;, std::weak_ptr&lt;sim::IProcessingDevice&gt;&amp;&gt; (2,646,464,620 samples, 7.90%)</title><rect x="1027.8" y="421" width="93.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1030.83" y="431.5" >void sim::S..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="364.6" y="405" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="367.57" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="899.4" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="902.45" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="315.8" y="69" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="318.85" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1160.8" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.84" y="239.5" ></text>
</g>
<g >
<title>sim::Simulator::recalculate_paths (878,787,870 samples, 2.62%)</title><rect x="1155.1" y="453" width="31.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1158.15" y="463.5" >si..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.03%)</title><rect x="581.9" y="341" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="584.86" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1179.0" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.98" y="367.5" ></text>
</g>
<g >
<title>operator delete (101,010,100 samples, 0.30%)</title><rect x="364.9" y="421" width="3.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="367.92" y="431.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (10,101,010 samples, 0.03%)</title><rect x="907.3" y="389" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="910.27" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1168.0" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.95" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1160.8" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.84" y="255.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="1145.2" y="405" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1148.19" y="415.5" ></text>
</g>
<g >
<title>_IO_file_open (50,505,050 samples, 0.15%)</title><rect x="68.7" y="357" width="1.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="71.68" y="367.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="20.7" y="437" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="23.67" y="447.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (20,202,020 samples, 0.06%)</title><rect x="911.5" y="373" width="0.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="914.54" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="66.2" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.19" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1162.3" y="389" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1165.26" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="313.7" y="373" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="316.71" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="899.4" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="902.45" y="175.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1158.7" y="405" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1161.70" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="597.5" y="261" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="600.51" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (2,232,323,210 samples, 6.66%)</title><rect x="949.2" y="405" width="78.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="952.23" y="415.5" >std::_Rb_..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1179.0" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.98" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="66.2" y="85" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.19" y="95.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="582.9" y="293" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="585.93" y="303.5" ></text>
</g>
<g >
<title>open64 (60,606,060 samples, 0.18%)</title><rect x="37.4" y="341" width="2.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="40.38" y="351.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (141,414,140 samples, 0.42%)</title><rect x="318.0" y="373" width="5.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="320.98" y="383.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (10,101,010 samples, 0.03%)</title><rect x="311.2" y="389" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="314.22" y="399.5" ></text>
</g>
<g >
<title>operator new (101,010,100 samples, 0.30%)</title><rect x="1166.5" y="421" width="3.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1169.53" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="328.6" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="331.65" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="66.2" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.19" y="159.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (70,707,070 samples, 0.21%)</title><rect x="309.1" y="405" width="2.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="312.09" y="415.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_links (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="437" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1192.64" y="447.5" ></text>
</g>
<g >
<title>sim::TcpFlow::retransmit_packet (20,202,020 samples, 0.06%)</title><rect x="1150.2" y="421" width="0.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1153.17" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="38.1" y="133" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.10" y="143.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="585.1" y="373" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="588.06" y="383.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (60,606,060 samples, 0.18%)</title><rect x="70.8" y="421" width="2.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="73.81" y="431.5" ></text>
</g>
<g >
<title>sim::Link::get_to (20,202,020 samples, 0.06%)</title><rect x="1170.4" y="421" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1173.44" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="68.7" y="245" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.68" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="32.0" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.05" y="239.5" ></text>
</g>
<g >
<title>vsnprintf (50,505,050 samples, 0.15%)</title><rect x="597.5" y="309" width="1.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="600.51" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="15.7" y="341" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.69" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.0" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.03" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (111,111,110 samples, 0.33%)</title><rect x="319.0" y="293" width="4.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="322.05" y="303.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (10,101,010 samples, 0.03%)</title><rect x="604.3" y="389" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="607.27" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="1160.1" y="357" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1163.13" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="601.4" y="373" width="0.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="604.42" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1160.8" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.84" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.4" y="389" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.38" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (161,616,160 samples, 0.48%)</title><rect x="43.4" y="341" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="46.43" y="351.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (373,737,370 samples, 1.12%)</title><rect x="51.3" y="421" width="13.1" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="54.25" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="38.1" y="149" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.10" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="42.0" y="389" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="45.01" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="533" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1166.2" y="389" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1169.17" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (191,919,190 samples, 0.57%)</title><rect x="42.4" y="389" width="6.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="45.36" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (292,929,290 samples, 0.87%)</title><rect x="53.4" y="389" width="10.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="56.39" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (40,404,040 samples, 0.12%)</title><rect x="1131.3" y="357" width="1.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1134.32" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="909.8" y="293" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="912.76" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="38.5" y="85" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.45" y="95.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="582.2" y="373" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="585.22" y="383.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (10,101,010 samples, 0.03%)</title><rect x="317.3" y="389" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="320.27" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="68.7" y="197" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.68" y="207.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (10,101,010 samples, 0.03%)</title><rect x="311.2" y="373" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="314.22" y="383.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (10,101,010 samples, 0.03%)</title><rect x="324.4" y="405" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="327.38" y="415.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (50,505,050 samples, 0.15%)</title><rect x="579.7" y="389" width="1.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="582.73" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.18%)</title><rect x="37.4" y="309" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.38" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="49.8" y="181" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="52.83" y="191.5" ></text>
</g>
<g >
<title>cfree (252,525,250 samples, 0.75%)</title><rect x="734.4" y="405" width="8.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="737.43" y="415.5" ></text>
</g>
<g >
<title>fopen (60,606,060 samples, 0.18%)</title><rect x="37.4" y="389" width="2.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="40.38" y="399.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::operator (151,515,150 samples, 0.45%)</title><rect x="324.7" y="437" width="5.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="327.74" y="447.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::Arrive (10,101,010 samples, 0.03%)</title><rect x="326.2" y="405" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="329.16" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="328.6" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="331.65" y="303.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (20,202,020 samples, 0.06%)</title><rect x="1150.2" y="373" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1153.17" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="37.7" y="213" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.74" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.6" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.60" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="49.8" y="325" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="52.83" y="335.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="638.1" y="389" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="641.05" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="364.6" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="367.57" y="271.5" ></text>
</g>
<g >
<title>YAML::detail::node::equals (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="341" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1192.29" y="351.5" ></text>
</g>
<g >
<title>operator new (101,010,100 samples, 0.30%)</title><rect x="368.5" y="421" width="3.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="371.48" y="431.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="52.3" y="405" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="55.32" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.18%)</title><rect x="37.4" y="325" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.38" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="66.2" y="101" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.19" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="899.4" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="902.45" y="255.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (90,909,090 samples, 0.27%)</title><rect x="899.1" y="341" width="3.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="902.09" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="38.1" y="181" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.10" y="191.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (60,606,060 samples, 0.18%)</title><rect x="309.1" y="389" width="2.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="312.09" y="399.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (111,111,110 samples, 0.33%)</title><rect x="72.9" y="421" width="4.0" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="75.95" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1159.4" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1162.42" y="335.5" ></text>
</g>
<g >
<title>_IO_file_fopen (60,606,060 samples, 0.18%)</title><rect x="37.4" y="373" width="2.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="40.38" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1159.4" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1162.42" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.36%)</title><rect x="318.7" y="325" width="4.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="321.69" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="501" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>brk (10,101,010 samples, 0.03%)</title><rect x="66.2" y="293" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="69.19" y="303.5" ></text>
</g>
<g >
<title>Logger::get_instance (50,505,050 samples, 0.15%)</title><rect x="768.2" y="389" width="1.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="771.22" y="399.5" ></text>
</g>
<g >
<title>operator new (242,424,240 samples, 0.72%)</title><rect x="747.2" y="405" width="8.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="750.23" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.6" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.60" y="335.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="589.3" y="341" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="592.33" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (10,101,010 samples, 0.03%)</title><rect x="602.5" y="357" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="605.49" y="367.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="602.1" y="373" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="605.13" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1182.5" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.53" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.18%)</title><rect x="37.4" y="245" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.38" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.4" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.38" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::get_records (10,101,010 samples, 0.03%)</title><rect x="33.5" y="421" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="36.47" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.36" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1179.0" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.98" y="319.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.12%)</title><rect x="1181.8" y="405" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1184.82" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.36" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (10,101,010 samples, 0.03%)</title><rect x="1173.3" y="405" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1176.29" y="415.5" ></text>
</g>
<g >
<title>sim::Link::get_max_to_ingress_queue_size (90,909,090 samples, 0.27%)</title><rect x="605.0" y="421" width="3.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="607.98" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1179.0" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.98" y="175.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (20,202,020 samples, 0.06%)</title><rect x="896.2" y="389" width="0.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="899.24" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="53.7" y="373" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.74" y="383.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (80,808,080 samples, 0.24%)</title><rect x="576.2" y="421" width="2.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="579.17" y="431.5" ></text>
</g>
<g >
<title>void sim::YamlParser::process_identifiables&lt;sim::ILink&gt; (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="421" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1192.64" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.6" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.60" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="582.9" y="309" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="585.93" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="66.2" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.19" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.36" y="271.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (20,202,020 samples, 0.06%)</title><rect x="36.7" y="421" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="39.67" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>sim::Host::~Host (20,202,020 samples, 0.06%)</title><rect x="10.7" y="389" width="0.7" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="13.71" y="399.5" ></text>
</g>
<g >
<title>Logger::info (30,303,030 samples, 0.09%)</title><rect x="637.3" y="405" width="1.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="640.34" y="415.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (10,101,010 samples, 0.03%)</title><rect x="902.3" y="373" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="905.29" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="48.8" y="293" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="51.76" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.0" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.03" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="590.4" y="261" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="593.40" y="271.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (40,404,040 samples, 0.12%)</title><rect x="613.5" y="421" width="1.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="616.51" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1160.8" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.84" y="351.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (10,101,010 samples, 0.03%)</title><rect x="902.6" y="389" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="905.65" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="315.8" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="318.85" y="207.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (222,222,220 samples, 0.66%)</title><rect x="11.4" y="421" width="7.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="14.42" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.0" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.03" y="335.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (131,313,130 samples, 0.39%)</title><rect x="897.7" y="373" width="4.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="900.67" y="383.5" ></text>
</g>
<g >
<title>sim::Simulator::start (31,494,949,180 samples, 93.97%)</title><rect x="77.2" y="469" width="1108.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="80.22" y="479.5" >sim::Simulator::start</text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (323,232,320 samples, 0.96%)</title><rect x="39.9" y="421" width="11.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="42.87" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (474,747,470 samples, 1.42%)</title><rect x="717.7" y="405" width="16.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="720.72" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="329.7" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="332.72" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="32.0" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.05" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="899.4" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="902.45" y="287.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="590.8" y="325" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="593.75" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (20,202,020 samples, 0.06%)</title><rect x="1131.7" y="341" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1134.68" y="351.5" ></text>
</g>
<g >
<title>sim::LinkParser::parse_i_link (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="389" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1192.64" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="585.8" y="357" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="588.77" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.0" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.03" y="271.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (60,606,060 samples, 0.18%)</title><rect x="608.2" y="421" width="2.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="611.18" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.4" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.38" y="239.5" ></text>
</g>
</g>
</svg>
