<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="614.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="597" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="597" > </text>
<g id="frames">
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.03%)</title><rect x="1130.1" y="373" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1133.07" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.29" y="191.5" ></text>
</g>
<g >
<title>malloc (60,606,060 samples, 0.18%)</title><rect x="1167.9" y="405" width="2.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1170.88" y="415.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (151,515,150 samples, 0.45%)</title><rect x="880.4" y="405" width="5.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="883.37" y="415.5" ></text>
</g>
<g >
<title>sim::TcpFlow::Timeout::operator (101,010,100 samples, 0.30%)</title><rect x="1147.9" y="437" width="3.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1150.91" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.64" y="271.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (10,101,010 samples, 0.03%)</title><rect x="1127.6" y="405" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1130.58" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="877.5" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="880.52" y="207.5" ></text>
</g>
<g >
<title>sim::Simulator::get_devices (10,101,010 samples, 0.03%)</title><rect x="1165.4" y="437" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1168.39" y="447.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="325" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1192.64" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.6" y="165" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.65" y="175.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="877.9" y="309" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="880.88" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1180.7" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.73" y="319.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (40,404,040 samples, 0.12%)</title><rect x="36.0" y="405" width="1.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="39.04" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.64" y="287.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (323,232,320 samples, 0.97%)</title><rect x="805.1" y="373" width="11.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="808.11" y="383.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="576.1" y="341" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="579.10" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.0" y="309" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.04" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="330.7" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="333.68" y="207.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (20,202,020 samples, 0.06%)</title><rect x="1188.6" y="245" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1191.57" y="255.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="293" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1189.43" y="303.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="349.6" y="373" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="352.59" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (141,414,140 samples, 0.42%)</title><rect x="57.8" y="341" width="5.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="60.80" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="20.7" y="421" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.70" y="431.5" ></text>
</g>
<g >
<title>Logger::info (10,101,010 samples, 0.03%)</title><rect x="571.8" y="357" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="574.82" y="367.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="181" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.43" y="191.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (10,101,010 samples, 0.03%)</title><rect x="350.7" y="421" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="353.66" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="692.0" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="695.03" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="517" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>vsnprintf (90,909,090 samples, 0.27%)</title><rect x="70.3" y="373" width="3.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="73.28" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.0" y="133" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.04" y="143.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_flows (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="437" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1192.29" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="63.1" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.15" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="578.6" y="309" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="581.60" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="63.1" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.15" y="207.5" ></text>
</g>
<g >
<title>sim::Process::operator (21,707,070,490 samples, 64.96%)</title><rect x="351.0" y="437" width="766.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="354.02" y="447.5" >sim::Process::operator</text>
</g>
<g >
<title>sim::Link::transmit (80,808,080 samples, 0.24%)</title><rect x="347.8" y="421" width="2.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="350.81" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1180.7" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.73" y="351.5" ></text>
</g>
<g >
<title>sim::Switch::notify_about_arrival (10,101,010 samples, 0.03%)</title><rect x="345.3" y="405" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="348.31" y="415.5" ></text>
</g>
<g >
<title>sim::is_valid_link (30,303,030 samples, 0.09%)</title><rect x="1159.7" y="421" width="1.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1162.68" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (20,202,020 samples, 0.06%)</title><rect x="64.6" y="437" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="67.58" y="447.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (20,202,020 samples, 0.06%)</title><rect x="1188.6" y="229" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1191.57" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="874.0" y="357" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="876.95" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_erase (20,202,020 samples, 0.06%)</title><rect x="1174.3" y="421" width="0.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1177.30" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.2" y="437" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.20" y="447.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (40,404,040 samples, 0.12%)</title><rect x="36.0" y="421" width="1.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="39.04" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="67.8" y="325" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="70.79" y="335.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (1,282,828,270 samples, 3.84%)</title><rect x="887.9" y="405" width="45.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="890.87" y="415.5" >sim:..</text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (20,202,020 samples, 0.06%)</title><rect x="37.8" y="421" width="0.7" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="40.82" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="62.8" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="65.79" y="367.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1186.1" y="261" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1189.08" y="271.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (60,606,060 samples, 0.18%)</title><rect x="569.3" y="389" width="2.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="572.32" y="399.5" ></text>
</g>
<g >
<title>operator delete (50,505,050 samples, 0.15%)</title><rect x="713.4" y="405" width="1.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="716.43" y="415.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="880.4" y="389" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="883.37" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="56.4" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="59.37" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="19.3" y="405" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.27" y="415.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (30,303,030 samples, 0.09%)</title><rect x="1144.7" y="373" width="1.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1147.70" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.6" y="325" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.65" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1151.1" y="245" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1154.12" y="255.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="330.0" y="341" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="332.97" y="351.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_hosts (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="437" width="0.4" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1192.64" y="447.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="574.7" y="357" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="577.67" y="367.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="197" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.43" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="334.6" y="373" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="337.61" y="383.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (131,313,130 samples, 0.39%)</title><rect x="326.4" y="405" width="4.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="329.40" y="415.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (40,404,040 samples, 0.12%)</title><rect x="878.9" y="405" width="1.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="881.95" y="415.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1188.2" y="181" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.22" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="563.6" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="566.62" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="67.8" y="357" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="70.79" y="367.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="1174.7" y="405" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1177.66" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (10,101,010 samples, 0.03%)</title><rect x="1175.0" y="421" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1178.02" y="431.5" ></text>
</g>
<g >
<title>sim::IdentifierFactory::~IdentifierFactory (202,020,200 samples, 0.60%)</title><rect x="10.7" y="453" width="7.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="13.71" y="463.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (90,909,090 samples, 0.27%)</title><rect x="1142.9" y="405" width="3.2" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1145.91" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.36" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1159.3" y="421" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1162.32" y="431.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (20,202,020 samples, 0.06%)</title><rect x="1189.3" y="453" width="0.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1192.29" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="63.1" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.15" y="319.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (40,404,040 samples, 0.12%)</title><rect x="1146.5" y="389" width="1.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1149.48" y="399.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,101,010 samples, 0.03%)</title><rect x="575.7" y="389" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="578.74" y="399.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="18.9" y="437" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="21.92" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (262,626,260 samples, 0.79%)</title><rect x="311.8" y="421" width="9.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="314.78" y="431.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (111,111,110 samples, 0.33%)</title><rect x="1186.1" y="469" width="3.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1189.08" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="572.5" y="325" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="575.53" y="335.5" ></text>
</g>
<g >
<title>sim::Link::get_to (10,101,010 samples, 0.03%)</title><rect x="1160.4" y="405" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1163.39" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10,101,010 samples, 0.03%)</title><rect x="1173.9" y="421" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1176.95" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="563.6" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="566.62" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1180.7" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.73" y="223.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="875.0" y="357" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="878.02" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1180.7" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.73" y="271.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="349.9" y="357" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="352.95" y="367.5" ></text>
</g>
<g >
<title>main (33,191,918,860 samples, 99.33%)</title><rect x="17.8" y="485" width="1172.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="20.85" y="495.5" >main</text>
</g>
<g >
<title>sim::Link::arrive (666,666,660 samples, 2.00%)</title><rect x="322.5" y="421" width="23.5" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="325.48" y="431.5" >s..</text>
</g>
<g >
<title>fmt::v11::vformat[abi:cxx11] (10,101,010 samples, 0.03%)</title><rect x="1124.0" y="341" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1127.01" y="351.5" ></text>
</g>
<g >
<title>sim::Simulator::start (31,484,848,170 samples, 94.23%)</title><rect x="74.2" y="469" width="1111.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="77.21" y="479.5" >sim::Simulator::start</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="692.0" y="405" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="695.03" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (131,313,130 samples, 0.39%)</title><rect x="58.2" y="325" width="4.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="61.16" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="877.5" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="880.52" y="191.5" ></text>
</g>
<g >
<title>malloc@plt (10,101,010 samples, 0.03%)</title><rect x="1171.1" y="405" width="0.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1174.09" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="571.1" y="277" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="574.11" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.1" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.06" y="255.5" ></text>
</g>
<g >
<title>sim::IdentifierFactory::add_object (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="405" width="0.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1192.29" y="415.5" ></text>
</g>
<g >
<title>sim::Event::get_time (151,515,150 samples, 0.45%)</title><rect x="77.4" y="453" width="5.4" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="80.42" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1169.3" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.31" y="335.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnScalar (30,303,030 samples, 0.09%)</title><rect x="1186.8" y="277" width="1.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1189.79" y="287.5" ></text>
</g>
<g >
<title>strlen@plt (30,303,030 samples, 0.09%)</title><rect x="1018.1" y="405" width="1.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1021.07" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="580.0" y="373" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="583.02" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.5" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.47" y="287.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (10,101,010 samples, 0.03%)</title><rect x="568.6" y="373" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="571.61" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1150.8" y="261" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1153.76" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="330.7" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="333.68" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="330.7" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="333.68" y="255.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="73.5" y="389" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="76.49" y="399.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (20,202,020 samples, 0.06%)</title><rect x="574.0" y="341" width="0.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="576.96" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (20,202,020 samples, 0.06%)</title><rect x="573.2" y="309" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="576.25" y="319.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="261" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1189.43" y="271.5" ></text>
</g>
<g >
<title>__default_morecore (10,101,010 samples, 0.03%)</title><rect x="330.7" y="293" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="333.68" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1169.0" y="341" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.95" y="351.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="574.7" y="341" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="577.67" y="351.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="579.7" y="373" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="582.67" y="383.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::Push (30,303,030 samples, 0.09%)</title><rect x="1186.8" y="261" width="1.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1189.79" y="271.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="67.1" y="405" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="70.07" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.0" y="293" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.04" y="303.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.12%)</title><rect x="1098.7" y="405" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1101.68" y="415.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (20,202,020 samples, 0.06%)</title><rect x="567.5" y="389" width="0.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="570.54" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.6" y="133" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.65" y="143.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (60,606,060 samples, 0.18%)</title><rect x="885.7" y="405" width="2.2" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="888.73" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.5" y="389" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.47" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1169.3" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.31" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>operator new (242,424,240 samples, 0.73%)</title><rect x="715.2" y="405" width="8.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="718.22" y="415.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="277" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1189.43" y="287.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (40,404,040 samples, 0.12%)</title><rect x="877.5" y="341" width="1.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="880.52" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="875.7" y="357" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="878.74" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1187.5" y="85" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1190.50" y="95.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (90,909,090 samples, 0.27%)</title><rect x="70.3" y="389" width="3.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="73.28" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="330.7" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="333.68" y="239.5" ></text>
</g>
<g >
<title>sim::Event::Event (20,202,020 samples, 0.06%)</title><rect x="879.7" y="389" width="0.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="882.66" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1169.0" y="373" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.95" y="383.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1165.4" y="405" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1168.39" y="415.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="1122.6" y="373" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1125.58" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (60,606,060 samples, 0.18%)</title><rect x="1181.4" y="405" width="2.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1184.44" y="415.5" ></text>
</g>
<g >
<title>sim::Host::process (444,444,440 samples, 1.33%)</title><rect x="566.5" y="421" width="15.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="569.47" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.5" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.47" y="303.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="341" width="3.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.08" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.30%)</title><rect x="1135.1" y="309" width="3.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1138.07" y="319.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::Push (10,101,010 samples, 0.03%)</title><rect x="1186.1" y="293" width="0.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1189.08" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (10,101,010 samples, 0.03%)</title><rect x="579.7" y="357" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="582.67" y="367.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1144.3" y="357" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1147.34" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (131,313,130 samples, 0.39%)</title><rect x="868.6" y="357" width="4.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="871.60" y="367.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1186.1" y="245" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1189.08" y="255.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="389" width="3.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.08" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.36" y="271.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1188.2" y="197" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.22" y="207.5" ></text>
</g>
<g >
<title>sim::Scheduler::get_current_time (10,101,010 samples, 0.03%)</title><rect x="346.0" y="421" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="349.02" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.5" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.47" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1161.8" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.82" y="367.5" ></text>
</g>
<g >
<title>std::locale::locale (10,101,010 samples, 0.03%)</title><rect x="332.8" y="373" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="335.82" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (90,909,090 samples, 0.27%)</title><rect x="875.7" y="373" width="3.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="878.74" y="383.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (40,404,040 samples, 0.12%)</title><rect x="1146.5" y="405" width="1.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1149.48" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1128.3" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1131.29" y="383.5" ></text>
</g>
<g >
<title>YAML::Load (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="437" width="3.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1189.08" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.29" y="335.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (30,303,030 samples, 0.09%)</title><rect x="1132.2" y="373" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1135.21" y="383.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (10,101,010 samples, 0.03%)</title><rect x="344.6" y="357" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="347.59" y="367.5" ></text>
</g>
<g >
<title>sim::Switch::process (12,050,504,930 samples, 36.06%)</title><rect x="593.6" y="421" width="425.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="596.58" y="431.5" >sim::Switch::process</text>
</g>
<g >
<title>operator delete (10,101,010 samples, 0.03%)</title><rect x="1157.2" y="437" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1160.18" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (10,101,010 samples, 0.03%)</title><rect x="1184.6" y="437" width="0.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1187.65" y="447.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="69.9" y="405" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="72.93" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;Time&lt;Nanosecond&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (60,606,060 samples, 0.18%)</title><rect x="33.5" y="421" width="2.2" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="36.54" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="692.0" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="695.03" y="351.5" ></text>
</g>
<g >
<title>Logger::info (20,202,020 samples, 0.06%)</title><rect x="323.9" y="405" width="0.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="326.91" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="1176.4" y="405" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1179.44" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="63.1" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.15" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="348.9" y="373" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="351.88" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.03%)</title><rect x="33.2" y="421" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="36.19" y="431.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="1161.5" y="405" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1164.46" y="415.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="1017.4" y="389" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1020.35" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.36" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="51.0" y="309" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="54.02" y="319.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (70,707,070 samples, 0.21%)</title><rect x="572.2" y="357" width="2.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="575.18" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_erase (40,404,040 samples, 0.12%)</title><rect x="1175.4" y="421" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1178.37" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1017.4" y="373" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1020.35" y="383.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="325.3" y="405" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="328.33" y="415.5" ></text>
</g>
<g >
<title>sim::Process::~Process (60,606,060 samples, 0.18%)</title><rect x="1117.6" y="437" width="2.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1120.59" y="447.5" ></text>
</g>
<g >
<title>void sim::YamlParser::process_identifiables&lt;sim::IHost&gt; (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="421" width="0.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1192.64" y="431.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (60,606,060 samples, 0.18%)</title><rect x="569.3" y="373" width="2.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="572.32" y="383.5" ></text>
</g>
<g >
<title>sim::Link::get_to (10,101,010 samples, 0.03%)</title><rect x="1157.9" y="437" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1160.90" y="447.5" ></text>
</g>
<g >
<title>sim::SendData::operator (797,979,790 samples, 2.39%)</title><rect x="1119.7" y="437" width="28.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1122.73" y="447.5" >s..</text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.03%)</title><rect x="880.7" y="373" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="883.73" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="577.5" y="341" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="580.53" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int&gt;::FlagInfo&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int&gt;::FlagInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (10,101,010 samples, 0.03%)</title><rect x="581.1" y="357" width="0.4" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="584.09" y="367.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (10,101,010 samples, 0.03%)</title><rect x="39.3" y="405" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="42.25" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="66.7" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="69.72" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (60,606,060 samples, 0.18%)</title><rect x="569.3" y="357" width="2.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="572.32" y="367.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1128.6" y="373" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1131.65" y="383.5" ></text>
</g>
<g >
<title>sim::TcpFlow::retransmit_packet (30,303,030 samples, 0.09%)</title><rect x="1150.4" y="421" width="1.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1153.41" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="34.3" y="373" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="37.26" y="383.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="1171.5" y="389" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1174.45" y="399.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_packet_now (90,909,090 samples, 0.27%)</title><rect x="571.8" y="389" width="3.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="574.82" y="399.5" ></text>
</g>
<g >
<title>operator new (80,808,080 samples, 0.24%)</title><rect x="1124.7" y="325" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1127.72" y="335.5" ></text>
</g>
<g >
<title>sim::Process::~Process (101,010,100 samples, 0.30%)</title><rect x="235.8" y="453" width="3.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="238.80" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (131,313,130 samples, 0.39%)</title><rect x="1134.0" y="357" width="4.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1137.00" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="349.6" y="357" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="352.59" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="1124.7" y="293" width="2.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1127.72" y="303.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="336.4" y="389" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="339.39" y="399.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="568.3" y="389" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="571.25" y="399.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="165" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.43" y="175.5" ></text>
</g>
<g >
<title>Logger::warn (2,202,020,180 samples, 6.59%)</title><rect x="614.3" y="405" width="77.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="617.27" y="415.5" >Logger::..</text>
</g>
<g >
<title>[libc.so.6] (292,929,290 samples, 0.88%)</title><rect x="692.4" y="405" width="10.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="695.39" y="415.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="229" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.43" y="239.5" ></text>
</g>
<g >
<title>sim::TcpFlow::create_ack (20,202,020 samples, 0.06%)</title><rect x="580.7" y="389" width="0.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="583.74" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="62.8" y="389" width="0.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="65.79" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (90,909,090 samples, 0.27%)</title><rect x="1124.4" y="341" width="3.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1127.37" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="1141.1" y="357" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1144.13" y="367.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="66.4" y="421" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="69.36" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1183.9" y="373" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1186.94" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (202,020,200 samples, 0.60%)</title><rect x="55.7" y="389" width="7.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="58.66" y="399.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (424,242,420 samples, 1.27%)</title><rect x="1127.9" y="405" width="15.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1130.93" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::weak_ptr&lt;sim::ILink&gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1161.1" y="421" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1164.11" y="431.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="1156.8" y="437" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1159.83" y="447.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="330.3" y="325" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="333.33" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1165.4" y="389" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1168.39" y="399.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1165.4" y="421" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1168.39" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1156.5" y="437" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1159.47" y="447.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="389" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1192.29" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.0" y="325" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.04" y="335.5" ></text>
</g>
<g >
<title>sim::Event::Event (232,323,230 samples, 0.70%)</title><rect x="384.5" y="421" width="8.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="387.55" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="870.7" y="341" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="873.74" y="351.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (70,707,070 samples, 0.21%)</title><rect x="883.2" y="389" width="2.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="886.23" y="399.5" ></text>
</g>
<g >
<title>malloc (727,272,720 samples, 2.18%)</title><rect x="847.6" y="373" width="25.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="850.56" y="383.5" >m..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="20.7" y="405" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.70" y="415.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (10,101,010 samples, 0.03%)</title><rect x="336.7" y="389" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="339.75" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="330.3" y="309" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="333.33" y="319.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.12%)</title><rect x="19.3" y="437" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="22.27" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1180.7" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.73" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (30,303,030 samples, 0.09%)</title><rect x="1185.0" y="437" width="1.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1188.01" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (20,202,020 samples, 0.06%)</title><rect x="1017.4" y="405" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1020.35" y="415.5" ></text>
</g>
<g >
<title>std::locale::locale (10,101,010 samples, 0.03%)</title><rect x="1133.3" y="389" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1136.28" y="399.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (10,101,010 samples, 0.03%)</title><rect x="576.5" y="341" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="579.46" y="351.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (25,919,191,660 samples, 77.57%)</title><rect x="239.4" y="453" width="915.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="242.37" y="463.5" >sim::Scheduler::tick</text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (10,101,010 samples, 0.03%)</title><rect x="331.8" y="373" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="334.75" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_cwnd (20,202,020 samples, 0.06%)</title><rect x="580.0" y="389" width="0.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="583.02" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1131.9" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1134.86" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="63.1" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.15" y="175.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (20,202,020 samples, 0.06%)</title><rect x="573.2" y="325" width="0.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="576.25" y="335.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="580.4" y="373" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="583.38" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="578.2" y="325" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="581.24" y="335.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="213" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.43" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="437" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>sim::Host::Host (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="357" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1192.64" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="19.6" y="389" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.63" y="399.5" ></text>
</g>
<g >
<title>sim::Host::~Host (111,111,110 samples, 0.33%)</title><rect x="11.1" y="405" width="3.9" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="14.07" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="421" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="63.1" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.15" y="239.5" ></text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks (10,101,010 samples, 0.03%)</title><rect x="336.7" y="373" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="339.75" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1187.5" y="133" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1190.50" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (484,848,480 samples, 1.45%)</title><rect x="816.5" y="389" width="17.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="819.52" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.6" y="213" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.65" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.6" y="261" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.65" y="271.5" ></text>
</g>
<g >
<title>nons (33,414,141,080 samples, 100.00%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >nons</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.29" y="255.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_insert_unique&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; const&amp;&gt; (30,303,030 samples, 0.09%)</title><rect x="1183.6" y="421" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1186.58" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="877.5" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="880.52" y="255.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="53.9" y="389" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="56.88" y="399.5" ></text>
</g>
<g >
<title>std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;::size_type std::__detail::__erase_nodes_if&lt;std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;, std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;, sim::RoutingModule::correctify_outlinks (20,202,020 samples, 0.06%)</title><rect x="1173.2" y="405" width="0.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1176.23" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.29" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="485" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (10,101,010 samples, 0.03%)</title><rect x="581.5" y="389" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="584.45" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="63.1" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.15" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1122.9" y="357" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1125.94" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="15.0" y="357" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.99" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (50,505,050 samples, 0.15%)</title><rect x="67.8" y="389" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="70.79" y="399.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanNextToken (20,202,020 samples, 0.06%)</title><rect x="1187.9" y="245" width="0.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1190.86" y="255.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (80,808,080 samples, 0.24%)</title><rect x="1186.4" y="309" width="2.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.43" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1172.2" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1175.16" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="52.8" y="293" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="55.81" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="63.1" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.15" y="287.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_packet_now (30,303,030 samples, 0.09%)</title><rect x="1150.4" y="405" width="1.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1153.41" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1164.7" y="325" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1167.67" y="335.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_packets (101,010,100 samples, 0.30%)</title><rect x="571.5" y="405" width="3.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="574.46" y="415.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (121,212,120 samples, 0.36%)</title><rect x="337.8" y="373" width="4.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="340.82" y="383.5" ></text>
</g>
<g >
<title>memcpy@plt (10,101,010 samples, 0.03%)</title><rect x="346.7" y="421" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="349.74" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="330.0" y="325" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="332.97" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="877.5" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="880.52" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.29" y="223.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;, std::weak_ptr&lt;sim::IProcessingDevice&gt;&amp;&gt; (2,717,171,690 samples, 8.13%)</title><rect x="1021.6" y="421" width="96.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1024.63" y="431.5" >void sim::S..</text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="32.8" y="405" width="0.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="35.83" y="415.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (10,101,010 samples, 0.03%)</title><rect x="350.3" y="389" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="353.30" y="399.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="213" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.93" y="223.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (40,404,040 samples, 0.12%)</title><rect x="933.2" y="405" width="1.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="936.17" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="63.1" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.15" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="883.9" y="325" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="886.94" y="335.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (262,626,260 samples, 0.79%)</title><rect x="54.2" y="421" width="9.3" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="57.23" y="431.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (20,202,020 samples, 0.06%)</title><rect x="1129.4" y="373" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1132.36" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1017.0" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1020.00" y="399.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (70,707,070 samples, 0.21%)</title><rect x="1130.8" y="389" width="2.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1133.79" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1017.0" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1020.00" y="383.5" ></text>
</g>
<g >
<title>cfree (414,141,410 samples, 1.24%)</title><rect x="306.4" y="437" width="14.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="309.43" y="447.5" ></text>
</g>
<g >
<title>brk (10,101,010 samples, 0.03%)</title><rect x="1187.5" y="165" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1190.50" y="175.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (30,303,030 samples, 0.09%)</title><rect x="1150.4" y="373" width="1.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1153.41" y="383.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (10,101,010 samples, 0.03%)</title><rect x="345.0" y="405" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="347.95" y="415.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (90,909,090 samples, 0.27%)</title><rect x="568.3" y="405" width="3.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="571.25" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.5" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.47" y="319.5" ></text>
</g>
<g >
<title>cfree (292,929,290 samples, 0.88%)</title><rect x="702.7" y="405" width="10.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="705.73" y="415.5" ></text>
</g>
<g >
<title>sim::Event::Event (292,929,290 samples, 0.88%)</title><rect x="1107.2" y="405" width="10.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1110.24" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1187.5" y="101" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1190.50" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1150.4" y="277" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1153.41" y="287.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (40,404,040 samples, 0.12%)</title><rect x="331.8" y="389" width="1.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="334.75" y="399.5" ></text>
</g>
<g >
<title>all (33,414,141,080 samples, 100%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="63.1" y="133" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.15" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="885.0" y="277" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="888.01" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.6" y="229" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.65" y="239.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::export_to_files (242,424,240 samples, 0.73%)</title><rect x="65.3" y="453" width="8.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="68.29" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="405" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1017.0" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1020.00" y="335.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (10,101,010 samples, 0.03%)</title><rect x="10.7" y="405" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.71" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1187.5" y="37" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1190.50" y="47.5" ></text>
</g>
<g >
<title>Logger::get_instance (50,505,050 samples, 0.15%)</title><rect x="611.4" y="405" width="1.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="614.41" y="415.5" ></text>
</g>
<g >
<title>sim::write_to_csv (1,222,222,210 samples, 3.66%)</title><rect x="21.4" y="437" width="43.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="24.41" y="447.5" >sim:..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.29" y="287.5" ></text>
</g>
<g >
<title>sim::Link::get_to (10,101,010 samples, 0.03%)</title><rect x="1170.4" y="421" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1173.38" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="877.5" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="880.52" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1187.1" y="197" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1190.15" y="207.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,101,010 samples, 0.03%)</title><rect x="326.0" y="405" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="329.05" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.36" y="303.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (40,404,040 samples, 0.12%)</title><rect x="348.9" y="389" width="1.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="351.88" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.5" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.47" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="36.8" y="85" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.75" y="95.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="1163.2" y="341" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1166.25" y="351.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_outlinks (90,909,090 samples, 0.27%)</title><rect x="1170.7" y="421" width="3.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1173.74" y="431.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="373" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1192.29" y="383.5" ></text>
</g>
<g >
<title>cfree (303,030,300 samples, 0.91%)</title><rect x="833.6" y="389" width="10.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="836.65" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="877.5" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="880.52" y="303.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (10,101,010 samples, 0.03%)</title><rect x="69.6" y="405" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="72.57" y="415.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1188.2" y="213" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.22" y="223.5" ></text>
</g>
<g >
<title>operator delete (40,404,040 samples, 0.12%)</title><rect x="381.0" y="421" width="1.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="383.98" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::export_to_file (232,323,230 samples, 0.70%)</title><rect x="65.6" y="437" width="8.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="68.65" y="447.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="1183.9" y="389" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1186.94" y="399.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (60,606,060 samples, 0.18%)</title><rect x="1140.8" y="373" width="2.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1143.77" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="324.6" y="405" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="327.62" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="13.2" y="373" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.21" y="383.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (20,202,020 samples, 0.06%)</title><rect x="65.6" y="421" width="0.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="68.65" y="431.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (30,303,030 samples, 0.09%)</title><rect x="1144.7" y="357" width="1.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1147.70" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1180.7" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.73" y="303.5" ></text>
</g>
<g >
<title>operator new (60,606,060 samples, 0.18%)</title><rect x="1167.9" y="421" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1170.88" y="431.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (10,101,010 samples, 0.03%)</title><rect x="1146.1" y="405" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1149.12" y="415.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="357" width="3.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.08" y="367.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (40,404,040 samples, 0.12%)</title><rect x="592.2" y="421" width="1.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="595.15" y="431.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (121,212,120 samples, 0.36%)</title><rect x="69.6" y="421" width="4.3" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="72.57" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="573.2" y="245" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="576.25" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="882.2" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="885.16" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1017.0" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1020.00" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.2" y="405" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.20" y="415.5" ></text>
</g>
<g >
<title>sim::bfs[abi:cxx11] (535,353,530 samples, 1.60%)</title><rect x="1165.7" y="437" width="18.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1168.74" y="447.5" ></text>
</g>
<g >
<title>sim::Link::get_to_ingress_queue_size (80,808,080 samples, 0.24%)</title><rect x="589.3" y="421" width="2.9" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="592.30" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (10,101,010 samples, 0.03%)</title><rect x="1165.0" y="405" width="0.4" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1168.03" y="415.5" ></text>
</g>
<g >
<title>vsnprintf (50,505,050 samples, 0.15%)</title><rect x="67.8" y="373" width="1.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="70.79" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1180.7" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.73" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1137.6" y="277" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1140.56" y="287.5" ></text>
</g>
<g >
<title>__default_morecore (10,101,010 samples, 0.03%)</title><rect x="1187.5" y="181" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1190.50" y="191.5" ></text>
</g>
<g >
<title>cfree (70,707,070 samples, 0.21%)</title><rect x="15.0" y="389" width="2.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="17.99" y="399.5" ></text>
</g>
<g >
<title>operator delete (40,404,040 samples, 0.12%)</title><rect x="76.0" y="453" width="1.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="78.99" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (202,020,200 samples, 0.60%)</title><rect x="10.7" y="469" width="7.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.71" y="479.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.06%)</title><rect x="1187.9" y="229" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.86" y="239.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (151,515,150 samples, 0.45%)</title><rect x="1133.6" y="389" width="5.4" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1136.64" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="340.0" y="293" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="342.96" y="303.5" ></text>
</g>
<g >
<title>vsnprintf (131,313,130 samples, 0.39%)</title><rect x="1134.0" y="341" width="4.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1137.00" y="351.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleDocument (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="405" width="3.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1189.08" y="415.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1188.2" y="165" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.22" y="175.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (90,909,090 samples, 0.27%)</title><rect x="571.8" y="373" width="3.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="574.82" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="580.7" y="373" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="583.74" y="383.5" ></text>
</g>
<g >
<title>malloc (80,808,080 samples, 0.24%)</title><rect x="1124.7" y="309" width="2.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1127.72" y="319.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (252,525,250 samples, 0.76%)</title><rect x="54.6" y="405" width="8.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="57.59" y="415.5" ></text>
</g>
<g >
<title>sim::Process::operator (70,707,070 samples, 0.21%)</title><rect x="233.3" y="453" width="2.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="236.30" y="463.5" ></text>
</g>
<g >
<title>Logger::get_instance (90,909,090 samples, 0.27%)</title><rect x="732.3" y="389" width="3.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="735.34" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="877.5" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="880.52" y="159.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (90,909,090 samples, 0.27%)</title><rect x="875.7" y="389" width="3.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="878.74" y="399.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="331.4" y="389" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="334.40" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.1" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.06" y="271.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="1180.7" y="389" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1183.73" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="330.7" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="333.68" y="223.5" ></text>
</g>
<g >
<title>_start (33,393,939,060 samples, 99.94%)</title><rect x="10.7" y="533" width="1179.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.71" y="543.5" >_start</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="20.7" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.70" y="383.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (90,909,090 samples, 0.27%)</title><rect x="333.2" y="389" width="3.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="336.18" y="399.5" ></text>
</g>
<g >
<title>malloc (70,707,070 samples, 0.21%)</title><rect x="1162.5" y="373" width="2.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1165.53" y="383.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="1128.3" y="389" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1131.29" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.1" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.06" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="327.5" y="373" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="330.47" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.27%)</title><rect x="70.3" y="357" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="73.28" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (202,020,200 samples, 0.60%)</title><rect x="10.7" y="437" width="7.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.71" y="447.5" ></text>
</g>
<g >
<title>sim::Link::~Link (70,707,070 samples, 0.21%)</title><rect x="15.0" y="405" width="2.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="17.99" y="415.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1128.6" y="389" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1131.65" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1180.7" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.73" y="207.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (40,404,040 samples, 0.12%)</title><rect x="1187.9" y="261" width="1.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1190.86" y="271.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (151,515,150 samples, 0.45%)</title><rect x="1133.6" y="373" width="5.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1136.64" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="67.4" y="389" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="70.43" y="399.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (20,202,020 samples, 0.06%)</title><rect x="572.2" y="341" width="0.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="575.18" y="351.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (90,909,090 samples, 0.27%)</title><rect x="586.1" y="421" width="3.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="589.09" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.5" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.47" y="335.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="713.1" y="405" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="716.08" y="415.5" ></text>
</g>
<g >
<title>__libc_start_main (33,393,939,060 samples, 99.94%)</title><rect x="10.7" y="517" width="1179.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.71" y="527.5" >__libc_start_main</text>
</g>
<g >
<title>sim::Event::operator&gt; (20,202,020 samples, 0.06%)</title><rect x="347.1" y="421" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="350.09" y="431.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::shared_ptr&lt;sim::IHost&gt;  (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="405" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1192.64" y="415.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.15%)</title><rect x="1181.8" y="389" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1184.80" y="399.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.15%)</title><rect x="33.9" y="405" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="36.90" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (242,424,240 samples, 0.73%)</title><rect x="45.0" y="341" width="8.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="47.96" y="351.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="1176.4" y="389" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1179.44" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1180.7" y="149" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.73" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1180.7" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.73" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="1140.4" y="373" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1143.42" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1187.5" y="53" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1190.50" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1169.0" y="357" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.95" y="367.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (30,303,030 samples, 0.09%)</title><rect x="335.3" y="373" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="338.32" y="383.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (444,444,440 samples, 1.33%)</title><rect x="38.5" y="421" width="15.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="41.54" y="431.5" ></text>
</g>
<g >
<title>operator new (70,707,070 samples, 0.21%)</title><rect x="1162.5" y="389" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1165.53" y="399.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (4,848,484,800 samples, 14.51%)</title><rect x="392.8" y="421" width="171.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="395.75" y="431.5" >sim::Event::operator&gt;</text>
</g>
<g >
<title>operator new (60,606,060 samples, 0.18%)</title><rect x="382.4" y="421" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="385.41" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="877.5" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="880.52" y="319.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="574.3" y="325" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="577.32" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.0" y="277" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.04" y="287.5" ></text>
</g>
<g >
<title>vsnprintf (60,606,060 samples, 0.18%)</title><rect x="569.3" y="341" width="2.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="572.32" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.29" y="159.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (40,404,040 samples, 0.12%)</title><rect x="578.2" y="373" width="1.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="581.24" y="383.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (111,111,110 samples, 0.33%)</title><rect x="1123.7" y="357" width="3.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1126.65" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.30%)</title><rect x="337.8" y="325" width="3.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="340.82" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (33,393,939,060 samples, 99.94%)</title><rect x="10.7" y="501" width="1179.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.71" y="511.5" >[libc.so.6]</text>
</g>
<g >
<title>[libc.so.6] (313,131,310 samples, 0.94%)</title><rect x="42.8" y="357" width="11.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="45.82" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="17.1" y="341" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.13" y="351.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (20,202,020 samples, 0.06%)</title><rect x="577.2" y="357" width="0.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="580.17" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1180.7" y="181" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.73" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (40,404,040 samples, 0.12%)</title><rect x="1176.8" y="421" width="1.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1179.80" y="431.5" ></text>
</g>
<g >
<title>__uselocale (20,202,020 samples, 0.06%)</title><rect x="341.4" y="357" width="0.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="344.38" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="563.6" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="566.62" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="133" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.29" y="143.5" ></text>
</g>
<g >
<title>sim::Host::~Host (10,101,010 samples, 0.03%)</title><rect x="10.7" y="389" width="0.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="13.71" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.06%)</title><rect x="65.6" y="389" width="0.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="68.65" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.6" y="197" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.65" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="63.1" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.15" y="271.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.09%)</title><rect x="1171.5" y="405" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1174.45" y="415.5" ></text>
</g>
<g >
<title>sim::TcpFlow::update (191,919,190 samples, 0.57%)</title><rect x="575.0" y="405" width="6.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="578.03" y="415.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (111,111,110 samples, 0.33%)</title><rect x="1139.0" y="389" width="3.9" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1141.99" y="399.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (151,515,150 samples, 0.45%)</title><rect x="1122.2" y="389" width="5.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1125.22" y="399.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (70,707,070 samples, 0.21%)</title><rect x="876.5" y="357" width="2.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="879.45" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="692.0" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="695.03" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="35.7" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.68" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="35.7" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.68" y="335.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (20,202,020 samples, 0.06%)</title><rect x="65.6" y="405" width="0.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="68.65" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.6" y="149" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.65" y="159.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (30,303,030 samples, 0.09%)</title><rect x="1150.4" y="325" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1153.41" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="330.7" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="333.68" y="191.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (191,919,190 samples, 0.57%)</title><rect x="11.1" y="421" width="6.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="14.07" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.5" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.47" y="271.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1120.4" y="405" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1123.44" y="415.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (50,505,050 samples, 0.15%)</title><rect x="881.1" y="389" width="1.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="884.09" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="573.2" y="261" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="576.25" y="271.5" ></text>
</g>
<g >
<title>fclose (10,101,010 samples, 0.03%)</title><rect x="35.7" y="389" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="38.68" y="399.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::data[abi:cxx11] (20,202,020 samples, 0.06%)</title><rect x="20.7" y="437" width="0.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="23.70" y="447.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="567.9" y="357" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="570.90" y="367.5" ></text>
</g>
<g >
<title>fopen (40,404,040 samples, 0.12%)</title><rect x="36.0" y="389" width="1.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="39.04" y="399.5" ></text>
</g>
<g >
<title>sim::Host::send_packet (797,979,790 samples, 2.39%)</title><rect x="1119.7" y="421" width="28.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1122.73" y="431.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.64" y="255.5" ></text>
</g>
<g >
<title>_IO_file_open (40,404,040 samples, 0.12%)</title><rect x="36.0" y="357" width="1.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="39.04" y="367.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.15%)</title><rect x="1181.8" y="373" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1184.80" y="383.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (10,101,010 samples, 0.03%)</title><rect x="345.7" y="405" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="348.67" y="415.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (60,606,060 samples, 0.18%)</title><rect x="883.6" y="373" width="2.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="886.59" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1180.7" y="373" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1183.73" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (30,303,030 samples, 0.09%)</title><rect x="1132.2" y="357" width="1.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1135.21" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (2,343,434,320 samples, 7.01%)</title><rect x="934.6" y="405" width="82.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="937.59" y="415.5" >std::_Rb_..</text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1144.3" y="373" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1147.34" y="383.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (717,171,710 samples, 2.15%)</title><rect x="321.1" y="437" width="25.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="324.05" y="447.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.2" y="421" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.20" y="431.5" ></text>
</g>
<g >
<title>sim::HostParser::parse_default_host (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="373" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1192.64" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.0" y="245" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.04" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="570.4" y="309" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="573.39" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.6" y="117" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.65" y="127.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="339.2" y="309" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="342.24" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;unsigned int&gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="17.5" y="389" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="20.49" y="399.5" ></text>
</g>
<g >
<title>memchr@plt (10,101,010 samples, 0.03%)</title><rect x="883.2" y="373" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="886.23" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="692.0" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="695.03" y="287.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,101,010 samples, 0.03%)</title><rect x="723.8" y="405" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="726.78" y="415.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnMapStart (10,101,010 samples, 0.03%)</title><rect x="1186.1" y="309" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1189.08" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="692.0" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="695.03" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (111,111,110 samples, 0.33%)</title><rect x="1161.5" y="421" width="3.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1164.46" y="431.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10,101,010 samples, 0.03%)</title><rect x="1145.8" y="389" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1148.77" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="877.5" y="133" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="880.52" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1150.4" y="293" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1153.41" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="1136.1" y="293" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1139.14" y="303.5" ></text>
</g>
<g >
<title>vsnprintf (171,717,170 samples, 0.51%)</title><rect x="56.7" y="373" width="6.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="59.73" y="383.5" ></text>
</g>
<g >
<title>Logger::get_instance (30,303,030 samples, 0.09%)</title><rect x="379.9" y="421" width="1.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="382.91" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="357" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1192.29" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.36%)</title><rect x="1134.4" y="325" width="4.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1137.35" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.29" y="239.5" ></text>
</g>
<g >
<title>Logger::info (2,292,929,270 samples, 6.86%)</title><rect x="735.6" y="389" width="80.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="738.55" y="399.5" >Logger::i..</text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="570.4" y="293" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="573.39" y="303.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="1142.6" y="357" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1145.56" y="367.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (10,101,010 samples, 0.03%)</title><rect x="873.2" y="373" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="876.24" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1187.5" y="69" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1190.50" y="79.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="1180.7" y="405" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1183.73" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (20,202,020 samples, 0.06%)</title><rect x="32.5" y="421" width="0.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="35.47" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (80,808,080 samples, 0.24%)</title><rect x="1162.2" y="405" width="2.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1165.18" y="415.5" ></text>
</g>
<g >
<title>open64 (40,404,040 samples, 0.12%)</title><rect x="36.0" y="341" width="1.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="39.04" y="351.5" ></text>
</g>
<g >
<title>strlen@plt (10,101,010 samples, 0.03%)</title><rect x="53.5" y="341" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="56.52" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.1" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.06" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (40,404,040 samples, 0.12%)</title><rect x="874.0" y="373" width="1.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="876.95" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="1181.8" y="357" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1184.80" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.0" y="181" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.04" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1187.5" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1190.50" y="159.5" ></text>
</g>
<g >
<title>_IO_file_fopen (40,404,040 samples, 0.12%)</title><rect x="36.0" y="373" width="1.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="39.04" y="383.5" ></text>
</g>
<g >
<title>vsnprintf (30,303,030 samples, 0.09%)</title><rect x="1150.4" y="309" width="1.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1153.41" y="319.5" ></text>
</g>
<g >
<title>std::locale::locale (10,101,010 samples, 0.03%)</title><rect x="576.8" y="357" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="579.81" y="367.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="373" width="3.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.08" y="383.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="309" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1192.64" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 0.67%)</title><rect x="45.7" y="325" width="7.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="48.67" y="335.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (10,101,010 samples, 0.03%)</title><rect x="35.7" y="421" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="38.68" y="431.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (141,414,140 samples, 0.42%)</title><rect x="337.1" y="389" width="5.0" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="340.10" y="399.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.12%)</title><rect x="19.3" y="421" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="22.27" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1017.0" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1020.00" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.1" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.06" y="287.5" ></text>
</g>
<g >
<title>brk (10,101,010 samples, 0.03%)</title><rect x="330.7" y="277" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="333.68" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (151,515,150 samples, 0.45%)</title><rect x="1178.2" y="421" width="5.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1181.23" y="431.5" ></text>
</g>
<g >
<title>YAML::detail::memory::create_node (30,303,030 samples, 0.09%)</title><rect x="1186.8" y="245" width="1.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1189.79" y="255.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (101,010,100 samples, 0.30%)</title><rect x="337.8" y="357" width="3.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="340.82" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1161.8" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.82" y="335.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (242,424,240 samples, 0.73%)</title><rect x="683.5" y="389" width="8.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="686.47" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="883.9" y="293" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="886.94" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="72.4" y="309" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="75.42" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (151,515,150 samples, 0.45%)</title><rect x="707.7" y="389" width="5.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="710.73" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (40,404,040 samples, 0.12%)</title><rect x="329.6" y="357" width="1.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="332.61" y="367.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="1161.5" y="389" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1164.46" y="399.5" ></text>
</g>
<g >
<title>vsnprintf (323,232,320 samples, 0.97%)</title><rect x="42.5" y="373" width="11.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="45.46" y="383.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (70,707,070 samples, 0.21%)</title><rect x="328.5" y="373" width="2.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="331.54" y="383.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="844.3" y="389" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="847.35" y="399.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (70,707,070 samples, 0.21%)</title><rect x="1186.8" y="293" width="2.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.79" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.0" y="261" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.04" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="20.7" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.70" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="18.6" y="437" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.56" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="1167.9" y="389" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1170.88" y="399.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (30,303,030 samples, 0.09%)</title><rect x="1150.4" y="357" width="1.1" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1153.41" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="63.1" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.15" y="159.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (101,010,100 samples, 0.30%)</title><rect x="327.5" y="389" width="3.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="330.47" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="18.9" y="421" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.92" y="431.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (50,505,050 samples, 0.15%)</title><rect x="873.6" y="389" width="1.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="876.60" y="399.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (30,303,030 samples, 0.09%)</title><rect x="567.2" y="405" width="1.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="570.18" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.03%)</title><rect x="336.0" y="357" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="339.03" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.0" y="229" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.04" y="239.5" ></text>
</g>
<g >
<title>__close_nocancel (10,101,010 samples, 0.03%)</title><rect x="35.7" y="373" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="38.68" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (202,020,200 samples, 0.60%)</title><rect x="10.7" y="485" width="7.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.71" y="495.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="330.3" y="341" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="333.33" y="351.5" ></text>
</g>
<g >
<title>cfree (30,303,030 samples, 0.09%)</title><rect x="74.9" y="453" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="77.92" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="62.4" y="293" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="65.44" y="303.5" ></text>
</g>
<g >
<title>YAML::Parser::HandleNextDocument (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="421" width="3.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1189.08" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1165.4" y="357" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1168.39" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.0" y="117" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.04" y="127.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (50,505,050 samples, 0.15%)</title><rect x="1129.0" y="389" width="1.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1132.00" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1144.3" y="341" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1147.34" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (10,101,010 samples, 0.03%)</title><rect x="1132.9" y="341" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1135.93" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.29" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="67.8" y="341" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="70.79" y="351.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="882.9" y="389" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="885.87" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.29" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="389" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.03%)</title><rect x="880.7" y="389" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="883.73" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1180.7" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.73" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="70.6" y="341" width="2.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="73.64" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="563.6" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="566.62" y="351.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="1176.1" y="405" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1179.09" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="563.6" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="566.62" y="335.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="325.7" y="389" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="328.69" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="35.7" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.68" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.6" y="277" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.65" y="287.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (131,313,130 samples, 0.39%)</title><rect x="1122.9" y="373" width="4.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1125.94" y="383.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="325" width="3.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.08" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1169.3" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.31" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1187.5" y="117" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1190.50" y="127.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="577.9" y="357" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="580.88" y="367.5" ></text>
</g>
<g >
<title>sim::BaseHasher::get_hash (40,404,040 samples, 0.12%)</title><rect x="1144.3" y="389" width="1.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1147.34" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="469" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.29" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.6" y="309" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.65" y="319.5" ></text>
</g>
<g >
<title>vsnprintf (101,010,100 samples, 0.30%)</title><rect x="337.8" y="341" width="3.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="340.82" y="351.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::close (10,101,010 samples, 0.03%)</title><rect x="35.7" y="405" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="38.68" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1161.5" y="373" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.46" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.1" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.06" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.5" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.47" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (20,202,020 samples, 0.06%)</title><rect x="343.9" y="373" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="346.88" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="501" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (10,101,010 samples, 0.03%)</title><rect x="332.5" y="373" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="335.47" y="383.5" ></text>
</g>
<g >
<title>writev (20,202,020 samples, 0.06%)</title><rect x="62.8" y="373" width="0.7" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="65.79" y="383.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (20,202,020 samples, 0.06%)</title><rect x="573.2" y="341" width="0.8" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="576.25" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (161,616,160 samples, 0.48%)</title><rect x="57.1" y="357" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="60.09" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::get_records (10,101,010 samples, 0.03%)</title><rect x="32.1" y="421" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="35.12" y="431.5" ></text>
</g>
<g >
<title>Logger::info (10,101,010 samples, 0.03%)</title><rect x="1120.1" y="405" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1123.08" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="877.5" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="880.52" y="287.5" ></text>
</g>
<g >
<title>malloc (202,020,200 samples, 0.60%)</title><rect x="716.6" y="389" width="7.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="719.64" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="877.5" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="880.52" y="175.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (80,808,080 samples, 0.24%)</title><rect x="66.7" y="421" width="2.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="69.72" y="431.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (30,303,030 samples, 0.09%)</title><rect x="1150.4" y="389" width="1.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1153.41" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (10,101,010 samples, 0.03%)</title><rect x="567.5" y="373" width="0.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="570.54" y="383.5" ></text>
</g>
<g >
<title>malloc (181,818,180 samples, 0.54%)</title><rect x="1100.8" y="389" width="6.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1103.82" y="399.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (80,808,080 samples, 0.24%)</title><rect x="342.1" y="389" width="2.9" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="345.10" y="399.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.12%)</title><rect x="578.2" y="341" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="581.24" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1180.7" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.73" y="335.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.03%)</title><rect x="1138.6" y="357" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1141.63" y="367.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.03%)</title><rect x="568.6" y="389" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="571.61" y="399.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (40,404,040 samples, 0.12%)</title><rect x="1187.9" y="277" width="1.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1190.86" y="287.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (60,606,060 samples, 0.18%)</title><rect x="576.1" y="389" width="2.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="579.10" y="399.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (60,606,060 samples, 0.18%)</title><rect x="348.5" y="405" width="2.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="351.52" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="880.4" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="883.37" y="383.5" ></text>
</g>
<g >
<title>Logger::info (30,303,030 samples, 0.09%)</title><rect x="613.2" y="405" width="1.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="616.20" y="415.5" ></text>
</g>
<g >
<title>cfree (50,505,050 samples, 0.15%)</title><rect x="13.2" y="389" width="1.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="16.21" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="69.2" y="293" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="72.21" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.36" y="319.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (60,606,060 samples, 0.18%)</title><rect x="67.4" y="405" width="2.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="70.43" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="117" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.29" y="127.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (20,202,020 samples, 0.06%)</title><rect x="65.6" y="373" width="0.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="68.65" y="383.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (10,101,010 samples, 0.03%)</title><rect x="73.9" y="469" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="76.85" y="479.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (343,434,340 samples, 1.03%)</title><rect x="41.7" y="389" width="12.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="44.75" y="399.5" ></text>
</g>
<g >
<title>std::filesystem::status (10,101,010 samples, 0.03%)</title><rect x="37.5" y="421" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="40.47" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="66.0" y="101" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.00" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="692.0" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="695.03" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="877.9" y="277" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="880.88" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.6" y="293" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.65" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="453" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="1162.5" y="357" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1165.53" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_initialize_map (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="341" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1192.64" y="351.5" ></text>
</g>
<g >
<title>__munmap (10,101,010 samples, 0.03%)</title><rect x="877.5" y="325" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="880.52" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="34.6" y="357" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="37.61" y="367.5" ></text>
</g>
<g >
<title>sim::TcpFlow::~TcpFlow (10,101,010 samples, 0.03%)</title><rect x="17.5" y="405" width="0.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="20.49" y="415.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="17.5" y="373" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="20.49" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="569.3" y="325" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="572.32" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (20,202,020 samples, 0.06%)</title><rect x="1172.5" y="405" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1175.52" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::export_metrics_to_files (1,585,858,570 samples, 4.75%)</title><rect x="17.8" y="469" width="56.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="20.85" y="479.5" >sim::..</text>
</g>
<g >
<title>std::_Hash_bytes (10,101,010 samples, 0.03%)</title><rect x="1160.7" y="421" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1163.75" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.29" y="271.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (414,141,410 samples, 1.24%)</title><rect x="39.6" y="405" width="14.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="42.61" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.0" y="165" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.04" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="877.9" y="293" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="880.88" y="303.5" ></text>
</g>
<g >
<title>YAML::LoadFile (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="453" width="3.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1189.08" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="63.1" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.15" y="303.5" ></text>
</g>
<g >
<title>sim::Link::get_max_to_ingress_queue_size (111,111,110 samples, 0.33%)</title><rect x="582.2" y="421" width="3.9" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="585.16" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="1181.8" y="341" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1184.80" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="20.7" y="389" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.70" y="399.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (101,010,100 samples, 0.30%)</title><rect x="70.3" y="405" width="3.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="73.28" y="415.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.15%)</title><rect x="33.9" y="389" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="36.90" y="399.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="569.0" y="389" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="571.97" y="399.5" ></text>
</g>
<g >
<title>std::ostream::put (30,303,030 samples, 0.09%)</title><rect x="63.5" y="421" width="1.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="66.51" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="35.7" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.68" y="351.5" ></text>
</g>
<g >
<title>vsnprintf (50,505,050 samples, 0.15%)</title><rect x="883.9" y="341" width="1.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="886.94" y="351.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (30,303,030 samples, 0.09%)</title><rect x="1150.4" y="341" width="1.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1153.41" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.29" y="207.5" ></text>
</g>
<g >
<title>virtual thunk to sim::RoutingModule::get_id[abi:cxx11] (10,101,010 samples, 0.03%)</title><rect x="581.8" y="405" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="584.81" y="415.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::export_to_files (1,343,434,330 samples, 4.02%)</title><rect x="17.8" y="453" width="47.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="20.85" y="463.5" >sim:..</text>
</g>
<g >
<title>void sim::YamlParser::process_identifiables&lt;sim::IFlow&gt; (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="421" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1192.29" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="61.4" y="309" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="64.37" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (30,303,030 samples, 0.09%)</title><rect x="1020.6" y="421" width="1.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1023.56" y="431.5" ></text>
</g>
<g >
<title>operator new (202,020,200 samples, 0.60%)</title><rect x="1100.1" y="405" width="7.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1103.11" y="415.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="1187.1" y="213" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1190.15" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="563.6" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="566.62" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.1" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.06" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.6" y="181" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.65" y="191.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::operator (131,313,130 samples, 0.39%)</title><rect x="346.4" y="437" width="4.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="349.38" y="447.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="344.6" y="373" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="347.59" y="383.5" ></text>
</g>
<g >
<title>fstatat64 (10,101,010 samples, 0.03%)</title><rect x="37.5" y="405" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="40.47" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="563.6" y="405" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="566.62" y="415.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (10,101,010 samples, 0.03%)</title><rect x="576.5" y="357" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="579.46" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="567.2" y="389" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="570.18" y="399.5" ></text>
</g>
<g >
<title>std::locale::locale (10,101,010 samples, 0.03%)</title><rect x="1130.4" y="373" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1133.43" y="383.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (4,282,828,240 samples, 12.82%)</title><rect x="724.1" y="405" width="151.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="727.14" y="415.5" >sim::Link::get_packet</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="18.9" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.92" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="14.3" y="357" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.28" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1133.6" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1136.64" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="573.2" y="277" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="576.25" y="287.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="1187.1" y="229" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1190.15" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1165.4" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1168.39" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1169.3" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.31" y="303.5" ></text>
</g>
<g >
<title>operator new (787,878,780 samples, 2.36%)</title><rect x="845.4" y="389" width="27.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="848.42" y="399.5" >o..</text>
</g>
<g >
<title>std::locale::~locale (10,101,010 samples, 0.03%)</title><rect x="572.9" y="341" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="575.89" y="351.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.03%)</title><rect x="332.1" y="373" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="335.11" y="383.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (40,404,040 samples, 0.12%)</title><rect x="1019.1" y="421" width="1.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1022.14" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="68.9" y="309" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="71.86" y="319.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (393,939,390 samples, 1.18%)</title><rect x="331.0" y="405" width="14.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="334.04" y="415.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (191,919,190 samples, 0.57%)</title><rect x="1120.8" y="405" width="6.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1123.80" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="692.0" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="695.03" y="367.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="245" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1189.43" y="255.5" ></text>
</g>
<g >
<title>vsnprintf (20,202,020 samples, 0.06%)</title><rect x="573.2" y="293" width="0.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="576.25" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="883.9" y="309" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="886.94" y="319.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (10,101,010 samples, 0.03%)</title><rect x="873.2" y="389" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="876.24" y="399.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Switch::process (90,909,090 samples, 0.27%)</title><rect x="1151.5" y="437" width="3.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1154.48" y="447.5" ></text>
</g>
<g >
<title>sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int&gt;::set_flag (10,101,010 samples, 0.03%)</title><rect x="581.1" y="373" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="584.09" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="877.5" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="880.52" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="36.8" y="101" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.75" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.6" y="341" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.65" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="330.7" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="333.68" y="271.5" ></text>
</g>
<g >
<title>sim::RoutingModule::update_routing_table (202,020,200 samples, 0.60%)</title><rect x="1158.3" y="437" width="7.1" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1161.25" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (50,505,050 samples, 0.15%)</title><rect x="883.9" y="357" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="886.94" y="367.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="882.5" y="373" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="885.52" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="567.5" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="570.54" y="367.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (4,262,626,220 samples, 12.76%)</title><rect x="82.8" y="453" width="150.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="85.77" y="463.5" >sim::Event::operator&gt;</text>
</g>
<g >
<title>YAML::detail::memory::create_node (10,101,010 samples, 0.03%)</title><rect x="1186.1" y="277" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1189.08" y="287.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.12%)</title><rect x="578.2" y="357" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="581.24" y="367.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (10,101,010 samples, 0.03%)</title><rect x="567.9" y="373" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="570.90" y="383.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="1183.9" y="405" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1186.94" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.0" y="197" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.04" y="207.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (70,707,070 samples, 0.21%)</title><rect x="564.0" y="421" width="2.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="566.97" y="431.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="575.4" y="389" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="578.39" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="62.8" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="65.79" y="351.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (60,606,060 samples, 0.18%)</title><rect x="576.1" y="373" width="2.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="579.10" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.6" y="245" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.65" y="255.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1157.5" y="437" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1160.54" y="447.5" ></text>
</g>
<g >
<title>sim::Link::get_from (10,101,010 samples, 0.03%)</title><rect x="1170.0" y="421" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1173.02" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.0" y="213" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.04" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="692.0" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="695.03" y="303.5" ></text>
</g>
<g >
<title>write (20,202,020 samples, 0.06%)</title><rect x="65.6" y="357" width="0.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="68.65" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.0" y="149" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.04" y="159.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_RTT (50,505,050 samples, 0.15%)</title><rect x="578.2" y="389" width="1.8" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="581.24" y="399.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="337.5" y="373" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="340.46" y="383.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="576.1" y="357" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="579.10" y="367.5" ></text>
</g>
<g >
<title>sim::HostParser::parse_i_host (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="389" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1192.64" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="70.6" y="325" width="2.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="73.64" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="293" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1192.64" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="1125.1" y="277" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1128.08" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="533" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="10.7" y="421" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.71" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1161.8" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.82" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1180.7" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.73" y="287.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.09%)</title><rect x="877.9" y="325" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="880.88" y="335.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (101,010,100 samples, 0.30%)</title><rect x="875.4" y="405" width="3.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="878.38" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (181,818,180 samples, 0.54%)</title><rect x="837.9" y="373" width="6.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="840.93" y="383.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1120.4" y="389" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1123.44" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="15.0" y="373" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.99" y="383.5" ></text>
</g>
<g >
<title>sim::Simulator::recalculate_paths (888,888,880 samples, 2.66%)</title><rect x="1154.7" y="453" width="31.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1157.69" y="463.5" >si..</text>
</g>
</g>
</svg>
