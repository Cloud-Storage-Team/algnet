<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="678.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="661" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="661" > </text>
<g id="frames">
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="30.2" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="33.17" y="271.5" ></text>
</g>
<g >
<title>brk (10,101,010 samples, 0.05%)</title><rect x="103.3" y="437" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="106.29" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.21%)</title><rect x="57.9" y="325" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.91" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="533" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>operator new (202,020,200 samples, 1.07%)</title><rect x="1054.5" y="469" width="12.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1057.48" y="479.5" ></text>
</g>
<g >
<title>YAML::LoadFile (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="517" width="5.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1186.07" y="527.5" ></text>
</g>
<g >
<title>_IO_file_fopen (20,202,020 samples, 0.11%)</title><rect x="107.7" y="437" width="1.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="110.70" y="447.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (20,202,020 samples, 0.11%)</title><rect x="1120.7" y="437" width="1.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1123.66" y="447.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1184.3" y="261" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1187.33" y="271.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="437" width="5.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.07" y="447.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (40,404,040 samples, 0.21%)</title><rect x="57.9" y="485" width="2.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="60.91" y="495.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1182.4" y="485" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1185.44" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1142.1" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1145.09" y="399.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (10,101,010 samples, 0.05%)</title><rect x="980.1" y="469" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="983.10" y="479.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (333,333,330 samples, 1.76%)</title><rect x="62.3" y="469" width="20.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="65.32" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="106.4" y="389" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.44" y="399.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (272,727,270 samples, 1.44%)</title><rect x="562.2" y="453" width="17.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="565.18" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1151.5" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1154.55" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.21%)</title><rect x="1154.1" y="437" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1157.07" y="447.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (50,505,050 samples, 0.27%)</title><rect x="112.7" y="485" width="3.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="115.75" y="495.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (60,606,060 samples, 0.32%)</title><rect x="215.5" y="437" width="3.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="218.49" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="57.3" y="421" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="60.28" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;YAML::detail::node&gt;, std::shared_ptr&lt;YAML::detail::node&gt;, std::_Identity&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt;, std::less&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="1188.7" y="469" width="0.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1191.74" y="479.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.05%)</title><rect x="827.6" y="405" width="0.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="830.55" y="415.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (40,404,040 samples, 0.21%)</title><rect x="1186.2" y="357" width="2.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.22" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1173.0" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.98" y="287.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (101,010,100 samples, 0.53%)</title><rect x="366.1" y="437" width="6.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="369.14" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1142.1" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1145.09" y="383.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (101,010,100 samples, 0.53%)</title><rect x="244.5" y="469" width="6.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="247.49" y="479.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.05%)</title><rect x="366.8" y="421" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="369.77" y="431.5" ></text>
</g>
<g >
<title>all (18,909,090,720 samples, 100%)</title><rect x="10.0" y="629" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>__libc_start_main (18,898,989,710 samples, 99.95%)</title><rect x="10.6" y="581" width="1179.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.63" y="591.5" >__libc_start_main</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1144.0" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.99" y="399.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (212,121,210 samples, 1.12%)</title><rect x="834.5" y="469" width="13.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="837.49" y="479.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (10,101,010 samples, 0.05%)</title><rect x="1101.1" y="437" width="0.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1104.12" y="447.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (60,606,060 samples, 0.32%)</title><rect x="231.9" y="437" width="3.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="234.88" y="447.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (30,303,030 samples, 0.16%)</title><rect x="370.6" y="405" width="1.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="373.56" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (181,818,180 samples, 0.96%)</title><rect x="798.6" y="437" width="11.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="801.56" y="447.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.21%)</title><rect x="27.0" y="485" width="2.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="30.02" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (40,404,040 samples, 0.21%)</title><rect x="103.9" y="501" width="2.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="106.92" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (292,929,290 samples, 1.55%)</title><rect x="579.2" y="469" width="18.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="582.20" y="479.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,101,010 samples, 0.05%)</title><rect x="1113.1" y="437" width="0.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1116.10" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="107.7" y="181" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.70" y="191.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnScalar (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="341" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1189.22" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="165" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.22" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="839.5" y="437" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="842.53" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="17.6" y="421" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.56" y="431.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (10,101,010 samples, 0.05%)</title><rect x="83.1" y="469" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="86.12" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="217.4" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="220.38" y="335.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.05%)</title><rect x="236.3" y="437" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="239.29" y="447.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (80,808,080 samples, 0.43%)</title><rect x="1183.7" y="373" width="5.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.70" y="383.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="983.2" y="469" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="986.25" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (10,101,010 samples, 0.05%)</title><rect x="1165.4" y="485" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1168.42" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="81.9" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="84.86" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="108.3" y="133" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="111.33" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="54.1" y="453" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="57.12" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="103.3" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="106.29" y="383.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (60,606,060 samples, 0.32%)</title><rect x="356.1" y="453" width="3.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="359.06" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.37%)</title><rect x="1105.5" y="389" width="4.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1108.53" y="399.5" ></text>
</g>
<g >
<title>memcpy@plt (10,101,010 samples, 0.05%)</title><rect x="364.3" y="421" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="367.25" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.05%)</title><rect x="358.6" y="405" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="361.58" y="415.5" ></text>
</g>
<g >
<title>sim::Link::get_to_ingress_queue_size (60,606,060 samples, 0.32%)</title><rect x="390.7" y="485" width="3.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="393.73" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1142.1" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1145.09" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="107.7" y="229" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.70" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.21%)</title><rect x="57.9" y="389" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.91" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="453" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1151.5" y="421" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1154.55" y="431.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (20,202,020 samples, 0.11%)</title><rect x="249.5" y="453" width="1.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="252.53" y="463.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::memory*,  (10,101,010 samples, 0.05%)</title><rect x="1188.7" y="485" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1191.74" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="103.3" y="501" width="0.6" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="106.29" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::weak_ptr&lt;sim::ILink&gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="1138.3" y="485" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1141.31" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.22" y="239.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (101,010,100 samples, 0.53%)</title><rect x="213.0" y="453" width="6.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="215.97" y="463.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (20,202,020 samples, 0.11%)</title><rect x="1186.8" y="325" width="1.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1189.85" y="335.5" ></text>
</g>
<g >
<title>__default_morecore (10,101,010 samples, 0.05%)</title><rect x="1151.5" y="453" width="0.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1154.55" y="463.5" ></text>
</g>
<g >
<title>vsnprintf (20,202,020 samples, 0.11%)</title><rect x="110.9" y="437" width="1.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="113.85" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="103.3" y="469" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="106.29" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="565" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (10,101,010 samples, 0.05%)</title><rect x="1144.6" y="469" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1147.62" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="106.4" y="405" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.44" y="415.5" ></text>
</g>
<g >
<title>Logger::info (30,303,030 samples, 0.16%)</title><rect x="435.5" y="469" width="1.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="438.48" y="479.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (20,202,020 samples, 0.11%)</title><rect x="219.9" y="453" width="1.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="222.90" y="463.5" ></text>
</g>
<g >
<title>malloc (60,606,060 samples, 0.32%)</title><rect x="617.0" y="469" width="3.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="620.02" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="107.7" y="213" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.70" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="517" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="831.3" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="834.34" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.21%)</title><rect x="361.1" y="357" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="364.10" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (191,919,190 samples, 1.01%)</title><rect x="88.2" y="421" width="11.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="91.16" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="1161.6" y="469" width="0.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1164.63" y="479.5" ></text>
</g>
<g >
<title>sim::Event::Event (333,333,330 samples, 1.76%)</title><rect x="1067.1" y="469" width="20.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1070.08" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1164.2" y="437" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1167.16" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (242,424,240 samples, 1.28%)</title><rect x="65.5" y="453" width="15.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="68.47" y="463.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::get_max_size (10,101,010 samples, 0.05%)</title><rect x="398.9" y="485" width="0.7" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="401.92" y="495.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::export_metrics_to_files (1,464,646,450 samples, 7.75%)</title><rect x="24.5" y="533" width="91.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="27.50" y="543.5" >sim::Metri..</text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="57.3" y="453" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="60.28" y="463.5" ></text>
</g>
<g >
<title>operator delete (111,111,110 samples, 0.59%)</title><rect x="122.2" y="517" width="6.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="125.20" y="527.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (30,303,030 samples, 0.16%)</title><rect x="370.6" y="389" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="373.56" y="399.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,101,010 samples, 0.05%)</title><rect x="378.8" y="405" width="0.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="381.75" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="250.2" y="421" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="253.16" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.21%)</title><rect x="113.4" y="421" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="116.38" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;* std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_Alloc_node&gt; (30,303,030 samples, 0.16%)</title><rect x="1181.2" y="501" width="1.9" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1184.18" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (10,101,010 samples, 0.05%)</title><rect x="1158.5" y="469" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1161.48" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.21%)</title><rect x="50.3" y="437" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="53.34" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1156.0" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1158.96" y="303.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::get_id[abi:cxx11] (10,101,010 samples, 0.05%)</title><rect x="847.7" y="453" width="0.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="850.72" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="86.9" y="437" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="89.90" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::node_ref*,  (10,101,010 samples, 0.05%)</title><rect x="1188.7" y="437" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1191.74" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="831.3" y="149" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="834.34" y="159.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (60,606,060 samples, 0.32%)</title><rect x="225.6" y="437" width="3.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="228.58" y="447.5" ></text>
</g>
<g >
<title>strlen@plt (30,303,030 samples, 0.16%)</title><rect x="981.4" y="469" width="1.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="984.36" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1164.2" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1167.16" y="367.5" ></text>
</g>
<g >
<title>sim::Process::operator (13,393,939,260 samples, 70.83%)</title><rect x="252.1" y="501" width="835.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="255.05" y="511.5" >sim::Process::operator</text>
</g>
<g >
<title>Logger::get_instance (40,404,040 samples, 0.21%)</title><rect x="650.4" y="453" width="2.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="653.43" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.05%)</title><rect x="228.7" y="405" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="231.73" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (30,303,030 samples, 0.16%)</title><rect x="380.0" y="421" width="1.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="383.01" y="431.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (40,404,040 samples, 0.21%)</title><rect x="57.9" y="469" width="2.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="60.91" y="479.5" ></text>
</g>
<g >
<title>cfree (30,303,030 samples, 0.16%)</title><rect x="53.5" y="469" width="1.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="56.49" y="479.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.05%)</title><rect x="379.4" y="437" width="0.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="382.38" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="114.6" y="373" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="117.64" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="99.5" y="357" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="102.51" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="357.9" y="405" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="360.95" y="415.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1184.3" y="277" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1187.33" y="287.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="389" width="5.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.07" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="831.3" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="834.34" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1157.2" y="437" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1160.22" y="447.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (90,909,090 samples, 0.48%)</title><rect x="223.7" y="453" width="5.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="226.69" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1142.7" y="421" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1145.72" y="431.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (10,101,010 samples, 0.05%)</title><rect x="369.3" y="421" width="0.6" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="372.29" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="81.9" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="84.86" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="66.1" y="437" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="69.10" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="421" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (3,131,313,100 samples, 16.56%)</title><rect x="632.8" y="469" width="195.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="635.78" y="479.5" >sim::Link::get_packet</text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.11%)</title><rect x="218.0" y="389" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="221.01" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1172.4" y="437" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1175.35" y="447.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="229.4" y="453" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="232.36" y="463.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (70,707,070 samples, 0.37%)</title><rect x="231.2" y="453" width="4.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="234.25" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (70,707,070 samples, 0.37%)</title><rect x="1105.5" y="421" width="4.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1108.53" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="1147.8" y="485" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1150.77" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="485" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (191,919,190 samples, 1.01%)</title><rect x="11.9" y="485" width="12.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="14.89" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="107.7" y="245" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.70" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="59.2" y="181" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="62.17" y="191.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (60,606,060 samples, 0.32%)</title><rect x="359.8" y="437" width="3.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="362.84" y="447.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="243.2" y="469" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="246.23" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1164.2" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1167.16" y="399.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.11%)</title><rect x="1099.2" y="453" width="1.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1102.23" y="463.5" ></text>
</g>
<g >
<title>YAML::detail::memory::create_node (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="309" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1189.22" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="108.3" y="149" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="111.33" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="561.5" y="405" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="564.55" y="415.5" ></text>
</g>
<g >
<title>YAML::Stream::AdvanceCurrent (10,101,010 samples, 0.05%)</title><rect x="1183.7" y="277" width="0.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1186.70" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.21%)</title><rect x="57.9" y="261" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.91" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (20,202,020 samples, 0.11%)</title><rect x="1143.4" y="469" width="1.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1146.35" y="479.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (10,101,010 samples, 0.05%)</title><rect x="1121.9" y="469" width="0.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1124.92" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="217.4" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="220.38" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="81.9" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="84.86" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="106.4" y="293" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.44" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="114.0" y="405" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="117.01" y="415.5" ></text>
</g>
<g >
<title>YAML::Stream::get (10,101,010 samples, 0.05%)</title><rect x="1183.7" y="293" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1186.70" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="107.7" y="165" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.70" y="175.5" ></text>
</g>
<g >
<title>sim::LinkQueue::empty (40,404,040 samples, 0.21%)</title><rect x="832.0" y="469" width="2.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="834.97" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.22" y="223.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (40,404,040 samples, 0.21%)</title><rect x="1183.7" y="357" width="2.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1186.70" y="367.5" ></text>
</g>
<g >
<title>Logger::info (2,020,202,000 samples, 10.68%)</title><rect x="652.9" y="453" width="126.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="655.95" y="463.5" >Logger::info</text>
</g>
<g >
<title>cfree (313,131,310 samples, 1.66%)</title><rect x="597.5" y="469" width="19.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="600.48" y="479.5" ></text>
</g>
<g >
<title>vsnprintf (222,222,220 samples, 1.18%)</title><rect x="66.7" y="437" width="13.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="69.73" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="363.6" y="421" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="366.62" y="431.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (131,313,130 samples, 0.69%)</title><rect x="213.0" y="469" width="8.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="215.97" y="479.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.05%)</title><rect x="223.1" y="453" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="226.06" y="463.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::get_instance (10,101,010 samples, 0.05%)</title><rect x="219.3" y="453" width="0.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="222.27" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="103.3" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="106.29" y="399.5" ></text>
</g>
<g >
<title>operator delete (60,606,060 samples, 0.32%)</title><rect x="310.7" y="485" width="3.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="313.67" y="495.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_delivery_rate (20,202,020 samples, 0.11%)</title><rect x="381.9" y="453" width="1.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="384.90" y="463.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (30,303,030 samples, 0.16%)</title><rect x="380.0" y="437" width="1.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="383.01" y="447.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (60,606,060 samples, 0.32%)</title><rect x="359.8" y="453" width="3.8" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="362.84" y="463.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (313,131,310 samples, 1.66%)</title><rect x="884.3" y="469" width="19.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="887.28" y="479.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (20,202,020 samples, 0.11%)</title><rect x="1097.3" y="469" width="1.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1100.34" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1151.5" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1154.55" y="319.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="368.7" y="405" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="371.66" y="415.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (10,101,010 samples, 0.05%)</title><rect x="847.7" y="469" width="0.7" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="850.72" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (1,222,222,210 samples, 6.46%)</title><rect x="903.8" y="469" width="76.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="906.82" y="479.5" >std::_Rb..</text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1178.7" y="453" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1181.65" y="463.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (40,404,040 samples, 0.21%)</title><rect x="369.9" y="421" width="2.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="372.93" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="831.3" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="834.34" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="354.8" y="405" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="357.80" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 1.18%)</title><rect x="10.6" y="533" width="13.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.63" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.21%)</title><rect x="361.1" y="373" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="364.10" y="383.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (232,323,230 samples, 1.23%)</title><rect x="1099.2" y="469" width="14.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1102.23" y="479.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.11%)</title><rect x="106.4" y="453" width="1.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="109.44" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.37%)</title><rect x="19.5" y="437" width="4.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.46" y="447.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.05%)</title><rect x="223.1" y="437" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="226.06" y="447.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_id[abi:cxx11] (10,101,010 samples, 0.05%)</title><rect x="1113.7" y="469" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1116.73" y="479.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (20,202,020 samples, 0.11%)</title><rect x="1097.3" y="453" width="1.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1100.34" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;::size_type std::__detail::__erase_nodes_if&lt;std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;, std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;, sim::RoutingModule::correctify_outlinks (10,101,010 samples, 0.05%)</title><rect x="1159.1" y="469" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1162.11" y="479.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::export_to_file (151,515,150 samples, 0.80%)</title><rect x="106.4" y="501" width="9.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="109.44" y="511.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (10,101,010 samples, 0.05%)</title><rect x="980.7" y="469" width="0.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="983.73" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="107.7" y="261" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.70" y="271.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (30,303,030 samples, 0.16%)</title><rect x="377.5" y="437" width="1.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="380.49" y="447.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (70,707,070 samples, 0.37%)</title><rect x="245.1" y="453" width="4.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="248.12" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="58.5" y="213" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="61.54" y="223.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (10,101,010 samples, 0.05%)</title><rect x="383.2" y="469" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="386.16" y="479.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (20,202,020 samples, 0.11%)</title><rect x="1097.3" y="437" width="1.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1100.34" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1173.0" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.98" y="319.5" ></text>
</g>
<g >
<title>sim::Parser&lt;sim::Link&gt;::parse_object (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="485" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1192.37" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="107.7" y="197" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.70" y="207.5" ></text>
</g>
<g >
<title>sim::Process::operator (80,808,080 samples, 0.43%)</title><rect x="144.3" y="517" width="5.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="147.26" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="103.3" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="106.29" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="218.0" y="325" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="221.01" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="217.4" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="220.38" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="103.3" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="106.29" y="367.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (10,101,010 samples, 0.05%)</title><rect x="100.8" y="453" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="103.77" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (171,717,170 samples, 0.91%)</title><rect x="69.9" y="405" width="10.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="72.88" y="415.5" ></text>
</g>
<g >
<title>malloc (80,808,080 samples, 0.43%)</title><rect x="1152.2" y="469" width="5.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1155.18" y="479.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (50,505,050 samples, 0.27%)</title><rect x="232.5" y="421" width="3.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="235.51" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1164.2" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1167.16" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (20,202,020 samples, 0.11%)</title><rect x="830.7" y="405" width="1.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="833.71" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 1.18%)</title><rect x="66.7" y="421" width="13.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="69.73" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.27%)</title><rect x="842.7" y="373" width="3.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="845.68" y="383.5" ></text>
</g>
<g >
<title>_IO_file_open (40,404,040 samples, 0.21%)</title><rect x="57.9" y="421" width="2.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="60.91" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="831.3" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="834.34" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="368.0" y="405" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="371.03" y="415.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.05%)</title><rect x="364.9" y="453" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="367.88" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="561.5" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="564.55" y="383.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::send_packets (141,414,140 samples, 0.75%)</title><rect x="365.5" y="469" width="8.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="368.51" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.32%)</title><rect x="842.1" y="389" width="3.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="845.05" y="399.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (20,202,020 samples, 0.11%)</title><rect x="1100.5" y="453" width="1.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1103.49" y="463.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.05%)</title><rect x="354.2" y="405" width="0.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="357.17" y="415.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1178.7" y="469" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1181.65" y="479.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (10,101,010 samples, 0.05%)</title><rect x="377.5" y="405" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="380.49" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="80.0" y="373" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="82.97" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="103.3" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="106.29" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="107.7" y="389" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.70" y="399.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.27%)</title><rect x="314.5" y="485" width="3.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="317.46" y="495.5" ></text>
</g>
<g >
<title>Logger::info (10,101,010 samples, 0.05%)</title><rect x="211.7" y="469" width="0.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="214.71" y="479.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.11%)</title><rect x="1143.4" y="437" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1146.35" y="447.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (121,212,120 samples, 0.64%)</title><rect x="1114.4" y="469" width="7.5" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1117.36" y="479.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="453" width="5.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.07" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (191,919,190 samples, 1.01%)</title><rect x="605.0" y="453" width="12.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="608.04" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="81.9" y="421" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="84.86" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="81.9" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="84.86" y="383.5" ></text>
</g>
<g >
<title>sim::Host::~Host (20,202,020 samples, 0.11%)</title><rect x="10.6" y="453" width="1.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="13.63" y="463.5" ></text>
</g>
<g >
<title>sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::recalculate_paths (848,484,840 samples, 4.49%)</title><rect x="1130.1" y="517" width="53.0" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="1133.12" y="527.5" >sim::..</text>
</g>
<g >
<title>[libc.so.6] (191,919,190 samples, 1.01%)</title><rect x="88.2" y="405" width="11.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="91.16" y="415.5" ></text>
</g>
<g >
<title>sim::Process::~Process (60,606,060 samples, 0.32%)</title><rect x="1087.9" y="501" width="3.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1090.88" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="103.3" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="106.29" y="335.5" ></text>
</g>
<g >
<title>sim::Link::get_from_egress_queue_size (10,101,010 samples, 0.05%)</title><rect x="383.8" y="485" width="0.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="386.79" y="495.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="243.2" y="453" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="246.23" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="217.4" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="220.38" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1151.5" y="389" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1154.55" y="399.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (50,505,050 samples, 0.27%)</title><rect x="109.6" y="485" width="3.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="112.59" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (18,898,989,710 samples, 99.95%)</title><rect x="10.6" y="565" width="1179.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.63" y="575.5" >[libc.so.6]</text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (20,202,020 samples, 0.11%)</title><rect x="1186.8" y="309" width="1.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1189.85" y="319.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (40,404,040 samples, 0.21%)</title><rect x="113.4" y="453" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="116.38" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1173.0" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.98" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1173.0" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.98" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (131,313,130 samples, 0.69%)</title><rect x="72.4" y="389" width="8.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="75.40" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="549" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1173.0" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.98" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="213.6" y="437" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="216.60" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1156.0" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1158.96" y="255.5" ></text>
</g>
<g >
<title>sim::Link::arrive (464,646,460 samples, 2.46%)</title><rect x="211.1" y="485" width="29.0" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="214.08" y="495.5" >si..</text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="1113.1" y="421" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1116.10" y="431.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (10,101,010 samples, 0.05%)</title><rect x="60.4" y="485" width="0.7" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="63.43" y="495.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (40,404,040 samples, 0.21%)</title><rect x="115.9" y="533" width="2.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="118.90" y="543.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="376.9" y="453" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="379.86" y="463.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (20,202,020 samples, 0.11%)</title><rect x="373.1" y="453" width="1.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="376.08" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1151.5" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1154.55" y="303.5" ></text>
</g>
<g >
<title>sim::Process::Process (10,101,010 samples, 0.05%)</title><rect x="212.3" y="453" width="0.7" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="215.34" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="103.3" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="106.29" y="255.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (10,101,010 samples, 0.05%)</title><rect x="1183.1" y="357" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1186.07" y="367.5" ></text>
</g>
<g >
<title>Logger::warn (2,272,727,250 samples, 12.02%)</title><rect x="437.4" y="469" width="141.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="440.37" y="479.5" >Logger::warn</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="218.0" y="357" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="221.01" y="367.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (10,101,010 samples, 0.05%)</title><rect x="1098.6" y="469" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1101.60" y="479.5" ></text>
</g>
<g >
<title>sim::write_to_csv (1,161,616,150 samples, 6.14%)</title><rect x="30.8" y="501" width="72.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="33.80" y="511.5" >sim::wri..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="30.2" y="437" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="33.17" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="107.7" y="277" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.70" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="58.5" y="197" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="61.54" y="207.5" ></text>
</g>
<g >
<title>sim::RoutingModule::update_routing_table (191,919,190 samples, 1.01%)</title><rect x="1133.3" y="501" width="11.9" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1136.27" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1151.5" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1154.55" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.21%)</title><rect x="57.9" y="309" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.91" y="319.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::Arrive (10,101,010 samples, 0.05%)</title><rect x="243.9" y="469" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="246.86" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1173.0" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.98" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.37%)</title><rect x="1152.8" y="453" width="4.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1155.81" y="463.5" ></text>
</g>
<g >
<title>cfree (40,404,040 samples, 0.21%)</title><rect x="1149.7" y="485" width="2.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1152.66" y="495.5" ></text>
</g>
<g >
<title>malloc (202,020,200 samples, 1.07%)</title><rect x="812.4" y="437" width="12.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="815.43" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="1154.7" y="357" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1157.70" y="367.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (40,404,040 samples, 0.21%)</title><rect x="1183.7" y="325" width="2.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1186.70" y="335.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (40,404,040 samples, 0.21%)</title><rect x="351.6" y="485" width="2.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="354.65" y="495.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (20,202,020 samples, 0.11%)</title><rect x="1186.8" y="341" width="1.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1189.85" y="351.5" ></text>
</g>
<g >
<title>sim::Scheduler::get_current_time (20,202,020 samples, 0.11%)</title><rect x="240.1" y="485" width="1.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="243.07" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="103.3" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="106.29" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1151.5" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1154.55" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (60,606,060 samples, 0.32%)</title><rect x="1093.6" y="453" width="3.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1096.56" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="831.3" y="181" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="834.34" y="191.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="421" width="5.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.07" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="106.4" y="357" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.44" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (40,404,040 samples, 0.21%)</title><rect x="226.8" y="421" width="2.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="229.84" y="431.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (111,111,110 samples, 0.59%)</title><rect x="1183.1" y="533" width="6.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1186.07" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (161,616,160 samples, 0.85%)</title><rect x="90.1" y="389" width="10.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="93.05" y="399.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="354.8" y="421" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="357.80" y="431.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="83.8" y="469" width="0.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="86.75" y="479.5" ></text>
</g>
<g >
<title>sim::bfs[abi:cxx11] (545,454,540 samples, 2.88%)</title><rect x="1145.2" y="501" width="34.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1148.25" y="511.5" >si..</text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="371.2" y="357" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="374.19" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="1154.7" y="373" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1157.70" y="383.5" ></text>
</g>
<g >
<title>YAML::Scanner::InsertPotentialSimpleKey (10,101,010 samples, 0.05%)</title><rect x="1185.0" y="309" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1187.96" y="319.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="103.3" y="485" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="106.29" y="495.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleDocument (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="469" width="5.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1186.07" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="831.3" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="834.34" y="335.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="378.1" y="421" width="0.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="381.12" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.21%)</title><rect x="1154.1" y="421" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1157.07" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="30.2" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="33.17" y="399.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_insert_unique&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; const&amp;&gt; (40,404,040 samples, 0.21%)</title><rect x="1176.8" y="485" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1179.76" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="218.0" y="341" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="221.01" y="351.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.05%)</title><rect x="239.4" y="453" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="242.44" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="81.9" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="84.86" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="217.4" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="220.38" y="383.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="222.4" y="437" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="225.43" y="447.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="82.5" y="453" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="85.49" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="561.5" y="453" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="564.55" y="463.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10,101,010 samples, 0.05%)</title><rect x="1159.7" y="485" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1162.74" y="495.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1183.1" y="293" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1186.07" y="303.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (363,636,360 samples, 1.92%)</title><rect x="756.3" y="437" width="22.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="759.32" y="447.5" >v..</text>
</g>
<g >
<title>sim::Link::schedule_arrival (60,606,060 samples, 0.32%)</title><rect x="828.2" y="469" width="3.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="831.18" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="227.5" y="405" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="230.47" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="501" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="117" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.22" y="127.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.11%)</title><rect x="830.7" y="373" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="833.71" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="107.1" y="149" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.07" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (10,101,010 samples, 0.05%)</title><rect x="228.1" y="405" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="231.10" y="415.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="228.7" y="389" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="231.73" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="103.3" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="106.29" y="303.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (40,404,040 samples, 0.21%)</title><rect x="1101.8" y="453" width="2.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1104.75" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="110.9" y="405" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="113.85" y="415.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (10,101,010 samples, 0.05%)</title><rect x="378.8" y="421" width="0.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="381.75" y="431.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (20,202,020 samples, 0.11%)</title><rect x="106.4" y="485" width="1.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="109.44" y="495.5" ></text>
</g>
<g >
<title>sim::Switch::process (9,363,636,270 samples, 49.52%)</title><rect x="399.6" y="485" width="584.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="402.55" y="495.5" >sim::Switch::process</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1173.0" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.98" y="383.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.11%)</title><rect x="1157.2" y="469" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1160.22" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (50,505,050 samples, 0.27%)</title><rect x="1173.6" y="469" width="3.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1176.61" y="479.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.11%)</title><rect x="1172.4" y="469" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1175.35" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="30.2" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="33.17" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1164.2" y="469" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1167.16" y="479.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (212,121,210 samples, 1.12%)</title><rect x="86.9" y="453" width="13.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="89.90" y="463.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="293" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1189.22" y="303.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.27%)</title><rect x="26.4" y="501" width="3.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="29.39" y="511.5" ></text>
</g>
<g >
<title>Logger::get_instance (80,808,080 samples, 0.43%)</title><rect x="430.4" y="469" width="5.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="433.44" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="30.2" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="33.17" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="30.2" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="33.17" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="217.4" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="220.38" y="271.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (10,101,010 samples, 0.05%)</title><rect x="61.7" y="469" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="64.69" y="479.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="809.9" y="453" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="812.90" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="310.0" y="485" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="313.04" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1151.5" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1154.55" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="1108.1" y="357" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1111.06" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.05%)</title><rect x="846.5" y="437" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="849.46" y="447.5" ></text>
</g>
<g >
<title>operator new (80,808,080 samples, 0.43%)</title><rect x="1152.2" y="485" width="5.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1155.18" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="107.1" y="165" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.07" y="175.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (40,404,040 samples, 0.21%)</title><rect x="1183.7" y="341" width="2.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1186.70" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="469" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="53" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.22" y="63.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (80,808,080 samples, 0.43%)</title><rect x="385.7" y="485" width="5.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="388.68" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.05%)</title><rect x="56.6" y="485" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="59.65" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="103.3" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="106.29" y="351.5" ></text>
</g>
<g >
<title>sim::Host::send_packet (545,454,540 samples, 2.88%)</title><rect x="1091.7" y="485" width="34.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1094.67" y="495.5" >si..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="107.7" y="309" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.70" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="1155.3" y="325" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1158.33" y="335.5" ></text>
</g>
<g >
<title>open64 (40,404,040 samples, 0.21%)</title><rect x="57.9" y="405" width="2.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="60.91" y="415.5" ></text>
</g>
<g >
<title>sim::Link::get_from (10,101,010 samples, 0.05%)</title><rect x="1132.6" y="501" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1135.64" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1151.5" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1154.55" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="371.2" y="325" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="374.19" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="371.2" y="341" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="374.19" y="351.5" ></text>
</g>
<g >
<title>sim::is_valid_link (30,303,030 samples, 0.16%)</title><rect x="1135.8" y="485" width="1.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1138.79" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="844.6" y="341" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="847.57" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="107.1" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.07" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="149" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.22" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="81.9" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="84.86" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1150.3" y="453" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1153.29" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="30.2" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="33.17" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="133" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.22" y="143.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="57.3" y="469" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="60.28" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="218.0" y="373" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="221.01" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (60,606,060 samples, 0.32%)</title><rect x="842.1" y="421" width="3.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="845.05" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::~MetricsCollector (10,101,010 samples, 0.05%)</title><rect x="23.9" y="517" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="26.87" y="527.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="109.0" y="485" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="111.96" y="495.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (30,303,030 samples, 0.16%)</title><rect x="367.4" y="421" width="1.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="370.40" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="561.5" y="437" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="564.55" y="447.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (303,030,300 samples, 1.60%)</title><rect x="221.2" y="469" width="18.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="224.16" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.27%)</title><rect x="232.5" y="389" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="235.51" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (20,202,020 samples, 0.11%)</title><rect x="106.4" y="437" width="1.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="109.44" y="447.5" ></text>
</g>
<g >
<title>fopen (20,202,020 samples, 0.11%)</title><rect x="107.7" y="453" width="1.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="110.70" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1094.2" y="421" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1097.19" y="431.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (20,202,020 samples, 0.11%)</title><rect x="107.7" y="469" width="1.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="110.70" y="479.5" ></text>
</g>
<g >
<title>YAML::Node::~Node (10,101,010 samples, 0.05%)</title><rect x="1188.7" y="517" width="0.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1191.74" y="527.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::Push (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="325" width="0.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1189.22" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1131.4" y="501" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1134.38" y="511.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (40,404,040 samples, 0.21%)</title><rect x="110.2" y="469" width="2.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="113.22" y="479.5" ></text>
</g>
<g >
<title>__default_morecore (10,101,010 samples, 0.05%)</title><rect x="103.3" y="453" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="106.29" y="463.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (20,202,020 samples, 0.11%)</title><rect x="1186.8" y="293" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1189.85" y="303.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (101,010,100 samples, 0.53%)</title><rect x="1104.3" y="453" width="6.3" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1107.27" y="463.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.05%)</title><rect x="1100.5" y="437" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1103.49" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="830.7" y="357" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="833.71" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="1154.7" y="341" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1157.70" y="351.5" ></text>
</g>
<g >
<title>sim::Link::get_from (10,101,010 samples, 0.05%)</title><rect x="1137.1" y="469" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1140.05" y="479.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (30,303,030 samples, 0.16%)</title><rect x="217.4" y="421" width="1.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="220.38" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="217.4" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="220.38" y="399.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (50,505,050 samples, 0.27%)</title><rect x="1122.6" y="469" width="3.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1125.55" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="217.4" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="220.38" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="30.2" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="33.17" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.27%)</title><rect x="1106.8" y="373" width="3.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1109.79" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="107.7" y="325" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.70" y="335.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (60,606,060 samples, 0.32%)</title><rect x="1093.6" y="469" width="3.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1096.56" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (20,202,020 samples, 0.11%)</title><rect x="1179.9" y="501" width="1.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1182.91" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="561.5" y="389" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="564.55" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (10,101,010 samples, 0.05%)</title><rect x="354.2" y="437" width="0.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="357.17" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="261" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1189.22" y="271.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="23.9" y="485" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="26.87" y="495.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="372.4" y="437" width="0.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="375.45" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;Time&lt;Nanosecond&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="57.3" y="485" width="0.6" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="60.28" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.37%)</title><rect x="95.7" y="373" width="4.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="98.73" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.21%)</title><rect x="361.1" y="389" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="364.10" y="399.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="222.4" y="453" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="225.43" y="463.5" ></text>
</g>
<g >
<title>YAML::detail::node_data::set_scalar (10,101,010 samples, 0.05%)</title><rect x="1188.1" y="341" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1191.11" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="107.1" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.07" y="223.5" ></text>
</g>
<g >
<title>sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::start (17,060,605,890 samples, 90.22%)</title><rect x="118.4" y="533" width="1064.7" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="121.42" y="543.5" >sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::start</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1151.5" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1154.55" y="351.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (10,101,010 samples, 0.05%)</title><rect x="109.6" y="469" width="0.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="112.59" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 1.18%)</title><rect x="10.6" y="549" width="13.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.63" y="559.5" ></text>
</g>
<g >
<title>pthread_once (10,101,010 samples, 0.05%)</title><rect x="845.8" y="421" width="0.7" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="848.83" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="217.4" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="220.38" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="29.5" y="469" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.54" y="479.5" ></text>
</g>
<g >
<title>sim::LinkQueue::LinkQueue (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="453" width="0.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1192.37" y="463.5" ></text>
</g>
<g >
<title>sim::Link::transmit (151,515,150 samples, 0.80%)</title><rect x="242.0" y="485" width="9.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="244.97" y="495.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (10,101,010 samples, 0.05%)</title><rect x="354.2" y="421" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="357.17" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="25.1" y="469" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.13" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.21%)</title><rect x="57.9" y="277" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.91" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="107.7" y="341" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.70" y="351.5" ></text>
</g>
<g >
<title>cfree (323,232,320 samples, 1.71%)</title><rect x="789.7" y="453" width="20.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="792.73" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="29.5" y="485" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.54" y="495.5" ></text>
</g>
<g >
<title>YAML::Parser::HandleNextDocument (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="485" width="5.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1186.07" y="495.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.27%)</title><rect x="49.7" y="485" width="3.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="52.71" y="495.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (30,303,030 samples, 0.16%)</title><rect x="247.6" y="437" width="1.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="250.64" y="447.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.05%)</title><rect x="377.5" y="421" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="380.49" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.21%)</title><rect x="1149.7" y="469" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1152.66" y="479.5" ></text>
</g>
<g >
<title>Logger::info (20,202,020 samples, 0.11%)</title><rect x="1092.3" y="469" width="1.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1095.30" y="479.5" ></text>
</g>
<g >
<title>cfree (70,707,070 samples, 0.37%)</title><rect x="19.5" y="453" width="4.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="22.46" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.27%)</title><rect x="232.5" y="373" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="235.51" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.3" y="421" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.28" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (50,505,050 samples, 0.27%)</title><rect x="825.0" y="437" width="3.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="828.03" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="248.9" y="421" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="251.90" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.21%)</title><rect x="57.9" y="293" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.91" y="303.5" ></text>
</g>
<g >
<title>nons (18,909,090,720 samples, 100.00%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >nons</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (10,101,010 samples, 0.05%)</title><rect x="382.5" y="421" width="0.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="385.53" y="431.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (20,202,020 samples, 0.11%)</title><rect x="1124.4" y="453" width="1.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1127.44" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="217.4" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="220.38" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1157.9" y="421" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1160.85" y="431.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (60,606,060 samples, 0.32%)</title><rect x="235.7" y="453" width="3.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="238.66" y="463.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.11%)</title><rect x="1143.4" y="453" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1146.35" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="23.9" y="453" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="26.87" y="463.5" ></text>
</g>
<g >
<title>YAML::Load (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="501" width="5.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1186.07" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1151.5" y="405" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1154.55" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (101,010,100 samples, 0.53%)</title><rect x="1138.9" y="485" width="6.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1141.94" y="495.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.05%)</title><rect x="837.6" y="437" width="0.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="840.64" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.21%)</title><rect x="1140.8" y="437" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1143.83" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.21%)</title><rect x="57.9" y="341" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.91" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="30.2" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="33.17" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.27%)</title><rect x="49.7" y="453" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="52.71" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="363.0" y="341" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="365.99" y="351.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (20,202,020 samples, 0.11%)</title><rect x="846.5" y="453" width="1.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="849.46" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.22" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1151.5" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1154.55" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="235.0" y="341" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="238.03" y="351.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="405" width="5.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.07" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1143.4" y="421" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1146.35" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_RTT (40,404,040 samples, 0.21%)</title><rect x="379.4" y="453" width="2.5" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="382.38" y="463.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Switch::process (70,707,070 samples, 0.37%)</title><rect x="1125.7" y="501" width="4.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1128.71" y="511.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.11%)</title><rect x="25.1" y="501" width="1.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="28.13" y="511.5" ></text>
</g>
<g >
<title>sim::Scheduler::get_current_time (10,101,010 samples, 0.05%)</title><rect x="250.8" y="469" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="253.79" y="479.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (10,101,010 samples, 0.05%)</title><rect x="1183.1" y="373" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1186.07" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1099.9" y="437" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1102.86" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="120.9" y="517" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="123.94" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1164.2" y="453" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1167.16" y="463.5" ></text>
</g>
<g >
<title>sim::Link::get_max_to_ingress_queue_size (20,202,020 samples, 0.11%)</title><rect x="384.4" y="485" width="1.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="387.42" y="495.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.05%)</title><rect x="381.9" y="437" width="0.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="384.90" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="561.5" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="564.55" y="335.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.11%)</title><rect x="1157.2" y="453" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1160.22" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="106.4" y="309" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.44" y="319.5" ></text>
</g>
<g >
<title>malloc (60,606,060 samples, 0.32%)</title><rect x="1139.6" y="453" width="3.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1142.57" y="463.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.05%)</title><rect x="355.4" y="453" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="358.43" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (242,424,240 samples, 1.28%)</title><rect x="196.0" y="485" width="15.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="198.95" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="831.3" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="834.34" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.21%)</title><rect x="57.9" y="229" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.91" y="239.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (30,303,030 samples, 0.16%)</title><rect x="1111.2" y="437" width="1.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1114.21" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1142.1" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1145.09" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="561.5" y="421" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="564.55" y="431.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::operator (171,717,170 samples, 0.91%)</title><rect x="241.3" y="501" width="10.8" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="244.34" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="831.3" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="834.34" y="207.5" ></text>
</g>
<g >
<title>YAML::Stream::operator bool (10,101,010 samples, 0.05%)</title><rect x="1185.6" y="309" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1188.59" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1164.2" y="421" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1167.16" y="431.5" ></text>
</g>
<g >
<title>sim::IdentifierFactory::~IdentifierFactory (212,121,210 samples, 1.12%)</title><rect x="10.6" y="517" width="13.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="13.63" y="527.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (20,202,020 samples, 0.11%)</title><rect x="107.7" y="485" width="1.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="110.70" y="495.5" ></text>
</g>
<g >
<title>cfree (50,505,050 samples, 0.27%)</title><rect x="16.3" y="453" width="3.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="19.30" y="463.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (40,404,040 samples, 0.21%)</title><rect x="236.9" y="437" width="2.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="239.92" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="103.3" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="106.29" y="271.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.05%)</title><rect x="355.4" y="437" width="0.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="358.43" y="447.5" ></text>
</g>
<g >
<title>sim::Link::Link (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="469" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1192.37" y="479.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (20,202,020 samples, 0.11%)</title><rect x="354.2" y="469" width="1.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="357.17" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.37%)</title><rect x="19.5" y="421" width="4.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.46" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1173.0" y="421" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.98" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="103.3" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="106.29" y="415.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,101,010 samples, 0.05%)</title><rect x="847.1" y="437" width="0.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="850.09" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="581" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="81.9" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="84.86" y="415.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.11%)</title><rect x="1172.4" y="453" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1175.35" y="463.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (272,727,270 samples, 1.44%)</title><rect x="84.4" y="469" width="17.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="87.38" y="479.5" ></text>
</g>
<g >
<title>brk (10,101,010 samples, 0.05%)</title><rect x="1151.5" y="437" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1154.55" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="561.5" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="564.55" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="217.4" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="220.38" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="107.1" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.07" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="107.1" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.07" y="239.5" ></text>
</g>
<g >
<title>operator new (141,414,140 samples, 0.75%)</title><rect x="624.0" y="469" width="8.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="626.95" y="479.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (10,101,010 samples, 0.05%)</title><rect x="366.8" y="405" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="369.77" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="23.9" y="469" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="26.87" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.21%)</title><rect x="57.9" y="373" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.91" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1156.0" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1158.96" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="826.3" y="421" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="829.29" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt;, std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::less&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="23.9" y="501" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="26.87" y="511.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="112.1" y="453" width="0.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="115.12" y="463.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.11%)</title><rect x="830.7" y="389" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="833.71" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1173.0" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.98" y="415.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (10,101,010 samples, 0.05%)</title><rect x="220.5" y="437" width="0.7" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="223.53" y="447.5" ></text>
</g>
<g >
<title>main (18,676,767,490 samples, 98.77%)</title><rect x="24.5" y="549" width="1165.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="27.50" y="559.5" >main</text>
</g>
<g >
<title>sim::Host::enqueue_packet (111,111,110 samples, 0.59%)</title><rect x="366.1" y="453" width="7.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="369.14" y="463.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.05%)</title><rect x="359.2" y="437" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="362.21" y="447.5" ></text>
</g>
<g >
<title>fopen (40,404,040 samples, 0.21%)</title><rect x="57.9" y="453" width="2.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="60.91" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="238.8" y="421" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="241.81" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (20,202,020 samples, 0.11%)</title><rect x="10.6" y="485" width="1.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.63" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.21%)</title><rect x="843.3" y="357" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="846.31" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1151.5" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1154.55" y="287.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (80,808,080 samples, 0.43%)</title><rect x="841.4" y="453" width="5.1" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="844.42" y="463.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (161,616,160 samples, 0.85%)</title><rect x="355.4" y="469" width="10.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="358.43" y="479.5" ></text>
</g>
<g >
<title>operator new (60,606,060 samples, 0.32%)</title><rect x="1139.6" y="469" width="3.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1142.57" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (20,202,020 samples, 0.11%)</title><rect x="55.4" y="469" width="1.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="58.38" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1142.1" y="421" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1145.09" y="431.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1184.3" y="293" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1187.33" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="831.3" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="834.34" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="25.8" y="453" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.76" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1178.7" y="437" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1181.65" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="107.1" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.07" y="191.5" ></text>
</g>
<g >
<title>Logger::get_instance (70,707,070 samples, 0.37%)</title><rect x="301.8" y="485" width="4.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="304.85" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="831.3" y="133" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="834.34" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="365.5" y="453" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="368.51" y="463.5" ></text>
</g>
<g >
<title>vsnprintf (70,707,070 samples, 0.37%)</title><rect x="1105.5" y="405" width="4.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1108.53" y="415.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.05%)</title><rect x="1103.6" y="437" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1106.64" y="447.5" ></text>
</g>
<g >
<title>_IO_file_fopen (40,404,040 samples, 0.21%)</title><rect x="57.9" y="437" width="2.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="60.91" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="22.6" y="405" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="25.61" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1156.6" y="437" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1159.59" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="30.2" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="33.17" y="335.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::~Arrive (10,101,010 samples, 0.05%)</title><rect x="143.6" y="517" width="0.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="146.63" y="527.5" ></text>
</g>
<g >
<title>vsnprintf (40,404,040 samples, 0.21%)</title><rect x="113.4" y="437" width="2.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="116.38" y="447.5" ></text>
</g>
<g >
<title>vsnprintf (50,505,050 samples, 0.27%)</title><rect x="232.5" y="405" width="3.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="235.51" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1164.2" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1167.16" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (20,202,020 samples, 0.11%)</title><rect x="1166.0" y="485" width="1.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1169.05" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="106.4" y="341" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.44" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="106.4" y="325" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.44" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="371.2" y="309" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="374.19" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="30.2" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="33.17" y="415.5" ></text>
</g>
<g >
<title>_start (18,898,989,710 samples, 99.95%)</title><rect x="10.6" y="597" width="1179.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.63" y="607.5" >_start</text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (20,202,020 samples, 0.11%)</title><rect x="826.9" y="421" width="1.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="829.92" y="431.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::SimplePacketQueue (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="437" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1192.37" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="831.3" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="834.34" y="351.5" ></text>
</g>
<g >
<title>pthread_once@plt (10,101,010 samples, 0.05%)</title><rect x="1109.9" y="421" width="0.7" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1112.95" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1173.0" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.98" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="561.5" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="564.55" y="319.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (50,505,050 samples, 0.27%)</title><rect x="835.1" y="453" width="3.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="838.12" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1156.0" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1158.96" y="239.5" ></text>
</g>
<g >
<title>malloc@plt (10,101,010 samples, 0.05%)</title><rect x="1171.7" y="469" width="0.7" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1174.72" y="479.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (20,202,020 samples, 0.11%)</title><rect x="363.6" y="437" width="1.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="366.62" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="110.9" y="421" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="113.85" y="431.5" ></text>
</g>
<g >
<title>vsnprintf (50,505,050 samples, 0.27%)</title><rect x="360.5" y="405" width="3.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="363.47" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.3" y="453" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.28" y="463.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (40,404,040 samples, 0.21%)</title><rect x="829.4" y="421" width="2.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="832.44" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="29.5" y="437" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.54" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="1154.7" y="389" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1157.70" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="231.2" y="437" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="234.25" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.22" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="106.4" y="373" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.44" y="383.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (70,707,070 samples, 0.37%)</title><rect x="394.5" y="485" width="4.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="397.51" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.11%)</title><rect x="357.9" y="421" width="1.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="360.95" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="828.2" y="421" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="831.18" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (50,505,050 samples, 0.27%)</title><rect x="1094.2" y="437" width="3.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1097.19" y="447.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (20,202,020 samples, 0.11%)</title><rect x="363.6" y="453" width="1.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="366.62" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1156.0" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1158.96" y="271.5" ></text>
</g>
<g >
<title>sim::BaseHasher::get_hash (20,202,020 samples, 0.11%)</title><rect x="1120.7" y="453" width="1.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1123.66" y="463.5" ></text>
</g>
<g >
<title>vsnprintf (20,202,020 samples, 0.11%)</title><rect x="371.2" y="373" width="1.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="374.19" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (30,303,030 samples, 0.16%)</title><rect x="110.2" y="453" width="1.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="113.22" y="463.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::update (141,414,140 samples, 0.75%)</title><rect x="374.3" y="469" width="8.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="377.34" y="479.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="372.4" y="421" width="0.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="375.45" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="111.5" y="389" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="114.49" y="399.5" ></text>
</g>
<g >
<title>sim::Link::~Link (70,707,070 samples, 0.37%)</title><rect x="19.5" y="469" width="4.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="22.46" y="479.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (50,505,050 samples, 0.27%)</title><rect x="838.3" y="453" width="3.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="841.27" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="831.3" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="834.34" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="831.3" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="834.34" y="175.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (50,505,050 samples, 0.27%)</title><rect x="112.7" y="469" width="3.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="115.75" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.3" y="437" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.28" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1173.0" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.98" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="59.8" y="165" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="62.80" y="175.5" ></text>
</g>
<g >
<title>std::ostream::put (30,303,030 samples, 0.16%)</title><rect x="101.4" y="485" width="1.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="104.40" y="495.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (484,848,480 samples, 2.56%)</title><rect x="211.1" y="501" width="30.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="214.08" y="511.5" >si..</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1104.9" y="437" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1107.90" y="447.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::export_to_files (151,515,150 samples, 0.80%)</title><rect x="106.4" y="517" width="9.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="109.44" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.21%)</title><rect x="1154.1" y="405" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1157.07" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1144.0" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.99" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="437" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>YAML::Stream::peek (10,101,010 samples, 0.05%)</title><rect x="1187.5" y="277" width="0.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1190.48" y="287.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_outlinks (40,404,040 samples, 0.21%)</title><rect x="1157.2" y="485" width="2.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1160.22" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="103.3" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="106.29" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="25.1" y="485" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.13" y="495.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="30.2" y="485" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="33.17" y="495.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (121,212,120 samples, 0.64%)</title><rect x="136.1" y="517" width="7.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="139.07" y="527.5" ></text>
</g>
<g >
<title>malloc (121,212,120 samples, 0.64%)</title><rect x="625.2" y="453" width="7.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="628.21" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="107.7" y="293" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.70" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="37" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.22" y="47.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.11%)</title><rect x="357.9" y="437" width="1.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="360.95" y="447.5" ></text>
</g>
<g >
<title>_IO_file_open (20,202,020 samples, 0.11%)</title><rect x="107.7" y="421" width="1.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="110.70" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="1155.3" y="309" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1158.33" y="319.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.27%)</title><rect x="49.7" y="469" width="3.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="52.71" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="28.9" y="453" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="31.91" y="463.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (20,202,020 samples, 0.11%)</title><rect x="10.6" y="469" width="1.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.63" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="107.7" y="373" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.70" y="383.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (292,929,290 samples, 1.55%)</title><rect x="83.1" y="485" width="18.3" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="86.12" y="495.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (15,626,262,470 samples, 82.64%)</title><rect x="155.0" y="517" width="975.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="157.98" y="527.5" >sim::Scheduler::tick</text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;, std::weak_ptr&lt;sim::IProcessingDevice&gt;&amp;&gt; (1,666,666,650 samples, 8.81%)</title><rect x="983.9" y="485" width="104.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="986.88" y="495.5" >void sim::Sc..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="217.4" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="220.38" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="114.0" y="389" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="117.01" y="399.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (30,303,030 samples, 0.16%)</title><rect x="377.5" y="453" width="1.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="380.49" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (60,606,060 samples, 0.32%)</title><rect x="52.9" y="485" width="3.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="55.86" y="495.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (20,202,020 samples, 0.11%)</title><rect x="102.0" y="469" width="1.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="105.03" y="479.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10,101,010 samples, 0.05%)</title><rect x="1137.7" y="485" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1140.68" y="495.5" ></text>
</g>
<g >
<title>sim::Host::process (474,747,470 samples, 2.51%)</title><rect x="354.2" y="485" width="29.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="357.17" y="495.5" >si..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="69" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.22" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.21%)</title><rect x="57.9" y="357" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.91" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1151.5" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1154.55" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="81.9" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="84.86" y="335.5" ></text>
</g>
<g >
<title>sim::Host::~Host (121,212,120 samples, 0.64%)</title><rect x="11.9" y="469" width="7.6" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="14.89" y="479.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_links (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="517" width="0.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1192.37" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (10,101,010 samples, 0.05%)</title><rect x="1179.3" y="501" width="0.6" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1182.28" y="511.5" ></text>
</g>
<g >
<title>cfree (363,636,360 samples, 1.92%)</title><rect x="188.4" y="501" width="22.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="191.39" y="511.5" >c..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1173.0" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.98" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_erase (50,505,050 samples, 0.27%)</title><rect x="1162.3" y="485" width="3.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1165.26" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.21%)</title><rect x="57.9" y="245" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.91" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.22" y="255.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (50,505,050 samples, 0.27%)</title><rect x="1110.6" y="453" width="3.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1113.58" y="463.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1183.1" y="309" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1186.07" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.21%)</title><rect x="16.9" y="437" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="19.93" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="597" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::memory_holder*,  (10,101,010 samples, 0.05%)</title><rect x="1188.7" y="501" width="0.7" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1191.74" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="103.3" y="421" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="106.29" y="431.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (40,404,040 samples, 0.21%)</title><rect x="835.1" y="437" width="2.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="838.12" y="447.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (20,202,020 samples, 0.11%)</title><rect x="1183.7" y="309" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1186.70" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="107.1" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.07" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="561.5" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="564.55" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_erase (30,303,030 samples, 0.16%)</title><rect x="1160.4" y="485" width="1.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1163.37" y="495.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (10,101,010 samples, 0.05%)</title><rect x="382.5" y="437" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="385.53" y="447.5" ></text>
</g>
<g >
<title>vsnprintf (60,606,060 samples, 0.32%)</title><rect x="842.1" y="405" width="3.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="845.05" y="415.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.11%)</title><rect x="218.0" y="405" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="221.01" y="415.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (242,424,240 samples, 1.28%)</title><rect x="336.5" y="485" width="15.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="339.52" y="495.5" ></text>
</g>
<g >
<title>auto sim::YamlParser::process_links (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="501" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1192.37" y="511.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (353,535,350 samples, 1.87%)</title><rect x="61.1" y="485" width="22.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="64.06" y="495.5" >s..</text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (10,101,010 samples, 0.05%)</title><rect x="1183.1" y="341" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1186.07" y="351.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="30.2" y="469" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="33.17" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="107.1" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.07" y="287.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (80,808,080 samples, 0.43%)</title><rect x="1105.5" y="437" width="5.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1108.53" y="447.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.11%)</title><rect x="249.5" y="437" width="1.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="252.53" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="29.5" y="453" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.54" y="463.5" ></text>
</g>
<g >
<title>operator delete (50,505,050 samples, 0.27%)</title><rect x="620.8" y="469" width="3.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="623.80" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1144.0" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.99" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="57.3" y="437" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="60.28" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="217.4" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="220.38" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="107.7" y="357" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.70" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1135.2" y="485" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1138.16" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="59.8" y="149" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="62.80" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1173.0" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.98" y="367.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,101,010 samples, 0.05%)</title><rect x="241.3" y="485" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="244.34" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (171,717,170 samples, 0.91%)</title><rect x="779.0" y="453" width="10.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="782.02" y="463.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (575,757,570 samples, 3.04%)</title><rect x="848.4" y="469" width="35.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="851.35" y="479.5" >sim..</text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (60,606,060 samples, 0.32%)</title><rect x="828.2" y="437" width="3.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="831.18" y="447.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (10,101,010 samples, 0.05%)</title><rect x="1183.1" y="325" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1186.07" y="335.5" ></text>
</g>
<g >
<title>sim::Host::notify_about_arrival (10,101,010 samples, 0.05%)</title><rect x="212.3" y="469" width="0.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="215.34" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="30.2" y="453" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="33.17" y="463.5" ></text>
</g>
<g >
<title>sim::Event::Event (303,030,300 samples, 1.60%)</title><rect x="317.6" y="485" width="18.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="320.61" y="495.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (60,606,060 samples, 0.32%)</title><rect x="828.2" y="453" width="3.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="831.18" y="463.5" ></text>
</g>
<g >
<title>sim::Scheduler::get_current_time (10,101,010 samples, 0.05%)</title><rect x="251.4" y="485" width="0.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="254.42" y="495.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (80,808,080 samples, 0.43%)</title><rect x="841.4" y="437" width="5.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="844.42" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (151,515,150 samples, 0.80%)</title><rect x="1167.3" y="485" width="9.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1170.31" y="495.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.11%)</title><rect x="1053.2" y="469" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1056.22" y="479.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::node_data*,  (10,101,010 samples, 0.05%)</title><rect x="1188.7" y="421" width="0.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1191.74" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.27%)</title><rect x="232.5" y="357" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="235.51" y="367.5" ></text>
</g>
<g >
<title>operator new (232,323,230 samples, 1.23%)</title><rect x="810.5" y="453" width="14.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="813.53" y="463.5" ></text>
</g>
<g >
<title>vsnprintf (202,020,200 samples, 1.07%)</title><rect x="87.5" y="437" width="12.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="90.53" y="447.5" ></text>
</g>
<g >
<title>malloc (202,020,200 samples, 1.07%)</title><rect x="1054.5" y="453" width="12.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1057.48" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="217.4" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="220.38" y="287.5" ></text>
</g>
<g >
<title>write (20,202,020 samples, 0.11%)</title><rect x="106.4" y="421" width="1.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="109.44" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.21%)</title><rect x="27.0" y="469" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="30.02" y="479.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::export_to_files (1,313,131,300 samples, 6.94%)</title><rect x="24.5" y="517" width="81.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="27.50" y="527.5" >sim::Link..</text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.05%)</title><rect x="840.8" y="421" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="843.79" y="431.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (30,303,030 samples, 0.16%)</title><rect x="80.6" y="453" width="1.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="83.60" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1173.0" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.98" y="271.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (50,505,050 samples, 0.27%)</title><rect x="825.0" y="453" width="3.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="828.03" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="30.2" y="421" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="33.17" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.21%)</title><rect x="245.1" y="437" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="248.12" y="447.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="840.8" y="437" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="843.79" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1109.3" y="341" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1112.32" y="351.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::data[abi:cxx11] (20,202,020 samples, 0.11%)</title><rect x="29.5" y="501" width="1.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="32.54" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="1164.8" y="469" width="0.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1167.79" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (212,121,210 samples, 1.12%)</title><rect x="10.6" y="501" width="13.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.63" y="511.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (20,202,020 samples, 0.11%)</title><rect x="354.2" y="453" width="1.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="357.17" y="463.5" ></text>
</g>
<g >
<title>std::locale::~locale (10,101,010 samples, 0.05%)</title><rect x="1100.5" y="421" width="0.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1103.49" y="431.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="378.8" y="389" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="381.75" y="399.5" ></text>
</g>
<g >
<title>std::locale::locale (20,202,020 samples, 0.11%)</title><rect x="230.0" y="453" width="1.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="232.99" y="463.5" ></text>
</g>
<g >
<title>sim::Event::get_time (111,111,110 samples, 0.59%)</title><rect x="129.1" y="517" width="7.0" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="132.13" y="527.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (30,303,030 samples, 0.16%)</title><rect x="1095.4" y="421" width="1.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1098.45" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="85" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.22" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (20,202,020 samples, 0.11%)</title><rect x="106.4" y="469" width="1.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="109.44" y="479.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.05%)</title><rect x="100.1" y="453" width="0.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="103.14" y="463.5" ></text>
</g>
<g >
<title>sim::Process::~Process (90,909,090 samples, 0.48%)</title><rect x="149.3" y="517" width="5.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="152.31" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="101" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.22" y="111.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="277" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1189.22" y="287.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (50,505,050 samples, 0.27%)</title><rect x="360.5" y="421" width="3.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="363.47" y="431.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (10,101,010 samples, 0.05%)</title><rect x="354.8" y="437" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="357.80" y="447.5" ></text>
</g>
<g >
<title>open64 (20,202,020 samples, 0.11%)</title><rect x="107.7" y="405" width="1.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="110.70" y="415.5" ></text>
</g>
<g >
<title>Logger::warn (60,606,060 samples, 0.32%)</title><rect x="306.3" y="485" width="3.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="309.26" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::node*,  (10,101,010 samples, 0.05%)</title><rect x="1188.7" y="453" width="0.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1191.74" y="463.5" ></text>
</g>
<g >
<title>sim::SendData::operator (545,454,540 samples, 2.88%)</title><rect x="1091.7" y="501" width="34.0" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1094.67" y="511.5" >si..</text>
</g>
<g >
<title>writev (20,202,020 samples, 0.11%)</title><rect x="81.2" y="437" width="1.3" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="84.23" y="447.5" ></text>
</g>
</g>
</svg>
