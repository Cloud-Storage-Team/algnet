<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_erase (40,404,040 samples, 0.12%)</title><rect x="1172.6" y="469" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1175.63" y="479.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.27%)</title><rect x="1185.7" y="405" width="3.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1188.75" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1160.9" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.93" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="35.5" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.53" y="287.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (90,909,090 samples, 0.27%)</title><rect x="551.8" y="469" width="3.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="554.78" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="38.0" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.01" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="331.9" y="453" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="334.95" y="463.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (60,606,060 samples, 0.18%)</title><rect x="1185.7" y="341" width="2.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1188.75" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.21%)</title><rect x="67.4" y="309" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.44" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="51.5" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="54.48" y="207.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (20,202,020 samples, 0.06%)</title><rect x="1148.9" y="453" width="0.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1151.87" y="463.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (262,626,260 samples, 0.78%)</title><rect x="701.1" y="437" width="9.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="704.05" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (212,121,210 samples, 0.63%)</title><rect x="11.4" y="469" width="7.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="14.42" y="479.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (30,303,030 samples, 0.09%)</title><rect x="903.5" y="453" width="1.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="906.51" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="51.5" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="54.48" y="303.5" ></text>
</g>
<g >
<title>YAML::Stream::get (20,202,020 samples, 0.06%)</title><rect x="1186.1" y="277" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1189.10" y="287.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (70,707,070 samples, 0.21%)</title><rect x="36.2" y="453" width="2.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="39.24" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="51.5" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="54.48" y="223.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1180.1" y="453" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1183.07" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.21%)</title><rect x="36.2" y="357" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.24" y="367.5" ></text>
</g>
<g >
<title>std::locale::~locale (10,101,010 samples, 0.03%)</title><rect x="1148.5" y="453" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1151.52" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="338.7" y="133" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.68" y="143.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="1180.4" y="437" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1183.43" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1181.1" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1184.14" y="319.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="577.3" y="421" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="580.31" y="431.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1185.7" y="229" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1188.75" y="239.5" ></text>
</g>
<g >
<title>malloc (90,909,090 samples, 0.27%)</title><rect x="741.5" y="453" width="3.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="744.47" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="15.7" y="421" width="2.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.67" y="431.5" ></text>
</g>
<g >
<title>YAML::Load (90,909,090 samples, 0.27%)</title><rect x="1185.7" y="485" width="3.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1188.75" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.21%)</title><rect x="36.2" y="261" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.24" y="271.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (20,202,020 samples, 0.06%)</title><rect x="1188.2" y="277" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1191.23" y="287.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (50,505,050 samples, 0.15%)</title><rect x="583.3" y="469" width="1.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="586.34" y="479.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (20,202,020 samples, 0.06%)</title><rect x="1170.9" y="469" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1173.85" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.35" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="338.0" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.97" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1175.5" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1178.46" y="383.5" ></text>
</g>
<g >
<title>sim::Event::get_time (171,717,170 samples, 0.51%)</title><rect x="83.4" y="501" width="6.0" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="86.40" y="511.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (585,858,580 samples, 1.74%)</title><rect x="332.3" y="485" width="20.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="335.30" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (151,515,150 samples, 0.45%)</title><rect x="346.5" y="373" width="5.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="349.48" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1160.9" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.93" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="63.9" y="293" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.89" y="303.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (20,202,020 samples, 0.06%)</title><rect x="1188.2" y="309" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1191.23" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.27%)</title><rect x="74.9" y="373" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="77.89" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="338.0" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.97" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (10,101,010 samples, 0.03%)</title><rect x="578.4" y="453" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="581.37" y="463.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="357" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1191.94" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="18.5" y="421" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.51" y="431.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnScalar (10,101,010 samples, 0.03%)</title><rect x="1187.9" y="325" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1190.87" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="35.5" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.53" y="335.5" ></text>
</g>
<g >
<title>sim::RoutingModule::update_routing_table (161,616,160 samples, 0.48%)</title><rect x="1157.4" y="485" width="5.7" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1160.38" y="495.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (70,707,070 samples, 0.21%)</title><rect x="589.0" y="469" width="2.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="592.01" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="63.9" y="373" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.89" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 0.66%)</title><rect x="42.6" y="389" width="7.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="45.62" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (20,202,020 samples, 0.06%)</title><rect x="559.9" y="405" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="562.93" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.7" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.70" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1175.5" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1178.46" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1178.7" y="389" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1181.65" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1160.9" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.93" y="255.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1147.1" y="405" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1150.10" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1168.0" y="405" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.02" y="415.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="894.6" y="405" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="897.65" y="415.5" ></text>
</g>
<g >
<title>strlen@plt (10,101,010 samples, 0.03%)</title><rect x="1017.3" y="453" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1020.33" y="463.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.03%)</title><rect x="899.6" y="421" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="902.61" y="431.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (40,404,040 samples, 0.12%)</title><rect x="571.3" y="405" width="1.4" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="574.28" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1175.5" y="453" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1178.46" y="463.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.27%)</title><rect x="1185.7" y="389" width="3.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1188.75" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="64.6" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="67.60" y="191.5" ></text>
</g>
<g >
<title>vsnprintf (40,404,040 samples, 0.12%)</title><rect x="571.3" y="357" width="1.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="574.28" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.03%)</title><rect x="564.2" y="341" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="567.19" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1168.4" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.37" y="319.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (20,202,020 samples, 0.06%)</title><rect x="1145.0" y="421" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1147.97" y="431.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (50,505,050 samples, 0.15%)</title><rect x="1186.1" y="293" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1189.10" y="303.5" ></text>
</g>
<g >
<title>sim::TcpTahoeCC::on_ack (10,101,010 samples, 0.03%)</title><rect x="578.0" y="437" width="0.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="581.02" y="447.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="562.8" y="389" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="565.77" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="341" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1191.94" y="351.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (20,202,020 samples, 0.06%)</title><rect x="1145.7" y="421" width="0.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1148.68" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="51.5" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="54.48" y="255.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (30,303,030 samples, 0.09%)</title><rect x="902.1" y="405" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="905.09" y="415.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="33.4" y="437" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="36.40" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (252,525,250 samples, 0.75%)</title><rect x="54.7" y="405" width="8.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="57.68" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="64.2" y="229" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="67.25" y="239.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (20,202,020 samples, 0.06%)</title><rect x="351.8" y="437" width="0.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="354.80" y="447.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_packets (141,414,140 samples, 0.42%)</title><rect x="561.7" y="453" width="5.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="564.71" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1127.6" y="453" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1130.60" y="463.5" ></text>
</g>
<g >
<title>vsnprintf (30,303,030 samples, 0.09%)</title><rect x="564.9" y="341" width="1.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="567.90" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="337.6" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.62" y="319.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (90,909,090 samples, 0.27%)</title><rect x="895.0" y="453" width="3.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="898.00" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1159.9" y="421" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1162.86" y="431.5" ></text>
</g>
<g >
<title>sim::TcpFlow::update (333,333,330 samples, 0.99%)</title><rect x="566.7" y="453" width="11.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="569.67" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="21.3" y="421" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.35" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.18%)</title><rect x="67.8" y="277" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.79" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (2,222,222,200 samples, 6.61%)</title><rect x="939.0" y="453" width="78.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="941.97" y="463.5" >std::_Rb_..</text>
</g>
<g >
<title>operator delete (20,202,020 samples, 0.06%)</title><rect x="1156.3" y="485" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1159.32" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="35.5" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.53" y="271.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1167.0" y="469" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1169.95" y="479.5" ></text>
</g>
<g >
<title>sim::Link::transmit (60,606,060 samples, 0.18%)</title><rect x="354.3" y="469" width="2.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="357.28" y="479.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (292,929,290 samples, 0.87%)</title><rect x="837.9" y="421" width="10.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="840.91" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="51.5" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="54.48" y="319.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (101,010,100 samples, 0.30%)</title><rect x="340.8" y="437" width="3.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="343.81" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="889.7" y="405" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="892.68" y="415.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.09%)</title><rect x="1160.6" y="453" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1163.57" y="463.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.03%)</title><rect x="340.5" y="421" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="343.46" y="431.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="1160.6" y="437" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1163.57" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="569.5" y="389" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="572.51" y="399.5" ></text>
</g>
<g >
<title>_IO_file_open (70,707,070 samples, 0.21%)</title><rect x="36.2" y="405" width="2.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="39.24" y="415.5" ></text>
</g>
<g >
<title>sim::Link::get_max_to_ingress_queue_size (131,313,130 samples, 0.39%)</title><rect x="578.7" y="469" width="4.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="581.73" y="479.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="344.0" y="421" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="347.00" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="63.9" y="405" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.89" y="415.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::export_to_files (323,232,320 samples, 0.96%)</title><rect x="67.1" y="501" width="11.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="70.09" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="21.3" y="437" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.35" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="557.5" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="560.45" y="335.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (181,818,180 samples, 0.54%)</title><rect x="1138.2" y="405" width="6.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1141.23" y="415.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (20,202,020 samples, 0.06%)</title><rect x="900.0" y="421" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="902.96" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.9" y="485" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.86" y="495.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="19.2" y="485" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="22.22" y="495.5" ></text>
</g>
<g >
<title>__libc_start_main (33,595,959,260 samples, 99.94%)</title><rect x="10.7" y="565" width="1179.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.71" y="575.5" >__libc_start_main</text>
</g>
<g >
<title>sim::MetricsStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="897.1" y="389" width="0.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="900.13" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="574.1" y="357" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="577.12" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="572.3" y="293" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="575.34" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="35.9" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.88" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.9" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.93" y="399.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (10,101,010 samples, 0.03%)</title><rect x="894.6" y="421" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="897.65" y="431.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (151,515,150 samples, 0.45%)</title><rect x="346.5" y="405" width="5.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="349.48" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="337.6" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.62" y="351.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (20,202,020 samples, 0.06%)</title><rect x="559.9" y="421" width="0.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="562.93" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.21%)</title><rect x="36.2" y="277" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.24" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="69.2" y="117" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.21" y="127.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (25,919,191,660 samples, 77.10%)</title><rect x="244.7" y="501" width="909.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="247.72" y="511.5" >sim::Scheduler::tick</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="557.5" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="560.45" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1177.6" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.59" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1160.9" y="389" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.93" y="399.5" ></text>
</g>
<g >
<title>sim::Event::Event (20,202,020 samples, 0.06%)</title><rect x="354.6" y="437" width="0.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="357.64" y="447.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::data[abi:cxx11] (20,202,020 samples, 0.06%)</title><rect x="21.3" y="485" width="0.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="24.35" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="69.6" y="69" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.57" y="79.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_hosts (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="485" width="0.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1192.29" y="495.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1133.3" y="437" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1136.27" y="447.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10,101,010 samples, 0.03%)</title><rect x="577.7" y="421" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="580.66" y="431.5" ></text>
</g>
<g >
<title>YAML::detail::memory::create_node (10,101,010 samples, 0.03%)</title><rect x="1187.9" y="293" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1190.87" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="338.0" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.97" y="367.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::Push (10,101,010 samples, 0.03%)</title><rect x="1187.9" y="309" width="0.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1190.87" y="319.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1185.7" y="261" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1188.75" y="271.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.09%)</title><rect x="1178.3" y="437" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1181.30" y="447.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (373,737,370 samples, 1.11%)</title><rect x="339.4" y="453" width="13.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="342.39" y="463.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1147.1" y="421" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1150.10" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="421" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>malloc (555,555,550 samples, 1.65%)</title><rect x="872.3" y="421" width="19.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="875.31" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="1161.6" y="405" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.63" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="68.1" y="181" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.15" y="191.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="897.1" y="357" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="900.13" y="367.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (20,202,020 samples, 0.06%)</title><rect x="560.6" y="421" width="0.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="563.64" y="431.5" ></text>
</g>
<g >
<title>sim::Scheduler::get_current_time (10,101,010 samples, 0.03%)</title><rect x="1147.5" y="453" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1150.45" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (232,323,230 samples, 0.69%)</title><rect x="10.7" y="533" width="8.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.71" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (161,616,160 samples, 0.48%)</title><rect x="1138.9" y="341" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1141.94" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="557.5" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="560.45" y="367.5" ></text>
</g>
<g >
<title>sim::BaseHasher::get_hash (30,303,030 samples, 0.09%)</title><rect x="1146.4" y="437" width="1.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1149.39" y="447.5" ></text>
</g>
<g >
<title>void sim::YamlParser::process_identifiables&lt;sim::IHost&gt; (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="469" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1192.29" y="479.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="903.9" y="421" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="906.86" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.27%)</title><rect x="74.9" y="389" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="77.89" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1160.9" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.93" y="303.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1185.7" y="293" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1188.75" y="303.5" ></text>
</g>
<g >
<title>sim::IdentifierFactory::~IdentifierFactory (232,323,230 samples, 0.69%)</title><rect x="10.7" y="501" width="8.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="13.71" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="338.0" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.97" y="335.5" ></text>
</g>
<g >
<title>sim::Event::Event (232,323,230 samples, 0.69%)</title><rect x="387.6" y="469" width="8.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="390.61" y="479.5" ></text>
</g>
<g >
<title>pthread_once@plt (10,101,010 samples, 0.03%)</title><rect x="50.8" y="437" width="0.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="53.78" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.03%)</title><rect x="570.6" y="373" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="573.57" y="383.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="1136.1" y="437" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1139.11" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="339.7" y="421" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="342.75" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1160.9" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.93" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::shared_ptr&lt;sim::ILink&gt;  (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="453" width="0.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1192.65" y="463.5" ></text>
</g>
<g >
<title>vsnprintf (20,202,020 samples, 0.06%)</title><rect x="559.9" y="389" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="562.93" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="1167.7" y="437" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1170.66" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1168.4" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.37" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (161,616,160 samples, 0.48%)</title><rect x="1138.9" y="357" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1141.94" y="367.5" ></text>
</g>
<g >
<title>vsnprintf (252,525,250 samples, 0.75%)</title><rect x="54.7" y="421" width="8.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="57.68" y="431.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (40,404,040 samples, 0.12%)</title><rect x="571.3" y="373" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="574.28" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="51.5" y="389" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="54.48" y="399.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet const&amp;&gt; (10,101,010 samples, 0.03%)</title><rect x="573.1" y="421" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="576.05" y="431.5" ></text>
</g>
<g >
<title>sim::Simulator::recalculate_paths (888,888,880 samples, 2.64%)</title><rect x="1154.5" y="501" width="31.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1157.54" y="511.5" >si..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="565" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1161.3" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.28" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="51.5" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="54.48" y="335.5" ></text>
</g>
<g >
<title>open64 (70,707,070 samples, 0.21%)</title><rect x="67.4" y="389" width="2.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="70.44" y="399.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="869.8" y="437" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="872.83" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="383.0" y="469" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="386.00" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.35" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1168.0" y="421" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.02" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1168.4" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.37" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="337.6" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.62" y="287.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (20,202,020 samples, 0.06%)</title><rect x="900.0" y="437" width="0.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="902.96" y="447.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1159.9" y="453" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1162.86" y="463.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="485" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1191.94" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="352.2" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="355.16" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (252,525,250 samples, 0.75%)</title><rect x="54.7" y="437" width="8.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="57.68" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1181.1" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1184.14" y="351.5" ></text>
</g>
<g >
<title>Logger::get_instance (30,303,030 samples, 0.09%)</title><rect x="381.2" y="469" width="1.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="384.23" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::weak_ptr&lt;sim::ILink&gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (30,303,030 samples, 0.09%)</title><rect x="1159.2" y="469" width="1.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1162.15" y="479.5" ></text>
</g>
<g >
<title>sim::Link::get_from (10,101,010 samples, 0.03%)</title><rect x="1158.8" y="453" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.80" y="463.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="558.5" y="421" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="561.52" y="431.5" ></text>
</g>
<g >
<title>Logger::get_instance (90,909,090 samples, 0.27%)</title><rect x="771.6" y="437" width="3.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="774.61" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (30,303,030 samples, 0.09%)</title><rect x="1181.8" y="485" width="1.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1184.84" y="495.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="355.7" y="421" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="358.70" y="431.5" ></text>
</g>
<g >
<title>sim::Link::arrive (585,858,580 samples, 1.74%)</title><rect x="332.3" y="469" width="20.6" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="335.30" y="479.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (303,030,300 samples, 0.90%)</title><rect x="54.3" y="453" width="10.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="57.32" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1155.3" y="485" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1158.25" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="335.1" y="421" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="338.14" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="15.7" y="405" width="2.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.67" y="415.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="1173.3" y="453" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1176.34" y="463.5" ></text>
</g>
<g >
<title>sim::Link::~Link (90,909,090 samples, 0.27%)</title><rect x="15.3" y="453" width="3.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="18.32" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="35.5" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.53" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::node*,  (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="389" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1191.94" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.18%)</title><rect x="67.8" y="261" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.79" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="557.5" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="560.45" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="893.6" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="896.58" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1160.9" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.93" y="271.5" ></text>
</g>
<g >
<title>sim::TcpFlow::~TcpFlow (10,101,010 samples, 0.03%)</title><rect x="18.5" y="453" width="0.4" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="21.51" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="559.9" y="357" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="562.93" y="367.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="555.3" y="453" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="558.32" y="463.5" ></text>
</g>
<g >
<title>all (33,616,161,280 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.15%)</title><rect x="29.1" y="469" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="32.15" y="479.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (121,212,120 samples, 0.36%)</title><rect x="569.2" y="437" width="4.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="572.15" y="447.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (30,303,030 samples, 0.09%)</title><rect x="564.9" y="389" width="1.1" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="567.90" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="63.9" y="357" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.89" y="367.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="570.2" y="389" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="573.22" y="399.5" ></text>
</g>
<g >
<title>fopen (70,707,070 samples, 0.21%)</title><rect x="36.2" y="437" width="2.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="39.24" y="447.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::_List::_Impl_deleter::operator (10,101,010 samples, 0.03%)</title><rect x="78.1" y="485" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="81.08" y="495.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="570.9" y="389" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="573.93" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (20,202,020 samples, 0.06%)</title><rect x="35.5" y="421" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="38.53" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="29.9" y="437" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="32.86" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="560.3" y="325" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="563.29" y="335.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (10,101,010 samples, 0.03%)</title><rect x="891.8" y="437" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="894.81" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="69.6" y="37" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.57" y="47.5" ></text>
</g>
<g >
<title>virtual thunk to sim::RoutingModule::get_id[abi:cxx11] (10,101,010 samples, 0.03%)</title><rect x="1181.5" y="469" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1184.49" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="338.7" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.68" y="207.5" ></text>
</g>
<g >
<title>sim::is_valid_link (30,303,030 samples, 0.09%)</title><rect x="1158.1" y="469" width="1.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1161.09" y="479.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (4,212,121,170 samples, 12.53%)</title><rect x="89.4" y="501" width="147.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="92.42" y="511.5" >sim::Event::operat..</text>
</g>
<g >
<title>sim::TcpFlow::send_packet_now (121,212,120 samples, 0.36%)</title><rect x="562.4" y="437" width="4.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="565.42" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.03%)</title><rect x="33.8" y="469" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="36.76" y="479.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (30,303,030 samples, 0.09%)</title><rect x="1187.9" y="341" width="1.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1190.87" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="349.3" y="325" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="352.32" y="335.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (30,303,030 samples, 0.09%)</title><rect x="564.9" y="373" width="1.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="567.90" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="64.2" y="197" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="67.25" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (80,808,080 samples, 0.24%)</title><rect x="1160.2" y="469" width="2.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1163.22" y="479.5" ></text>
</g>
<g >
<title>sim::Process::operator (101,010,100 samples, 0.30%)</title><rect x="237.3" y="501" width="3.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="240.28" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (70,707,070 samples, 0.21%)</title><rect x="31.3" y="469" width="2.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="34.27" y="479.5" ></text>
</g>
<g >
<title>malloc (80,808,080 samples, 0.24%)</title><rect x="1108.4" y="437" width="2.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1111.45" y="447.5" ></text>
</g>
<g >
<title>sim::Host::~Host (111,111,110 samples, 0.33%)</title><rect x="11.4" y="453" width="3.9" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="14.42" y="463.5" ></text>
</g>
<g >
<title>sim::Host::send_packet (646,464,640 samples, 1.92%)</title><rect x="1126.9" y="469" width="22.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1129.89" y="479.5" >s..</text>
</g>
<g >
<title>sim::LinkQueue::pop (80,808,080 samples, 0.24%)</title><rect x="892.2" y="437" width="2.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="895.16" y="447.5" ></text>
</g>
<g >
<title>operator new (141,414,140 samples, 0.42%)</title><rect x="1106.3" y="453" width="5.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1109.32" y="463.5" ></text>
</g>
<g >
<title>sim::SendData::operator (656,565,650 samples, 1.95%)</title><rect x="1126.5" y="485" width="23.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1129.53" y="495.5" >s..</text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (30,303,030 samples, 0.09%)</title><rect x="558.5" y="437" width="1.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="561.52" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1177.6" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.59" y="367.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="575.2" y="421" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="578.18" y="431.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="903.2" y="437" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="906.16" y="447.5" ></text>
</g>
<g >
<title>nons (33,616,161,280 samples, 100.00%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >nons</text>
</g>
<g >
<title>sim::TcpFlow::get_id[abi:cxx11] (10,101,010 samples, 0.03%)</title><rect x="1146.7" y="421" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1149.74" y="431.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (10,101,010 samples, 0.03%)</title><rect x="52.9" y="437" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="55.90" y="447.5" ></text>
</g>
<g >
<title>open64 (70,707,070 samples, 0.21%)</title><rect x="36.2" y="389" width="2.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="39.24" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (33,595,959,260 samples, 99.94%)</title><rect x="10.7" y="549" width="1179.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.71" y="559.5" >[libc.so.6]</text>
</g>
<g >
<title>pthread_once (10,101,010 samples, 0.03%)</title><rect x="63.5" y="437" width="0.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="66.54" y="447.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (70,707,070 samples, 0.21%)</title><rect x="67.4" y="469" width="2.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="70.44" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="63.9" y="277" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.89" y="287.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1159.9" y="437" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1162.86" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="18.5" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.51" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="47.9" y="357" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="50.94" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.7" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.70" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (212,121,210 samples, 0.63%)</title><rect x="56.1" y="389" width="7.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="59.09" y="399.5" ></text>
</g>
<g >
<title>operator new (585,858,580 samples, 1.74%)</title><rect x="871.2" y="437" width="20.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="874.24" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.35" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1161.3" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.28" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="890.7" y="389" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="893.75" y="399.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (20,202,020 samples, 0.06%)</title><rect x="1188.2" y="293" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1191.23" y="303.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="576.2" y="405" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="579.24" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="572.0" y="309" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="574.99" y="319.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (20,202,020 samples, 0.06%)</title><rect x="35.5" y="453" width="0.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="38.53" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="485" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>sim::TcpFlow::retransmit_packet (10,101,010 samples, 0.03%)</title><rect x="1151.4" y="469" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1154.35" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="892.2" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="895.16" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="897.1" y="341" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="900.13" y="351.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1177.6" y="437" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1180.59" y="447.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.27%)</title><rect x="1185.7" y="373" width="3.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1188.75" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (70,707,070 samples, 0.21%)</title><rect x="1019.8" y="469" width="2.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1022.81" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (30,303,030 samples, 0.09%)</title><rect x="1174.8" y="469" width="1.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1177.75" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1177.6" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.59" y="271.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (20,202,020 samples, 0.06%)</title><rect x="35.5" y="469" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="38.53" y="479.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (30,303,030 samples, 0.09%)</title><rect x="1130.1" y="405" width="1.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1133.08" y="415.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.06%)</title><rect x="35.5" y="437" width="0.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="38.53" y="447.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.12%)</title><rect x="1167.7" y="453" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1170.66" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="19.2" y="453" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.22" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1161.3" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.28" y="175.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (131,313,130 samples, 0.39%)</title><rect x="334.8" y="453" width="4.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="337.78" y="463.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="338.3" y="373" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="341.33" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="63.9" y="341" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.89" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="68.5" y="165" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.50" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="565.3" y="293" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="568.25" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="51.5" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="54.48" y="239.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1185.7" y="245" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1188.75" y="255.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (50,505,050 samples, 0.15%)</title><rect x="556.0" y="437" width="1.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="559.03" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1175.5" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1178.46" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="21.3" y="453" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.35" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="337.6" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.62" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1160.9" y="405" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.93" y="415.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="563.8" y="373" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="566.83" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="895.0" y="405" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="898.00" y="415.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (20,202,020 samples, 0.06%)</title><rect x="898.2" y="453" width="0.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="901.19" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (20,202,020 samples, 0.06%)</title><rect x="33.0" y="453" width="0.8" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="36.05" y="463.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="338.3" y="389" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="341.33" y="399.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (60,606,060 samples, 0.18%)</title><rect x="555.7" y="453" width="2.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="558.68" y="463.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1187.5" y="197" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.52" y="207.5" ></text>
</g>
<g >
<title>std::locale::~locale (10,101,010 samples, 0.03%)</title><rect x="340.5" y="405" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="343.46" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="37.3" y="197" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.30" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1175.5" y="389" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1178.46" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="894.3" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="897.29" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1177.6" y="405" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.59" y="415.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (10,101,010 samples, 0.03%)</title><rect x="344.4" y="437" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="347.36" y="447.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (181,818,180 samples, 0.54%)</title><rect x="1138.2" y="421" width="6.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1141.23" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="338.3" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.33" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.21%)</title><rect x="67.4" y="373" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.44" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="338.0" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.97" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="35.5" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.53" y="383.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Switch::process (80,808,080 samples, 0.24%)</title><rect x="1151.7" y="485" width="2.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1154.71" y="495.5" ></text>
</g>
<g >
<title>YAML::Parser::HandleNextDocument (90,909,090 samples, 0.27%)</title><rect x="1185.7" y="469" width="3.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1188.75" y="479.5" ></text>
</g>
<g >
<title>YAML::Stream::eat (10,101,010 samples, 0.03%)</title><rect x="1188.2" y="261" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1191.23" y="271.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (10,101,010 samples, 0.03%)</title><rect x="71.0" y="453" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="73.99" y="463.5" ></text>
</g>
<g >
<title>Logger::warn (20,202,020 samples, 0.06%)</title><rect x="382.3" y="469" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="385.30" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="37.3" y="181" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.30" y="191.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_delivery_rate (40,404,040 samples, 0.12%)</title><rect x="575.9" y="437" width="1.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="578.89" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="903.2" y="405" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="906.16" y="415.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (10,101,010 samples, 0.03%)</title><rect x="1131.1" y="421" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1134.14" y="431.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (20,202,020 samples, 0.06%)</title><rect x="559.9" y="437" width="0.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="562.93" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (60,606,060 samples, 0.18%)</title><rect x="1017.7" y="469" width="2.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1020.68" y="479.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::memory_holder*,  (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="469" width="0.4" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1191.94" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="64.2" y="213" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="67.25" y="223.5" ></text>
</g>
<g >
<title>main (33,363,636,030 samples, 99.25%)</title><rect x="18.9" y="533" width="1171.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="21.86" y="543.5" >main</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="338.3" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.33" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.7" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.70" y="351.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (121,212,120 samples, 0.36%)</title><rect x="1185.7" y="517" width="4.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1188.75" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="564.9" y="325" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="567.90" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (232,323,230 samples, 0.69%)</title><rect x="10.7" y="485" width="8.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.71" y="495.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (414,141,410 samples, 1.23%)</title><rect x="38.7" y="453" width="14.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="41.72" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (10,101,010 samples, 0.03%)</title><rect x="577.0" y="405" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="579.95" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (232,323,230 samples, 0.69%)</title><rect x="10.7" y="517" width="8.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.71" y="527.5" ></text>
</g>
<g >
<title>sim::Link::get_to_ingress_queue_size (111,111,110 samples, 0.33%)</title><rect x="585.1" y="469" width="3.9" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="588.11" y="479.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="557.5" y="389" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="560.45" y="399.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="51.8" y="437" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="54.84" y="447.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.15%)</title><rect x="19.6" y="485" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="22.57" y="495.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="11.1" y="421" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="14.06" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (10,101,010 samples, 0.03%)</title><rect x="1148.2" y="453" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1151.16" y="463.5" ></text>
</g>
<g >
<title>vsnprintf (101,010,100 samples, 0.30%)</title><rect x="74.5" y="421" width="3.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="77.53" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (20,202,020 samples, 0.06%)</title><rect x="1174.0" y="469" width="0.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1177.04" y="479.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (10,101,010 samples, 0.03%)</title><rect x="555.7" y="437" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="558.68" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.7" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.70" y="303.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="903.2" y="421" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="906.16" y="431.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="1178.3" y="421" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1181.30" y="431.5" ></text>
</g>
<g >
<title>Logger::info (2,090,909,070 samples, 6.22%)</title><rect x="774.8" y="437" width="73.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="777.80" y="447.5" >Logger::..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.03%)</title><rect x="563.8" y="357" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="566.83" y="367.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.12%)</title><rect x="1161.6" y="421" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1164.63" y="431.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (30,303,030 samples, 0.09%)</title><rect x="563.5" y="389" width="1.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="566.48" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1177.6" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.59" y="335.5" ></text>
</g>
<g >
<title>Logger::warn (2,616,161,590 samples, 7.78%)</title><rect x="618.4" y="453" width="91.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="621.44" y="463.5" >Logger::warn</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="1132.6" y="437" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1135.56" y="447.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="1146.0" y="405" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1149.03" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="73.5" y="357" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="76.47" y="367.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.15%)</title><rect x="1167.3" y="469" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1170.31" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="337.6" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.62" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="68.9" y="149" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.86" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1175.5" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1178.46" y="319.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (20,202,020 samples, 0.06%)</title><rect x="1188.2" y="325" width="0.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1191.23" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="437" width="0.3" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1192.29" y="447.5" ></text>
</g>
<g >
<title>sim::Simulator::start (31,525,252,210 samples, 93.78%)</title><rect x="79.1" y="517" width="1106.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="82.14" y="527.5" >sim::Simulator::start</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="19.2" y="469" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.22" y="479.5" ></text>
</g>
<g >
<title>malloc (101,010,100 samples, 0.30%)</title><rect x="1102.8" y="453" width="3.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1105.78" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="338.7" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.68" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="338.0" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.97" y="319.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.03%)</title><rect x="558.2" y="437" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="561.16" y="447.5" ></text>
</g>
<g >
<title>sim::IdentifierFactory::add_object (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="453" width="0.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1192.29" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="11.1" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.06" y="415.5" ></text>
</g>
<g >
<title>sim::Process::~Process (111,111,110 samples, 0.33%)</title><rect x="240.8" y="501" width="3.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="243.82" y="511.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1187.5" y="229" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.52" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.30%)</title><rect x="74.5" y="405" width="3.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="77.53" y="415.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (10,101,010 samples, 0.03%)</title><rect x="353.9" y="469" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="356.93" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (40,404,040 samples, 0.12%)</title><rect x="1184.0" y="485" width="1.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1186.97" y="495.5" ></text>
</g>
<g >
<title>sim::Host::notify_about_arrival (20,202,020 samples, 0.06%)</title><rect x="334.1" y="453" width="0.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="337.07" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1160.6" y="421" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1163.57" y="431.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanNextToken (10,101,010 samples, 0.03%)</title><rect x="1185.7" y="309" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1188.75" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;* std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_Alloc_node&gt; (10,101,010 samples, 0.03%)</title><rect x="1185.4" y="485" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1188.39" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.9" y="405" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.93" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="559.9" y="373" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="562.93" y="383.5" ></text>
</g>
<g >
<title>sim::SimplePacketReordering::value (10,101,010 samples, 0.03%)</title><rect x="561.4" y="453" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="564.35" y="463.5" ></text>
</g>
<g >
<title>sim::Process::Process (10,101,010 samples, 0.03%)</title><rect x="334.4" y="437" width="0.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="337.43" y="447.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.03%)</title><rect x="558.2" y="421" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="561.16" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1175.5" y="405" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1178.46" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="17.8" y="389" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.80" y="399.5" ></text>
</g>
<g >
<title>fopen (70,707,070 samples, 0.21%)</title><rect x="67.4" y="437" width="2.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="70.44" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="68.1" y="197" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.15" y="207.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (111,111,110 samples, 0.33%)</title><rect x="335.1" y="437" width="3.9" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="338.14" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1175.5" y="421" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1178.46" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1160.9" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.93" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="337.6" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.62" y="271.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (50,505,050 samples, 0.15%)</title><rect x="1144.6" y="437" width="1.8" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1147.62" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="69.6" y="53" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.57" y="63.5" ></text>
</g>
<g >
<title>operator delete (30,303,030 samples, 0.09%)</title><rect x="383.4" y="469" width="1.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="386.36" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="898.5" y="421" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="901.55" y="431.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (70,707,070 samples, 0.21%)</title><rect x="71.3" y="453" width="2.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="74.34" y="463.5" ></text>
</g>
<g >
<title>sim::Process::~Process (131,313,130 samples, 0.39%)</title><rect x="1121.9" y="485" width="4.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1124.92" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1144.3" y="309" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1147.26" y="319.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (70,707,070 samples, 0.21%)</title><rect x="71.3" y="437" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="74.34" y="447.5" ></text>
</g>
<g >
<title>operator delete (30,303,030 samples, 0.09%)</title><rect x="82.3" y="501" width="1.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="85.33" y="511.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.12%)</title><rect x="34.1" y="453" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="37.11" y="463.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1185.7" y="277" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1188.75" y="287.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (30,303,030 samples, 0.09%)</title><rect x="355.3" y="453" width="1.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="358.35" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1161.3" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.28" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.21%)</title><rect x="36.2" y="309" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.24" y="319.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (70,707,070 samples, 0.21%)</title><rect x="67.4" y="453" width="2.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="70.44" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="902.1" y="373" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="905.09" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_packet_reordering (20,202,020 samples, 0.06%)</title><rect x="577.3" y="437" width="0.7" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="580.31" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="61.8" y="357" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="64.77" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1160.9" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.93" y="287.5" ></text>
</g>
<g >
<title>std::locale::locale (10,101,010 samples, 0.03%)</title><rect x="558.2" y="405" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="561.16" y="415.5" ></text>
</g>
<g >
<title>operator delete (111,111,110 samples, 0.33%)</title><rect x="744.7" y="453" width="3.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="747.66" y="463.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (3,808,080,770 samples, 11.33%)</title><rect x="761.3" y="453" width="133.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="764.33" y="463.5" >sim::Link::get_p..</text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (50,505,050 samples, 0.15%)</title><rect x="896.1" y="405" width="1.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="899.06" y="415.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (60,606,060 samples, 0.18%)</title><rect x="1185.7" y="325" width="2.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1188.75" y="335.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (60,606,060 samples, 0.18%)</title><rect x="892.5" y="405" width="2.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="895.52" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1181.1" y="405" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1184.14" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1175.5" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1178.46" y="367.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (50,505,050 samples, 0.15%)</title><rect x="1186.1" y="309" width="1.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1189.10" y="319.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (50,505,050 samples, 0.15%)</title><rect x="573.4" y="421" width="1.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="576.41" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="453" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>sim::Link::get_to (10,101,010 samples, 0.03%)</title><rect x="1157.0" y="485" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1160.03" y="495.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (414,141,410 samples, 1.23%)</title><rect x="1131.9" y="453" width="14.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1134.85" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="36.9" y="213" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.95" y="223.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (101,010,100 samples, 0.30%)</title><rect x="563.1" y="405" width="3.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="566.12" y="415.5" ></text>
</g>
<g >
<title>YAML::Node::~Node (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="501" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1191.94" y="511.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="897.1" y="373" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="900.13" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="338.0" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.97" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="71.7" y="389" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="74.69" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="1141.8" y="325" width="2.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1144.78" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="51.5" y="405" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="54.48" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="18.5" y="389" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.51" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="77.0" y="357" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="80.01" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (181,818,180 samples, 0.54%)</title><rect x="57.2" y="373" width="6.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="60.16" y="383.5" ></text>
</g>
<g >
<title>cfree (60,606,060 samples, 0.18%)</title><rect x="80.2" y="501" width="2.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="83.20" y="511.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.15%)</title><rect x="19.6" y="469" width="1.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="22.57" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1175.5" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1178.46" y="255.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (40,404,040 samples, 0.12%)</title><rect x="571.3" y="389" width="1.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="574.28" y="399.5" ></text>
</g>
<g >
<title>sim::BaseHasher::get_hash (10,101,010 samples, 0.03%)</title><rect x="903.9" y="437" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="906.86" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.18%)</title><rect x="67.8" y="229" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.79" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="337.6" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.62" y="399.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,101,010 samples, 0.03%)</title><rect x="761.0" y="453" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="763.97" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.18%)</title><rect x="67.8" y="213" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.79" y="223.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (40,404,040 samples, 0.12%)</title><rect x="893.2" y="389" width="1.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="896.23" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1177.6" y="389" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.59" y="399.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::get_max_size (10,101,010 samples, 0.03%)</title><rect x="591.5" y="469" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="594.49" y="479.5" ></text>
</g>
<g >
<title>sim::LinkQueue::empty (10,101,010 samples, 0.03%)</title><rect x="898.9" y="453" width="0.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="901.90" y="463.5" ></text>
</g>
<g >
<title>operator new (80,808,080 samples, 0.24%)</title><rect x="384.4" y="469" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="387.42" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="35.5" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.53" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="389" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="71.7" y="373" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="74.69" y="383.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (40,404,040 samples, 0.12%)</title><rect x="569.9" y="405" width="1.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="572.86" y="415.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1151.4" y="421" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1154.35" y="431.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_outlinks (20,202,020 samples, 0.06%)</title><rect x="1170.1" y="469" width="0.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1173.14" y="479.5" ></text>
</g>
<g >
<title>sim::Link::get_from (20,202,020 samples, 0.06%)</title><rect x="1169.1" y="469" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1172.08" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="533" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (232,323,230 samples, 0.69%)</title><rect x="324.1" y="469" width="8.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="327.15" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1177.6" y="421" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1180.59" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.7" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.70" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="21.3" y="469" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.35" y="479.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1187.5" y="245" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.52" y="255.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="18.5" y="437" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="21.51" y="447.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (30,303,030 samples, 0.09%)</title><rect x="575.9" y="421" width="1.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="578.89" y="431.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (10,101,010 samples, 0.03%)</title><rect x="897.8" y="405" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="900.84" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.9" y="421" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.93" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_erase (30,303,030 samples, 0.09%)</title><rect x="1171.6" y="469" width="1.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1174.56" y="479.5" ></text>
</g>
<g >
<title>sim::Event::Event (303,030,300 samples, 0.90%)</title><rect x="1111.3" y="453" width="10.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1114.29" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="63.9" y="389" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.89" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (40,404,040 samples, 0.12%)</title><rect x="1177.9" y="453" width="1.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1180.94" y="463.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (202,020,200 samples, 0.60%)</title><rect x="1137.5" y="437" width="7.1" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1140.52" y="447.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.15%)</title><rect x="573.4" y="405" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="576.41" y="415.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (60,606,060 samples, 0.18%)</title><rect x="1129.4" y="453" width="2.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1132.37" y="463.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="51.1" y="437" width="0.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="54.13" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="63.9" y="261" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.89" y="271.5" ></text>
</g>
<g >
<title>memchr@plt (10,101,010 samples, 0.03%)</title><rect x="73.8" y="453" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="76.82" y="463.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (10,101,010 samples, 0.03%)</title><rect x="1151.4" y="437" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1154.35" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1177.6" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.59" y="383.5" ></text>
</g>
<g >
<title>cfree (333,333,330 samples, 0.99%)</title><rect x="858.1" y="437" width="11.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="861.12" y="447.5" ></text>
</g>
<g >
<title>cfree (90,909,090 samples, 0.27%)</title><rect x="15.3" y="437" width="3.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="18.32" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="517" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1187.5" y="213" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.52" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1166.6" y="469" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1169.60" y="479.5" ></text>
</g>
<g >
<title>Logger::get_instance (40,404,040 samples, 0.12%)</title><rect x="616.3" y="453" width="1.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="619.31" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="51.5" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="54.48" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="337.6" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.62" y="367.5" ></text>
</g>
<g >
<title>YAML::Stream::_ReadAheadTo (20,202,020 samples, 0.06%)</title><rect x="1186.1" y="261" width="0.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1189.10" y="271.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (30,303,030 samples, 0.09%)</title><rect x="1146.4" y="453" width="1.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1149.39" y="463.5" ></text>
</g>
<g >
<title>vsnprintf (30,303,030 samples, 0.09%)</title><rect x="902.1" y="389" width="1.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="905.09" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.21%)</title><rect x="67.4" y="341" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.44" y="351.5" ></text>
</g>
<g >
<title>std::locale::~locale (10,101,010 samples, 0.03%)</title><rect x="1137.2" y="437" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1140.17" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.9" y="469" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.86" y="479.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="1156.0" y="485" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1158.96" y="495.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleDocument (90,909,090 samples, 0.27%)</title><rect x="1185.7" y="453" width="3.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1188.75" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="571.3" y="341" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="574.28" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="69.6" y="85" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.57" y="95.5" ></text>
</g>
<g >
<title>Logger::info (10,101,010 samples, 0.03%)</title><rect x="1127.2" y="453" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1130.24" y="463.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="562.8" y="405" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="565.77" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (10,101,010 samples, 0.03%)</title><rect x="1170.5" y="453" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1173.50" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="34.5" y="421" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="37.47" y="431.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.27%)</title><rect x="1185.7" y="437" width="3.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1188.75" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.03%)</title><rect x="564.2" y="357" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="567.19" y="367.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.12%)</title><rect x="29.5" y="453" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="32.50" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="51.5" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="54.48" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="893.6" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="896.58" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (202,020,200 samples, 0.60%)</title><rect x="734.4" y="437" width="7.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="737.38" y="447.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="32.3" y="453" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="35.34" y="463.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::export_to_file (313,131,310 samples, 0.93%)</title><rect x="67.1" y="485" width="11.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="70.09" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (10,101,010 samples, 0.03%)</title><rect x="558.9" y="405" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="561.87" y="415.5" ></text>
</g>
<g >
<title>sim::Host::process (676,767,670 samples, 2.01%)</title><rect x="555.0" y="469" width="23.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="557.97" y="479.5" >s..</text>
</g>
<g >
<title>sim::TcpFlow::Timeout::operator (60,606,060 samples, 0.18%)</title><rect x="1149.6" y="485" width="2.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1152.58" y="495.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="557.1" y="405" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="560.10" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="437" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (161,616,160 samples, 0.48%)</title><rect x="346.1" y="421" width="5.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="349.13" y="431.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.15%)</title><rect x="573.4" y="389" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="576.41" y="399.5" ></text>
</g>
<g >
<title>vsnprintf (60,606,060 samples, 0.18%)</title><rect x="71.7" y="421" width="2.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="74.69" y="431.5" ></text>
</g>
<g >
<title>cfree (404,040,400 samples, 1.20%)</title><rect x="318.1" y="485" width="14.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="321.12" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="63.9" y="309" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.89" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="63.9" y="325" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.89" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1177.6" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.59" y="319.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (10,101,010 samples, 0.03%)</title><rect x="1134.3" y="421" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1137.33" y="431.5" ></text>
</g>
<g >
<title>sim::bfs[abi:cxx11] (535,353,530 samples, 1.59%)</title><rect x="1163.1" y="485" width="18.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1166.05" y="495.5" ></text>
</g>
<g >
<title>malloc (242,424,240 samples, 0.72%)</title><rect x="752.5" y="437" width="8.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="755.46" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="338.3" y="357" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="341.33" y="367.5" ></text>
</g>
<g >
<title>sim::Scheduler::get_current_time (10,101,010 samples, 0.03%)</title><rect x="352.5" y="453" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="355.51" y="463.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (10,101,010 samples, 0.03%)</title><rect x="1136.8" y="421" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1139.81" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;YAML::detail::node&gt;, std::shared_ptr&lt;YAML::detail::node&gt;, std::_Identity&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt;, std::less&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="421" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1191.94" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (282,828,280 samples, 0.84%)</title><rect x="848.2" y="437" width="9.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="851.20" y="447.5" ></text>
</g>
<g >
<title>Logger::info (20,202,020 samples, 0.06%)</title><rect x="617.7" y="453" width="0.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="620.73" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (575,757,570 samples, 1.71%)</title><rect x="710.3" y="453" width="20.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="713.27" y="463.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (111,111,110 samples, 0.33%)</title><rect x="74.2" y="453" width="3.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="77.18" y="463.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="570.6" y="325" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="573.57" y="335.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.03%)</title><rect x="563.1" y="389" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="566.12" y="399.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="453" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1191.94" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="902.1" y="341" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="905.09" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1181.1" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1184.14" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1181.1" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1184.14" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1168.0" y="389" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.02" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="35.9" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.88" y="175.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="572.7" y="421" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="575.70" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="342.6" y="421" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="345.58" y="431.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (10,101,010 samples, 0.03%)</title><rect x="1131.5" y="453" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1134.50" y="463.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (70,707,070 samples, 0.21%)</title><rect x="900.7" y="437" width="2.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="903.67" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="317.8" y="485" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="320.76" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="14.6" y="405" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.61" y="415.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::operator (101,010,100 samples, 0.30%)</title><rect x="352.9" y="485" width="3.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="355.87" y="495.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (20,202,020 samples, 0.06%)</title><rect x="345.1" y="437" width="0.7" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="348.07" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="63.9" y="245" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.89" y="255.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (10,101,010 samples, 0.03%)</title><rect x="1134.0" y="437" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1136.98" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1132.6" y="421" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1135.56" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="549" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (181,818,180 samples, 0.54%)</title><rect x="1138.2" y="373" width="6.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1141.23" y="383.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (10,101,010 samples, 0.03%)</title><rect x="898.5" y="437" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="901.55" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="51.5" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="54.48" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="893.6" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="896.58" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="338.3" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.33" y="335.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (121,212,120 samples, 0.36%)</title><rect x="73.8" y="469" width="4.3" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="76.82" y="479.5" ></text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks (10,101,010 samples, 0.03%)</title><rect x="344.7" y="421" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="347.71" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="71.7" y="405" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="74.69" y="415.5" ></text>
</g>
<g >
<title>sim::Host::~Host (20,202,020 samples, 0.06%)</title><rect x="10.7" y="437" width="0.7" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="13.71" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="338.3" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.33" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1168.4" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.37" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="405" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>malloc@plt (10,101,010 samples, 0.03%)</title><rect x="870.9" y="437" width="0.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="873.89" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="38.4" y="133" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.37" y="143.5" ></text>
</g>
<g >
<title>vsnprintf (282,828,280 samples, 0.84%)</title><rect x="40.5" y="421" width="9.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="43.49" y="431.5" ></text>
</g>
<g >
<title>vsnprintf (151,515,150 samples, 0.45%)</title><rect x="346.5" y="389" width="5.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="349.48" y="399.5" ></text>
</g>
<g >
<title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (10,101,010 samples, 0.03%)</title><rect x="52.5" y="437" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="55.55" y="447.5" ></text>
</g>
<g >
<title>cfree (313,131,310 samples, 0.93%)</title><rect x="730.5" y="453" width="11.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="733.48" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="338.3" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.33" y="351.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (10,101,010 samples, 0.03%)</title><rect x="562.1" y="437" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="565.06" y="447.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (10,101,010 samples, 0.03%)</title><rect x="555.7" y="421" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="558.68" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="69.6" y="101" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.57" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="576.2" y="373" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="579.24" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="35.5" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.53" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1160.9" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.93" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="69.2" y="133" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.21" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="893.9" y="341" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="896.94" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (101,010,100 samples, 0.30%)</title><rect x="1175.8" y="469" width="3.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1178.82" y="479.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (90,909,090 samples, 0.27%)</title><rect x="569.5" y="421" width="3.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="572.51" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1175.5" y="437" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1178.46" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="581" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>writev (10,101,010 samples, 0.03%)</title><rect x="51.5" y="421" width="0.3" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="54.48" y="431.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (121,212,120 samples, 0.36%)</title><rect x="899.3" y="453" width="4.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="902.25" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="565.3" y="309" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="568.25" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="35.5" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.53" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="338.0" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.97" y="351.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (20,202,020 samples, 0.06%)</title><rect x="1128.7" y="453" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1131.66" y="463.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (80,808,080 samples, 0.24%)</title><rect x="71.0" y="469" width="2.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="73.99" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="337.6" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.62" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="337.6" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.62" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="338.3" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.33" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="571.6" y="325" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="574.63" y="335.5" ></text>
</g>
<g >
<title>sim::LinkParser::parse_default_link (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="421" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1192.65" y="431.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="339.7" y="437" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="342.75" y="447.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="893.9" y="357" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="896.94" y="367.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (90,909,090 samples, 0.27%)</title><rect x="895.0" y="437" width="3.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="898.00" y="447.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (80,808,080 samples, 0.24%)</title><rect x="336.2" y="421" width="2.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="339.20" y="431.5" ></text>
</g>
<g >
<title>sim::Link::get_to (10,101,010 samples, 0.03%)</title><rect x="1169.8" y="469" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1172.79" y="479.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (171,717,170 samples, 0.51%)</title><rect x="345.8" y="437" width="6.0" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="348.78" y="447.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="343.3" y="421" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="346.29" y="431.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (20,202,020 samples, 0.06%)</title><rect x="1189.3" y="501" width="0.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1192.29" y="511.5" ></text>
</g>
<g >
<title>_start (33,595,959,260 samples, 99.94%)</title><rect x="10.7" y="581" width="1179.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.71" y="591.5" >_start</text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="561.0" y="405" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="564.00" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (10,101,010 samples, 0.03%)</title><rect x="577.3" y="405" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="580.31" y="415.5" ></text>
</g>
<g >
<title>sim::Process::operator (21,808,080,590 samples, 64.87%)</title><rect x="356.4" y="485" width="765.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="359.41" y="495.5" >sim::Process::operator</text>
</g>
<g >
<title>sim::Scheduler::tick (20,202,020 samples, 0.06%)</title><rect x="78.4" y="517" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.43" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (60,606,060 samples, 0.18%)</title><rect x="65.0" y="485" width="2.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="67.96" y="495.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (20,202,020 samples, 0.06%)</title><rect x="53.6" y="453" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="56.61" y="463.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.12%)</title><rect x="1161.6" y="437" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1164.63" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (20,202,020 samples, 0.06%)</title><rect x="10.7" y="453" width="0.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.71" y="463.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (30,303,030 samples, 0.09%)</title><rect x="69.9" y="469" width="1.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="72.92" y="479.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="577.0" y="421" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="579.95" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (50,505,050 samples, 0.15%)</title><rect x="337.3" y="405" width="1.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="340.27" y="415.5" ></text>
</g>
<g >
<title>sim::Switch::process (12,131,313,010 samples, 36.09%)</title><rect x="591.8" y="469" width="425.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="594.84" y="479.5" >sim::Switch::process</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="333.4" y="453" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="336.37" y="463.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.12%)</title><rect x="34.1" y="437" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="37.11" y="447.5" ></text>
</g>
<g >
<title>_IO_file_open (70,707,070 samples, 0.21%)</title><rect x="67.4" y="405" width="2.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="70.44" y="415.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;, std::weak_ptr&lt;sim::IProcessingDevice&gt;&amp;&gt; (2,838,383,810 samples, 8.44%)</title><rect x="1022.3" y="469" width="99.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1025.29" y="479.5" >void sim::Sc..</text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (30,303,030 samples, 0.09%)</title><rect x="355.3" y="437" width="1.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="358.35" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1181.1" y="421" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1184.14" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.7" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.70" y="319.5" ></text>
</g>
<g >
<title>std::locale::locale (10,101,010 samples, 0.03%)</title><rect x="559.6" y="437" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="562.58" y="447.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1149.2" y="437" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1152.22" y="447.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.27%)</title><rect x="1185.7" y="421" width="3.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1188.75" y="431.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (70,707,070 samples, 0.21%)</title><rect x="36.2" y="469" width="2.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="39.24" y="479.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (30,303,030 samples, 0.09%)</title><rect x="63.9" y="437" width="1.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="66.89" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.7" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.70" y="335.5" ></text>
</g>
<g >
<title>sim::LinkParser::parse_i_link (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="437" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1192.65" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1175.5" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1178.46" y="287.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (101,010,100 samples, 0.30%)</title><rect x="557.8" y="453" width="3.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="560.81" y="463.5" ></text>
</g>
<g >
<title>_IO_file_fopen (70,707,070 samples, 0.21%)</title><rect x="67.4" y="421" width="2.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="70.44" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="894.3" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="897.29" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1145.7" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1148.68" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.03%)</title><rect x="343.6" y="405" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="346.65" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="576.6" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="579.60" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="338.0" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.97" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.18%)</title><rect x="67.8" y="293" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.79" y="303.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="405" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1191.94" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (282,828,280 samples, 0.84%)</title><rect x="40.5" y="405" width="9.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="43.49" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.21%)</title><rect x="36.2" y="373" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.24" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="337.6" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.62" y="335.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (4,444,444,400 samples, 13.22%)</title><rect x="395.8" y="469" width="156.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="398.77" y="479.5" >sim::Event::operator&gt;</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (40,404,040 samples, 0.12%)</title><rect x="1161.6" y="453" width="1.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1164.63" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.21%)</title><rect x="67.4" y="357" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.44" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.21%)</title><rect x="36.2" y="341" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.24" y="351.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1133.6" y="437" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1136.62" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="35.5" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.53" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (202,020,200 samples, 0.60%)</title><rect x="862.7" y="421" width="7.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="865.73" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="35.5" y="389" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.53" y="399.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (10,101,010 samples, 0.03%)</title><rect x="891.8" y="421" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="894.81" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1168.7" y="421" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1171.73" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="337.6" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.62" y="191.5" ></text>
</g>
<g >
<title>_IO_file_fopen (70,707,070 samples, 0.21%)</title><rect x="36.2" y="421" width="2.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="39.24" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::export_metrics_to_files (1,696,969,680 samples, 5.05%)</title><rect x="18.9" y="517" width="59.5" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="21.86" y="527.5" >sim::M..</text>
</g>
<g >
<title>sim::SimplePacketQueue::push (10,101,010 samples, 0.03%)</title><rect x="897.8" y="421" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="900.84" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_RTT (70,707,070 samples, 0.21%)</title><rect x="573.4" y="437" width="2.5" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="576.41" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="337.6" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.62" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.21%)</title><rect x="36.2" y="293" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.24" y="303.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.27%)</title><rect x="1185.7" y="357" width="3.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1188.75" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.21%)</title><rect x="67.4" y="325" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.44" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="338.7" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.68" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (30,303,030 samples, 0.09%)</title><rect x="1182.9" y="485" width="1.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1185.91" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="894.3" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="897.29" y="303.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (10,101,010 samples, 0.03%)</title><rect x="344.7" y="437" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="347.71" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;Time&lt;Nanosecond&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (40,404,040 samples, 0.12%)</title><rect x="34.1" y="469" width="1.4" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="37.11" y="479.5" ></text>
</g>
<g >
<title>sim::ECN::get_congestion_mark (10,101,010 samples, 0.03%)</title><rect x="387.3" y="469" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="390.26" y="479.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (50,505,050 samples, 0.15%)</title><rect x="556.0" y="421" width="1.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="559.03" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.21%)</title><rect x="36.2" y="229" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.24" y="239.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="570.6" y="341" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="573.57" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (10,101,010 samples, 0.03%)</title><rect x="1017.0" y="453" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1019.97" y="463.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.03%)</title><rect x="50.4" y="437" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="53.42" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1168.4" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.37" y="367.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (10,101,010 samples, 0.03%)</title><rect x="938.6" y="453" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="941.61" y="463.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::node_ref*,  (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="373" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1191.94" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="51.5" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="54.48" y="191.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1133.6" y="421" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1136.62" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_insert_unique&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; const&amp;&gt; (60,606,060 samples, 0.18%)</title><rect x="1179.4" y="469" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1182.36" y="479.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (30,303,030 samples, 0.09%)</title><rect x="1130.1" y="421" width="1.0" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1133.08" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="469" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="501" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 0.66%)</title><rect x="42.6" y="373" width="7.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="45.62" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="338.3" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.33" y="287.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.03%)</title><rect x="1134.3" y="437" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1137.33" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="51.5" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="54.48" y="383.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (20,202,020 samples, 0.06%)</title><rect x="353.2" y="469" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="356.22" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="19.6" y="453" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.57" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1181.1" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1184.14" y="367.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_links (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="485" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1192.65" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1175.5" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1178.46" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::get_records (10,101,010 samples, 0.03%)</title><rect x="30.9" y="469" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="33.92" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="338.3" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.33" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="557.5" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="560.45" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="34.8" y="405" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="37.82" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (101,010,100 samples, 0.30%)</title><rect x="74.5" y="437" width="3.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="77.53" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="38.4" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.37" y="159.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_packet_now (10,101,010 samples, 0.03%)</title><rect x="1151.4" y="453" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1154.35" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1177.6" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.59" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.9" y="453" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.86" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="35.9" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.88" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="573.4" y="373" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="576.41" y="383.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1188.6" y="261" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.58" y="271.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::memory*,  (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="437" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1191.94" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (30,303,030 samples, 0.09%)</title><rect x="564.9" y="357" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="567.90" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (80,808,080 samples, 0.24%)</title><rect x="895.0" y="421" width="2.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="898.00" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="351.4" y="309" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="354.45" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="559.9" y="341" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="562.93" y="351.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (50,505,050 samples, 0.15%)</title><rect x="901.4" y="421" width="1.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="904.38" y="431.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (10,101,010 samples, 0.03%)</title><rect x="563.1" y="373" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="566.12" y="383.5" ></text>
</g>
<g >
<title>void sim::YamlParser::process_identifiables&lt;sim::ILink&gt; (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="469" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1192.65" y="479.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="351.8" y="421" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="354.80" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="20.3" y="437" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="23.28" y="447.5" ></text>
</g>
<g >
<title>write (20,202,020 samples, 0.06%)</title><rect x="35.5" y="405" width="0.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="38.53" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="35.5" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.53" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="902.1" y="357" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="905.09" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1177.6" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.59" y="303.5" ></text>
</g>
<g >
<title>sim::write_to_csv (1,222,222,210 samples, 3.64%)</title><rect x="22.1" y="485" width="42.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="25.06" y="495.5" >sim:..</text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (303,030,300 samples, 0.90%)</title><rect x="39.8" y="437" width="10.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="42.78" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (151,515,150 samples, 0.45%)</title><rect x="346.5" y="357" width="5.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="349.48" y="367.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="569.5" y="405" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="572.51" y="415.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::Arrive (20,202,020 samples, 0.06%)</title><rect x="354.6" y="453" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="357.64" y="463.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="893.9" y="373" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="896.94" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.36%)</title><rect x="347.5" y="341" width="4.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="350.55" y="351.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (50,505,050 samples, 0.15%)</title><rect x="1129.7" y="437" width="1.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1132.72" y="447.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="559.2" y="421" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="562.22" y="431.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.03%)</title><rect x="340.5" y="437" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="343.46" y="447.5" ></text>
</g>
<g >
<title>writev (30,303,030 samples, 0.09%)</title><rect x="63.9" y="421" width="1.1" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="66.89" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="337.6" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.62" y="239.5" ></text>
</g>
<g >
<title>operator new (353,535,350 samples, 1.05%)</title><rect x="748.6" y="453" width="12.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="751.56" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (20,202,020 samples, 0.06%)</title><rect x="10.7" y="469" width="0.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.71" y="479.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="70.6" y="453" width="0.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="73.63" y="463.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (70,707,070 samples, 0.21%)</title><rect x="892.2" y="421" width="2.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="895.16" y="431.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (111,111,110 samples, 0.33%)</title><rect x="562.8" y="421" width="3.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="565.77" y="431.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.03%)</title><rect x="899.6" y="437" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="902.61" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.7" y="405" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.70" y="415.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (333,333,330 samples, 0.99%)</title><rect x="53.3" y="469" width="11.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="56.26" y="479.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="1135.4" y="421" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1138.40" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="14.3" y="421" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.25" y="431.5" ></text>
</g>
<g >
<title>__munmap (10,101,010 samples, 0.03%)</title><rect x="338.0" y="389" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="340.97" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="556.0" y="405" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="559.03" y="415.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::export_to_files (1,373,737,360 samples, 4.09%)</title><rect x="18.9" y="501" width="48.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="21.86" y="511.5" >sim:..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1181.1" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1184.14" y="399.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.09%)</title><rect x="1180.4" y="453" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1183.43" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.03%)</title><rect x="570.6" y="357" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="573.57" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="338.3" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.33" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1160.9" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.93" y="239.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (20,202,020 samples, 0.06%)</title><rect x="566.0" y="389" width="0.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="568.96" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="1161.6" y="389" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.63" y="399.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (20,202,020 samples, 0.06%)</title><rect x="1137.5" y="421" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1140.52" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1178.3" y="405" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1181.30" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="35.5" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.53" y="367.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,101,010 samples, 0.03%)</title><rect x="561.7" y="437" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="564.71" y="447.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10,101,010 samples, 0.03%)</title><rect x="904.2" y="437" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="907.22" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="897.1" y="325" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="900.13" y="335.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="1128.3" y="453" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1131.31" y="463.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="576.2" y="389" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="579.24" y="399.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,101,010 samples, 0.03%)</title><rect x="333.7" y="453" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="336.72" y="463.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="352.2" y="421" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="355.16" y="431.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (414,141,410 samples, 1.23%)</title><rect x="38.7" y="469" width="14.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="41.72" y="479.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (20,202,020 samples, 0.06%)</title><rect x="560.6" y="437" width="0.8" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="563.64" y="447.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (10,101,010 samples, 0.03%)</title><rect x="1136.8" y="437" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1139.81" y="447.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.06%)</title><rect x="1187.2" y="261" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.16" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.21%)</title><rect x="36.2" y="325" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.24" y="335.5" ></text>
</g>
<g >
<title>std::locale::operator= (10,101,010 samples, 0.03%)</title><rect x="899.6" y="405" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="902.61" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1175.5" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1178.46" y="335.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (10,101,010 samples, 0.03%)</title><rect x="339.0" y="437" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="342.04" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.9" y="437" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.93" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1168.4" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.37" y="303.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (969,696,960 samples, 2.88%)</title><rect x="904.6" y="453" width="34.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="907.57" y="463.5" >si..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="51.5" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="54.48" y="287.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="564.5" y="389" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="567.54" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="35.9" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.88" y="159.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1177.6" y="453" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1180.59" y="463.5" ></text>
</g>
<g >
<title>YAML::LoadFile (90,909,090 samples, 0.27%)</title><rect x="1185.7" y="501" width="3.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1188.75" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.18%)</title><rect x="67.8" y="245" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.79" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.21%)</title><rect x="36.2" y="245" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.24" y="255.5" ></text>
</g>
<g >
<title>vsnprintf (181,818,180 samples, 0.54%)</title><rect x="1138.2" y="389" width="6.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1141.23" y="399.5" ></text>
</g>
<g >
<title>cfree (40,404,040 samples, 0.12%)</title><rect x="13.9" y="437" width="1.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="16.90" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="338.7" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.68" y="175.5" ></text>
</g>
<g >
<title>YAML::Stream::get (10,101,010 samples, 0.03%)</title><rect x="1188.2" y="245" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1191.23" y="255.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="1172.3" y="453" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1175.27" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="355.3" y="421" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="358.35" y="431.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (10,101,010 samples, 0.03%)</title><rect x="1147.8" y="453" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1150.81" y="463.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (40,404,040 samples, 0.12%)</title><rect x="1134.7" y="437" width="1.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1137.69" y="447.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (30,303,030 samples, 0.09%)</title><rect x="1186.8" y="277" width="1.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.81" y="287.5" ></text>
</g>
</g>
</svg>
