<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="614.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="597" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="597" > </text>
<g id="frames">
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="517" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (10,101,010 samples, 0.05%)</title><rect x="59.6" y="421" width="0.7" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="62.64" y="431.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::Arrive (10,101,010 samples, 0.05%)</title><rect x="236.6" y="405" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="239.58" y="415.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (161,616,160 samples, 0.86%)</title><rect x="376.0" y="421" width="10.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="378.97" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="116.3" y="309" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="119.29" y="319.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (10,101,010 samples, 0.05%)</title><rect x="338.4" y="373" width="0.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="341.41" y="383.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="852.7" y="357" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="855.68" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.5" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.55" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.5" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.55" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="862.9" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="865.86" y="287.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (10,101,010 samples, 0.05%)</title><rect x="348.6" y="373" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="351.60" y="383.5" ></text>
</g>
<g >
<title>cfree (373,737,370 samples, 2.00%)</title><rect x="810.7" y="389" width="23.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="813.67" y="399.5" >c..</text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="389" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1192.36" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="866.7" y="277" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="869.68" y="287.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (171,717,170 samples, 0.92%)</title><rect x="785.2" y="373" width="10.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="788.21" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.27%)</title><rect x="106.7" y="245" width="3.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.74" y="255.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (454,545,450 samples, 2.43%)</title><rect x="60.3" y="421" width="28.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="63.28" y="431.5" >st..</text>
</g>
<g >
<title>sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::get_devices (10,101,010 samples, 0.05%)</title><rect x="1145.4" y="437" width="0.7" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1148.45" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.11%)</title><rect x="361.3" y="325" width="1.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="364.33" y="335.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (10,101,010 samples, 0.05%)</title><rect x="338.4" y="357" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="341.41" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.32%)</title><rect x="55.8" y="277" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.83" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.22%)</title><rect x="1104.7" y="277" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1107.71" y="287.5" ></text>
</g>
<g >
<title>strlen@plt (10,101,010 samples, 0.05%)</title><rect x="853.3" y="389" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="856.31" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (50,505,050 samples, 0.27%)</title><rect x="114.4" y="389" width="3.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="117.38" y="399.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.11%)</title><rect x="1156.9" y="405" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1159.90" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.27%)</title><rect x="56.5" y="117" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="59.46" y="127.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (3,060,606,030 samples, 16.34%)</title><rect x="661.1" y="405" width="192.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="664.10" y="415.5" >sim::Link::get_packet</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="111.8" y="421" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="114.83" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1141.0" y="373" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1143.99" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.65%)</title><rect x="221.3" y="309" width="7.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="224.31" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.32%)</title><rect x="55.8" y="229" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.83" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.7" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.73" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1087.5" y="357" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1090.53" y="367.5" ></text>
</g>
<g >
<title>sim::Link::get_to (10,101,010 samples, 0.05%)</title><rect x="1133.4" y="421" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1136.35" y="431.5" ></text>
</g>
<g >
<title>operator new (181,818,180 samples, 0.97%)</title><rect x="1046.8" y="405" width="11.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1049.80" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="84.5" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.47" y="239.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1187.5" y="213" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.45" y="223.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (60,606,060 samples, 0.32%)</title><rect x="855.2" y="373" width="3.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="858.22" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="351.5" ></text>
</g>
<g >
<title>std::ostream::put (10,101,010 samples, 0.05%)</title><rect x="104.8" y="421" width="0.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="107.83" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (10,101,010 samples, 0.05%)</title><rect x="1096.4" y="341" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1099.44" y="351.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="1099.0" y="389" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1101.99" y="399.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (10,101,010 samples, 0.05%)</title><rect x="363.9" y="341" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="366.87" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_erase (30,303,030 samples, 0.16%)</title><rect x="1161.4" y="421" width="1.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1164.36" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1141.6" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1144.63" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.5" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.54" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.27%)</title><rect x="114.4" y="357" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="117.38" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1143.5" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.54" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="125.2" y="421" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="128.20" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="24.0" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="27.00" y="335.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="50.1" y="421" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="53.10" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (202,020,200 samples, 1.08%)</title><rect x="10.6" y="485" width="12.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.64" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="485" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (70,707,070 samples, 0.38%)</title><rect x="864.1" y="389" width="4.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="867.13" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (90,909,090 samples, 0.49%)</title><rect x="342.9" y="357" width="5.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="345.87" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.7" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.73" y="287.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (50,505,050 samples, 0.27%)</title><rect x="230.2" y="389" width="3.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="233.22" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1143.5" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.54" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="84.5" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.47" y="303.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (50,505,050 samples, 0.27%)</title><rect x="1185.5" y="293" width="3.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1188.54" y="303.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (131,313,130 samples, 0.70%)</title><rect x="220.7" y="357" width="8.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="223.67" y="367.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (10,101,010 samples, 0.05%)</title><rect x="213.7" y="389" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="216.67" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1141.6" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1144.63" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.05%)</title><rect x="1167.1" y="421" width="0.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1170.09" y="431.5" ></text>
</g>
<g >
<title>malloc (80,808,080 samples, 0.43%)</title><rect x="1041.7" y="405" width="5.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1044.70" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="338.4" y="341" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="341.41" y="351.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1145.4" y="405" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1148.45" y="415.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (20,202,020 samples, 0.11%)</title><rect x="1120.0" y="405" width="1.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1122.99" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (10,101,010 samples, 0.05%)</title><rect x="1158.2" y="405" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1161.18" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="58.4" y="85" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="61.37" y="95.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::send_packets (151,515,150 samples, 0.81%)</title><rect x="348.6" y="405" width="9.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="351.60" y="415.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_flows (10,101,010 samples, 0.05%)</title><rect x="1188.7" y="437" width="0.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1191.73" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (232,323,230 samples, 1.24%)</title><rect x="796.0" y="389" width="14.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="799.03" y="399.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (20,202,020 samples, 0.11%)</title><rect x="1188.7" y="453" width="1.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1191.73" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.5" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.55" y="239.5" ></text>
</g>
<g >
<title>sim::Host::send_packet (606,060,600 samples, 3.24%)</title><rect x="1083.1" y="421" width="38.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1086.07" y="431.5" >sim..</text>
</g>
<g >
<title>sim::MetricsStorage::add_record (20,202,020 samples, 0.11%)</title><rect x="240.4" y="357" width="1.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="243.40" y="367.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="862.9" y="373" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="865.86" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="213.0" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="216.03" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1143.5" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.54" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="660.5" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="663.46" y="303.5" ></text>
</g>
<g >
<title>memcpy@plt (10,101,010 samples, 0.05%)</title><rect x="200.9" y="421" width="0.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="203.94" y="431.5" ></text>
</g>
<g >
<title>all (18,727,272,540 samples, 100%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.22%)</title><rect x="101.7" y="309" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="104.65" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="1170.9" y="341" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1173.91" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (30,303,030 samples, 0.16%)</title><rect x="51.4" y="421" width="1.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="54.37" y="431.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (585,858,580 samples, 3.13%)</title><rect x="875.0" y="405" width="36.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="877.95" y="415.5" >sim..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1185.5" y="101" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.54" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.38%)</title><rect x="344.1" y="293" width="4.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="347.14" y="303.5" ></text>
</g>
<g >
<title>YAML::LoadFile (80,808,080 samples, 0.43%)</title><rect x="1183.6" y="453" width="5.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1186.64" y="463.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (151,515,150 samples, 0.81%)</title><rect x="339.1" y="405" width="9.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="342.05" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="55.2" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.19" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="213.0" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="216.03" y="223.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1184.9" y="149" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1187.91" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_sync (10,101,010 samples, 0.05%)</title><rect x="362.0" y="309" width="0.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="364.96" y="319.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (111,111,110 samples, 0.59%)</title><rect x="341.6" y="389" width="7.0" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="344.60" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1153.1" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1156.09" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="239.5" ></text>
</g>
<g >
<title>sim::bfs[abi:cxx11] (494,949,490 samples, 2.64%)</title><rect x="1146.1" y="437" width="31.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1149.08" y="447.5" >si..</text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.49%)</title><rect x="342.9" y="325" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="345.87" y="335.5" ></text>
</g>
<g >
<title>nons (18,727,272,540 samples, 100.00%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >nons</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="125.2" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="128.20" y="415.5" ></text>
</g>
<g >
<title>YAML::detail::memory::create_node (10,101,010 samples, 0.05%)</title><rect x="1185.5" y="245" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1188.54" y="255.5" ></text>
</g>
<g >
<title>sim::Switch::process (9,414,141,320 samples, 50.27%)</title><rect x="396.3" y="421" width="593.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="399.33" y="431.5" >sim::Switch::process</text>
</g>
<g >
<title>sim::Link::get_max_to_ingress_queue_size (111,111,110 samples, 0.59%)</title><rect x="369.0" y="421" width="7.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="371.96" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.27%)</title><rect x="106.7" y="277" width="3.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.74" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="212.4" y="309" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="215.39" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.22%)</title><rect x="1142.3" y="357" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1145.27" y="367.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (80,808,080 samples, 0.43%)</title><rect x="1183.6" y="357" width="5.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.64" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1085.0" y="389" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1087.98" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="237.9" y="373" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="240.85" y="383.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (20,202,020 samples, 0.11%)</title><rect x="1186.8" y="229" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1189.82" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.5" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.55" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="52.6" y="405" width="0.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="55.64" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.7" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.73" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1143.5" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.54" y="303.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1185.5" y="213" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1188.54" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; YAML::Node::as&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="1188.7" y="405" width="0.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1191.73" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1141.6" y="149" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1144.63" y="159.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="84.5" y="389" width="0.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="87.47" y="399.5" ></text>
</g>
<g >
<title>Logger::warn (60,606,060 samples, 0.32%)</title><rect x="286.2" y="421" width="3.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="289.22" y="431.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (101,010,100 samples, 0.54%)</title><rect x="1092.6" y="389" width="6.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1095.62" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (151,515,150 samples, 0.81%)</title><rect x="94.6" y="325" width="9.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="97.65" y="335.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (121,212,120 samples, 0.65%)</title><rect x="1099.6" y="389" width="7.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1102.62" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="347.3" y="277" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="350.32" y="287.5" ></text>
</g>
<g >
<title>brk (10,101,010 samples, 0.05%)</title><rect x="22.7" y="389" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="25.73" y="399.5" ></text>
</g>
<g >
<title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (20,202,020 samples, 0.11%)</title><rect x="110.6" y="405" width="1.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="113.56" y="415.5" ></text>
</g>
<g >
<title>open64 (50,505,050 samples, 0.27%)</title><rect x="106.7" y="341" width="3.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="109.74" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1185.5" y="69" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.54" y="79.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (10,101,010 samples, 0.05%)</title><rect x="363.9" y="357" width="0.6" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="366.87" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (232,323,230 samples, 1.24%)</title><rect x="186.3" y="421" width="14.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="189.30" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="24.0" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="27.00" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="862.9" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="865.86" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.5" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.55" y="319.5" ></text>
</g>
<g >
<title>memcpy@plt (10,101,010 samples, 0.05%)</title><rect x="60.3" y="405" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="63.28" y="415.5" ></text>
</g>
<g >
<title>_IO_file_fopen (50,505,050 samples, 0.27%)</title><rect x="106.7" y="373" width="3.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="109.74" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.5" y="405" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.55" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.27%)</title><rect x="106.7" y="309" width="3.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.74" y="319.5" ></text>
</g>
<g >
<title>Logger::info (1,939,393,920 samples, 10.36%)</title><rect x="673.8" y="389" width="122.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="676.83" y="399.5" >Logger::info</text>
</g>
<g >
<title>std::ios_base::_M_init (20,202,020 samples, 0.11%)</title><rect x="216.2" y="373" width="1.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="219.21" y="383.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (60,606,060 samples, 0.32%)</title><rect x="351.8" y="357" width="3.8" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="354.78" y="367.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="373" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1192.36" y="383.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (15,565,656,410 samples, 83.12%)</title><rect x="147.5" y="453" width="980.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="150.48" y="463.5" >sim::Scheduler::tick</text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.11%)</title><rect x="1184.3" y="229" width="1.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1187.27" y="239.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (60,606,060 samples, 0.32%)</title><rect x="55.8" y="421" width="3.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="58.83" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_erase (40,404,040 samples, 0.22%)</title><rect x="1158.8" y="421" width="2.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1161.81" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (121,212,120 samples, 0.65%)</title><rect x="1099.6" y="357" width="7.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1102.62" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1135.9" y="373" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1138.90" y="383.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (10,101,010 samples, 0.05%)</title><rect x="220.0" y="389" width="0.7" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="223.03" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1185.5" y="149" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.54" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="453" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="215.6" y="389" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="218.58" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="84.5" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.47" y="335.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (151,515,150 samples, 0.81%)</title><rect x="1109.2" y="405" width="9.5" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1112.17" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;Time&lt;Nanosecond&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="54.6" y="421" width="0.6" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="57.55" y="431.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (60,606,060 samples, 0.32%)</title><rect x="209.8" y="373" width="3.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="212.85" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="858.4" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="861.40" y="271.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (10,101,010 samples, 0.05%)</title><rect x="90.2" y="405" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="93.19" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="108.0" y="117" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="111.02" y="127.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (10,101,010 samples, 0.05%)</title><rect x="213.7" y="373" width="0.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="216.67" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.54%)</title><rect x="16.4" y="373" width="6.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="19.36" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.5" y="389" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.55" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="223.5" ></text>
</g>
<g >
<title>sim::Link::get_to_ingress_queue_size (50,505,050 samples, 0.27%)</title><rect x="386.1" y="421" width="3.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="389.15" y="431.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="245" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1189.18" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.5" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.55" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.7" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.73" y="383.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (30,303,030 samples, 0.16%)</title><rect x="231.5" y="373" width="1.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="234.49" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="858.4" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="861.40" y="287.5" ></text>
</g>
<g >
<title>__mmap (10,101,010 samples, 0.05%)</title><rect x="213.0" y="277" width="0.7" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="216.03" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.5" y="421" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.55" y="431.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="25.9" y="437" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="28.91" y="447.5" ></text>
</g>
<g >
<title>Logger::get_instance (30,303,030 samples, 0.16%)</title><rect x="671.9" y="389" width="1.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="674.92" y="399.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="862.9" y="309" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="865.86" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1145.4" y="389" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1148.45" y="399.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (40,404,040 samples, 0.22%)</title><rect x="217.5" y="389" width="2.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="220.49" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.22%)</title><rect x="115.0" y="325" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="118.02" y="335.5" ></text>
</g>
<g >
<title>Logger::info (10,101,010 samples, 0.05%)</title><rect x="1083.1" y="405" width="0.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1086.07" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::weak_ptr&lt;sim::ILink&gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (20,202,020 samples, 0.11%)</title><rect x="1135.9" y="421" width="1.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1138.90" y="431.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.11%)</title><rect x="1176.0" y="405" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1179.00" y="415.5" ></text>
</g>
<g >
<title>malloc (80,808,080 samples, 0.43%)</title><rect x="656.0" y="389" width="5.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="659.01" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (323,232,320 samples, 1.73%)</title><rect x="596.2" y="405" width="20.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="599.18" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (50,505,050 samples, 0.27%)</title><rect x="1163.9" y="421" width="3.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1166.91" y="431.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.05%)</title><rect x="228.9" y="357" width="0.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="231.94" y="367.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (303,030,300 samples, 1.62%)</title><rect x="1090.1" y="405" width="19.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1093.08" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="24.0" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="27.00" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.22%)</title><rect x="107.4" y="165" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.38" y="175.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.05%)</title><rect x="1092.0" y="373" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1094.98" y="383.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (20,202,020 samples, 0.11%)</title><rect x="1184.3" y="245" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1187.27" y="255.5" ></text>
</g>
<g >
<title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (20,202,020 samples, 0.11%)</title><rect x="86.4" y="389" width="1.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="89.38" y="399.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (20,202,020 samples, 0.11%)</title><rect x="1184.3" y="277" width="1.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1187.27" y="287.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (40,404,040 samples, 0.22%)</title><rect x="865.4" y="357" width="2.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="868.40" y="367.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="219.4" y="373" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="222.40" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.27%)</title><rect x="352.4" y="277" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="355.42" y="287.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (30,303,030 samples, 0.16%)</title><rect x="1097.1" y="373" width="1.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1100.08" y="383.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Switch::process (111,111,110 samples, 0.59%)</title><rect x="1121.3" y="437" width="7.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1124.26" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="1170.9" y="261" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1173.91" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (20,202,020 samples, 0.11%)</title><rect x="1086.9" y="389" width="1.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1089.89" y="399.5" ></text>
</g>
<g >
<title>virtual thunk to sim::RoutingModule::get_id[abi:cxx11] (10,101,010 samples, 0.05%)</title><rect x="1144.8" y="421" width="0.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1147.81" y="431.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1184.9" y="181" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1187.91" y="191.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (444,444,440 samples, 2.37%)</title><rect x="60.9" y="405" width="28.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="63.92" y="415.5" >s..</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="290.0" y="421" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="293.04" y="431.5" ></text>
</g>
<g >
<title>vsnprintf (20,202,020 samples, 0.11%)</title><rect x="112.5" y="373" width="1.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="115.47" y="383.5" ></text>
</g>
<g >
<title>operator delete (80,808,080 samples, 0.43%)</title><rect x="120.7" y="453" width="5.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="123.74" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (282,828,280 samples, 1.51%)</title><rect x="64.1" y="357" width="17.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="67.10" y="367.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.11%)</title><rect x="350.5" y="357" width="1.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="353.51" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="211.1" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="214.12" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1153.1" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1156.09" y="383.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (20,202,020 samples, 0.11%)</title><rect x="1186.8" y="261" width="1.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1189.82" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.22%)</title><rect x="865.4" y="309" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="868.40" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1185.5" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.54" y="175.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (10,101,010 samples, 0.05%)</title><rect x="233.4" y="405" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="236.40" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.5" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.55" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="24.0" y="437" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="27.00" y="447.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;, std::weak_ptr&lt;sim::IProcessingDevice&gt;&amp;&gt; (1,373,737,360 samples, 7.34%)</title><rect x="989.5" y="421" width="86.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="992.51" y="431.5" >void sim::..</text>
</g>
<g >
<title>sim::Link::get_to (30,303,030 samples, 0.16%)</title><rect x="1154.4" y="421" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1157.36" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (171,717,170 samples, 0.92%)</title><rect x="94.0" y="357" width="10.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="97.01" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.27%)</title><rect x="106.7" y="325" width="3.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.74" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="211.1" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="214.12" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1143.5" y="117" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.54" y="127.5" ></text>
</g>
<g >
<title>operator new (252,525,250 samples, 1.35%)</title><rect x="836.1" y="389" width="15.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="839.13" y="399.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.05%)</title><rect x="105.5" y="421" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="108.47" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::export_metrics_to_files (1,494,949,480 samples, 7.98%)</title><rect x="23.4" y="469" width="94.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="26.37" y="479.5" >sim::Metric..</text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (30,303,030 samples, 0.16%)</title><rect x="1107.3" y="389" width="1.9" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1110.26" y="399.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (20,202,020 samples, 0.11%)</title><rect x="1107.9" y="373" width="1.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1110.90" y="383.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.05%)</title><rect x="362.6" y="341" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="365.60" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1143.5" y="149" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.54" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::get_instance (10,101,010 samples, 0.05%)</title><rect x="859.0" y="373" width="0.7" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="862.04" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.7" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.73" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="1170.9" y="277" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1173.91" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (111,111,110 samples, 0.59%)</title><rect x="1100.3" y="293" width="7.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1103.26" y="303.5" ></text>
</g>
<g >
<title>sim::Process::operator (121,212,120 samples, 0.65%)</title><rect x="137.3" y="453" width="7.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="140.29" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (232,323,230 samples, 1.24%)</title><rect x="67.3" y="341" width="14.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="70.28" y="351.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (70,707,070 samples, 0.38%)</title><rect x="1184.3" y="309" width="4.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1187.27" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="857.8" y="309" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="860.77" y="319.5" ></text>
</g>
<g >
<title>vsnprintf (40,404,040 samples, 0.22%)</title><rect x="865.4" y="341" width="2.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="868.40" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (171,717,170 samples, 0.92%)</title><rect x="94.0" y="389" width="10.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="97.01" y="399.5" ></text>
</g>
<g >
<title>cfree (30,303,030 samples, 0.16%)</title><rect x="1083.7" y="405" width="1.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1086.71" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="24.0" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="27.00" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.5" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.55" y="335.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="22.7" y="437" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="25.73" y="447.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.11%)</title><rect x="1184.3" y="213" width="1.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1187.27" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1143.5" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.54" y="239.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (151,515,150 samples, 0.81%)</title><rect x="220.7" y="373" width="9.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="223.67" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="660.5" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="663.46" y="383.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.16%)</title><rect x="1140.4" y="389" width="1.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1143.36" y="399.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (60,606,060 samples, 0.32%)</title><rect x="55.8" y="405" width="3.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="58.83" y="415.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.22%)</title><rect x="1139.7" y="405" width="2.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1142.72" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (60,606,060 samples, 0.32%)</title><rect x="351.8" y="325" width="3.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="354.78" y="335.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (20,202,020 samples, 0.11%)</title><rect x="1184.3" y="261" width="1.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1187.27" y="271.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.22%)</title><rect x="1142.3" y="389" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1145.27" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="241.0" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="244.04" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.7" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.73" y="303.5" ></text>
</g>
<g >
<title>_start (18,717,171,530 samples, 99.95%)</title><rect x="10.6" y="533" width="1179.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.64" y="543.5" >_start</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="113.1" y="325" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="116.11" y="335.5" ></text>
</g>
<g >
<title>main (18,515,151,330 samples, 98.87%)</title><rect x="23.4" y="485" width="1166.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="26.37" y="495.5" >main</text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::export_to_files (1,323,232,310 samples, 7.07%)</title><rect x="23.4" y="453" width="83.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="26.37" y="463.5" >sim::Link..</text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.22%)</title><rect x="1142.3" y="373" width="2.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1145.27" y="383.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (10,101,010 samples, 0.05%)</title><rect x="55.2" y="405" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="58.19" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.5" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.54" y="239.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (60,606,060 samples, 0.32%)</title><rect x="113.7" y="421" width="3.9" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="116.74" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="84.5" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.47" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="355.0" y="229" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="357.96" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="660.5" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="663.46" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="358.8" y="389" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="361.78" y="399.5" ></text>
</g>
<g >
<title>vsnprintf (131,313,130 samples, 0.70%)</title><rect x="220.7" y="341" width="8.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="223.67" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="337.1" y="405" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="340.14" y="415.5" ></text>
</g>
<g >
<title>vsnprintf (90,909,090 samples, 0.49%)</title><rect x="342.9" y="341" width="5.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="345.87" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="84.5" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.47" y="319.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.16%)</title><rect x="1152.4" y="405" width="2.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1155.45" y="415.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (353,535,350 samples, 1.89%)</title><rect x="573.9" y="389" width="22.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="576.91" y="399.5" >v..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1141.6" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1144.63" y="351.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (30,303,030 samples, 0.16%)</title><rect x="109.9" y="421" width="1.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="112.92" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="204.8" y="405" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="207.76" y="415.5" ></text>
</g>
<g >
<title>__uselocale (30,303,030 samples, 0.16%)</title><rect x="81.9" y="389" width="1.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="84.92" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="869.2" y="357" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="872.22" y="367.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (50,505,050 samples, 0.27%)</title><rect x="106.7" y="405" width="3.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="109.74" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="660.5" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="663.46" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (10,101,010 samples, 0.05%)</title><rect x="1087.5" y="373" width="0.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1090.53" y="383.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (10,101,010 samples, 0.05%)</title><rect x="337.8" y="389" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="340.78" y="399.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.05%)</title><rect x="363.9" y="325" width="0.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="366.87" y="335.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (90,909,090 samples, 0.49%)</title><rect x="853.9" y="389" width="5.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="856.95" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.32%)</title><rect x="55.8" y="309" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.83" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="211.1" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="214.12" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="857.8" y="325" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="860.77" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1153.7" y="373" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1156.72" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.7" y="181" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.73" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="1152.4" y="389" width="2.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1155.45" y="399.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="1083.1" y="389" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1086.07" y="399.5" ></text>
</g>
<g >
<title>sim::SendData::operator (606,060,600 samples, 3.24%)</title><rect x="1083.1" y="437" width="38.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1086.07" y="447.5" >sim..</text>
</g>
<g >
<title>malloc (141,414,140 samples, 0.76%)</title><rect x="1049.3" y="389" width="9.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1052.34" y="399.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1187.5" y="181" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.45" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1141.6" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1144.63" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.22%)</title><rect x="57.1" y="101" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.10" y="111.5" ></text>
</g>
<g >
<title>sim::Host::~Host (191,919,190 samples, 1.02%)</title><rect x="10.6" y="405" width="12.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="13.64" y="415.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="52.0" y="405" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="55.01" y="415.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (20,202,020 samples, 0.11%)</title><rect x="112.5" y="421" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="115.47" y="431.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (20,202,020 samples, 0.11%)</title><rect x="216.2" y="389" width="1.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="219.21" y="399.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.11%)</title><rect x="85.1" y="389" width="1.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="88.10" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.32%)</title><rect x="55.8" y="245" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.83" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="24.6" y="405" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="27.64" y="415.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="213.7" y="357" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="216.67" y="367.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.05%)</title><rect x="341.0" y="373" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="343.96" y="383.5" ></text>
</g>
<g >
<title>YAML::Parser::HandleNextDocument (80,808,080 samples, 0.43%)</title><rect x="1183.6" y="421" width="5.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1186.64" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (191,919,190 samples, 1.02%)</title><rect x="10.6" y="421" width="12.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.64" y="431.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.22%)</title><rect x="1151.8" y="421" width="2.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1154.81" y="431.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.27%)</title><rect x="641.4" y="405" width="3.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="644.37" y="415.5" ></text>
</g>
<g >
<title>YAML::detail::node_data::insert_map_pair (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="261" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1189.18" y="271.5" ></text>
</g>
<g >
<title>operator delete (90,909,090 samples, 0.49%)</title><rect x="644.6" y="405" width="5.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="647.55" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="125.2" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="128.20" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="108.0" y="101" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="111.02" y="111.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (101,010,100 samples, 0.54%)</title><rect x="130.9" y="453" width="6.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="133.93" y="463.5" ></text>
</g>
<g >
<title>sim::Parser&lt;sim::Host&gt;::parse_object (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="405" width="0.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1192.36" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1185.5" y="181" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.54" y="191.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (10,101,010 samples, 0.05%)</title><rect x="241.7" y="389" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="244.67" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.22%)</title><rect x="107.4" y="181" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.38" y="191.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1184.9" y="165" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1187.91" y="175.5" ></text>
</g>
<g >
<title>malloc (212,121,210 samples, 1.13%)</title><rect x="838.7" y="373" width="13.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="841.67" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="365.8" y="357" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="368.78" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1185.5" y="85" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.54" y="95.5" ></text>
</g>
<g >
<title>std::locale::operator= (20,202,020 samples, 0.11%)</title><rect x="216.2" y="357" width="1.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="219.21" y="367.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (80,808,080 samples, 0.43%)</title><rect x="359.4" y="389" width="5.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="362.42" y="399.5" ></text>
</g>
<g >
<title>sim::IdentifierFactory::~IdentifierFactory (191,919,190 samples, 1.02%)</title><rect x="10.6" y="453" width="12.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="13.64" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.5" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.55" y="287.5" ></text>
</g>
<g >
<title>fopen (50,505,050 samples, 0.27%)</title><rect x="106.7" y="389" width="3.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="109.74" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1157.5" y="373" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1160.54" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (90,909,090 samples, 0.49%)</title><rect x="207.9" y="389" width="5.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="210.94" y="399.5" ></text>
</g>
<g >
<title>vsnprintf (50,505,050 samples, 0.27%)</title><rect x="352.4" y="309" width="3.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="355.42" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="862.9" y="293" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="865.86" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="92.7" y="389" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="95.74" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="862.9" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="865.86" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1143.5" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.54" y="351.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.16%)</title><rect x="1170.3" y="405" width="1.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1173.27" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.27%)</title><rect x="106.7" y="261" width="3.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.74" y="271.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.11%)</title><rect x="1176.0" y="389" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1179.00" y="399.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1145.4" y="421" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1148.45" y="431.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="862.2" y="373" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="865.22" y="383.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.11%)</title><rect x="361.3" y="341" width="1.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="364.33" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1185.5" y="117" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.54" y="127.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="113.7" y="405" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="116.74" y="415.5" ></text>
</g>
<g >
<title>fopen (60,606,060 samples, 0.32%)</title><rect x="55.8" y="389" width="3.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="58.83" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.32%)</title><rect x="55.8" y="149" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.83" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1176.0" y="373" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1179.00" y="383.5" ></text>
</g>
<g >
<title>sim::Host::notify_about_arrival (10,101,010 samples, 0.05%)</title><rect x="206.0" y="405" width="0.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="209.03" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="24.6" y="421" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="27.64" y="431.5" ></text>
</g>
<g >
<title>strlen@plt (10,101,010 samples, 0.05%)</title><rect x="988.9" y="405" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="991.88" y="415.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::export_to_files (171,717,170 samples, 0.92%)</title><rect x="106.7" y="453" width="10.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="109.74" y="463.5" ></text>
</g>
<g >
<title>sim::Link::get_to (10,101,010 samples, 0.05%)</title><rect x="1135.3" y="405" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1138.26" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (202,020,200 samples, 1.08%)</title><rect x="10.6" y="469" width="12.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.64" y="479.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnScalar (10,101,010 samples, 0.05%)</title><rect x="1185.5" y="277" width="0.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1188.54" y="287.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::data[abi:cxx11] (10,101,010 samples, 0.05%)</title><rect x="26.5" y="437" width="0.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="29.55" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.5" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.54" y="223.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (50,505,050 samples, 0.27%)</title><rect x="210.5" y="357" width="3.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="213.49" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.32%)</title><rect x="55.8" y="293" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.83" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="866.0" y="293" width="2.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="869.04" y="303.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_delivery_rate (20,202,020 samples, 0.11%)</title><rect x="365.8" y="389" width="1.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="368.78" y="399.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (20,202,020 samples, 0.11%)</title><rect x="112.5" y="405" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="115.47" y="415.5" ></text>
</g>
<g >
<title>std::locale::locale (10,101,010 samples, 0.05%)</title><rect x="1092.0" y="357" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1094.98" y="367.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="874.3" y="373" width="0.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="877.31" y="383.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="211.8" y="341" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="214.76" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1141.6" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1144.63" y="207.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="54.6" y="405" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="57.55" y="415.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,101,010 samples, 0.05%)</title><rect x="235.3" y="421" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="238.31" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.7" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.73" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="360.7" y="341" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="363.69" y="351.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (30,303,030 samples, 0.16%)</title><rect x="339.7" y="389" width="1.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="342.69" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (40,404,040 samples, 0.22%)</title><rect x="1142.3" y="405" width="2.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1145.27" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.38%)</title><rect x="344.1" y="309" width="4.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="347.14" y="319.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (80,808,080 samples, 0.43%)</title><rect x="359.4" y="373" width="5.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="362.42" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (10,101,010 samples, 0.05%)</title><rect x="214.3" y="405" width="0.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="217.30" y="415.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnMapStart (10,101,010 samples, 0.05%)</title><rect x="1183.6" y="309" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1186.64" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="858.4" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="861.40" y="223.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="1131.4" y="437" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1134.45" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.7" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.73" y="255.5" ></text>
</g>
<g >
<title>sim::Event::Event (161,616,160 samples, 0.86%)</title><rect x="300.9" y="421" width="10.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="303.86" y="431.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (373,737,370 samples, 2.00%)</title><rect x="311.0" y="421" width="23.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="314.05" y="431.5" >s..</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1145.4" y="357" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1148.45" y="367.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="349.9" y="357" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="352.87" y="367.5" ></text>
</g>
<g >
<title>sim::is_valid_link (30,303,030 samples, 0.16%)</title><rect x="1134.0" y="421" width="1.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1136.99" y="431.5" ></text>
</g>
<g >
<title>operator delete (60,606,060 samples, 0.32%)</title><rect x="290.7" y="421" width="3.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="293.68" y="431.5" ></text>
</g>
<g >
<title>sim::Link::arrive (515,151,510 samples, 2.75%)</title><rect x="201.6" y="421" width="32.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="204.57" y="431.5" >si..</text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (30,303,030 samples, 0.16%)</title><rect x="1180.5" y="437" width="1.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1183.45" y="447.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (40,404,040 samples, 0.22%)</title><rect x="1085.6" y="405" width="2.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1088.62" y="415.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1187.5" y="165" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.45" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (191,919,190 samples, 1.02%)</title><rect x="629.3" y="389" width="12.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="632.28" y="399.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1187.5" y="197" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.45" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="55.2" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.19" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (10,101,010 samples, 0.05%)</title><rect x="1163.3" y="421" width="0.6" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1166.27" y="431.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (80,808,080 samples, 0.43%)</title><rect x="869.9" y="405" width="5.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="872.86" y="415.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.11%)</title><rect x="24.6" y="437" width="1.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="27.64" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (181,818,180 samples, 0.97%)</title><rect x="822.8" y="373" width="11.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="825.76" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.27%)</title><rect x="1172.8" y="357" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1175.82" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="55.2" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.19" y="191.5" ></text>
</g>
<g >
<title>malloc@plt (10,101,010 samples, 0.05%)</title><rect x="1151.2" y="421" width="0.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1154.18" y="431.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::Push (10,101,010 samples, 0.05%)</title><rect x="1185.5" y="261" width="0.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1188.54" y="271.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.05%)</title><rect x="367.7" y="405" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="370.69" y="415.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="215.6" y="373" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="218.58" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="211.1" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="214.12" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (131,313,130 samples, 0.70%)</title><rect x="1167.7" y="421" width="8.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1170.72" y="431.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (20,202,020 samples, 0.11%)</title><rect x="334.6" y="421" width="1.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="337.60" y="431.5" ></text>
</g>
<g >
<title>vsnprintf (121,212,120 samples, 0.65%)</title><rect x="1099.6" y="341" width="7.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1102.62" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1144.2" y="341" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1147.17" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="421" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (111,111,110 samples, 0.59%)</title><rect x="1100.3" y="309" width="7.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1103.26" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1185.5" y="53" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.54" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="55.2" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.19" y="271.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (60,606,060 samples, 0.32%)</title><rect x="864.8" y="373" width="3.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="867.77" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.32%)</title><rect x="55.8" y="325" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.83" y="335.5" ></text>
</g>
<g >
<title>sim::BaseHasher::get_hash (10,101,010 samples, 0.05%)</title><rect x="874.3" y="389" width="0.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="877.31" y="399.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="229" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1189.18" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1141.6" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1144.63" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.27%)</title><rect x="106.7" y="293" width="3.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.74" y="303.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (80,808,080 samples, 0.43%)</title><rect x="1183.6" y="373" width="5.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.64" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.05%)</title><rect x="1095.2" y="357" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1098.17" y="367.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="50.1" y="405" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="53.10" y="415.5" ></text>
</g>
<g >
<title>sim::LinkQueue::empty (40,404,040 samples, 0.22%)</title><rect x="859.7" y="405" width="2.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="862.68" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1130.2" y="437" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1133.17" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.22%)</title><rect x="865.4" y="325" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="868.40" y="335.5" ></text>
</g>
<g >
<title>sim::Process::~Process (111,111,110 samples, 0.59%)</title><rect x="1076.1" y="437" width="7.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1079.07" y="447.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="1091.3" y="389" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1094.35" y="399.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (20,202,020 samples, 0.11%)</title><rect x="1186.8" y="245" width="1.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1189.82" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.32%)</title><rect x="55.8" y="165" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.83" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.22%)</title><rect x="1173.5" y="341" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1176.45" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="232.8" y="357" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="235.76" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 1.19%)</title><rect x="67.9" y="325" width="14.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="70.92" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="55.2" y="165" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.19" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="113.1" y="341" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="116.11" y="351.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (20,202,020 samples, 0.11%)</title><rect x="365.8" y="373" width="1.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="368.78" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.7" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.73" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1141.6" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1144.63" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.7" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.73" y="351.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (10,101,010 samples, 0.05%)</title><rect x="1088.2" y="405" width="0.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1091.17" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1185.5" y="37" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.54" y="47.5" ></text>
</g>
<g >
<title>[libc.so.6] (171,717,170 samples, 0.92%)</title><rect x="94.0" y="341" width="10.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="97.01" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="213.0" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="216.03" y="175.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (101,010,100 samples, 0.54%)</title><rect x="1183.6" y="469" width="6.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1186.64" y="479.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (50,505,050 samples, 0.27%)</title><rect x="855.9" y="357" width="3.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="858.86" y="367.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (60,606,060 samples, 0.32%)</title><rect x="351.8" y="341" width="3.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="354.78" y="351.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (10,101,010 samples, 0.05%)</title><rect x="852.7" y="373" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="855.68" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.22%)</title><rect x="115.0" y="341" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="118.02" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="55.2" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.19" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="1170.9" y="325" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1173.91" y="335.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="862.2" y="389" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="865.22" y="399.5" ></text>
</g>
<g >
<title>Logger::warn (2,505,050,480 samples, 13.38%)</title><rect x="438.3" y="405" width="157.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="441.34" y="415.5" >Logger::warn</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="241.0" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="244.04" y="351.5" ></text>
</g>
<g >
<title>sim::Process::~Process (40,404,040 samples, 0.22%)</title><rect x="144.9" y="453" width="2.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="147.93" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1185.5" y="197" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1188.54" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="437" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="25.9" y="405" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.91" y="415.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (121,212,120 samples, 0.65%)</title><rect x="1099.6" y="373" width="7.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1102.62" y="383.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (10,101,010 samples, 0.05%)</title><rect x="368.3" y="405" width="0.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="371.33" y="415.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.11%)</title><rect x="1184.3" y="197" width="1.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1187.27" y="207.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (10,101,010 samples, 0.05%)</title><rect x="355.6" y="357" width="0.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="358.60" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1187.5" y="149" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.45" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1143.5" y="181" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.54" y="191.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (10,101,010 samples, 0.05%)</title><rect x="852.0" y="357" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="855.04" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.32%)</title><rect x="55.8" y="213" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.83" y="223.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10,101,010 samples, 0.05%)</title><rect x="1118.1" y="389" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1121.08" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="84.5" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.47" y="351.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (10,101,010 samples, 0.05%)</title><rect x="341.6" y="373" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="344.60" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::~MetricsCollector (10,101,010 samples, 0.05%)</title><rect x="22.7" y="453" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="25.73" y="463.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="235.9" y="405" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="238.94" y="415.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (151,515,150 samples, 0.81%)</title><rect x="220.7" y="389" width="9.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="223.67" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="1170.9" y="309" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1173.91" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="660.5" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="663.46" y="287.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.16%)</title><rect x="1170.3" y="389" width="1.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1173.27" y="399.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (20,202,020 samples, 0.11%)</title><rect x="337.8" y="405" width="1.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="340.78" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="211.1" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="214.12" y="335.5" ></text>
</g>
<g >
<title>open64 (60,606,060 samples, 0.32%)</title><rect x="55.8" y="341" width="3.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="58.83" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.32%)</title><rect x="55.8" y="261" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.83" y="271.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::update (151,515,150 samples, 0.81%)</title><rect x="358.1" y="405" width="9.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="361.14" y="415.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (111,111,110 samples, 0.59%)</title><rect x="349.2" y="373" width="7.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="352.23" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.05%)</title><rect x="219.4" y="357" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="222.40" y="367.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="1117.4" y="373" width="0.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1120.44" y="383.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (10,101,010 samples, 0.05%)</title><rect x="911.9" y="405" width="0.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="914.87" y="415.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.11%)</title><rect x="1135.9" y="405" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1138.90" y="415.5" ></text>
</g>
<g >
<title>sim::Event::Event (282,828,280 samples, 1.51%)</title><rect x="1058.3" y="405" width="17.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1061.25" y="415.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_outlinks (40,404,040 samples, 0.22%)</title><rect x="1156.3" y="421" width="2.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1159.27" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (20,202,020 samples, 0.11%)</title><rect x="1177.3" y="437" width="1.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1180.27" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="213.0" y="181" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="216.03" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.22%)</title><rect x="353.1" y="261" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="356.05" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;* std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_Alloc_node&gt; (10,101,010 samples, 0.05%)</title><rect x="1182.4" y="437" width="0.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1185.36" y="447.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="862.9" y="389" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="865.86" y="399.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (292,929,290 samples, 1.56%)</title><rect x="214.9" y="405" width="18.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="217.94" y="415.5" ></text>
</g>
<g >
<title>__default_morecore (10,101,010 samples, 0.05%)</title><rect x="22.7" y="405" width="0.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="25.73" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.05%)</title><rect x="862.9" y="357" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="865.86" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="191.5" ></text>
</g>
<g >
<title>pthread_once (10,101,010 samples, 0.05%)</title><rect x="868.0" y="357" width="0.6" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="870.95" y="367.5" ></text>
</g>
<g >
<title>YAML::Load (80,808,080 samples, 0.43%)</title><rect x="1183.6" y="437" width="5.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1186.64" y="447.5" ></text>
</g>
<g >
<title>auto sim::YamlParser::process_hosts (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="421" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1192.36" y="431.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::get_size (50,505,050 samples, 0.27%)</title><rect x="393.1" y="421" width="3.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="396.15" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::export_to_file (171,717,170 samples, 0.92%)</title><rect x="106.7" y="437" width="10.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="109.74" y="447.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::get_records (10,101,010 samples, 0.05%)</title><rect x="50.7" y="421" width="0.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="53.73" y="431.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleDocument (80,808,080 samples, 0.43%)</title><rect x="1183.6" y="405" width="5.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1186.64" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="125.2" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="128.20" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="55.2" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.19" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (131,313,130 samples, 0.70%)</title><rect x="220.7" y="325" width="8.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="223.67" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="113.1" y="309" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="116.11" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="24.0" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="27.00" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="660.5" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="663.46" y="335.5" ></text>
</g>
<g >
<title>YAML::Scanner::pop (10,101,010 samples, 0.05%)</title><rect x="1188.1" y="277" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1191.09" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="1170.9" y="293" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1173.91" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1141.6" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1144.63" y="335.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (10,101,010 samples, 0.05%)</title><rect x="357.5" y="389" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="360.51" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="501" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.22%)</title><rect x="107.4" y="149" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.38" y="159.5" ></text>
</g>
<g >
<title>sim::write_to_csv (1,252,525,240 samples, 6.69%)</title><rect x="27.2" y="437" width="78.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="30.18" y="447.5" >sim::writ..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="241.0" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="244.04" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.27%)</title><rect x="56.5" y="133" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="59.46" y="143.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="356.9" y="373" width="0.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="359.87" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="271.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (20,202,020 samples, 0.11%)</title><rect x="857.8" y="341" width="1.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="860.77" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="84.5" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.47" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="857.8" y="293" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="860.77" y="303.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="219.4" y="309" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="222.40" y="319.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (20,202,020 samples, 0.11%)</title><rect x="1186.8" y="277" width="1.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1189.82" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.22%)</title><rect x="353.1" y="245" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="356.05" y="255.5" ></text>
</g>
<g >
<title>sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::recalculate_paths (878,787,870 samples, 4.69%)</title><rect x="1128.3" y="453" width="55.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="1131.26" y="463.5" >sim::..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.5" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.55" y="271.5" ></text>
</g>
<g >
<title>cfree (101,010,100 samples, 0.54%)</title><rect x="16.4" y="389" width="6.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="19.36" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (10,101,010 samples, 0.05%)</title><rect x="366.4" y="357" width="0.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="369.42" y="367.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.27%)</title><rect x="1172.8" y="389" width="3.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1175.82" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1143.5" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.54" y="223.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (10,101,010 samples, 0.05%)</title><rect x="338.4" y="389" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="341.41" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="24.0" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="27.00" y="415.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (30,303,030 samples, 0.16%)</title><rect x="117.6" y="469" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="120.56" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.22%)</title><rect x="20.2" y="341" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="23.18" y="351.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (50,505,050 samples, 0.27%)</title><rect x="106.7" y="421" width="3.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="109.74" y="431.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (80,808,080 samples, 0.43%)</title><rect x="1183.6" y="389" width="5.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.64" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>std::locale::locale (10,101,010 samples, 0.05%)</title><rect x="363.2" y="357" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="366.24" y="367.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (80,808,080 samples, 0.43%)</title><rect x="1183.6" y="341" width="5.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.64" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="84.5" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.47" y="287.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,101,010 samples, 0.05%)</title><rect x="355.6" y="341" width="0.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="358.60" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1141.6" y="181" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1144.63" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="213.0" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="216.03" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="125.2" y="437" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="128.20" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (121,212,120 samples, 0.65%)</title><rect x="1137.2" y="421" width="7.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1140.17" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.11%)</title><rect x="1095.8" y="357" width="1.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1098.80" y="367.5" ></text>
</g>
<g >
<title>sim::BaseHasher::get_hash (10,101,010 samples, 0.05%)</title><rect x="1117.4" y="389" width="0.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1120.44" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.32%)</title><rect x="78.1" y="309" width="3.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="81.10" y="319.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::get_id[abi:cxx11] (10,101,010 samples, 0.05%)</title><rect x="367.1" y="389" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="370.06" y="399.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="349.2" y="357" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="352.23" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="213.0" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="216.03" y="207.5" ></text>
</g>
<g >
<title>operator new (101,010,100 samples, 0.54%)</title><rect x="294.5" y="421" width="6.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="297.50" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="125.2" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="128.20" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="55.2" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.19" y="351.5" ></text>
</g>
<g >
<title>cfree (313,131,310 samples, 1.67%)</title><rect x="181.2" y="437" width="19.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="184.21" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="858.4" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="861.40" y="255.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.05%)</title><rect x="104.8" y="405" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="107.83" y="415.5" ></text>
</g>
<g >
<title>sim::RoutingModule::update_routing_table (191,919,190 samples, 1.02%)</title><rect x="1133.4" y="437" width="12.0" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1136.35" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="855.2" y="357" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="858.22" y="367.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (50,505,050 samples, 0.27%)</title><rect x="360.1" y="357" width="3.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="363.05" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="287.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="25.9" y="421" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="28.91" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (60,606,060 samples, 0.32%)</title><rect x="237.9" y="389" width="3.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="240.85" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="84.5" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.47" y="255.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (20,202,020 samples, 0.11%)</title><rect x="87.6" y="389" width="1.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="90.65" y="399.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (222,222,220 samples, 1.19%)</title><rect x="90.8" y="405" width="14.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="93.83" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.49%)</title><rect x="17.0" y="357" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.00" y="367.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (90,909,090 samples, 0.49%)</title><rect x="853.9" y="405" width="5.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="856.95" y="415.5" ></text>
</g>
<g >
<title>sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::start (16,888,888,720 samples, 90.18%)</title><rect x="119.5" y="469" width="1064.1" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="122.47" y="479.5" >sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::start</text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (30,303,030 samples, 0.16%)</title><rect x="239.8" y="373" width="1.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="242.76" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="1170.9" y="357" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1173.91" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1143.5" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.54" y="207.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="863.5" y="389" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="866.50" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.27%)</title><rect x="106.7" y="213" width="3.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.74" y="223.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (20,202,020 samples, 0.11%)</title><rect x="112.5" y="389" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="115.47" y="399.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (121,212,120 samples, 0.65%)</title><rect x="862.2" y="405" width="7.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="865.22" y="415.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (20,202,020 samples, 0.11%)</title><rect x="868.6" y="373" width="1.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="871.59" y="383.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_hosts (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="437" width="0.6" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1192.36" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1143.5" y="133" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.54" y="143.5" ></text>
</g>
<g >
<title>cfree (393,939,390 samples, 2.10%)</title><rect x="616.5" y="405" width="24.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="619.55" y="415.5" >c..</text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.05%)</title><rect x="1092.0" y="389" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1094.98" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="533" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="59.0" y="69" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="62.01" y="79.5" ></text>
</g>
<g >
<title>sim::Link::get_to (20,202,020 samples, 0.11%)</title><rect x="1132.1" y="437" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1135.08" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="55.2" y="149" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.19" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="349.2" y="341" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="352.23" y="351.5" ></text>
</g>
<g >
<title>operator new (171,717,170 samples, 0.92%)</title><rect x="650.3" y="405" width="10.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="653.28" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (30,303,030 samples, 0.16%)</title><rect x="1178.5" y="437" width="2.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1181.54" y="447.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (50,505,050 samples, 0.27%)</title><rect x="114.4" y="405" width="3.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="117.38" y="415.5" ></text>
</g>
<g >
<title>vsnprintf (171,717,170 samples, 0.92%)</title><rect x="94.0" y="373" width="10.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="97.01" y="383.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.11%)</title><rect x="212.4" y="341" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="215.39" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1153.1" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1156.09" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (10,101,010 samples, 0.05%)</title><rect x="852.0" y="373" width="0.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="855.04" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1143.5" y="101" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.54" y="111.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="340.3" y="373" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="343.32" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1141.6" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1144.63" y="319.5" ></text>
</g>
<g >
<title>write (10,101,010 samples, 0.05%)</title><rect x="55.2" y="357" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="58.19" y="367.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (20,202,020 samples, 0.11%)</title><rect x="1184.3" y="293" width="1.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1187.27" y="303.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="219.4" y="325" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="222.40" y="335.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (20,202,020 samples, 0.11%)</title><rect x="868.6" y="389" width="1.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="871.59" y="399.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (20,202,020 samples, 0.11%)</title><rect x="852.0" y="389" width="1.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="855.04" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.05%)</title><rect x="219.4" y="341" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="222.40" y="351.5" ></text>
</g>
<g >
<title>sim::Host::process (525,252,520 samples, 2.80%)</title><rect x="335.9" y="421" width="33.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="338.87" y="431.5" >si..</text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.65%)</title><rect x="221.3" y="293" width="7.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="224.31" y="303.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (525,252,520 samples, 2.80%)</title><rect x="200.9" y="437" width="33.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="203.94" y="447.5" >si..</text>
</g>
<g >
<title>sim::Event::get_time (80,808,080 samples, 0.43%)</title><rect x="125.8" y="453" width="5.1" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="128.84" y="463.5" ></text>
</g>
<g >
<title>vsnprintf (10,101,010 samples, 0.05%)</title><rect x="229.6" y="357" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="232.58" y="367.5" ></text>
</g>
<g >
<title>sim::Link::transmit (101,010,100 samples, 0.54%)</title><rect x="235.9" y="421" width="6.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="238.94" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1143.5" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.54" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="103.6" y="293" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="106.56" y="303.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (50,505,050 samples, 0.27%)</title><rect x="1093.9" y="373" width="3.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1096.89" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="357" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1192.36" y="367.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="235.9" y="389" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="238.94" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.5" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.55" y="351.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (20,202,020 samples, 0.11%)</title><rect x="1088.8" y="405" width="1.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1091.80" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (191,919,190 samples, 1.02%)</title><rect x="10.6" y="437" width="12.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.64" y="447.5" ></text>
</g>
<g >
<title>sim::Parser&lt;sim::TcpFlow&lt;sim::TcpTahoeCC&gt; &gt;::parse_object (10,101,010 samples, 0.05%)</title><rect x="1188.7" y="421" width="0.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1191.73" y="431.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (60,606,060 samples, 0.32%)</title><rect x="389.3" y="421" width="3.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="392.33" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1185.5" y="133" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.54" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1091.3" y="373" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1094.35" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.7" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.73" y="239.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::operator (131,313,130 samples, 0.70%)</title><rect x="234.0" y="437" width="8.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="237.03" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1108.5" y="357" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1111.53" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="319.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (10,101,010 samples, 0.05%)</title><rect x="55.2" y="373" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="58.19" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.22%)</title><rect x="107.4" y="133" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.38" y="143.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (80,808,080 samples, 0.43%)</title><rect x="1183.6" y="325" width="5.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.64" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.7" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.73" y="175.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (252,525,250 samples, 1.35%)</title><rect x="88.9" y="421" width="15.9" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="91.92" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1143.5" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.54" y="319.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.11%)</title><rect x="1135.9" y="389" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1138.90" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="24.0" y="421" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="27.00" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1143.5" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.54" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.27%)</title><rect x="106.7" y="229" width="3.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.74" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1141.6" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1144.63" y="175.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.16%)</title><rect x="834.2" y="389" width="1.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="837.22" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.32%)</title><rect x="55.8" y="197" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.83" y="207.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_RTT (20,202,020 samples, 0.11%)</title><rect x="364.5" y="389" width="1.3" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="367.51" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="55.2" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.19" y="255.5" ></text>
</g>
<g >
<title>__uselocale@plt (10,101,010 samples, 0.05%)</title><rect x="83.8" y="389" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="86.83" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="22.7" y="421" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="25.73" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_insert_unique&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; const&amp;&gt; (20,202,020 samples, 0.11%)</title><rect x="1176.0" y="421" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1179.00" y="431.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1185.5" y="229" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1188.54" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="55.2" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.19" y="287.5" ></text>
</g>
<g >
<title>Logger::info (10,101,010 samples, 0.05%)</title><rect x="204.1" y="405" width="0.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="207.12" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.27%)</title><rect x="106.7" y="197" width="3.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.74" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="55.2" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.19" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="208.6" y="373" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="211.58" y="383.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="874.3" y="357" width="0.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="877.31" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.32%)</title><rect x="55.8" y="181" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.83" y="191.5" ></text>
</g>
<g >
<title>memcpy@plt (10,101,010 samples, 0.05%)</title><rect x="104.2" y="325" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="107.20" y="335.5" ></text>
</g>
<g >
<title>vsnprintf (292,929,290 samples, 1.56%)</title><rect x="63.5" y="373" width="18.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="66.46" y="383.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (20,202,020 samples, 0.11%)</title><rect x="364.5" y="373" width="1.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="367.51" y="383.5" ></text>
</g>
<g >
<title>Logger::info (20,202,020 samples, 0.11%)</title><rect x="437.1" y="405" width="1.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="440.07" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="213.0" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="216.03" y="255.5" ></text>
</g>
<g >
<title>__libc_start_main (18,717,171,530 samples, 99.95%)</title><rect x="10.6" y="517" width="1179.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.64" y="527.5" >__libc_start_main</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (60,606,060 samples, 0.32%)</title><rect x="1172.2" y="405" width="3.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1175.18" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (20,202,020 samples, 0.11%)</title><rect x="364.5" y="357" width="1.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="367.51" y="367.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (101,010,100 samples, 0.54%)</title><rect x="342.2" y="373" width="6.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="345.23" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (10,101,010 samples, 0.05%)</title><rect x="106.1" y="437" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="109.11" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="81.3" y="293" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="84.28" y="303.5" ></text>
</g>
<g >
<title>virtual thunk to sim::RoutingModule::get_id[abi:cxx11] (10,101,010 samples, 0.05%)</title><rect x="1183.0" y="437" width="0.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.00" y="447.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.05%)</title><rect x="55.2" y="389" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="58.19" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1145.4" y="373" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1148.45" y="383.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.11%)</title><rect x="212.4" y="325" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="215.39" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.27%)</title><rect x="352.4" y="293" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="355.42" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (18,717,171,530 samples, 99.95%)</title><rect x="10.6" y="501" width="1179.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.64" y="511.5" >[libc.so.6]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="84.5" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.47" y="223.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (10,101,010 samples, 0.05%)</title><rect x="237.2" y="405" width="0.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="240.22" y="415.5" ></text>
</g>
<g >
<title>Logger::get_instance (10,101,010 samples, 0.05%)</title><rect x="285.6" y="421" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="288.59" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1141.6" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1144.63" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="112.5" y="357" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="115.47" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.65%)</title><rect x="1099.6" y="325" width="7.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1102.62" y="335.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.11%)</title><rect x="1156.9" y="389" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1159.90" y="399.5" ></text>
</g>
<g >
<title>writev (10,101,010 samples, 0.05%)</title><rect x="84.5" y="373" width="0.6" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="87.47" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.7" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.73" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="858.4" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="861.40" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="227.0" y="277" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="230.03" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.05%)</title><rect x="349.9" y="341" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="352.87" y="351.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (10,101,010 samples, 0.05%)</title><rect x="55.2" y="421" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="58.19" y="431.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (323,232,320 samples, 1.73%)</title><rect x="61.6" y="389" width="20.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="64.55" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (20,202,020 samples, 0.11%)</title><rect x="53.3" y="421" width="1.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="56.28" y="431.5" ></text>
</g>
<g >
<title>Logger::get_instance (30,303,030 samples, 0.16%)</title><rect x="435.2" y="405" width="1.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="438.16" y="415.5" ></text>
</g>
<g >
<title>sim::Process::operator (13,232,323,100 samples, 70.66%)</title><rect x="242.3" y="437" width="833.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="245.31" y="447.5" >sim::Process::operator</text>
</g>
<g >
<title>_IO_file_open (60,606,060 samples, 0.32%)</title><rect x="55.8" y="357" width="3.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="58.83" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1141.6" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1144.63" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="858.4" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="861.40" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="213.0" y="293" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="216.03" y="303.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (141,414,140 samples, 0.76%)</title><rect x="348.6" y="389" width="8.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="351.60" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="55.2" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.19" y="239.5" ></text>
</g>
<g >
<title>vsnprintf (50,505,050 samples, 0.27%)</title><rect x="114.4" y="373" width="3.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="117.38" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="113.1" y="293" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="116.11" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="660.5" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="663.46" y="319.5" ></text>
</g>
<g >
<title>operator delete (10,101,010 samples, 0.05%)</title><rect x="205.4" y="405" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="208.39" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (20,202,020 samples, 0.11%)</title><rect x="1118.7" y="405" width="1.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1121.72" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="1170.3" y="373" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1173.27" y="383.5" ></text>
</g>
<g >
<title>_IO_file_fopen (60,606,060 samples, 0.32%)</title><rect x="55.8" y="373" width="3.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="58.83" y="383.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::Pop (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="277" width="0.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1189.18" y="287.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="862.9" y="325" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="865.86" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="207.3" y="389" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="210.30" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (10,101,010 samples, 0.05%)</title><rect x="361.3" y="309" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="364.33" y="319.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.27%)</title><rect x="1172.8" y="373" width="3.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1175.82" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (1,212,121,200 samples, 6.47%)</title><rect x="912.5" y="405" width="76.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="915.50" y="415.5" >std::_Rb..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.05%)</title><rect x="862.9" y="341" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="865.86" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1139.7" y="389" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1142.72" y="399.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (70,707,070 samples, 0.38%)</title><rect x="237.9" y="405" width="4.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="240.85" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="469" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (121,212,120 samples, 0.65%)</title><rect x="206.7" y="405" width="7.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="209.67" y="415.5" ></text>
</g>
<g >
<title>_IO_file_open (50,505,050 samples, 0.27%)</title><rect x="106.7" y="357" width="3.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="109.74" y="367.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (10,101,010 samples, 0.05%)</title><rect x="356.2" y="373" width="0.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="359.24" y="383.5" ></text>
</g>
</g>
</svg>
