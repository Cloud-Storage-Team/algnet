<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="598.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="581" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="581" > </text>
<g id="frames">
<g >
<title>fstatat64 (10,101,010 samples, 0.03%)</title><rect x="80.2" y="373" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="83.24" y="383.5" ></text>
</g>
<g >
<title>vsnprintf (60,606,060 samples, 0.19%)</title><rect x="561.9" y="325" width="2.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="564.91" y="335.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (333,333,330 samples, 1.04%)</title><rect x="41.2" y="373" width="12.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="44.22" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="66.9" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.86" y="223.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (30,303,030 samples, 0.09%)</title><rect x="566.0" y="309" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="568.99" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1169.9" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.93" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="39.0" y="37" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.99" y="47.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="573.1" y="277" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="576.06" y="287.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="1174.0" y="373" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1177.02" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="342.6" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="345.63" y="367.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (20,202,020 samples, 0.06%)</title><rect x="556.7" y="373" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="559.70" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1178.5" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.48" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="405" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>YAML::LoadFile (60,606,060 samples, 0.19%)</title><rect x="1187.0" y="437" width="2.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1190.03" y="447.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (60,606,060 samples, 0.19%)</title><rect x="877.4" y="357" width="2.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="880.44" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="17.8" y="341" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.80" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.16%)</title><rect x="1161.8" y="341" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.75" y="351.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (10,101,010 samples, 0.03%)</title><rect x="572.3" y="325" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="575.31" y="335.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="879.7" y="341" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="882.67" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_insert_unique&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; const&amp;&gt; (60,606,060 samples, 0.19%)</title><rect x="1180.7" y="405" width="2.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1183.71" y="415.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1178.5" y="389" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1181.48" y="399.5" ></text>
</g>
<g >
<title>sim::Process::operator (20,717,171,510 samples, 64.60%)</title><rect x="362.7" y="421" width="762.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="365.70" y="431.5" >sim::Process::operator</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="36.0" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.02" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="880.8" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="883.78" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="13.0" y="309" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.97" y="319.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (181,818,180 samples, 0.57%)</title><rect x="558.2" y="389" width="6.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="561.19" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="67.2" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.23" y="175.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (10,101,010 samples, 0.03%)</title><rect x="877.1" y="357" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="880.07" y="367.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (80,808,080 samples, 0.25%)</title><rect x="73.9" y="405" width="3.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="76.92" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="341.5" y="133" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="344.51" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="881.2" y="101" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="884.16" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.03%)</title><rect x="1185.5" y="421" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1188.54" y="431.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (10,101,010 samples, 0.03%)</title><rect x="884.5" y="389" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="887.50" y="399.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (10,101,010 samples, 0.03%)</title><rect x="362.0" y="373" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="364.96" y="383.5" ></text>
</g>
<g >
<title>sim::Host::~Host (101,010,100 samples, 0.31%)</title><rect x="14.5" y="389" width="3.7" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="17.46" y="399.5" ></text>
</g>
<g >
<title>fopen (101,010,100 samples, 0.31%)</title><rect x="70.2" y="373" width="3.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="73.21" y="383.5" ></text>
</g>
<g >
<title>sim::Simulator::recalculate_paths (878,787,870 samples, 2.74%)</title><rect x="1154.7" y="437" width="32.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1157.69" y="447.5" >si..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="361.2" y="117" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.21" y="127.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="1130.9" y="309" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1133.91" y="319.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10,101,010 samples, 0.03%)</title><rect x="1172.2" y="405" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1175.16" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1163.2" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1166.24" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="881.2" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="884.16" y="175.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (90,909,090 samples, 0.28%)</title><rect x="76.9" y="405" width="3.3" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="79.90" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="32.7" y="357" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="35.67" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="36.0" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.02" y="287.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (20,202,020 samples, 0.06%)</title><rect x="571.2" y="373" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="574.20" y="383.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (70,707,070 samples, 0.22%)</title><rect x="572.3" y="357" width="2.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="575.31" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (191,919,190 samples, 0.60%)</title><rect x="729.1" y="373" width="7.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="732.15" y="383.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (80,808,080 samples, 0.25%)</title><rect x="1143.2" y="373" width="2.9" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1146.17" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.22%)</title><rect x="63.9" y="293" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="66.89" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1178.5" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.48" y="319.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (20,202,020 samples, 0.06%)</title><rect x="1188.5" y="213" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1191.51" y="223.5" ></text>
</g>
<g >
<title>memchr@plt (10,101,010 samples, 0.03%)</title><rect x="1138.3" y="357" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1141.34" y="367.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_packet_now (10,101,010 samples, 0.03%)</title><rect x="1151.7" y="389" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1154.72" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1163.2" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1166.24" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.19%)</title><rect x="888.2" y="277" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="891.22" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.25%)</title><rect x="36.4" y="229" width="3.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.39" y="239.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1182.6" y="389" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1185.57" y="399.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1178.5" y="373" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1181.48" y="383.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (363,636,360 samples, 1.13%)</title><rect x="1132.8" y="389" width="13.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1135.77" y="399.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (80,808,080 samples, 0.25%)</title><rect x="36.4" y="389" width="3.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="39.39" y="399.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="1130.9" y="341" width="0.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1133.91" y="351.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (50,505,050 samples, 0.16%)</title><rect x="558.6" y="373" width="1.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="561.56" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="67.2" y="133" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.23" y="143.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleDocument (60,606,060 samples, 0.19%)</title><rect x="1187.0" y="389" width="2.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1190.03" y="399.5" ></text>
</g>
<g >
<title>main (31,828,282,510 samples, 99.24%)</title><rect x="18.9" y="469" width="1171.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="21.92" y="479.5" >main</text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="889.7" y="261" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="892.70" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1177.7" y="389" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1180.74" y="399.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (60,606,060 samples, 0.19%)</title><rect x="561.9" y="357" width="2.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="564.91" y="367.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (30,303,030 samples, 0.09%)</title><rect x="579.7" y="357" width="1.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="582.74" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1161.4" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.38" y="351.5" ></text>
</g>
<g >
<title>std::locale::~locale (10,101,010 samples, 0.03%)</title><rect x="560.8" y="373" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="563.79" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="32.7" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="35.67" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="1149.9" y="309" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1152.86" y="319.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="570.8" y="357" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="573.83" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="880.8" y="325" width="0.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="883.78" y="335.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (50,505,050 samples, 0.16%)</title><rect x="1187.4" y="309" width="1.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1190.40" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1151.7" y="277" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1154.72" y="287.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="885.2" y="373" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="888.24" y="383.5" ></text>
</g>
<g >
<title>fclose (10,101,010 samples, 0.03%)</title><rect x="36.0" y="373" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="39.02" y="383.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="341.5" y="325" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="344.51" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="579.0" y="309" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="582.00" y="319.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.03%)</title><rect x="558.2" y="373" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="561.19" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="353.0" y="261" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="356.04" y="271.5" ></text>
</g>
<g >
<title>vsnprintf (60,606,060 samples, 0.19%)</title><rect x="351.5" y="325" width="2.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="354.55" y="335.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (161,616,160 samples, 0.50%)</title><rect x="343.7" y="373" width="6.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="346.74" y="383.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="82.8" y="437" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="85.84" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="69.8" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.84" y="207.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (60,606,060 samples, 0.19%)</title><rect x="1129.8" y="389" width="2.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1132.79" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="881.2" y="133" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="884.16" y="143.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (10,101,010 samples, 0.03%)</title><rect x="580.5" y="341" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="583.49" y="351.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (282,828,280 samples, 0.88%)</title><rect x="701.6" y="373" width="10.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="704.65" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="36.0" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.02" y="303.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (10,101,010 samples, 0.03%)</title><rect x="341.9" y="373" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="344.89" y="383.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (3,555,555,520 samples, 11.09%)</title><rect x="749.2" y="389" width="130.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="752.22" y="399.5" >sim::Link::get_p..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1169.9" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.93" y="207.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (111,111,110 samples, 0.35%)</title><rect x="1139.1" y="341" width="4.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1142.08" y="351.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::close (10,101,010 samples, 0.03%)</title><rect x="36.0" y="389" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="39.02" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (212,121,210 samples, 0.66%)</title><rect x="58.7" y="325" width="7.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="61.69" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="67.2" y="85" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.23" y="95.5" ></text>
</g>
<g >
<title>sim::Link::get_max_to_ingress_queue_size (111,111,110 samples, 0.35%)</title><rect x="582.7" y="405" width="4.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="585.72" y="415.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (10,101,010 samples, 0.03%)</title><rect x="80.6" y="421" width="0.4" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="83.61" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="67.2" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.23" y="159.5" ></text>
</g>
<g >
<title>operator delete (80,808,080 samples, 0.25%)</title><rect x="83.6" y="437" width="3.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="86.59" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (50,505,050 samples, 0.16%)</title><rect x="33.0" y="405" width="1.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="36.04" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="66.9" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.86" y="271.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="133" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.89" y="143.5" ></text>
</g>
<g >
<title>sim::is_valid_link (20,202,020 samples, 0.06%)</title><rect x="1157.7" y="405" width="0.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1160.67" y="415.5" ></text>
</g>
<g >
<title>sim::Process::~Process (60,606,060 samples, 0.19%)</title><rect x="1125.0" y="421" width="2.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1127.96" y="431.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (20,202,020 samples, 0.06%)</title><rect x="1132.0" y="389" width="0.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1135.02" y="399.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (30,303,030 samples, 0.09%)</title><rect x="882.6" y="389" width="1.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="885.64" y="399.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="149" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.89" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (111,111,110 samples, 0.35%)</title><rect x="1176.6" y="405" width="4.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1179.62" y="415.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (111,111,110 samples, 0.35%)</title><rect x="358.2" y="389" width="4.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="361.24" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="20.8" y="373" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="23.78" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.03%)</title><rect x="1135.4" y="341" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1138.37" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="69.5" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.46" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1130.9" y="261" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1133.91" y="271.5" ></text>
</g>
<g >
<title>brk (10,101,010 samples, 0.03%)</title><rect x="1163.2" y="309" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1166.24" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (32,050,504,730 samples, 99.94%)</title><rect x="10.7" y="485" width="1179.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.74" y="495.5" >[libc.so.6]</text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.06%)</title><rect x="1135.7" y="341" width="0.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1138.74" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.9" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.89" y="399.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (20,202,020 samples, 0.06%)</title><rect x="574.2" y="341" width="0.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="577.17" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="342.3" y="373" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="345.26" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.9" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.89" y="303.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.03%)</title><rect x="1133.5" y="373" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1136.51" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.29" y="351.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1182.6" y="373" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1185.57" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="361.2" y="293" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="364.21" y="303.5" ></text>
</g>
<g >
<title>sim::Link::arrive (575,757,570 samples, 1.80%)</title><rect x="334.5" y="405" width="21.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="337.45" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="880.8" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="883.78" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1163.2" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1166.24" y="255.5" ></text>
</g>
<g >
<title>open64 (101,010,100 samples, 0.31%)</title><rect x="70.2" y="325" width="3.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="73.21" y="335.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.03%)</title><rect x="1133.5" y="357" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1136.51" y="367.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (30,303,030 samples, 0.09%)</title><rect x="881.5" y="357" width="1.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="884.53" y="367.5" ></text>
</g>
<g >
<title>sim::Link::get_from (10,101,010 samples, 0.03%)</title><rect x="1157.3" y="405" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1160.29" y="415.5" ></text>
</g>
<g >
<title>sim::TcpFlow::Timeout::operator (50,505,050 samples, 0.16%)</title><rect x="1150.2" y="421" width="1.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1153.23" y="431.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="560.0" y="357" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="563.05" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1171.0" y="357" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1174.05" y="367.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (80,808,080 samples, 0.25%)</title><rect x="36.4" y="405" width="3.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="39.39" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::export_metrics_to_files (1,686,868,670 samples, 5.26%)</title><rect x="18.9" y="453" width="62.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="21.92" y="463.5" >sim::M..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>sim::Link::get_to (10,101,010 samples, 0.03%)</title><rect x="1170.3" y="405" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1173.30" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="880.0" y="341" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="883.04" y="351.5" ></text>
</g>
<g >
<title>sim::TcpFlow::create_ack (10,101,010 samples, 0.03%)</title><rect x="581.2" y="373" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="584.23" y="383.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::get_size (242,424,240 samples, 0.76%)</title><rect x="594.2" y="405" width="9.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="597.24" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_cwnd (10,101,010 samples, 0.03%)</title><rect x="578.6" y="373" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="581.63" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="361.2" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.21" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.25%)</title><rect x="71.0" y="165" width="2.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.95" y="175.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (575,757,570 samples, 1.80%)</title><rect x="334.5" y="421" width="21.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="337.45" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.29" y="383.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="1171.0" y="389" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1174.05" y="399.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (40,404,040 samples, 0.13%)</title><rect x="567.5" y="309" width="1.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="570.48" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="67.2" y="101" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.23" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="321.8" y="421" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="324.82" y="431.5" ></text>
</g>
<g >
<title>Logger::info (30,303,030 samples, 0.09%)</title><rect x="555.2" y="389" width="1.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="558.22" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="19.7" y="389" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.66" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="341.5" y="101" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="344.51" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="17.8" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.80" y="367.5" ></text>
</g>
<g >
<title>Logger::warn (30,303,030 samples, 0.09%)</title><rect x="389.1" y="405" width="1.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="392.09" y="415.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (70,707,070 samples, 0.22%)</title><rect x="1009.0" y="405" width="2.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1012.00" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="881.2" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="884.16" y="191.5" ></text>
</g>
<g >
<title>sim::SimplePacketReordering::add_record (10,101,010 samples, 0.03%)</title><rect x="580.9" y="373" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="583.86" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="881.2" y="69" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="884.16" y="79.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (50,505,050 samples, 0.16%)</title><rect x="1146.1" y="389" width="1.9" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1149.14" y="399.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_packets (10,101,010 samples, 0.03%)</title><rect x="1149.9" y="405" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1152.86" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 0.69%)</title><rect x="10.7" y="453" width="8.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.74" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="579.0" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="582.00" y="239.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (131,313,130 samples, 0.41%)</title><rect x="886.0" y="357" width="4.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="888.99" y="367.5" ></text>
</g>
<g >
<title>malloc (131,313,130 samples, 0.41%)</title><rect x="1104.5" y="373" width="4.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1107.52" y="383.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (50,505,050 samples, 0.16%)</title><rect x="891.9" y="389" width="1.9" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="894.93" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (252,525,250 samples, 0.79%)</title><rect x="57.2" y="341" width="9.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="60.20" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1178.5" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.48" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1174.0" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1177.02" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1168.1" y="229" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.07" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="69.8" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.84" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.13%)</title><rect x="37.9" y="133" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.87" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (10,101,010 samples, 0.03%)</title><rect x="561.2" y="373" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="564.16" y="383.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (141,414,140 samples, 0.44%)</title><rect x="1138.0" y="373" width="5.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1140.97" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.22%)</title><rect x="887.8" y="293" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="890.85" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1178.1" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.11" y="335.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (20,202,020 samples, 0.06%)</title><rect x="1188.5" y="245" width="0.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1191.51" y="255.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="149" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.77" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.31%)</title><rect x="70.2" y="245" width="3.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.21" y="255.5" ></text>
</g>
<g >
<title>vsnprintf (80,808,080 samples, 0.25%)</title><rect x="77.3" y="357" width="2.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="80.27" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="485" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1169.9" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.93" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1168.8" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.82" y="191.5" ></text>
</g>
<g >
<title>operator new (232,323,230 samples, 0.72%)</title><rect x="740.7" y="389" width="8.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="743.67" y="399.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="197" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.77" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="19.7" y="405" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.66" y="415.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (30,303,030 samples, 0.09%)</title><rect x="574.9" y="357" width="1.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="577.91" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1161.4" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.38" y="255.5" ></text>
</g>
<g >
<title>operator delete (10,101,010 samples, 0.03%)</title><rect x="31.9" y="405" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="34.93" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="553.4" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="556.36" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.28%)</title><rect x="10.7" y="325" width="3.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.74" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="553.4" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="556.36" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="349.7" y="373" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="352.69" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (10,101,010 samples, 0.03%)</title><rect x="559.7" y="325" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="562.68" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="37.1" y="149" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.13" y="159.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (20,202,020 samples, 0.06%)</title><rect x="557.4" y="389" width="0.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="560.45" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_erase (30,303,030 samples, 0.09%)</title><rect x="1174.4" y="405" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1177.39" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="341.5" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="344.51" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="567.9" y="213" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="570.85" y="223.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (20,202,020 samples, 0.06%)</title><rect x="81.0" y="453" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="83.99" y="463.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.13%)</title><rect x="1158.8" y="389" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1161.78" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (50,505,050 samples, 0.16%)</title><rect x="1161.8" y="389" width="1.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1164.75" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="1167.0" y="341" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1169.96" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1168.8" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.82" y="175.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (101,010,100 samples, 0.31%)</title><rect x="70.2" y="405" width="3.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="73.21" y="415.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (20,202,020 samples, 0.06%)</title><rect x="1188.5" y="261" width="0.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1191.51" y="271.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="880.8" y="293" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="883.78" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (10,101,010 samples, 0.03%)</title><rect x="582.3" y="389" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="585.35" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="361.2" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.21" y="287.5" ></text>
</g>
<g >
<title>vsnprintf (262,626,260 samples, 0.82%)</title><rect x="56.8" y="357" width="9.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="59.83" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="579.0" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="582.00" y="271.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (40,404,040 samples, 0.13%)</title><rect x="572.7" y="325" width="1.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="575.68" y="335.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="55.0" y="389" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="57.97" y="399.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (10,101,010 samples, 0.03%)</title><rect x="564.9" y="357" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="567.88" y="367.5" ></text>
</g>
<g >
<title>_IO_file_fopen (101,010,100 samples, 0.31%)</title><rect x="70.2" y="357" width="3.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="73.21" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (90,909,090 samples, 0.28%)</title><rect x="1160.3" y="405" width="3.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1163.27" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1178.5" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.48" y="351.5" ></text>
</g>
<g >
<title>std::filesystem::status (10,101,010 samples, 0.03%)</title><rect x="80.2" y="389" width="0.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="83.24" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="341.5" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="344.51" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (282,828,280 samples, 0.88%)</title><rect x="839.2" y="373" width="10.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="842.16" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="358.6" y="357" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="361.61" y="367.5" ></text>
</g>
<g >
<title>operator delete (20,202,020 samples, 0.06%)</title><rect x="390.2" y="405" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="393.20" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="579.0" y="357" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="582.00" y="367.5" ></text>
</g>
<g >
<title>virtual thunk to sim::RoutingModule::get_id[abi:cxx11] (10,101,010 samples, 0.03%)</title><rect x="1186.7" y="421" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.66" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="553.4" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="556.36" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.25%)</title><rect x="71.0" y="149" width="2.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.95" y="159.5" ></text>
</g>
<g >
<title>operator delete (10,101,010 samples, 0.03%)</title><rect x="1165.5" y="405" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1168.47" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::weak_ptr&lt;sim::ILink&gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (50,505,050 samples, 0.16%)</title><rect x="1158.4" y="405" width="1.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1161.41" y="415.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="1171.0" y="373" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1174.05" y="383.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::memory_holder*,  (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="405" width="0.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1192.26" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="361.2" y="85" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.21" y="95.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (70,707,070 samples, 0.22%)</title><rect x="351.5" y="373" width="2.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="354.55" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="69.8" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.84" y="175.5" ></text>
</g>
<g >
<title>cfree (333,333,330 samples, 1.04%)</title><rect x="322.2" y="421" width="12.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="325.19" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.9" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.89" y="383.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (10,101,010 samples, 0.03%)</title><rect x="1151.7" y="357" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1154.72" y="367.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="579.0" y="341" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="582.00" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (40,404,040 samples, 0.13%)</title><rect x="880.0" y="357" width="1.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="883.04" y="367.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="181" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.77" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (20,202,020 samples, 0.06%)</title><rect x="347.8" y="325" width="0.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="350.83" y="335.5" ></text>
</g>
<g >
<title>sim::TcpFlow::retransmit_packet (10,101,010 samples, 0.03%)</title><rect x="1151.7" y="405" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1154.72" y="415.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (10,101,010 samples, 0.03%)</title><rect x="884.9" y="357" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="887.87" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1178.1" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.11" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1130.2" y="341" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1133.16" y="351.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="569.0" y="325" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="571.97" y="335.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (60,606,060 samples, 0.19%)</title><rect x="1187.0" y="325" width="2.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1190.03" y="335.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_packet_now (10,101,010 samples, 0.03%)</title><rect x="1149.9" y="389" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1152.86" y="399.5" ></text>
</g>
<g >
<title>malloc (383,838,380 samples, 1.20%)</title><rect x="862.9" y="357" width="14.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="865.94" y="367.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.16%)</title><rect x="736.2" y="389" width="1.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="739.21" y="399.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.16%)</title><rect x="576.0" y="341" width="1.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="579.03" y="351.5" ></text>
</g>
<g >
<title>std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;::size_type std::__detail::__erase_nodes_if&lt;std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;, std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;, sim::RoutingModule::correctify_outlinks (10,101,010 samples, 0.03%)</title><rect x="1171.8" y="389" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1174.79" y="399.5" ></text>
</g>
<g >
<title>sim::Host::notify_about_arrival (20,202,020 samples, 0.06%)</title><rect x="337.4" y="389" width="0.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="340.43" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (313,131,310 samples, 0.98%)</title><rect x="42.0" y="341" width="11.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="44.96" y="351.5" ></text>
</g>
<g >
<title>sim::StartFlow::operator (10,101,010 samples, 0.03%)</title><rect x="1149.9" y="421" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1152.86" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="79.9" y="277" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="82.87" y="287.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="361.2" y="325" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="364.21" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (20,202,020 samples, 0.06%)</title><rect x="581.6" y="373" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="584.60" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (50,505,050 samples, 0.16%)</title><rect x="576.0" y="357" width="1.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="579.03" y="367.5" ></text>
</g>
<g >
<title>malloc@plt (10,101,010 samples, 0.03%)</title><rect x="1170.7" y="389" width="0.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1173.67" y="399.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1187.0" y="229" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.03" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.25%)</title><rect x="36.4" y="277" width="3.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.39" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.9" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.89" y="335.5" ></text>
</g>
<g >
<title>memchr@plt (10,101,010 samples, 0.03%)</title><rect x="55.3" y="389" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="58.34" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.13%)</title><rect x="37.9" y="85" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.87" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="69.8" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.84" y="159.5" ></text>
</g>
<g >
<title>utils::create_all_directories (10,101,010 samples, 0.03%)</title><rect x="80.2" y="405" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="83.24" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.29" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 0.69%)</title><rect x="10.7" y="469" width="8.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.74" y="479.5" ></text>
</g>
<g >
<title>sim::IdentifierFactory::~IdentifierFactory (212,121,210 samples, 0.66%)</title><rect x="10.7" y="437" width="7.8" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="13.74" y="447.5" ></text>
</g>
<g >
<title>vsnprintf (323,232,320 samples, 1.01%)</title><rect x="41.6" y="357" width="11.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="44.59" y="367.5" ></text>
</g>
<g >
<title>_IO_file_open (101,010,100 samples, 0.31%)</title><rect x="70.2" y="341" width="3.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="73.21" y="351.5" ></text>
</g>
<g >
<title>sim::Event::Event (424,242,420 samples, 1.32%)</title><rect x="1109.4" y="389" width="15.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1112.35" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1155.8" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1158.81" y="415.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::data[abi:cxx11] (20,202,020 samples, 0.06%)</title><rect x="21.5" y="421" width="0.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="24.52" y="431.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::node_ref*,  (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="341" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1192.26" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (212,121,210 samples, 0.66%)</title><rect x="326.6" y="405" width="7.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="329.65" y="415.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (10,101,010 samples, 0.03%)</title><rect x="1131.7" y="373" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1134.65" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.31%)</title><rect x="70.2" y="261" width="3.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.21" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1168.1" y="277" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.07" y="287.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="53.9" y="373" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="56.86" y="383.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="1136.5" y="357" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1139.48" y="367.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.06%)</title><rect x="1188.5" y="197" width="0.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.51" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (111,111,110 samples, 0.35%)</title><rect x="1139.1" y="309" width="4.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1142.08" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="36.0" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.02" y="351.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (60,606,060 samples, 0.19%)</title><rect x="1187.0" y="341" width="2.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1190.03" y="351.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1006.0" y="373" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1009.03" y="383.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="18.5" y="405" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="21.55" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.25%)</title><rect x="71.0" y="117" width="2.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.95" y="127.5" ></text>
</g>
<g >
<title>all (32,070,706,750 samples, 100%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="354.5" y="341" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="357.52" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.13%)</title><rect x="562.6" y="277" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="565.65" y="287.5" ></text>
</g>
<g >
<title>sim::Link::get_to_ingress_queue_size (80,808,080 samples, 0.25%)</title><rect x="589.0" y="405" width="3.0" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="592.04" y="415.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (979,797,970 samples, 3.06%)</title><rect x="893.8" y="389" width="36.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="896.79" y="399.5" >sim..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="579.0" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="582.00" y="255.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (40,404,040 samples, 0.13%)</title><rect x="929.8" y="389" width="1.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="932.84" y="399.5" ></text>
</g>
<g >
<title>malloc (111,111,110 samples, 0.35%)</title><rect x="1166.2" y="389" width="4.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1169.21" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>Logger::info (2,080,808,060 samples, 6.49%)</title><rect x="762.6" y="373" width="76.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="765.60" y="383.5" >Logger::..</text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.31%)</title><rect x="886.7" y="309" width="3.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="889.73" y="319.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="341.5" y="309" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="344.51" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (50,505,050 samples, 0.16%)</title><rect x="1183.7" y="421" width="1.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1186.68" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_outlinks (40,404,040 samples, 0.13%)</title><rect x="1170.7" y="405" width="1.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1173.67" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (60,606,060 samples, 0.19%)</title><rect x="561.9" y="341" width="2.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="564.91" y="351.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (60,606,060 samples, 0.19%)</title><rect x="359.4" y="357" width="2.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="362.35" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="361.2" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.21" y="255.5" ></text>
</g>
<g >
<title>vsnprintf (10,101,010 samples, 0.03%)</title><rect x="1151.7" y="293" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1154.72" y="303.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="1155.8" y="421" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1158.81" y="431.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.13%)</title><rect x="1158.8" y="373" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1161.78" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="579.0" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="582.00" y="191.5" ></text>
</g>
<g >
<title>writev (20,202,020 samples, 0.06%)</title><rect x="66.9" y="357" width="0.7" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="69.86" y="367.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="20.4" y="405" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="23.41" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="361.2" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.21" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1175.1" y="373" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1178.13" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="361.2" y="341" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="364.21" y="351.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::export_to_files (1,363,636,350 samples, 4.25%)</title><rect x="18.9" y="437" width="50.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="21.92" y="447.5" >sim::..</text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (40,404,040 samples, 0.13%)</title><rect x="74.7" y="373" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="77.67" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1163.2" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1166.24" y="239.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::get_max_size (20,202,020 samples, 0.06%)</title><rect x="593.5" y="405" width="0.7" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="596.50" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.16%)</title><rect x="576.0" y="309" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="579.03" y="319.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (40,404,040 samples, 0.13%)</title><rect x="572.7" y="309" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="575.68" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="361.2" y="133" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.21" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="38.2" y="69" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.25" y="79.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1156.2" y="421" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1159.18" y="431.5" ></text>
</g>
<g >
<title>vsnprintf (101,010,100 samples, 0.31%)</title><rect x="886.7" y="325" width="3.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="889.73" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="341.5" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="344.51" y="239.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="1130.9" y="293" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1133.91" y="303.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (40,404,040 samples, 0.13%)</title><rect x="592.0" y="405" width="1.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="595.01" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1178.5" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.48" y="255.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="578.6" y="357" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="581.63" y="367.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (10,101,010 samples, 0.03%)</title><rect x="879.7" y="357" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="882.67" y="367.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (30,303,030 samples, 0.09%)</title><rect x="556.3" y="389" width="1.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="559.33" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.28%)</title><rect x="10.7" y="341" width="3.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.74" y="351.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_links (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="421" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1192.63" y="431.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="564.5" y="357" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="567.51" y="367.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (383,838,380 samples, 1.20%)</title><rect x="40.8" y="389" width="14.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="43.85" y="399.5" ></text>
</g>
<g >
<title>__uselocale (20,202,020 samples, 0.06%)</title><rect x="568.2" y="293" width="0.8" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="571.22" y="303.5" ></text>
</g>
<g >
<title>__libc_start_main (32,050,504,730 samples, 99.94%)</title><rect x="10.7" y="501" width="1179.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.74" y="511.5" >__libc_start_main</text>
</g>
<g >
<title>std::_Rb_tree_increment (2,020,202,000 samples, 6.30%)</title><rect x="931.7" y="389" width="74.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="934.70" y="399.5" >std::_Rb..</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="341.5" y="293" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="344.51" y="303.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::operator (191,919,190 samples, 0.60%)</title><rect x="355.6" y="421" width="7.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="358.64" y="431.5" ></text>
</g>
<g >
<title>vsnprintf (30,303,030 samples, 0.09%)</title><rect x="573.1" y="293" width="1.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="576.06" y="303.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (191,919,190 samples, 0.60%)</title><rect x="884.9" y="389" width="7.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="887.87" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.9" y="405" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.89" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (70,707,070 samples, 0.22%)</title><rect x="1011.6" y="405" width="2.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1014.61" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="69.5" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.46" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.22%)</title><rect x="50.9" y="293" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="53.88" y="303.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.03%)</title><rect x="1149.9" y="341" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1152.86" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.9" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.89" y="351.5" ></text>
</g>
<g >
<title>vsnprintf (20,202,020 samples, 0.06%)</title><rect x="67.6" y="373" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="70.61" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="469" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.16%)</title><rect x="576.0" y="325" width="1.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="579.03" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="553.4" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="556.36" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="880.8" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="883.78" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1177.7" y="373" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.74" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (272,727,270 samples, 0.85%)</title><rect x="43.4" y="325" width="10.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="46.45" y="335.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (60,606,060 samples, 0.19%)</title><rect x="586.8" y="405" width="2.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="589.81" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (40,404,040 samples, 0.13%)</title><rect x="1130.2" y="357" width="1.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1133.16" y="367.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="35.6" y="389" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="38.64" y="399.5" ></text>
</g>
<g >
<title>std::locale::~locale (10,101,010 samples, 0.03%)</title><rect x="1148.0" y="389" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1151.00" y="399.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (30,303,030 samples, 0.09%)</title><rect x="340.8" y="357" width="1.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="343.77" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="567.9" y="293" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="570.85" y="303.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="17.8" y="373" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="20.80" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="553.4" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="556.36" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="361.2" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.21" y="239.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::export_to_file (313,131,310 samples, 0.98%)</title><rect x="69.1" y="421" width="11.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="72.09" y="431.5" ></text>
</g>
<g >
<title>operator new (141,414,140 samples, 0.44%)</title><rect x="1104.1" y="389" width="5.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1107.15" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1171.4" y="341" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1174.42" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="421" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1142.8" y="261" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1145.80" y="271.5" ></text>
</g>
<g >
<title>sim::TcpFlow::create_packet (10,101,010 samples, 0.03%)</title><rect x="564.9" y="373" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="567.88" y="383.5" ></text>
</g>
<g >
<title>sim::write_to_csv (1,252,525,240 samples, 3.91%)</title><rect x="22.3" y="421" width="46.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="25.26" y="431.5" >sim:..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="341.5" y="117" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="344.51" y="127.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="563.4" y="261" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="566.39" y="271.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (101,010,100 samples, 0.31%)</title><rect x="566.0" y="341" width="3.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="568.99" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.19%)</title><rect x="351.5" y="309" width="2.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="354.55" y="319.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="354.9" y="341" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="357.89" y="351.5" ></text>
</g>
<g >
<title>sim::ECMPHasher::get_hash (10,101,010 samples, 0.03%)</title><rect x="1147.3" y="373" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1150.26" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.16%)</title><rect x="562.3" y="293" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="565.28" y="303.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (10,101,010 samples, 0.03%)</title><rect x="1137.6" y="373" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1140.60" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="1144.3" y="357" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1147.29" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;* std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_Alloc_node&gt; (20,202,020 samples, 0.06%)</title><rect x="1185.9" y="421" width="0.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1188.91" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1161.4" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.38" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1178.1" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.11" y="303.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (10,101,010 samples, 0.03%)</title><rect x="1151.7" y="341" width="0.4" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1154.72" y="351.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanToNextToken (10,101,010 samples, 0.03%)</title><rect x="1187.0" y="261" width="0.4" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="1190.03" y="271.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (40,404,040 samples, 0.13%)</title><rect x="355.6" y="405" width="1.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="358.64" y="415.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (90,909,090 samples, 0.28%)</title><rect x="76.9" y="389" width="3.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="79.90" y="399.5" ></text>
</g>
<g >
<title>__default_morecore (10,101,010 samples, 0.03%)</title><rect x="1169.9" y="357" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1172.93" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.25%)</title><rect x="36.4" y="245" width="3.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.39" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="69.5" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.46" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.25%)</title><rect x="71.0" y="133" width="2.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.95" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="69.5" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.46" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="569.0" y="293" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="571.97" y="303.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (70,707,070 samples, 0.22%)</title><rect x="351.5" y="357" width="2.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="354.55" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (20,202,020 samples, 0.06%)</title><rect x="577.9" y="341" width="0.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="580.89" y="351.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="569.0" y="309" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="571.97" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="36.0" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.02" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.25%)</title><rect x="71.0" y="181" width="2.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.95" y="191.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (20,202,020 samples, 0.06%)</title><rect x="69.5" y="389" width="0.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="72.46" y="399.5" ></text>
</g>
<g >
<title>vsnprintf (111,111,110 samples, 0.35%)</title><rect x="1139.1" y="325" width="4.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1142.08" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (373,737,370 samples, 1.17%)</title><rect x="712.1" y="389" width="13.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="715.05" y="399.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.09%)</title><rect x="20.4" y="421" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="23.41" y="431.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (101,010,100 samples, 0.31%)</title><rect x="70.2" y="389" width="3.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="73.21" y="399.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="361.2" y="309" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="364.21" y="319.5" ></text>
</g>
<g >
<title>YAML::Load (60,606,060 samples, 0.19%)</title><rect x="1187.0" y="421" width="2.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1190.03" y="431.5" ></text>
</g>
<g >
<title>nons (32,070,706,750 samples, 100.00%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >nons</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="66.9" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.86" y="239.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (70,707,070 samples, 0.22%)</title><rect x="880.0" y="373" width="2.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="883.04" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (20,202,020 samples, 0.06%)</title><rect x="68.3" y="421" width="0.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="71.35" y="431.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (60,606,060 samples, 0.19%)</title><rect x="1187.0" y="357" width="2.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1190.03" y="367.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (333,333,330 samples, 1.04%)</title><rect x="56.1" y="389" width="12.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="59.09" y="399.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::export_to_files (323,232,320 samples, 1.01%)</title><rect x="69.1" y="437" width="11.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="72.09" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (50,505,050 samples, 0.16%)</title><rect x="1178.9" y="389" width="1.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1181.85" y="399.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.13%)</title><rect x="1179.2" y="373" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1182.22" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1169.9" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.93" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.22%)</title><rect x="77.6" y="325" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="80.64" y="335.5" ></text>
</g>
<g >
<title>__gnu_pbds::detail::bin_search_tree_set&lt;unsigned int, __gnu_pbds::null_type, std::less&lt;unsigned int&gt;, __gnu_pbds::detail::tree_traits&lt;unsigned int, __gnu_pbds::null_type, std::less&lt;unsigned int&gt;, __gnu_pbds::tree_order_statistics_node_update, __gnu_pbds::rb_tree_tag, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt; &gt;::~bin_search_tree_set (10,101,010 samples, 0.03%)</title><rect x="18.2" y="373" width="0.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="21.18" y="383.5" ></text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks (10,101,010 samples, 0.03%)</title><rect x="1137.6" y="357" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1140.60" y="367.5" ></text>
</g>
<g >
<title>sim::Simulator::start (30,040,403,740 samples, 93.67%)</title><rect x="81.7" y="453" width="1105.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="84.73" y="463.5" >sim::Simulator::start</text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (90,909,090 samples, 0.28%)</title><rect x="76.9" y="373" width="3.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="79.90" y="383.5" ></text>
</g>
<g >
<title>sim::Event::get_time (101,010,100 samples, 0.31%)</title><rect x="86.6" y="437" width="3.7" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="89.56" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1169.9" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.93" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1163.2" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1166.24" y="287.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.03%)</title><rect x="890.4" y="341" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="893.45" y="351.5" ></text>
</g>
<g >
<title>Logger::warn (2,414,141,390 samples, 7.53%)</title><rect x="623.2" y="389" width="88.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="626.23" y="399.5" >Logger::warn</text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (20,202,020 samples, 0.06%)</title><rect x="343.0" y="373" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="346.00" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="1174.0" y="389" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1177.02" y="399.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (10,101,010 samples, 0.03%)</title><rect x="883.4" y="357" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="886.39" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.37" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (10,101,010 samples, 0.03%)</title><rect x="1006.0" y="389" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1009.03" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="881.2" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="884.16" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="80.2" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="83.24" y="351.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (424,242,420 samples, 1.32%)</title><rect x="39.4" y="405" width="15.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="42.36" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.25%)</title><rect x="36.4" y="309" width="3.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.39" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="69.5" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.46" y="271.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanNextToken (10,101,010 samples, 0.03%)</title><rect x="1187.0" y="277" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1190.03" y="287.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (30,303,030 samples, 0.09%)</title><rect x="340.8" y="341" width="1.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="343.77" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.31%)</title><rect x="70.2" y="277" width="3.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.21" y="287.5" ></text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks (10,101,010 samples, 0.03%)</title><rect x="350.8" y="373" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="353.81" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="69.5" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.46" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1169.9" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.93" y="255.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (50,505,050 samples, 0.16%)</title><rect x="572.3" y="341" width="1.9" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="575.31" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt;, std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::less&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="18.5" y="421" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="21.55" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1162.9" y="325" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1165.87" y="335.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="76.5" y="373" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="79.53" y="383.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (10,101,010 samples, 0.03%)</title><rect x="1149.9" y="373" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1152.86" y="383.5" ></text>
</g>
<g >
<title>write (20,202,020 samples, 0.06%)</title><rect x="69.5" y="341" width="0.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="72.46" y="351.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (363,636,360 samples, 1.13%)</title><rect x="55.0" y="405" width="13.3" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="57.97" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1178.5" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1181.48" y="367.5" ></text>
</g>
<g >
<title>fopen (80,808,080 samples, 0.25%)</title><rect x="36.4" y="373" width="3.0" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="39.39" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.31%)</title><rect x="70.2" y="309" width="3.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.21" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="573.8" y="261" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="576.80" y="271.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="577.9" y="357" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="580.89" y="367.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.03%)</title><rect x="53.5" y="373" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="56.48" y="383.5" ></text>
</g>
<g >
<title>sim::ECMPHasher::get_hash (20,202,020 samples, 0.06%)</title><rect x="893.0" y="373" width="0.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="896.05" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1178.1" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.11" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="517" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.25%)</title><rect x="71.0" y="229" width="2.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.95" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="553.4" y="389" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="556.36" y="399.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.03%)</title><rect x="884.9" y="373" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="887.87" y="383.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (30,303,030 samples, 0.09%)</title><rect x="1188.1" y="277" width="1.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1191.14" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1177.7" y="357" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.74" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="74.3" y="389" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="77.30" y="399.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_packet_now (121,212,120 samples, 0.38%)</title><rect x="565.3" y="373" width="4.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="568.25" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.13%)</title><rect x="1179.2" y="341" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1182.22" y="351.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (111,111,110 samples, 0.35%)</title><rect x="565.6" y="357" width="4.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="568.62" y="367.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (20,202,020 samples, 0.06%)</title><rect x="69.5" y="405" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="72.46" y="415.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="1129.0" y="389" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1132.05" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="66.9" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.86" y="319.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (30,303,030 samples, 0.09%)</title><rect x="354.5" y="357" width="1.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="357.52" y="367.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="569.3" y="325" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="572.34" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="877.4" y="341" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="880.44" y="351.5" ></text>
</g>
<g >
<title>sim::Scheduler::get_current_time (10,101,010 samples, 0.03%)</title><rect x="362.3" y="389" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="365.33" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (272,727,270 samples, 0.85%)</title><rect x="56.5" y="373" width="10.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="59.46" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1178.1" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.11" y="271.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::node*,  (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="357" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1192.26" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1161.4" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.38" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.22%)</title><rect x="71.3" y="101" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="74.32" y="111.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (30,303,030 samples, 0.09%)</title><rect x="878.2" y="341" width="1.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="881.18" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.19%)</title><rect x="78.0" y="309" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="81.01" y="319.5" ></text>
</g>
<g >
<title>cfree (323,232,320 samples, 1.01%)</title><rect x="849.6" y="373" width="11.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="852.57" y="383.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="325" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1192.26" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (20,202,020 samples, 0.06%)</title><rect x="1175.5" y="405" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1178.51" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="567.9" y="261" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="570.85" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="1167.0" y="357" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1169.96" y="367.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (10,101,010 samples, 0.03%)</title><rect x="355.3" y="341" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="358.27" y="351.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="1138.7" y="357" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1141.71" y="367.5" ></text>
</g>
<g >
<title>malloc@plt (10,101,010 samples, 0.03%)</title><rect x="861.5" y="373" width="0.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="864.46" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="558.6" y="357" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="561.56" y="367.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10,101,010 samples, 0.03%)</title><rect x="1147.6" y="373" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1150.63" y="383.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (10,101,010 samples, 0.03%)</title><rect x="1187.0" y="309" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1190.03" y="319.5" ></text>
</g>
<g >
<title>strlen@plt (60,606,060 samples, 0.19%)</title><rect x="1006.4" y="389" width="2.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1009.40" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.22%)</title><rect x="36.8" y="213" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.76" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.13%)</title><rect x="1167.7" y="309" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.70" y="319.5" ></text>
</g>
<g >
<title>vsnprintf (10,101,010 samples, 0.03%)</title><rect x="567.9" y="277" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="570.85" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.31%)</title><rect x="70.2" y="293" width="3.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.21" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.22%)</title><rect x="36.8" y="197" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.76" y="207.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (10,101,010 samples, 0.03%)</title><rect x="36.0" y="405" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="39.02" y="415.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (4,070,707,030 samples, 12.69%)</title><rect x="90.3" y="437" width="149.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="93.28" y="447.5" >sim::Event::operator&gt;</text>
</g>
<g >
<title>sim::Link::schedule_arrival (70,707,070 samples, 0.22%)</title><rect x="880.0" y="389" width="2.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="883.04" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="75.0" y="309" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="78.04" y="319.5" ></text>
</g>
<g >
<title>sim::bfs[abi:cxx11] (525,252,520 samples, 1.64%)</title><rect x="1163.6" y="421" width="19.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1166.61" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1178.1" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.11" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1178.5" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.48" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="579.0" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="582.00" y="175.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1187.0" y="213" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.03" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="66.1" y="277" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="69.12" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="890.1" y="245" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="893.08" y="255.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::operator (10,101,010 samples, 0.03%)</title><rect x="240.1" y="437" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="243.05" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="421" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1192.26" y="431.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="560.4" y="373" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="563.42" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="561.5" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="564.53" y="367.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="1136.9" y="373" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1139.85" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (10,101,010 samples, 0.03%)</title><rect x="578.6" y="341" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="581.63" y="351.5" ></text>
</g>
<g >
<title>cfree (282,828,280 samples, 0.88%)</title><rect x="725.8" y="389" width="10.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="728.80" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="37.1" y="165" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.13" y="175.5" ></text>
</g>
<g >
<title>operator delete (70,707,070 samples, 0.22%)</title><rect x="738.1" y="389" width="2.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="741.07" y="399.5" ></text>
</g>
<g >
<title>sim::RoutingModule::update_routing_table (181,818,180 samples, 0.57%)</title><rect x="1156.9" y="421" width="6.7" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1159.92" y="431.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (20,202,020 samples, 0.06%)</title><rect x="891.2" y="357" width="0.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="894.19" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1133.1" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1136.14" y="367.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="1144.7" y="357" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1147.66" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (10,101,010 samples, 0.03%)</title><rect x="1182.9" y="421" width="0.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1185.94" y="431.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="1132.8" y="373" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1135.77" y="383.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="1147.3" y="357" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1150.26" y="367.5" ></text>
</g>
<g >
<title>sim::Simulator::add_link (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="389" width="0.4" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="1192.63" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1134.6" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1137.62" y="367.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="347.8" y="309" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="350.83" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.28%)</title><rect x="1139.8" y="277" width="3.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1142.83" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="341.5" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="344.51" y="175.5" ></text>
</g>
<g >
<title>open64 (80,808,080 samples, 0.25%)</title><rect x="36.4" y="325" width="3.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="39.39" y="335.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (24,646,464,400 samples, 76.85%)</title><rect x="247.9" y="437" width="906.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="250.86" y="447.5" >sim::Scheduler::tick</text>
</g>
<g >
<title>sim::Host::enqueue_packet (111,111,110 samples, 0.35%)</title><rect x="571.9" y="373" width="4.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="574.94" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="453" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="553.4" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="556.36" y="303.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,101,010 samples, 0.03%)</title><rect x="1127.2" y="405" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1130.19" y="415.5" ></text>
</g>
<g >
<title>sim::Switch::process (11,030,302,920 samples, 34.39%)</title><rect x="603.2" y="405" width="405.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="606.16" y="415.5" >sim::Switch::process</text>
</g>
<g >
<title>sim::LinkQueue::empty (20,202,020 samples, 0.06%)</title><rect x="883.8" y="389" width="0.7" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="886.76" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="341.5" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="344.51" y="223.5" ></text>
</g>
<g >
<title>operator new (121,212,120 samples, 0.38%)</title><rect x="1165.8" y="405" width="4.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1168.84" y="415.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="181" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.89" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.28%)</title><rect x="873.7" y="341" width="3.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="876.72" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1168.8" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.82" y="159.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_packet_reordering (30,303,030 samples, 0.09%)</title><rect x="579.7" y="373" width="1.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="582.74" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1161.4" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.38" y="287.5" ></text>
</g>
<g >
<title>Logger::info (10,101,010 samples, 0.03%)</title><rect x="1127.6" y="389" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1130.56" y="399.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (20,202,020 samples, 0.06%)</title><rect x="1187.4" y="229" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1190.40" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.31%)</title><rect x="1166.6" y="373" width="3.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1169.59" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1161.0" y="357" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.01" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.37" y="223.5" ></text>
</g>
<g >
<title>brk (10,101,010 samples, 0.03%)</title><rect x="1169.9" y="341" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1172.93" y="351.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="34.5" y="373" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="37.53" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="336.3" y="389" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="339.31" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.9" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.89" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1169.9" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.93" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="66.9" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.86" y="255.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (20,202,020 samples, 0.06%)</title><rect x="1187.4" y="261" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1190.40" y="271.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::get_instance (10,101,010 samples, 0.03%)</title><rect x="557.1" y="357" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="560.07" y="367.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (30,303,030 samples, 0.09%)</title><rect x="890.8" y="373" width="1.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="893.82" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (10,101,010 samples, 0.03%)</title><rect x="1136.1" y="325" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1139.11" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.06%)</title><rect x="559.3" y="341" width="0.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="562.30" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1168.1" y="245" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.07" y="255.5" ></text>
</g>
<g >
<title>sim::Process::~Process (151,515,150 samples, 0.47%)</title><rect x="242.3" y="437" width="5.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="245.28" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.25%)</title><rect x="36.4" y="261" width="3.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.39" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="341.5" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="344.51" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.13%)</title><rect x="37.9" y="101" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.87" y="111.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (272,727,270 samples, 0.85%)</title><rect x="829.1" y="357" width="10.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="832.12" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.25%)</title><rect x="71.0" y="197" width="2.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.95" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="53.1" y="277" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.11" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1127.9" y="389" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1130.93" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="1130.9" y="325" width="0.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1133.91" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.13%)</title><rect x="72.4" y="69" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="75.44" y="79.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="567.9" y="245" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="570.85" y="255.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="1160.6" y="373" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1163.64" y="383.5" ></text>
</g>
<g >
<title>__gnu_pbds::detail::bin_search_tree_set&lt;unsigned int, __gnu_pbds::null_type, std::less&lt;unsigned int&gt;, __gnu_pbds::detail::tree_traits&lt;unsigned int, __gnu_pbds::null_type, std::less&lt;unsigned int&gt;, __gnu_pbds::tree_order_statistics_node_update, __gnu_pbds::rb_tree_tag, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt; &gt;::clear_imp (10,101,010 samples, 0.03%)</title><rect x="18.2" y="357" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="21.18" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="881.2" y="117" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="884.16" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;Time&lt;Nanosecond&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (30,303,030 samples, 0.09%)</title><rect x="34.9" y="405" width="1.1" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="37.90" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1182.6" y="357" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1185.57" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="880.8" y="277" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="883.78" y="287.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (111,111,110 samples, 0.35%)</title><rect x="338.2" y="389" width="4.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="341.17" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.29" y="399.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (10,101,010 samples, 0.03%)</title><rect x="1187.0" y="293" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1190.03" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="67.2" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.23" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="71.7" y="85" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="74.69" y="95.5" ></text>
</g>
<g >
<title>sim::Event::Event (191,919,190 samples, 0.60%)</title><rect x="394.3" y="405" width="7.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="397.29" y="415.5" ></text>
</g>
<g >
<title>_IO_file_open (80,808,080 samples, 0.25%)</title><rect x="36.4" y="341" width="3.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="39.39" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="36.0" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.02" y="271.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (30,303,030 samples, 0.09%)</title><rect x="566.0" y="325" width="1.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="568.99" y="335.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (10,101,010 samples, 0.03%)</title><rect x="40.5" y="389" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="43.48" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="346.3" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="349.35" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="66.9" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.86" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="361.2" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.21" y="207.5" ></text>
</g>
<g >
<title>operator delete (10,101,010 samples, 0.03%)</title><rect x="14.1" y="389" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="17.09" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (10,101,010 samples, 0.03%)</title><rect x="566.7" y="277" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="569.74" y="287.5" ></text>
</g>
<g >
<title>_IO_file_fopen (80,808,080 samples, 0.25%)</title><rect x="36.4" y="357" width="3.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="39.39" y="367.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="890.8" y="357" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="893.82" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (10,101,010 samples, 0.03%)</title><rect x="556.7" y="357" width="0.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="559.70" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="881.2" y="85" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="884.16" y="95.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (50,505,050 samples, 0.16%)</title><rect x="346.7" y="357" width="1.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="349.72" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (101,010,100 samples, 0.31%)</title><rect x="886.7" y="341" width="3.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="889.73" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_pbump (10,101,010 samples, 0.03%)</title><rect x="566.4" y="293" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="569.37" y="303.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (10,101,010 samples, 0.03%)</title><rect x="343.4" y="357" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="346.37" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="405" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1192.63" y="415.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="880.8" y="309" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="883.78" y="319.5" ></text>
</g>
<g >
<title>sim::Event::Event (10,101,010 samples, 0.03%)</title><rect x="1132.4" y="373" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1135.39" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="79.5" y="293" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="82.50" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.19%)</title><rect x="351.5" y="277" width="2.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="354.55" y="287.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="437" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1192.63" y="447.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_packets (131,313,130 samples, 0.41%)</title><rect x="564.9" y="389" width="4.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="567.88" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1168.1" y="213" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.07" y="223.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (50,505,050 samples, 0.16%)</title><rect x="1187.4" y="293" width="1.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1190.40" y="303.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (131,313,130 samples, 0.41%)</title><rect x="886.0" y="373" width="4.8" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="888.99" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="1183.3" y="421" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1186.31" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (202,020,200 samples, 0.63%)</title><rect x="59.1" y="309" width="7.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="62.06" y="319.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (40,404,040 samples, 0.13%)</title><rect x="1148.4" y="389" width="1.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1151.37" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1138.0" y="357" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1140.97" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="567.9" y="229" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="570.85" y="239.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (80,808,080 samples, 0.25%)</title><rect x="1133.9" y="373" width="3.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1136.88" y="383.5" ></text>
</g>
<g >
<title>_start (32,050,504,730 samples, 99.94%)</title><rect x="10.7" y="517" width="1179.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.74" y="527.5" >_start</text>
</g>
<g >
<title>sim::SendData::operator (616,161,610 samples, 1.92%)</title><rect x="1127.2" y="421" width="22.7" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1130.19" y="431.5" >s..</text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (30,303,030 samples, 0.09%)</title><rect x="558.9" y="357" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="561.93" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="579.0" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="582.00" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.19%)</title><rect x="1167.0" y="325" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1169.96" y="335.5" ></text>
</g>
<g >
<title>cfree (90,909,090 samples, 0.28%)</title><rect x="10.7" y="357" width="3.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="13.74" y="367.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="19.7" y="421" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="22.66" y="431.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (10,101,010 samples, 0.03%)</title><rect x="558.2" y="357" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="561.19" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1178.1" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.11" y="287.5" ></text>
</g>
<g >
<title>sim::Host::send_packet (606,060,600 samples, 1.89%)</title><rect x="1127.6" y="405" width="22.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1130.56" y="415.5" >s..</text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.03%)</title><rect x="1149.9" y="325" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1152.86" y="335.5" ></text>
</g>
<g >
<title>vsnprintf (40,404,040 samples, 0.13%)</title><rect x="74.7" y="357" width="1.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="77.67" y="367.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1006.0" y="357" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1009.03" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="69.5" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.46" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="361.2" y="69" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.21" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1161.4" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.38" y="335.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (30,303,030 samples, 0.09%)</title><rect x="880.4" y="341" width="1.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="883.41" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="405" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.29" y="415.5" ></text>
</g>
<g >
<title>operator new (414,141,410 samples, 1.29%)</title><rect x="861.8" y="373" width="15.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="864.83" y="383.5" ></text>
</g>
<g >
<title>__gnu_pbds::detail::bin_search_tree_set&lt;unsigned int, __gnu_pbds::null_type, std::less&lt;unsigned int&gt;, __gnu_pbds::detail::tree_traits&lt;unsigned int, __gnu_pbds::null_type, std::less&lt;unsigned int&gt;, __gnu_pbds::tree_order_statistics_node_update, __gnu_pbds::rb_tree_tag, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt; &gt;::clear_imp (10,101,010 samples, 0.03%)</title><rect x="18.2" y="341" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="21.18" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.03%)</title><rect x="566.7" y="293" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="569.74" y="303.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1187.0" y="245" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.03" y="255.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="32.3" y="389" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="35.30" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (30,303,030 samples, 0.09%)</title><rect x="347.5" y="341" width="1.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="350.46" y="351.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.16%)</title><rect x="1161.8" y="373" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1164.75" y="383.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (40,404,040 samples, 0.13%)</title><rect x="1130.2" y="373" width="1.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1133.16" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="36.0" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.02" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1180.0" y="325" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1182.97" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (90,909,090 samples, 0.28%)</title><rect x="10.7" y="405" width="3.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.74" y="415.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="1145.8" y="341" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1148.77" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="501" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (10,101,010 samples, 0.03%)</title><rect x="55.7" y="389" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="58.71" y="399.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (70,707,070 samples, 0.22%)</title><rect x="561.5" y="373" width="2.6" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="564.53" y="383.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (30,303,030 samples, 0.09%)</title><rect x="348.6" y="357" width="1.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="351.58" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.03%)</title><rect x="1176.2" y="405" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1179.25" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="579.0" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="582.00" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="579.0" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="582.00" y="207.5" ></text>
</g>
<g >
<title>Logger::info (10,101,010 samples, 0.03%)</title><rect x="622.9" y="389" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="625.86" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="421" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.29" y="431.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (20,202,020 samples, 0.06%)</title><rect x="1187.4" y="277" width="0.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1190.40" y="287.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (20,202,020 samples, 0.06%)</title><rect x="1187.4" y="245" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1190.40" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1145.0" y="341" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1148.03" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (121,212,120 samples, 0.38%)</title><rect x="14.1" y="405" width="4.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="17.09" y="415.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (50,505,050 samples, 0.16%)</title><rect x="567.1" y="325" width="1.9" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="570.11" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1178.5" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.48" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1178.1" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.11" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="80.2" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="83.24" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="1174.8" y="389" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1177.76" y="399.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (20,202,020 samples, 0.06%)</title><rect x="564.1" y="373" width="0.8" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="567.14" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="437" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="341.5" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="344.51" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1168.8" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.82" y="207.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.13%)</title><rect x="1179.2" y="357" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1182.22" y="367.5" ></text>
</g>
<g >
<title>sim::TcpFlow::update (343,434,340 samples, 1.07%)</title><rect x="569.7" y="389" width="12.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="572.71" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="341.5" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="344.51" y="271.5" ></text>
</g>
<g >
<title>fmt::v11::vformat[abi:cxx11] (10,101,010 samples, 0.03%)</title><rect x="570.8" y="373" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="573.83" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.19%)</title><rect x="351.5" y="293" width="2.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="354.55" y="303.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;, std::weak_ptr&lt;sim::IProcessingDevice&gt;&amp;&gt; (3,010,100,980 samples, 9.39%)</title><rect x="1014.2" y="405" width="110.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1017.21" y="415.5" >void sim::Sch..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1178.1" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.11" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="579.0" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="582.00" y="223.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="1133.1" y="373" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1136.14" y="383.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (30,303,030 samples, 0.09%)</title><rect x="1145.0" y="357" width="1.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1148.03" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="880.8" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="883.78" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1178.5" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.48" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.25%)</title><rect x="71.0" y="213" width="2.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.95" y="223.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (90,909,090 samples, 0.28%)</title><rect x="358.6" y="373" width="3.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="361.61" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="21.9" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="24.89" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="69.8" y="133" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.84" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.13%)</title><rect x="74.7" y="341" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="77.67" y="351.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="32.3" y="405" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="35.30" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="361.2" y="101" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.21" y="111.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (10,101,010 samples, 0.03%)</title><rect x="350.4" y="373" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="353.43" y="383.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="579.0" y="325" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="582.00" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.22%)</title><rect x="36.8" y="181" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.76" y="191.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="362.0" y="357" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="364.96" y="367.5" ></text>
</g>
<g >
<title>Logger::get_instance (50,505,050 samples, 0.16%)</title><rect x="621.0" y="389" width="1.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="624.00" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="66.9" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.86" y="287.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.03%)</title><rect x="76.2" y="373" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="79.15" y="383.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (10,101,010 samples, 0.03%)</title><rect x="1149.9" y="357" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1152.86" y="367.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (90,909,090 samples, 0.28%)</title><rect x="10.7" y="389" width="3.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.74" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="553.4" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="556.36" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (20,202,020 samples, 0.06%)</title><rect x="34.2" y="389" width="0.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="37.16" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.16%)</title><rect x="562.3" y="309" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="565.28" y="319.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (10,101,010 samples, 0.03%)</title><rect x="1151.7" y="325" width="0.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1154.72" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1156.9" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1159.92" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1130.9" y="277" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1133.91" y="287.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (70,707,070 samples, 0.22%)</title><rect x="877.4" y="373" width="2.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="880.44" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="361.2" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.21" y="159.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10,101,010 samples, 0.03%)</title><rect x="931.3" y="389" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="934.33" y="399.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.09%)</title><rect x="1160.6" y="389" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1163.64" y="399.5" ></text>
</g>
<g >
<title>YAML::Parser::HandleNextDocument (60,606,060 samples, 0.19%)</title><rect x="1187.0" y="405" width="2.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1190.03" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.29" y="335.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::memory*,  (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="389" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1192.26" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.37" y="191.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.03%)</title><rect x="353.8" y="341" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="356.78" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1161.4" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.38" y="319.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (10,101,010 samples, 0.03%)</title><rect x="1008.6" y="389" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1011.63" y="399.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (20,202,020 samples, 0.06%)</title><rect x="881.9" y="341" width="0.7" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="884.90" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (10,101,010 samples, 0.03%)</title><rect x="879.3" y="341" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="882.30" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="75.0" y="325" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="78.04" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="69.5" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.46" y="223.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (10,101,010 samples, 0.03%)</title><rect x="343.0" y="357" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="346.00" y="367.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (10,101,010 samples, 0.03%)</title><rect x="877.1" y="373" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="880.07" y="383.5" ></text>
</g>
<g >
<title>Logger::info (10,101,010 samples, 0.03%)</title><rect x="335.9" y="389" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="338.94" y="399.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="347.8" y="293" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="350.83" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1168.1" y="261" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.07" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="341.5" y="85" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="344.51" y="95.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (111,111,110 samples, 0.35%)</title><rect x="1139.1" y="357" width="4.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1142.08" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="881.2" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="884.16" y="207.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (90,909,090 samples, 0.28%)</title><rect x="338.5" y="373" width="3.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="341.54" y="383.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.06%)</title><rect x="1187.4" y="213" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.40" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1169.2" y="357" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1172.19" y="367.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (60,606,060 samples, 0.19%)</title><rect x="1187.0" y="373" width="2.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1190.03" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.13%)</title><rect x="37.9" y="117" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.87" y="127.5" ></text>
</g>
<g >
<title>sim::Link::transmit (151,515,150 samples, 0.47%)</title><rect x="357.1" y="405" width="5.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="360.12" y="415.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="165" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.89" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;YAML::detail::node&gt;, std::shared_ptr&lt;YAML::detail::node&gt;, std::_Identity&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt;, std::less&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="373" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1192.26" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.25%)</title><rect x="36.4" y="293" width="3.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.39" y="303.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="1151.7" y="309" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1154.72" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1161.4" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.38" y="239.5" ></text>
</g>
<g >
<title>YAML::Node::~Node (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="437" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1192.26" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.29" y="367.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (10,101,010 samples, 0.03%)</title><rect x="883.4" y="373" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="886.39" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="66.9" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.86" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (191,919,190 samples, 0.60%)</title><rect x="854.4" y="357" width="7.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="857.40" y="367.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="54.2" y="373" width="0.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="57.23" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.16%)</title><rect x="338.9" y="357" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="341.91" y="367.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (80,808,080 samples, 0.25%)</title><rect x="1187.0" y="453" width="3.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1190.03" y="463.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (4,141,414,100 samples, 12.91%)</title><rect x="401.4" y="405" width="152.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="404.35" y="415.5" >sim::Event::operator&gt;</text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="165" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.77" y="175.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (60,606,060 samples, 0.19%)</title><rect x="74.7" y="389" width="2.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="77.67" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (60,606,060 samples, 0.19%)</title><rect x="351.5" y="341" width="2.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="354.55" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1168.1" y="293" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.07" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (212,121,210 samples, 0.66%)</title><rect x="10.7" y="421" width="7.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.74" y="431.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::~Transmit (10,101,010 samples, 0.03%)</title><rect x="240.4" y="437" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="243.43" y="447.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_delivery_rate (20,202,020 samples, 0.06%)</title><rect x="579.0" y="373" width="0.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="582.00" y="383.5" ></text>
</g>
<g >
<title>malloc (171,717,170 samples, 0.54%)</title><rect x="742.9" y="373" width="6.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="745.90" y="383.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="133" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.77" y="143.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (20,202,020 samples, 0.06%)</title><rect x="1188.5" y="229" width="0.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1191.51" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="341.5" y="53" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="344.51" y="63.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (363,636,360 samples, 1.13%)</title><rect x="342.3" y="389" width="13.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="345.26" y="399.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (40,404,040 samples, 0.13%)</title><rect x="1135.0" y="357" width="1.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1138.00" y="367.5" ></text>
</g>
<g >
<title>sim::Host::process (747,474,740 samples, 2.33%)</title><rect x="555.2" y="405" width="27.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="558.22" y="415.5" >s..</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="571.9" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="574.94" y="367.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (30,303,030 samples, 0.09%)</title><rect x="1148.7" y="373" width="1.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1151.75" y="383.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (20,202,020 samples, 0.06%)</title><rect x="893.0" y="357" width="0.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="896.05" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_erase (50,505,050 samples, 0.16%)</title><rect x="1172.5" y="405" width="1.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1175.53" y="415.5" ></text>
</g>
<g >
<title>sim::Link::~Link (90,909,090 samples, 0.28%)</title><rect x="10.7" y="373" width="3.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="13.74" y="383.5" ></text>
</g>
<g >
<title>sim::TcpFlow::~TcpFlow (10,101,010 samples, 0.03%)</title><rect x="18.2" y="389" width="0.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="21.18" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="66.9" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.86" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="66.9" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.86" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1177.7" y="341" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.74" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="576.8" y="293" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="579.77" y="303.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (30,303,030 samples, 0.09%)</title><rect x="66.5" y="373" width="1.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="69.49" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::~MetricsCollector (10,101,010 samples, 0.03%)</title><rect x="18.5" y="437" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="21.55" y="447.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (10,101,010 samples, 0.03%)</title><rect x="1151.7" y="373" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1154.72" y="383.5" ></text>
</g>
<g >
<title>operator new (90,909,090 samples, 0.28%)</title><rect x="390.9" y="405" width="3.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="393.94" y="415.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (20,202,020 samples, 0.06%)</title><rect x="336.7" y="389" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="339.68" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="361.2" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.21" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="389" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (10,101,010 samples, 0.03%)</title><rect x="361.6" y="357" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="364.58" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1169.9" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.93" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1169.9" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.93" y="287.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Switch::process (70,707,070 samples, 0.22%)</title><rect x="1152.1" y="421" width="2.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1155.09" y="431.5" ></text>
</g>
<g >
<title>malloc (101,010,100 samples, 0.31%)</title><rect x="1100.4" y="389" width="3.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1103.43" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.31%)</title><rect x="1139.5" y="293" width="3.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1142.46" y="303.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="354.2" y="357" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="357.15" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="20.4" y="389" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="23.41" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.06%)</title><rect x="69.5" y="373" width="0.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="72.46" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="579.0" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="582.00" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (10,101,010 samples, 0.03%)</title><rect x="579.4" y="341" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="582.37" y="351.5" ></text>
</g>
<g >
<title>Logger::get_instance (70,707,070 samples, 0.22%)</title><rect x="760.0" y="373" width="2.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="763.00" y="383.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (40,404,040 samples, 0.13%)</title><rect x="553.7" y="405" width="1.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="556.73" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.29" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.25%)</title><rect x="77.3" y="341" width="2.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="80.27" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.13%)</title><rect x="875.6" y="325" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="878.58" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="361.2" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.21" y="191.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="579.4" y="357" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="582.37" y="367.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.16%)</title><rect x="1161.8" y="357" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1164.75" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_RTT (70,707,070 samples, 0.22%)</title><rect x="576.0" y="373" width="2.6" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="579.03" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="67.2" y="117" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.23" y="127.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1159.9" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1162.90" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1163.2" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1166.24" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1169.9" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.93" y="239.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="891.6" y="341" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="894.56" y="351.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (40,404,040 samples, 0.13%)</title><rect x="354.2" y="373" width="1.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="357.15" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="341.5" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="344.51" y="287.5" ></text>
</g>
<g >
<title>Logger::get_instance (70,707,070 samples, 0.22%)</title><rect x="386.5" y="405" width="2.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="389.49" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="341.5" y="69" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="344.51" y="79.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="35.6" y="373" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="38.64" y="383.5" ></text>
</g>
<g >
<title>__default_morecore (10,101,010 samples, 0.03%)</title><rect x="1163.2" y="325" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1166.24" y="335.5" ></text>
</g>
<g >
<title>sim::Process::operator (40,404,040 samples, 0.13%)</title><rect x="240.8" y="437" width="1.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="243.80" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1163.2" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1166.24" y="223.5" ></text>
</g>
<g >
<title>std::locale::~locale (10,101,010 samples, 0.03%)</title><rect x="351.2" y="373" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="354.18" y="383.5" ></text>
</g>
<g >
<title>__close_nocancel (10,101,010 samples, 0.03%)</title><rect x="36.0" y="357" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="39.02" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::hash&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="373" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1192.63" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="38.6" y="53" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.62" y="63.5" ></text>
</g>
<g >
<title>[libc.so.6] (262,626,260 samples, 0.82%)</title><rect x="43.8" y="309" width="9.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="46.82" y="319.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (10,101,010 samples, 0.03%)</title><rect x="885.6" y="373" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="888.62" y="383.5" ></text>
</g>
<g >
<title>sim::Link::get_from (10,101,010 samples, 0.03%)</title><rect x="1156.6" y="421" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1159.55" y="431.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (20,202,020 samples, 0.06%)</title><rect x="69.5" y="357" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="72.46" y="367.5" ></text>
</g>
</g>
</svg>
