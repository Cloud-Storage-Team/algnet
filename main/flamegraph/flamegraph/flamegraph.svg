<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>malloc (494,949,490 samples, 1.50%)</title><rect x="879.9" y="341" width="17.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="882.93" y="351.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (131,313,130 samples, 0.40%)</title><rect x="1138.7" y="357" width="4.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1141.74" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_cwnd (20,202,020 samples, 0.06%)</title><rect x="616.4" y="357" width="0.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="619.42" y="367.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (20,202,020 samples, 0.06%)</title><rect x="357.6" y="341" width="0.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="360.61" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1179.2" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.17" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="72.8" y="277" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="75.81" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.18%)</title><rect x="69.2" y="261" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.20" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="1160.0" y="325" width="2.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1163.04" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="356.2" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="359.17" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.8" y="53" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.84" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="903.4" y="101" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="906.39" y="111.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (10,101,010 samples, 0.03%)</title><rect x="617.5" y="309" width="0.4" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="620.51" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1178.8" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.81" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="37.4" y="357" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.43" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1129.0" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.00" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.03%)</title><rect x="907.7" y="309" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="910.72" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="36.4" y="277" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.35" y="287.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="380.0" y="309" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="382.99" y="319.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::operator (222,222,220 samples, 0.67%)</title><rect x="373.1" y="405" width="8.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="376.13" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="380.0" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="382.99" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::weak_ptr&lt;sim::ILink&gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (20,202,020 samples, 0.06%)</title><rect x="1158.2" y="389" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1161.23" y="399.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (20,202,020 samples, 0.06%)</title><rect x="1138.0" y="357" width="0.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1141.02" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1128.6" y="325" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1131.64" y="335.5" ></text>
</g>
<g >
<title>cfree (222,222,220 samples, 0.67%)</title><rect x="745.7" y="373" width="7.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="748.65" y="383.5" ></text>
</g>
<g >
<title>Logger::get_instance (10,101,010 samples, 0.03%)</title><rect x="350.0" y="389" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="353.03" y="399.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="611.7" y="325" width="0.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="614.73" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1168.3" y="245" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.34" y="255.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (60,606,060 samples, 0.18%)</title><rect x="1129.0" y="309" width="2.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1132.00" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="16.9" y="309" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="19.86" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="356.2" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="359.17" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1178.4" y="341" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1181.45" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="65.9" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.95" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1149.6" y="357" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1152.57" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="380.0" y="277" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="382.99" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="332.3" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="335.34" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.03%)</title><rect x="1137.7" y="309" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1140.66" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.31%)</title><rect x="1139.8" y="277" width="3.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1142.83" y="287.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="606.3" y="325" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="609.32" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1187.8" y="165" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1190.83" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.18%)</title><rect x="69.2" y="229" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.20" y="239.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (40,404,040 samples, 0.12%)</title><rect x="604.5" y="309" width="1.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="607.51" y="319.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (50,505,050 samples, 0.15%)</title><rect x="1136.2" y="341" width="1.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1139.22" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="72.4" y="293" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="75.45" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="34.9" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.91" y="255.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.03%)</title><rect x="597.7" y="357" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="600.65" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="380.0" y="325" width="0.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="382.99" y="335.5" ></text>
</g>
<g >
<title>operator delete (10,101,010 samples, 0.03%)</title><rect x="608.8" y="341" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="611.84" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="421" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>sim::SendData::operator (575,757,570 samples, 1.74%)</title><rect x="1127.6" y="405" width="20.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1130.55" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.18%)</title><rect x="69.2" y="277" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.20" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="898.0" y="261" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="900.98" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="35.6" y="309" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.63" y="319.5" ></text>
</g>
<g >
<title>YAML::Scanner::peek (10,101,010 samples, 0.03%)</title><rect x="1187.5" y="261" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1190.47" y="271.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (363,636,360 samples, 1.10%)</title><rect x="40.0" y="373" width="13.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="42.96" y="383.5" ></text>
</g>
<g >
<title>sim::Host::send_packet (575,757,570 samples, 1.74%)</title><rect x="1127.6" y="389" width="20.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1130.55" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="34.5" y="325" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.55" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="34.9" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.91" y="223.5" ></text>
</g>
<g >
<title>operator delete (10,101,010 samples, 0.03%)</title><rect x="1127.9" y="373" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1130.91" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1129.7" y="53" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.72" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="501" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="616.4" y="341" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="619.42" y="351.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (20,202,020 samples, 0.06%)</title><rect x="913.9" y="357" width="0.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="916.86" y="367.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (10,101,010 samples, 0.03%)</title><rect x="380.7" y="357" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="383.71" y="367.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (30,303,030 samples, 0.09%)</title><rect x="1143.8" y="341" width="1.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1146.80" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::export_to_file (242,424,240 samples, 0.73%)</title><rect x="68.5" y="405" width="8.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="71.48" y="415.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1147.4" y="325" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1150.41" y="335.5" ></text>
</g>
<g >
<title>operator new (252,525,250 samples, 0.76%)</title><rect x="756.5" y="373" width="9.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="759.48" y="383.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (4,626,262,580 samples, 14.01%)</title><rect x="90.5" y="421" width="165.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="93.50" y="431.5" >sim::Event::operator&gt;</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (80,808,080 samples, 0.24%)</title><rect x="1160.0" y="373" width="2.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1163.04" y="383.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (10,101,010 samples, 0.03%)</title><rect x="766.9" y="373" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="769.95" y="383.5" ></text>
</g>
<g >
<title>sim::Host::~Host (212,121,210 samples, 0.64%)</title><rect x="10.7" y="373" width="7.6" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="13.72" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="36.0" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.99" y="159.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1147.4" y="341" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1150.41" y="351.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="380.0" y="341" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="382.99" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="594.0" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="597.04" y="351.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="360.5" y="277" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="363.50" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="34.5" y="309" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.55" y="319.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.28%)</title><rect x="1186.0" y="341" width="3.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.03" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="19.0" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.02" y="271.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (20,202,020 samples, 0.06%)</title><rect x="38.2" y="389" width="0.7" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="41.16" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="37.4" y="341" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.43" y="351.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.03%)</title><rect x="603.8" y="309" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="606.79" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1161.8" y="309" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.84" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="903.4" y="69" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="906.39" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="36.0" y="133" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.99" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1181.0" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.98" y="223.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (30,303,030 samples, 0.09%)</title><rect x="36.4" y="373" width="1.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="39.35" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="35.6" y="261" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.63" y="271.5" ></text>
</g>
<g >
<title>vsnprintf (303,030,300 samples, 0.92%)</title><rect x="54.8" y="341" width="10.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="57.76" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1169.4" y="341" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1172.42" y="351.5" ></text>
</g>
<g >
<title>sim::RoutingModule::update_routing_table (141,414,140 samples, 0.43%)</title><rect x="1157.9" y="405" width="5.0" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1160.87" y="415.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (20,202,020 samples, 0.06%)</title><rect x="68.5" y="389" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="71.48" y="399.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (20,202,020 samples, 0.06%)</title><rect x="898.0" y="357" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="900.98" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="356.9" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="359.89" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="35.6" y="277" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.63" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (222,222,220 samples, 0.67%)</title><rect x="907.0" y="373" width="7.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="910.00" y="383.5" ></text>
</g>
<g >
<title>sim::Link::arrive (636,363,630 samples, 1.93%)</title><rect x="350.4" y="389" width="22.7" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="353.39" y="399.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="594.0" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="597.04" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1161.5" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.48" y="159.5" ></text>
</g>
<g >
<title>fmt::v11::vformat[abi:cxx11] (10,101,010 samples, 0.03%)</title><rect x="1149.6" y="389" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1152.57" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1168.3" y="261" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.34" y="271.5" ></text>
</g>
<g >
<title>YAML::Scanner::VerifySimpleKey (10,101,010 samples, 0.03%)</title><rect x="1187.1" y="229" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1190.11" y="239.5" ></text>
</g>
<g >
<title>cfree (474,747,470 samples, 1.44%)</title><rect x="332.7" y="405" width="17.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="335.70" y="415.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="380.0" y="293" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="382.99" y="303.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (90,909,090 samples, 0.28%)</title><rect x="1128.3" y="373" width="3.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1131.27" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="65.9" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.95" y="207.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (90,909,090 samples, 0.28%)</title><rect x="1144.9" y="373" width="3.2" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1147.88" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="36.4" y="213" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.35" y="223.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (50,505,050 samples, 0.15%)</title><rect x="72.1" y="357" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="75.09" y="367.5" ></text>
</g>
<g >
<title>open64 (30,303,030 samples, 0.09%)</title><rect x="36.4" y="309" width="1.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="39.35" y="319.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="51.9" y="357" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="54.87" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (101,010,100 samples, 0.31%)</title><rect x="909.5" y="325" width="3.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="912.53" y="335.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="421" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1192.64" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="36.7" y="101" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.71" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="34.9" y="133" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.91" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1178.4" y="261" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.45" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1129.7" y="181" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.72" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="19.0" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.02" y="319.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (50,505,050 samples, 0.15%)</title><rect x="600.5" y="325" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="603.54" y="335.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="903.8" y="277" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="906.75" y="287.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (131,313,130 samples, 0.40%)</title><rect x="363.4" y="357" width="4.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="366.39" y="367.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="1158.2" y="373" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1161.23" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="35.3" y="325" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="38.27" y="335.5" ></text>
</g>
<g >
<title>sim::Link::get_transmission_delay (20,202,020 samples, 0.06%)</title><rect x="905.2" y="357" width="0.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="908.20" y="367.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1186.8" y="165" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.75" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1181.0" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.98" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.83" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1129.7" y="117" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.72" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1129.7" y="133" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.72" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="380.0" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="382.99" y="223.5" ></text>
</g>
<g >
<title>operator new (545,454,540 samples, 1.65%)</title><rect x="878.1" y="357" width="19.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="881.12" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="614.3" y="277" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="617.26" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1161.1" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.12" y="303.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (80,808,080 samples, 0.24%)</title><rect x="1128.3" y="341" width="2.9" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1131.27" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="895.1" y="309" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="898.09" y="319.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="617.5" y="341" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="620.51" y="351.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="20.8" y="373" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="23.83" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="1138.7" y="341" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1141.74" y="351.5" ></text>
</g>
<g >
<title>strlen@plt (10,101,010 samples, 0.03%)</title><rect x="1031.2" y="373" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1034.17" y="383.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::Push (30,303,030 samples, 0.09%)</title><rect x="1187.8" y="229" width="1.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1190.83" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="356.2" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="359.17" y="271.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10,101,010 samples, 0.03%)</title><rect x="1147.8" y="357" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1150.77" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="1168.0" y="309" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.98" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="65.9" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.95" y="223.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (20,202,020 samples, 0.06%)</title><rect x="372.0" y="373" width="0.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="375.05" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1161.1" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.12" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="380.0" y="133" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="382.99" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.18%)</title><rect x="69.2" y="149" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.20" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="453" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.83" y="303.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="617.1" y="341" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="620.15" y="351.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;sim::IHost,  (20,202,020 samples, 0.06%)</title><rect x="606.7" y="357" width="0.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="609.68" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="34.9" y="117" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.91" y="127.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_delivery_rate (20,202,020 samples, 0.06%)</title><rect x="617.1" y="357" width="0.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="620.15" y="367.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="53.7" y="373" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="56.68" y="383.5" ></text>
</g>
<g >
<title>sim::LinkQueue::empty (30,303,030 samples, 0.09%)</title><rect x="905.9" y="373" width="1.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="908.92" y="383.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,101,010 samples, 0.03%)</title><rect x="602.7" y="341" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="605.71" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="356.2" y="133" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="359.17" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1161.1" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.12" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="356.9" y="133" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="359.89" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="903.4" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="906.39" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1161.5" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.48" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="23.83" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="30.9" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="33.94" y="367.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (30,303,030 samples, 0.09%)</title><rect x="907.0" y="357" width="1.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="910.00" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (141,414,140 samples, 0.43%)</title><rect x="13.2" y="341" width="5.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.25" y="351.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_links (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="405" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1192.64" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (30,303,030 samples, 0.09%)</title><rect x="360.5" y="309" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="363.50" y="319.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (70,707,070 samples, 0.21%)</title><rect x="613.2" y="341" width="2.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="616.18" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="68.5" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.48" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="19.0" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.02" y="239.5" ></text>
</g>
<g >
<title>strlen@plt (50,505,050 samples, 0.15%)</title><rect x="898.7" y="357" width="1.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="901.70" y="367.5" ></text>
</g>
<g >
<title>vsnprintf (50,505,050 samples, 0.15%)</title><rect x="600.5" y="309" width="1.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="603.54" y="319.5" ></text>
</g>
<g >
<title>Logger::info (2,131,313,110 samples, 6.45%)</title><rect x="777.4" y="357" width="76.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="780.42" y="367.5" >Logger::..</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="20.1" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="23.11" y="367.5" ></text>
</g>
<g >
<title>operator delete (60,606,060 samples, 0.18%)</title><rect x="754.3" y="373" width="2.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="757.31" y="383.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.09%)</title><rect x="903.8" y="293" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="906.75" y="303.5" ></text>
</g>
<g >
<title>__libc_alloca_cutoff (10,101,010 samples, 0.03%)</title><rect x="611.4" y="229" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="614.37" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1181.0" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.98" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.28%)</title><rect x="364.8" y="277" width="3.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="367.83" y="287.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (10,101,010 samples, 0.03%)</title><rect x="1030.8" y="373" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1033.81" y="383.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (60,606,060 samples, 0.18%)</title><rect x="69.2" y="373" width="2.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="72.20" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="36.4" y="261" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.35" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="903.8" y="261" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="906.75" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.8" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.79" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (2,202,020,180 samples, 6.67%)</title><rect x="952.1" y="373" width="78.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="955.12" y="383.5" >std::_Rb_..</text>
</g>
<g >
<title>sim::bfs[abi:cxx11] (515,151,510 samples, 1.56%)</title><rect x="1162.9" y="405" width="18.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1165.93" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="36.7" y="69" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.71" y="79.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="910.6" y="277" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="913.61" y="287.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (20,202,020 samples, 0.06%)</title><rect x="357.6" y="357" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="360.61" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.8" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.79" y="223.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::~TcpFlow (10,101,010 samples, 0.03%)</title><rect x="18.3" y="373" width="0.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="21.30" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1129.7" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.72" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (111,111,110 samples, 0.34%)</title><rect x="1159.0" y="389" width="3.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1161.96" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>fopen (30,303,030 samples, 0.09%)</title><rect x="36.4" y="357" width="1.0" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="39.35" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1129.4" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.36" y="159.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1188.6" y="213" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1191.56" y="223.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (30,303,030 samples, 0.09%)</title><rect x="376.7" y="373" width="1.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="379.74" y="383.5" ></text>
</g>
<g >
<title>Logger::warn (2,080,808,060 samples, 6.30%)</title><rect x="659.0" y="373" width="74.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="662.02" y="383.5" >Logger::..</text>
</g>
<g >
<title>std::_Rb_tree_increment (20,202,020 samples, 0.06%)</title><rect x="67.8" y="405" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="70.75" y="415.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (131,313,130 samples, 0.40%)</title><rect x="352.6" y="373" width="4.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="355.56" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (202,020,200 samples, 0.61%)</title><rect x="43.2" y="293" width="7.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="46.21" y="303.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.03%)</title><rect x="603.8" y="293" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="606.79" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1181.0" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.98" y="319.5" ></text>
</g>
<g >
<title>sim::write_to_csv (1,303,030,290 samples, 3.95%)</title><rect x="21.2" y="405" width="46.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="24.19" y="415.5" >sim:..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="68.5" y="133" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.48" y="143.5" ></text>
</g>
<g >
<title>vsnprintf (90,909,090 samples, 0.28%)</title><rect x="364.8" y="309" width="3.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="367.83" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="1168.0" y="325" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.98" y="335.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::data[abi:cxx11] (20,202,020 samples, 0.06%)</title><rect x="20.5" y="405" width="0.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="23.47" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (303,030,300 samples, 0.92%)</title><rect x="54.8" y="325" width="10.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="57.76" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1129.7" y="149" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.72" y="159.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="18.3" y="341" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="21.30" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="19.0" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.02" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.03%)</title><rect x="609.9" y="293" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="612.93" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="65.9" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.95" y="319.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (40,404,040 samples, 0.12%)</title><rect x="355.8" y="325" width="1.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="358.81" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="34.5" y="341" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="37.55" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="601.3" y="261" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="604.26" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="53.0" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="55.96" y="383.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (70,707,070 samples, 0.21%)</title><rect x="599.8" y="357" width="2.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="602.82" y="367.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1186.8" y="181" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.75" y="191.5" ></text>
</g>
<g >
<title>sim::Link::get_from (10,101,010 samples, 0.03%)</title><rect x="1157.9" y="389" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1160.87" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="356.9" y="101" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="359.89" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1129.0" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.00" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="594.0" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="597.04" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="36.7" y="85" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.71" y="95.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (20,202,020 samples, 0.06%)</title><rect x="1186.4" y="229" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1189.39" y="239.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (111,111,110 samples, 0.34%)</title><rect x="368.1" y="357" width="3.9" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="371.08" y="367.5" ></text>
</g>
<g >
<title>sim::Event::Event (262,626,260 samples, 0.80%)</title><rect x="1115.6" y="373" width="9.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1118.64" y="383.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (20,202,020 samples, 0.06%)</title><rect x="68.5" y="341" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="71.48" y="351.5" ></text>
</g>
<g >
<title>YAML::Node::~Node (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="421" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1192.28" y="431.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (90,909,090 samples, 0.28%)</title><rect x="377.8" y="373" width="3.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="380.83" y="383.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::export_to_files (1,383,838,370 samples, 4.19%)</title><rect x="19.0" y="421" width="49.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="22.02" y="431.5" >sim:..</text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.06%)</title><rect x="907.4" y="325" width="0.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="910.36" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="361.2" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.22" y="239.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (30,303,030 samples, 0.09%)</title><rect x="1186.4" y="245" width="1.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1189.39" y="255.5" ></text>
</g>
<g >
<title>fopen (60,606,060 samples, 0.18%)</title><rect x="69.2" y="357" width="2.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="72.20" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="380.0" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="382.99" y="159.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="609.2" y="341" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="612.20" y="351.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (969,696,960 samples, 2.94%)</title><rect x="915.7" y="373" width="34.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="918.67" y="383.5" >si..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="36.4" y="245" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.35" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="1166.9" y="357" width="2.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1169.90" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1179.2" y="133" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.17" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="485" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.83" y="271.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="907.7" y="277" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="910.72" y="287.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (40,404,040 samples, 0.12%)</title><rect x="1187.8" y="261" width="1.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1190.83" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="378.2" y="341" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="381.19" y="351.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="1187.8" y="197" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1190.83" y="207.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleDocument (90,909,090 samples, 0.28%)</title><rect x="1186.0" y="373" width="3.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1189.03" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="380.0" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="382.99" y="255.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.06%)</title><rect x="1186.4" y="197" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.39" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="903.4" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="906.39" y="287.5" ></text>
</g>
<g >
<title>main (32,777,777,450 samples, 99.27%)</title><rect x="18.7" y="453" width="1171.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="21.66" y="463.5" >main</text>
</g>
<g >
<title>vsnprintf (262,626,260 samples, 0.80%)</title><rect x="41.0" y="341" width="9.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="44.04" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_RTT (90,909,090 samples, 0.28%)</title><rect x="613.2" y="357" width="3.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="616.18" y="367.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;, std::weak_ptr&lt;sim::IProcessingDevice&gt;&amp;&gt; (2,616,161,590 samples, 7.92%)</title><rect x="1031.5" y="389" width="93.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1034.54" y="399.5" >void sim::S..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="69.6" y="117" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.56" y="127.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="609.9" y="245" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="612.93" y="255.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (131,313,130 samples, 0.40%)</title><rect x="352.6" y="357" width="4.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="355.56" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;* std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_Alloc_node&gt; (10,101,010 samples, 0.03%)</title><rect x="1185.3" y="405" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1188.31" y="415.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (212,121,210 samples, 0.64%)</title><rect x="846.0" y="341" width="7.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="849.00" y="351.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (20,202,020 samples, 0.06%)</title><rect x="68.5" y="373" width="0.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="71.48" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="361.2" y="261" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="364.22" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.83" y="351.5" ></text>
</g>
<g >
<title>std::filesystem::status (20,202,020 samples, 0.06%)</title><rect x="37.4" y="389" width="0.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="40.43" y="399.5" ></text>
</g>
<g >
<title>operator new (80,808,080 samples, 0.24%)</title><rect x="1160.0" y="357" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1163.04" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1188.2" y="37" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1191.20" y="47.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="903.4" y="133" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="906.39" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1168.3" y="277" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.34" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.8" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.79" y="239.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (30,303,030 samples, 0.09%)</title><rect x="1186.4" y="261" width="1.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1189.39" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.18%)</title><rect x="69.2" y="181" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.20" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="35.6" y="229" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.63" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.83" y="255.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (70,707,070 samples, 0.21%)</title><rect x="378.2" y="357" width="2.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="381.19" y="367.5" ></text>
</g>
<g >
<title>_IO_file_open (60,606,060 samples, 0.18%)</title><rect x="69.2" y="325" width="2.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="72.20" y="335.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="356.9" y="309" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="359.89" y="319.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="1187.8" y="181" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1190.83" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.03%)</title><rect x="1184.9" y="405" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1187.95" y="415.5" ></text>
</g>
<g >
<title>sim::Switch::process (11,252,525,140 samples, 34.08%)</title><rect x="629.4" y="389" width="402.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="632.42" y="399.5" >sim::Switch::process</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="35.6" y="293" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.63" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.83" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (40,404,040 samples, 0.12%)</title><rect x="360.1" y="325" width="1.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="363.14" y="335.5" ></text>
</g>
<g >
<title>nons (33,020,201,690 samples, 100.00%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >nons</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="356.2" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="359.17" y="223.5" ></text>
</g>
<g >
<title>sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::start (31,010,100,700 samples, 93.91%)</title><rect x="77.9" y="437" width="1108.1" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="80.86" y="447.5" >sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::start</text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.28%)</title><rect x="1186.0" y="357" width="3.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.03" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1129.0" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.00" y="223.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (30,303,030 samples, 0.09%)</title><rect x="376.7" y="357" width="1.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="379.74" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.31%)</title><rect x="14.7" y="325" width="3.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.69" y="335.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (393,939,390 samples, 1.19%)</title><rect x="38.9" y="389" width="14.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="41.88" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1181.0" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.98" y="239.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="609.2" y="325" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="612.20" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.28%)</title><rect x="364.8" y="293" width="3.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="367.83" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1129.4" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.36" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="35.6" y="213" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.63" y="223.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (80,808,080 samples, 0.24%)</title><rect x="373.1" y="389" width="2.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="376.13" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1129.0" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.00" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="356.9" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="359.89" y="175.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="1144.2" y="325" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1147.16" y="335.5" ></text>
</g>
<g >
<title>Logger::get_instance (50,505,050 samples, 0.15%)</title><rect x="656.1" y="373" width="1.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="659.13" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="19.0" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.02" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="69.6" y="85" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.56" y="95.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="31.7" y="373" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="34.66" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::export_metrics_to_files (1,626,262,610 samples, 4.93%)</title><rect x="19.0" y="437" width="58.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="22.02" y="447.5" >sim::M..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.8" y="85" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.84" y="95.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_insert_unique&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; const&amp;&gt; (30,303,030 samples, 0.09%)</title><rect x="1180.3" y="389" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1183.25" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="356.5" y="293" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="359.53" y="303.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="1180.6" y="357" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1183.61" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1181.7" y="373" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1184.70" y="383.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (50,505,050 samples, 0.15%)</title><rect x="950.3" y="373" width="1.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="953.32" y="383.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (101,010,100 samples, 0.31%)</title><rect x="901.2" y="357" width="3.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="904.23" y="367.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="356.5" y="309" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="359.53" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_pbump (10,101,010 samples, 0.03%)</title><rect x="598.4" y="309" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="601.38" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.83" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="34.9" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.91" y="239.5" ></text>
</g>
<g >
<title>sim::Process::~Process (101,010,100 samples, 0.31%)</title><rect x="258.3" y="421" width="3.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="261.35" y="431.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="380.7" y="341" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="383.71" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (262,626,260 samples, 0.80%)</title><rect x="41.0" y="357" width="9.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="44.04" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1178.4" y="277" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.45" y="287.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (30,303,030 samples, 0.09%)</title><rect x="1134.1" y="357" width="1.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1137.05" y="367.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="369.9" y="341" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="372.88" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="30.9" y="341" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="33.94" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="903.4" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="906.39" y="303.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (90,909,090 samples, 0.28%)</title><rect x="1128.3" y="357" width="3.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1131.27" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="356.9" y="117" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="359.89" y="127.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1142.7" y="245" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1145.71" y="255.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1149.6" y="373" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1152.57" y="383.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (80,808,080 samples, 0.24%)</title><rect x="622.9" y="389" width="2.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="625.92" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="610.6" y="245" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="613.65" y="255.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (10,101,010 samples, 0.03%)</title><rect x="1134.4" y="341" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1137.41" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1166.5" y="373" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1169.54" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1129.7" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.72" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (181,818,180 samples, 0.55%)</title><rect x="747.1" y="357" width="6.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="750.09" y="367.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.06%)</title><rect x="35.6" y="357" width="0.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="38.63" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1129.4" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.36" y="191.5" ></text>
</g>
<g >
<title>YAML::Stream::peek (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="213" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1191.92" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1130.4" y="245" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1133.44" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="469" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="353.3" y="341" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="356.28" y="351.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="609.9" y="309" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="612.93" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (333,333,330 samples, 1.01%)</title><rect x="853.6" y="357" width="11.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="856.58" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1129.4" y="117" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.36" y="127.5" ></text>
</g>
<g >
<title>vsnprintf (50,505,050 samples, 0.15%)</title><rect x="72.1" y="341" width="1.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="75.09" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (232,323,230 samples, 0.70%)</title><rect x="10.4" y="453" width="8.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.36" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (10,101,010 samples, 0.03%)</title><rect x="617.9" y="373" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="620.87" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="68.5" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.48" y="255.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (70,707,070 samples, 0.21%)</title><rect x="359.1" y="341" width="2.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="362.05" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="903.4" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="906.39" y="175.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::send_packet_now (111,111,110 samples, 0.34%)</title><rect x="602.7" y="357" width="4.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="605.71" y="367.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (121,212,120 samples, 0.37%)</title><rect x="363.7" y="341" width="4.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="366.75" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (33,010,100,680 samples, 99.97%)</title><rect x="10.4" y="469" width="1179.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.36" y="479.5" >[libc.so.6]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.18%)</title><rect x="69.2" y="165" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.20" y="175.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10,101,010 samples, 0.03%)</title><rect x="1172.3" y="389" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1175.31" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="903.4" y="53" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="906.39" y="63.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (10,101,010 samples, 0.03%)</title><rect x="597.7" y="341" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="600.65" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="65.9" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.95" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="356.9" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="359.89" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1180.6" y="341" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1183.61" y="351.5" ></text>
</g>
<g >
<title>vsnprintf (101,010,100 samples, 0.31%)</title><rect x="909.5" y="309" width="3.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="912.53" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="903.4" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="906.39" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="36.7" y="149" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.71" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1178.8" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.81" y="239.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnScalar (10,101,010 samples, 0.03%)</title><rect x="1186.0" y="277" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1189.03" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="68.5" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.48" y="287.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (80,808,080 samples, 0.24%)</title><rect x="1186.4" y="277" width="2.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.39" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="68.5" y="181" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.48" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="74.6" y="325" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="77.61" y="335.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,101,010 samples, 0.03%)</title><rect x="608.5" y="357" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="611.48" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.28%)</title><rect x="62.3" y="277" width="3.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="65.34" y="287.5" ></text>
</g>
<g >
<title>_IO_file_fopen (30,303,030 samples, 0.09%)</title><rect x="36.4" y="341" width="1.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="39.35" y="351.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (10,101,010 samples, 0.03%)</title><rect x="1134.8" y="341" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1137.77" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="68.5" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.48" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="356.2" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="359.17" y="303.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (50,505,050 samples, 0.15%)</title><rect x="903.0" y="325" width="1.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="906.03" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="380.4" y="261" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="383.35" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (10,101,010 samples, 0.03%)</title><rect x="616.1" y="325" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="619.06" y="335.5" ></text>
</g>
<g >
<title>Logger::info (10,101,010 samples, 0.03%)</title><rect x="1127.6" y="373" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1130.55" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="901.9" y="325" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="904.95" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="373" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1192.64" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_erase (40,404,040 samples, 0.12%)</title><rect x="1173.0" y="389" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1176.03" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1129.0" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.00" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="903.4" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="906.39" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.18%)</title><rect x="69.2" y="293" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.20" y="303.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="596.2" y="357" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="599.21" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>malloc (80,808,080 samples, 0.24%)</title><rect x="1166.9" y="373" width="2.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1169.90" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1147.0" y="309" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1150.04" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="19.7" y="373" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.75" y="383.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::export_to_files (242,424,240 samples, 0.73%)</title><rect x="68.5" y="421" width="8.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="71.48" y="431.5" ></text>
</g>
<g >
<title>cfree (151,515,150 samples, 0.46%)</title><rect x="12.9" y="357" width="5.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="15.89" y="367.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="71.4" y="389" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="74.36" y="399.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1179.9" y="357" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1182.89" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="356.9" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="359.89" y="223.5" ></text>
</g>
<g >
<title>operator new (191,919,190 samples, 0.58%)</title><rect x="1108.8" y="373" width="6.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1111.78" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="380.0" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="382.99" y="207.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="39.6" y="373" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="42.60" y="383.5" ></text>
</g>
<g >
<title>Logger::get_instance (50,505,050 samples, 0.15%)</title><rect x="399.5" y="389" width="1.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="402.48" y="399.5" ></text>
</g>
<g >
<title>Logger::info (20,202,020 samples, 0.06%)</title><rect x="350.8" y="373" width="0.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="353.75" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1178.4" y="293" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.45" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (20,202,020 samples, 0.06%)</title><rect x="32.7" y="389" width="0.8" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="35.74" y="399.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (222,222,220 samples, 0.67%)</title><rect x="10.7" y="389" width="8.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.72" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="356.2" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="359.17" y="255.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (101,010,100 samples, 0.31%)</title><rect x="603.1" y="341" width="3.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="606.07" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="36.7" y="53" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.71" y="63.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (40,404,040 samples, 0.12%)</title><rect x="604.5" y="277" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="607.51" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.18%)</title><rect x="69.2" y="245" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.20" y="255.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (60,606,060 samples, 0.18%)</title><rect x="74.6" y="357" width="2.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="77.61" y="367.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (20,202,020 samples, 0.06%)</title><rect x="628.0" y="389" width="0.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="630.97" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1188.2" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1191.20" y="159.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnScalar (30,303,030 samples, 0.09%)</title><rect x="1187.8" y="245" width="1.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1190.83" y="255.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (30,303,030 samples, 0.09%)</title><rect x="904.8" y="373" width="1.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="907.84" y="383.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (40,404,040 samples, 0.12%)</title><rect x="765.5" y="373" width="1.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="768.50" y="383.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="596.2" y="373" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="599.21" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="367.4" y="229" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="370.36" y="239.5" ></text>
</g>
<g >
<title>fstatat64 (20,202,020 samples, 0.06%)</title><rect x="37.4" y="373" width="0.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="40.43" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1181.0" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.98" y="335.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (232,323,230 samples, 0.70%)</title><rect x="725.1" y="357" width="8.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="728.07" y="367.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (10,101,010 samples, 0.03%)</title><rect x="372.8" y="373" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="375.77" y="383.5" ></text>
</g>
<g >
<title>operator new (80,808,080 samples, 0.24%)</title><rect x="402.4" y="389" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="405.37" y="399.5" ></text>
</g>
<g >
<title>sim::Link::get_to_ingress_queue_size (60,606,060 samples, 0.18%)</title><rect x="625.8" y="389" width="2.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="628.81" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1130.1" y="37" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1133.08" y="47.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="34.9" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.91" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1161.1" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.12" y="319.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="356.9" y="293" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="359.89" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1161.1" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.12" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="605.2" y="213" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="608.23" y="223.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="753.6" y="373" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="756.59" y="383.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="1139.1" y="341" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1142.10" y="351.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;sim::IHost,  (10,101,010 samples, 0.03%)</title><rect x="618.2" y="373" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="621.23" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1168.3" y="133" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.34" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="356.9" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="359.89" y="159.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (60,606,060 samples, 0.18%)</title><rect x="71.7" y="389" width="2.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="74.73" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="34.9" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.91" y="191.5" ></text>
</g>
<g >
<title>write (20,202,020 samples, 0.06%)</title><rect x="68.5" y="325" width="0.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="71.48" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.83" y="191.5" ></text>
</g>
<g >
<title>Logger::info (30,303,030 samples, 0.09%)</title><rect x="657.9" y="373" width="1.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="660.94" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="65.9" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.95" y="303.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="907.4" y="341" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="910.36" y="351.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (10,101,010 samples, 0.03%)</title><rect x="596.9" y="341" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="599.93" y="351.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (40,404,040 samples, 0.12%)</title><rect x="1143.4" y="357" width="1.5" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1146.44" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (40,404,040 samples, 0.12%)</title><rect x="31.3" y="389" width="1.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="34.30" y="399.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="1146.7" y="325" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1149.68" y="335.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.09%)</title><rect x="360.5" y="293" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="363.50" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="73.9" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="76.89" y="319.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (30,303,030 samples, 0.09%)</title><rect x="594.4" y="389" width="1.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="597.41" y="399.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="1170.1" y="357" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1173.15" y="367.5" ></text>
</g>
<g >
<title>sim::BaseHasher::get_hash (30,303,030 samples, 0.09%)</title><rect x="1146.7" y="357" width="1.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1149.68" y="367.5" ></text>
</g>
<g >
<title>sim::Link::get_max_to_ingress_queue_size (121,212,120 samples, 0.37%)</title><rect x="618.6" y="389" width="4.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="621.59" y="399.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (50,505,050 samples, 0.15%)</title><rect x="370.2" y="341" width="1.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="373.24" y="351.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (70,707,070 samples, 0.21%)</title><rect x="599.8" y="341" width="2.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="602.82" y="351.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="908.1" y="357" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="911.09" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;YAML::detail::node&gt;, std::shared_ptr&lt;YAML::detail::node&gt;, std::_Identity&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt;, std::less&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="373" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1192.28" y="383.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (393,939,390 samples, 1.19%)</title><rect x="53.0" y="389" width="14.0" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="55.96" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="1172.7" y="389" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1175.67" y="399.5" ></text>
</g>
<g >
<title>YAML::LoadFile (90,909,090 samples, 0.28%)</title><rect x="1186.0" y="421" width="3.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1189.03" y="431.5" ></text>
</g>
<g >
<title>auto sim::YamlParser::process_links (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="389" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1192.64" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.83" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1157.2" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1160.15" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.83" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.8" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.79" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.31%)</title><rect x="1139.8" y="293" width="3.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1142.83" y="303.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (151,515,150 samples, 0.46%)</title><rect x="597.3" y="373" width="5.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="600.29" y="383.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="610.3" y="309" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="613.29" y="319.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="914.6" y="357" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="917.58" y="367.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (40,404,040 samples, 0.12%)</title><rect x="361.6" y="357" width="1.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="364.58" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1129.7" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.72" y="223.5" ></text>
</g>
<g >
<title>sim::Event::get_time (111,111,110 samples, 0.34%)</title><rect x="86.5" y="421" width="4.0" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="89.52" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (202,020,200 samples, 0.61%)</title><rect x="869.8" y="341" width="7.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="872.82" y="351.5" ></text>
</g>
<g >
<title>malloc (60,606,060 samples, 0.18%)</title><rect x="1106.6" y="373" width="2.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1109.62" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="19.0" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.02" y="207.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (111,111,110 samples, 0.34%)</title><rect x="1186.0" y="437" width="4.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1189.03" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (343,434,340 samples, 1.04%)</title><rect x="733.4" y="373" width="12.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="736.38" y="383.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (60,606,060 samples, 0.18%)</title><rect x="1129.0" y="325" width="2.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1132.00" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (242,424,240 samples, 0.73%)</title><rect x="56.9" y="309" width="8.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="59.93" y="319.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (20,202,020 samples, 0.06%)</title><rect x="35.6" y="389" width="0.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="38.63" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (20,202,020 samples, 0.06%)</title><rect x="371.3" y="325" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="374.33" y="335.5" ></text>
</g>
<g >
<title>operator delete (101,010,100 samples, 0.31%)</title><rect x="82.9" y="421" width="3.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="85.92" y="431.5" ></text>
</g>
<g >
<title>YAML::detail::memory::create_node (20,202,020 samples, 0.06%)</title><rect x="1187.8" y="213" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1190.83" y="223.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (10,101,010 samples, 0.03%)</title><rect x="1131.2" y="341" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1134.16" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="371.0" y="325" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="373.97" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="73.9" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="76.89" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1158.2" y="341" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.23" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="34.9" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.91" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (131,313,130 samples, 0.40%)</title><rect x="909.2" y="341" width="4.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="912.17" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1129.0" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.00" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="68.5" y="149" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.48" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="69.9" y="69" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.92" y="79.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="898.0" y="293" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="900.98" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="19.0" y="405" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.02" y="415.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.28%)</title><rect x="1186.0" y="293" width="3.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.03" y="303.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="1146.7" y="341" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1149.68" y="351.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (10,101,010 samples, 0.03%)</title><rect x="66.7" y="357" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="69.67" y="367.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (10,101,010 samples, 0.03%)</title><rect x="1149.9" y="373" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1152.93" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="356.9" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="359.89" y="239.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (10,101,010 samples, 0.03%)</title><rect x="898.3" y="341" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="901.34" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (10,101,010 samples, 0.03%)</title><rect x="617.5" y="325" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="620.51" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1178.8" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.81" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="35.6" y="245" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.63" y="255.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (20,202,020 samples, 0.06%)</title><rect x="77.1" y="437" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="80.14" y="447.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (343,434,340 samples, 1.04%)</title><rect x="1132.6" y="373" width="12.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1135.61" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1188.2" y="117" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1191.20" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (232,323,230 samples, 0.70%)</title><rect x="10.4" y="405" width="8.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.36" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (232,323,230 samples, 0.70%)</title><rect x="57.3" y="293" width="8.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="60.29" y="303.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (30,303,030 samples, 0.09%)</title><rect x="612.1" y="341" width="1.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="615.09" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (60,606,060 samples, 0.18%)</title><rect x="1182.8" y="405" width="2.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1185.78" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.8" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.79" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="68.5" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.48" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="356.9" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="359.89" y="271.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="1180.6" y="373" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1183.61" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1168.3" y="165" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.34" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="36.4" y="181" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.35" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1181.0" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.98" y="207.5" ></text>
</g>
<g >
<title>malloc (80,808,080 samples, 0.24%)</title><rect x="1160.0" y="341" width="2.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1163.04" y="351.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (60,606,060 samples, 0.18%)</title><rect x="69.2" y="389" width="2.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="72.20" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (10,101,010 samples, 0.03%)</title><rect x="1185.7" y="421" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1188.67" y="431.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.06%)</title><rect x="68.5" y="357" width="0.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="71.48" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (40,404,040 samples, 0.12%)</title><rect x="1181.3" y="405" width="1.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1184.34" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1161.1" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.12" y="255.5" ></text>
</g>
<g >
<title>_IO_file_fopen (60,606,060 samples, 0.18%)</title><rect x="69.2" y="341" width="2.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="72.20" y="351.5" ></text>
</g>
<g >
<title>vsnprintf (30,303,030 samples, 0.09%)</title><rect x="610.6" y="277" width="1.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="613.65" y="287.5" ></text>
</g>
<g >
<title>sim::Process::operator (60,606,060 samples, 0.18%)</title><rect x="256.2" y="421" width="2.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="259.18" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.8" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.79" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="76.1" y="277" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="79.06" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="36.7" y="117" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.71" y="127.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.31%)</title><rect x="1139.8" y="261" width="3.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1142.83" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="80.0" y="421" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="83.03" y="431.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (70,707,070 samples, 0.21%)</title><rect x="603.8" y="325" width="2.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="606.79" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1170.1" y="341" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1173.15" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1188.2" y="133" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1191.20" y="143.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="602.3" y="357" width="0.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="605.35" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="34.5" y="277" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.55" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="605.2" y="229" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="608.23" y="239.5" ></text>
</g>
<g >
<title>sim::Process::operator (20,818,181,610 samples, 63.05%)</title><rect x="381.1" y="405" width="743.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="384.07" y="415.5" >sim::Process::operator</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="36.0" y="117" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.99" y="127.5" ></text>
</g>
<g >
<title>cfree (30,303,030 samples, 0.09%)</title><rect x="1181.7" y="389" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1184.70" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="19.0" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.02" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="613.2" y="293" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="616.18" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="74.6" y="309" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="77.61" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="19.0" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.02" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="600.5" y="293" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="603.54" y="303.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="598.4" y="341" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="601.38" y="351.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="66.3" y="357" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="69.31" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="34.5" y="293" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.55" y="303.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1137.7" y="293" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1140.66" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.8" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.79" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="48.3" y="277" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="51.26" y="287.5" ></text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks (10,101,010 samples, 0.03%)</title><rect x="908.8" y="357" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="911.81" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;unsigned int&gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="18.3" y="357" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="21.30" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1188.2" y="53" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1191.20" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1188.2" y="85" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1191.20" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1178.4" y="309" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.45" y="319.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::send_packets (131,313,130 samples, 0.40%)</title><rect x="602.7" y="373" width="4.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="605.71" y="383.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (10,101,010 samples, 0.03%)</title><rect x="897.6" y="357" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="900.62" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1129.4" y="85" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.36" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (24,979,797,730 samples, 75.65%)</title><rect x="262.0" y="421" width="892.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="264.95" y="431.5" >sim::Scheduler::tick</text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (313,131,310 samples, 0.95%)</title><rect x="54.4" y="357" width="11.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="57.40" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="68.5" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.48" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="356.2" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="359.17" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.03%)</title><rect x="18.7" y="421" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="21.66" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="601.3" y="277" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="604.26" y="287.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (20,202,020 samples, 0.06%)</title><rect x="35.6" y="341" width="0.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="38.63" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="356.2" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="359.17" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.03%)</title><rect x="598.4" y="325" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="601.38" y="335.5" ></text>
</g>
<g >
<title>operator new (70,707,070 samples, 0.21%)</title><rect x="613.2" y="325" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="616.18" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1172.7" y="357" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1175.67" y="367.5" ></text>
</g>
<g >
<title>YAML::Load (90,909,090 samples, 0.28%)</title><rect x="1186.0" y="405" width="3.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1189.03" y="415.5" ></text>
</g>
<g >
<title>malloc (191,919,190 samples, 0.58%)</title><rect x="758.6" y="357" width="6.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="761.64" y="367.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="1178.4" y="357" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1181.45" y="367.5" ></text>
</g>
<g >
<title>writev (10,101,010 samples, 0.03%)</title><rect x="65.9" y="341" width="0.4" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="68.95" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="74.6" y="293" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="77.61" y="303.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (10,101,010 samples, 0.03%)</title><rect x="52.6" y="357" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="55.59" y="367.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.28%)</title><rect x="1186.0" y="325" width="3.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.03" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.31%)</title><rect x="909.5" y="293" width="3.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="912.53" y="303.5" ></text>
</g>
<g >
<title>vsnprintf (101,010,100 samples, 0.31%)</title><rect x="1139.8" y="309" width="3.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1142.83" y="319.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="30.6" y="373" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="33.58" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="65.9" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.95" y="175.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="602.3" y="341" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="605.35" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1179.2" y="117" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.17" y="127.5" ></text>
</g>
<g >
<title>operator delete (30,303,030 samples, 0.09%)</title><rect x="401.3" y="389" width="1.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="404.29" y="399.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1149.9" y="357" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1152.93" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1168.3" y="293" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.34" y="303.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::operator (10,101,010 samples, 0.03%)</title><rect x="255.8" y="421" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="258.82" y="431.5" ></text>
</g>
<g >
<title>__uselocale (20,202,020 samples, 0.06%)</title><rect x="913.1" y="325" width="0.8" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="916.14" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="34.9" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.91" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.8" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.79" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="351.5" y="373" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="354.47" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (131,313,130 samples, 0.40%)</title><rect x="1175.6" y="389" width="4.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1178.56" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="610.6" y="229" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="613.65" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="34.9" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.91" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="903.4" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="906.39" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="604.5" y="245" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="607.51" y="255.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (10,101,010 samples, 0.03%)</title><rect x="596.9" y="373" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="599.93" y="383.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="20.8" y="389" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="23.83" y="399.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="898.0" y="325" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="900.98" y="335.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (70,707,070 samples, 0.21%)</title><rect x="609.6" y="341" width="2.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="612.57" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="611.7" y="309" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="614.73" y="319.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (40,404,040 samples, 0.12%)</title><rect x="604.5" y="293" width="1.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="607.51" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.8" y="101" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.84" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="361.2" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.22" y="255.5" ></text>
</g>
<g >
<title>sim::IdentifierFactory::~IdentifierFactory (232,323,230 samples, 0.70%)</title><rect x="10.4" y="421" width="8.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="13.36" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="356.2" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="359.17" y="287.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (40,404,040 samples, 0.12%)</title><rect x="903.4" y="309" width="1.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="906.39" y="319.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="615.7" y="341" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="618.70" y="351.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="30.6" y="389" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="33.58" y="399.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.15%)</title><rect x="33.8" y="357" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="36.82" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (10,101,010 samples, 0.03%)</title><rect x="898.0" y="341" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="900.98" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="380.0" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="382.99" y="175.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="599.1" y="357" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="602.10" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="68.5" y="117" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.48" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1161.5" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.48" y="207.5" ></text>
</g>
<g >
<title>__libc_start_main (33,010,100,680 samples, 99.97%)</title><rect x="10.4" y="485" width="1179.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.36" y="495.5" >__libc_start_main</text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks (10,101,010 samples, 0.03%)</title><rect x="363.0" y="341" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="366.03" y="351.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1179.9" y="341" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1182.89" y="351.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (10,101,010 samples, 0.03%)</title><rect x="76.8" y="357" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="79.78" y="367.5" ></text>
</g>
<g >
<title>_start (33,010,100,680 samples, 99.97%)</title><rect x="10.4" y="501" width="1179.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.36" y="511.5" >_start</text>
</g>
<g >
<title>vsnprintf (60,606,060 samples, 0.18%)</title><rect x="74.6" y="341" width="2.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="77.61" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="405" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (121,212,120 samples, 0.37%)</title><rect x="900.5" y="373" width="4.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="903.50" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="65.9" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.95" y="239.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (30,303,030 samples, 0.09%)</title><rect x="609.6" y="325" width="1.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="612.57" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (20,202,020 samples, 0.06%)</title><rect x="1171.6" y="373" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1174.59" y="383.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (80,808,080 samples, 0.24%)</title><rect x="354.4" y="341" width="2.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="357.36" y="351.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (80,808,080 samples, 0.24%)</title><rect x="1135.1" y="357" width="2.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1138.13" y="367.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (3,727,272,690 samples, 11.29%)</title><rect x="767.3" y="373" width="133.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="770.31" y="383.5" >sim::Link::get_p..</text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::memory*,  (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="389" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1192.28" y="399.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::send_packet_now (10,101,010 samples, 0.03%)</title><rect x="1149.9" y="389" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1152.93" y="399.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::update (292,929,290 samples, 0.89%)</title><rect x="607.4" y="373" width="10.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="610.40" y="383.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (30,303,030 samples, 0.09%)</title><rect x="36.4" y="389" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="39.35" y="399.5" ></text>
</g>
<g >
<title>sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::recalculate_paths (858,585,850 samples, 2.60%)</title><rect x="1155.0" y="421" width="30.7" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="1157.99" y="431.5" >si..</text>
</g>
<g >
<title>malloc (141,414,140 samples, 0.43%)</title><rect x="1110.6" y="357" width="5.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1113.59" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="36.4" y="293" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.35" y="303.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (60,606,060 samples, 0.18%)</title><rect x="71.7" y="373" width="2.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="74.73" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="65.9" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.95" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.18%)</title><rect x="69.2" y="213" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.20" y="223.5" ></text>
</g>
<g >
<title>malloc@plt (30,303,030 samples, 0.09%)</title><rect x="877.0" y="357" width="1.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="880.04" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="69.9" y="53" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.92" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="356.9" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="359.89" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1178.8" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.81" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="36.7" y="133" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.71" y="143.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (30,303,030 samples, 0.09%)</title><rect x="610.6" y="293" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="613.65" y="303.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.12%)</title><rect x="1178.1" y="373" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1181.09" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="35.6" y="165" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.63" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="19.7" y="389" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.75" y="399.5" ></text>
</g>
<g >
<title>write (20,202,020 samples, 0.06%)</title><rect x="35.6" y="325" width="0.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="38.63" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="73.9" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="76.89" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1168.3" y="213" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.34" y="223.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.12%)</title><rect x="1129.7" y="293" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1132.72" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (323,232,320 samples, 0.98%)</title><rect x="338.1" y="389" width="11.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="341.12" y="399.5" ></text>
</g>
<g >
<title>Logger::get_instance (40,404,040 samples, 0.12%)</title><rect x="776.0" y="357" width="1.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="778.97" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="594.0" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="597.04" y="335.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (101,010,100 samples, 0.31%)</title><rect x="364.5" y="325" width="3.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="367.47" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.18%)</title><rect x="69.2" y="133" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.20" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (10,101,010 samples, 0.03%)</title><rect x="1174.5" y="389" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1177.48" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="65.9" y="357" width="0.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="68.95" y="367.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (20,202,020 samples, 0.06%)</title><rect x="35.6" y="373" width="0.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="38.63" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="380.0" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="382.99" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;Time&lt;Nanosecond&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (60,606,060 samples, 0.18%)</title><rect x="33.5" y="389" width="2.1" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="36.46" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="903.4" y="117" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="906.39" y="127.5" ></text>
</g>
<g >
<title>std::ostream::put (20,202,020 samples, 0.06%)</title><rect x="67.0" y="389" width="0.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="70.03" y="399.5" ></text>
</g>
<g >
<title>sim::Link::get_from (10,101,010 samples, 0.03%)</title><rect x="1169.8" y="389" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1172.79" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1181.0" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.98" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="595.5" y="373" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="598.49" y="383.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="51.2" y="357" width="0.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="54.15" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="73.9" y="373" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="76.89" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="356.2" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="359.17" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1168.3" y="149" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.34" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="19.0" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.02" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="903.4" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="906.39" y="255.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.03%)</title><rect x="65.6" y="357" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="68.59" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="19.0" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.02" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="1168.0" y="341" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.98" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1129.7" y="85" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.72" y="95.5" ></text>
</g>
<g >
<title>sim::Process::~Process (70,707,070 samples, 0.21%)</title><rect x="1125.0" y="405" width="2.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1128.03" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1168.3" y="181" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.34" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="356.9" y="277" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="359.89" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (20,202,020 samples, 0.06%)</title><rect x="32.0" y="373" width="0.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="35.02" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="366.3" y="245" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="369.27" y="255.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (30,303,030 samples, 0.09%)</title><rect x="610.6" y="325" width="1.1" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="613.65" y="335.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (414,141,410 samples, 1.25%)</title><rect x="357.2" y="373" width="14.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="360.25" y="383.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (90,909,090 samples, 0.28%)</title><rect x="358.3" y="357" width="3.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="361.33" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (50,505,050 samples, 0.15%)</title><rect x="1136.2" y="325" width="1.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1139.22" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1129.0" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.00" y="287.5" ></text>
</g>
<g >
<title>sim::Link::get_to (10,101,010 samples, 0.03%)</title><rect x="1157.5" y="405" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1160.51" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="65.9" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.95" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="65.9" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.95" y="191.5" ></text>
</g>
<g >
<title>_IO_file_open (30,303,030 samples, 0.09%)</title><rect x="36.4" y="325" width="1.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="39.35" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.03%)</title><rect x="609.9" y="277" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="612.93" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="903.4" y="85" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="906.39" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1188.2" y="69" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1191.20" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.8" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.79" y="271.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (90,909,090 samples, 0.28%)</title><rect x="73.9" y="389" width="3.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="76.89" y="399.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::Timeout::operator (60,606,060 samples, 0.18%)</title><rect x="1148.1" y="405" width="2.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1151.13" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="365.2" y="261" width="2.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="368.19" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="898.0" y="245" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="900.98" y="255.5" ></text>
</g>
<g >
<title>sim::Link::transmit (141,414,140 samples, 0.43%)</title><rect x="376.0" y="389" width="5.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="379.02" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1168.3" y="197" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.34" y="207.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (80,808,080 samples, 0.24%)</title><rect x="74.3" y="373" width="2.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="77.25" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (80,808,080 samples, 0.24%)</title><rect x="901.9" y="341" width="2.9" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="904.95" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::node*,  (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="357" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1192.28" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 0.67%)</title><rect x="42.5" y="309" width="7.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="45.49" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1178.8" y="181" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.81" y="191.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1137.7" y="277" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1140.66" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.8" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.79" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="65.9" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.95" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="68.5" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.48" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="356.2" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="359.17" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1129.7" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.72" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (20,202,020 samples, 0.06%)</title><rect x="1174.8" y="389" width="0.8" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1177.84" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1135.9" y="341" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1138.86" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="361.2" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.22" y="223.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="1166.5" y="389" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1169.54" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1161.1" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.12" y="239.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (121,212,120 samples, 0.37%)</title><rect x="608.8" y="357" width="4.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="611.84" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1129.4" y="133" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.36" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (232,323,230 samples, 0.70%)</title><rect x="10.4" y="437" width="8.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.36" y="447.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (10,101,010 samples, 0.03%)</title><rect x="897.6" y="341" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="900.62" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1178.4" y="325" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.45" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="894.7" y="325" width="2.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="897.73" y="335.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_outlinks (60,606,060 samples, 0.18%)</title><rect x="1170.1" y="389" width="2.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1173.15" y="399.5" ></text>
</g>
<g >
<title>operator new (80,808,080 samples, 0.24%)</title><rect x="1166.9" y="389" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1169.90" y="399.5" ></text>
</g>
<g >
<title>YAML::Parser::HandleNextDocument (90,909,090 samples, 0.28%)</title><rect x="1186.0" y="389" width="3.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1189.03" y="399.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="898.3" y="325" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="901.34" y="335.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (20,202,020 samples, 0.06%)</title><rect x="914.9" y="373" width="0.8" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="917.94" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1129.7" y="101" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.72" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="1129.7" y="261" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1132.72" y="271.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (10,101,010 samples, 0.03%)</title><rect x="1187.5" y="245" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1190.47" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1179.9" y="325" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1182.89" y="335.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="907.7" y="293" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="910.72" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="903.4" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="906.39" y="223.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="609.9" y="261" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="612.93" y="271.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1149.9" y="341" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1152.93" y="351.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.28%)</title><rect x="1186.0" y="309" width="3.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.03" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="19.0" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.02" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="72.1" y="325" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="75.09" y="335.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (30,303,030 samples, 0.09%)</title><rect x="598.0" y="357" width="1.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="601.01" y="367.5" ></text>
</g>
<g >
<title>sim::SendData::operator (10,101,010 samples, 0.03%)</title><rect x="1154.6" y="421" width="0.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1157.63" y="431.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (656,565,650 samples, 1.99%)</title><rect x="349.7" y="405" width="23.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="352.67" y="415.5" >s..</text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="229" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1191.92" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.8" y="69" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.84" y="79.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (10,101,010 samples, 0.03%)</title><rect x="10.4" y="373" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.36" y="383.5" ></text>
</g>
<g >
<title>vsnprintf (40,404,040 samples, 0.12%)</title><rect x="604.5" y="261" width="1.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="607.51" y="271.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::get_max_size (20,202,020 samples, 0.06%)</title><rect x="628.7" y="389" width="0.7" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="631.70" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="35.6" y="197" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.63" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="72.4" y="309" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="75.45" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1161.5" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.48" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1178.8" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.81" y="207.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (5,141,414,090 samples, 15.57%)</title><rect x="410.7" y="389" width="183.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="413.67" y="399.5" >sim::Event::operator&gt;</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1169.1" y="117" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.06" y="127.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.12%)</title><rect x="1129.7" y="277" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1132.72" y="287.5" ></text>
</g>
<g >
<title>open64 (60,606,060 samples, 0.18%)</title><rect x="69.2" y="309" width="2.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="72.20" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1168.3" y="229" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1171.34" y="239.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.09%)</title><rect x="1170.1" y="373" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1173.15" y="383.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="53.3" y="373" width="0.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="56.32" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.18%)</title><rect x="69.2" y="197" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.20" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.0" y="437" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="1172.7" y="373" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1175.67" y="383.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (30,303,030 samples, 0.09%)</title><rect x="610.6" y="309" width="1.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="613.65" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1181.0" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.98" y="255.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Switch::process (121,212,120 samples, 0.37%)</title><rect x="1150.3" y="405" width="4.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1153.29" y="415.5" ></text>
</g>
<g >
<title>sim::Host::~Host (10,101,010 samples, 0.03%)</title><rect x="10.4" y="357" width="0.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="13.36" y="367.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="606.0" y="309" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="608.96" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="68.5" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.48" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="36.4" y="197" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.35" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="10.4" y="389" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.36" y="399.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="604.2" y="309" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="607.15" y="319.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1159.7" y="373" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1162.68" y="383.5" ></text>
</g>
<g >
<title>sim::Event::Event (151,515,150 samples, 0.46%)</title><rect x="405.3" y="389" width="5.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="408.26" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="35.6" y="181" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.63" y="191.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (10,101,010 samples, 0.03%)</title><rect x="363.0" y="357" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="366.03" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="73.9" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="76.89" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="19.0" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.02" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1129.4" y="101" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.36" y="111.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.15%)</title><rect x="33.8" y="373" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="36.82" y="383.5" ></text>
</g>
<g >
<title>sim::Event::Event (10,101,010 samples, 0.03%)</title><rect x="1132.2" y="357" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1135.25" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="898.0" y="309" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="900.98" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1188.2" y="101" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1191.20" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="36.7" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.71" y="175.5" ></text>
</g>
<g >
<title>auto main::{lambda (10,101,010 samples, 0.03%)</title><rect x="18.7" y="437" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="21.66" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="380.0" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="382.99" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (242,424,240 samples, 0.73%)</title><rect x="41.8" y="325" width="8.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="44.77" y="335.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (101,010,100 samples, 0.31%)</title><rect x="1139.8" y="325" width="3.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1142.83" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.8" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.79" y="191.5" ></text>
</g>
<g >
<title>malloc (70,707,070 samples, 0.21%)</title><rect x="613.2" y="309" width="2.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="616.18" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1179.9" y="309" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1182.89" y="319.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (20,202,020 samples, 0.06%)</title><rect x="1186.4" y="213" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1189.39" y="223.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::memory_holder*,  (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="405" width="0.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1192.28" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.83" y="207.5" ></text>
</g>
<g >
<title>all (33,020,201,690 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="19.0" y="389" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.02" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (10,101,010 samples, 0.03%)</title><rect x="1171.2" y="373" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1174.23" y="383.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (363,636,360 samples, 1.10%)</title><rect x="54.0" y="373" width="13.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="57.04" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="36.4" y="229" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.35" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1170.9" y="325" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1173.87" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="911.0" y="261" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="913.97" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="68.5" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.48" y="303.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="19.7" y="405" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="22.75" y="415.5" ></text>
</g>
<g >
<title>sim::Host::process (646,464,640 samples, 1.96%)</title><rect x="595.5" y="389" width="23.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="598.49" y="399.5" >s..</text>
</g>
<g >
<title>cfree (70,707,070 samples, 0.21%)</title><rect x="80.4" y="421" width="2.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="83.39" y="431.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (10,101,010 samples, 0.03%)</title><rect x="596.9" y="357" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="599.93" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="903.4" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="906.39" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (20,202,020 samples, 0.06%)</title><rect x="1179.5" y="373" width="0.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1182.53" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="69.6" y="101" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.56" y="111.5" ></text>
</g>
<g >
<title>cfree (323,232,320 samples, 0.98%)</title><rect x="865.5" y="357" width="11.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="868.49" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="602.0" y="229" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="604.99" y="239.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (30,303,030 samples, 0.09%)</title><rect x="1131.5" y="373" width="1.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1134.52" y="383.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="598.7" y="341" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="601.74" y="351.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="898.0" y="277" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="900.98" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1129.7" y="69" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.72" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1129.7" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.72" y="175.5" ></text>
</g>
<g >
<title>__uselocale (20,202,020 samples, 0.06%)</title><rect x="50.4" y="357" width="0.8" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="53.43" y="367.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="1158.2" y="357" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1161.23" y="367.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="245" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1191.92" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="904.5" y="245" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="907.48" y="255.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (131,313,130 samples, 0.40%)</title><rect x="909.2" y="357" width="4.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="912.17" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="610.6" y="261" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="613.65" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="601.3" y="245" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="604.26" y="255.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (111,111,110 samples, 0.34%)</title><rect x="1139.5" y="341" width="3.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1142.46" y="351.5" ></text>
</g>
</g>
</svg>
