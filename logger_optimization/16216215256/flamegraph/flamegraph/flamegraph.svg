<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="758.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="741" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="741" > </text>
<g id="frames">
<g >
<title>sim::SimplePacketQueue::get_max_size (2,002,002 samples, 0.01%)</title><rect x="539.3" y="565" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="542.25" y="575.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (6,006,006 samples, 0.04%)</title><rect x="497.5" y="517" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="500.51" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,004,004 samples, 0.02%)</title><rect x="373.4" y="517" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="376.42" y="527.5" ></text>
</g>
<g >
<title>malloc (3,003,003 samples, 0.02%)</title><rect x="486.9" y="517" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="489.88" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13,013,013 samples, 0.08%)</title><rect x="26.5" y="325" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.47" y="335.5" ></text>
</g>
<g >
<title>sim::Switch::process (23,023,023 samples, 0.14%)</title><rect x="1112.9" y="581" width="1.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1115.85" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,009,009 samples, 0.05%)</title><rect x="10.2" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.21" y="415.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanNextToken (7,007,007 samples, 0.04%)</title><rect x="1181.8" y="421" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1184.76" y="431.5" ></text>
</g>
<g >
<title>vsnprintf (78,078,078 samples, 0.47%)</title><rect x="36.9" y="517" width="5.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="39.89" y="527.5" ></text>
</g>
<g >
<title>malloc (7,007,007 samples, 0.04%)</title><rect x="343.9" y="533" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="346.85" y="543.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (41,041,041 samples, 0.24%)</title><rect x="1185.4" y="437" width="2.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1188.42" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,002,002 samples, 0.01%)</title><rect x="350.7" y="165" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="353.68" y="175.5" ></text>
</g>
<g >
<title>operator delete (59,059,059 samples, 0.35%)</title><rect x="417.0" y="565" width="4.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="419.99" y="575.5" ></text>
</g>
<g >
<title>cfree (8,008,008 samples, 0.05%)</title><rect x="1120.3" y="581" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1123.31" y="591.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (4,004,004 samples, 0.02%)</title><rect x="486.0" y="533" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="489.04" y="543.5" ></text>
</g>
<g >
<title>malloc (2,002,002 samples, 0.01%)</title><rect x="1101.1" y="517" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1104.10" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (64,064,064 samples, 0.38%)</title><rect x="350.8" y="517" width="4.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="353.82" y="527.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (17,017,017 samples, 0.10%)</title><rect x="366.5" y="517" width="1.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="369.52" y="527.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (6,006,006 samples, 0.04%)</title><rect x="487.1" y="517" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="490.10" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="1185.9" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.92" y="207.5" ></text>
</g>
<g >
<title>cfree (801,801,801 samples, 4.78%)</title><rect x="269.1" y="581" width="56.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="272.10" y="591.5" >cfree</text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="498.0" y="421" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="501.01" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17,017,017 samples, 0.10%)</title><rect x="1172.5" y="469" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.54" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="590.1" y="501" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="593.15" y="511.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (9,009,009 samples, 0.05%)</title><rect x="339.5" y="485" width="0.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="342.49" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (17,017,017 samples, 0.10%)</title><rect x="502.9" y="549" width="1.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="505.93" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="1164.7" y="309" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1167.66" y="319.5" ></text>
</g>
<g >
<title>malloc (325,325,325 samples, 1.94%)</title><rect x="1056.1" y="533" width="22.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1059.12" y="543.5" >m..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="32.7" y="181" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.74" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="45.3" y="421" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.34" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (63,063,063 samples, 0.38%)</title><rect x="28.5" y="293" width="4.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.51" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="590.1" y="517" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="593.15" y="527.5" ></text>
</g>
<g >
<title>YAML::detail::memory::create_node (11,011,011 samples, 0.07%)</title><rect x="1185.5" y="389" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1188.50" y="399.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (96,096,096 samples, 0.57%)</title><rect x="1181.6" y="501" width="6.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1184.55" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (2,002,002 samples, 0.01%)</title><rect x="1146.1" y="549" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1149.08" y="559.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (5,005,005 samples, 0.03%)</title><rect x="495.1" y="501" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="498.12" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,002,002 samples, 0.01%)</title><rect x="350.7" y="405" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="353.68" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="1140.6" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1143.59" y="383.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (5,005,005 samples, 0.03%)</title><rect x="357.9" y="517" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="360.93" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="25.9" y="453" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="28.91" y="463.5" ></text>
</g>
<g >
<title>cfree (13,013,013 samples, 0.08%)</title><rect x="11.5" y="517" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="14.55" y="527.5" ></text>
</g>
<g >
<title>malloc (43,043,043 samples, 0.26%)</title><rect x="1171.3" y="533" width="3.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1174.28" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,015,015 samples, 0.09%)</title><rect x="26.3" y="373" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.33" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; sim::parse_object&lt;sim::TcpFlow&gt; (3,003,003 samples, 0.02%)</title><rect x="1189.2" y="581" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1192.16" y="591.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (74,074,074 samples, 0.44%)</title><rect x="486.6" y="549" width="5.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="489.60" y="559.5" ></text>
</g>
<g >
<title>YAML::Parser::HandleNextDocument (96,096,096 samples, 0.57%)</title><rect x="1181.6" y="565" width="6.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1184.55" y="575.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (2,002,002 samples, 0.01%)</title><rect x="1100.0" y="549" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1102.97" y="559.5" ></text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks (2,002,002 samples, 0.01%)</title><rect x="1106.6" y="517" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1109.59" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="1140.7" y="325" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1143.66" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="1162.9" y="533" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1165.90" y="543.5" ></text>
</g>
<g >
<title>writev (3,003,003 samples, 0.02%)</title><rect x="44.8" y="517" width="0.2" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="47.77" y="527.5" ></text>
</g>
<g >
<title>cfree (3,003,003 samples, 0.02%)</title><rect x="1100.8" y="533" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1103.82" y="543.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (6,006,006 samples, 0.04%)</title><rect x="855.0" y="517" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="858.02" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="25.9" y="469" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="28.91" y="479.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (71,071,071 samples, 0.42%)</title><rect x="350.3" y="533" width="5.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="353.33" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,012,012 samples, 0.07%)</title><rect x="10.0" y="469" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,007,007 samples, 0.04%)</title><rect x="10.4" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.35" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,005,005 samples, 0.03%)</title><rect x="349.4" y="469" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="352.42" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,009,009 samples, 0.05%)</title><rect x="10.2" y="421" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.21" y="431.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (3,003,003 samples, 0.02%)</title><rect x="44.8" y="533" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="47.77" y="543.5" ></text>
</g>
<g >
<title>sim::Process::operator (10,006,005,996 samples, 59.63%)</title><rect x="375.4" y="581" width="703.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="378.39" y="591.5" >sim::Process::operator</text>
</g>
<g >
<title>[libc.so.6] (4,004,004 samples, 0.02%)</title><rect x="805.3" y="469" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="808.25" y="479.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (5,005,005 samples, 0.03%)</title><rect x="340.5" y="517" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="343.48" y="527.5" ></text>
</g>
<g >
<title>__close_nocancel (4,004,004 samples, 0.02%)</title><rect x="25.9" y="517" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="28.91" y="527.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (3,003,003 samples, 0.02%)</title><rect x="363.6" y="533" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="366.63" y="543.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::memory*,  (8,008,008 samples, 0.05%)</title><rect x="1188.4" y="533" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1191.38" y="543.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (2,002,002 samples, 0.01%)</title><rect x="490.1" y="517" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="493.05" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="1185.9" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.92" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="10.6" y="357" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.63" y="367.5" ></text>
</g>
<g >
<title>cfree (2,002,002 samples, 0.01%)</title><rect x="806.9" y="533" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="809.94" y="543.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (5,005,005 samples, 0.03%)</title><rect x="1186.6" y="357" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.55" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,012,012 samples, 0.07%)</title><rect x="10.0" y="677" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="1129.3" y="389" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.32" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,003,003 samples, 0.02%)</title><rect x="498.0" y="469" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="501.01" y="479.5" ></text>
</g>
<g >
<title>sim::Switch::process (5,712,712,707 samples, 34.04%)</title><rect x="539.8" y="565" width="401.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="542.82" y="575.5" >sim::Switch::process</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_erase (14,014,014 samples, 0.08%)</title><rect x="1154.1" y="565" width="1.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1157.10" y="575.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (24,024,024 samples, 0.14%)</title><rect x="43.4" y="565" width="1.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="46.36" y="575.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (34,034,034 samples, 0.20%)</title><rect x="1164.9" y="549" width="2.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1167.94" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="1129.5" y="277" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.47" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,008,008 samples, 0.05%)</title><rect x="349.2" y="501" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="352.20" y="511.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (137,137,137 samples, 0.82%)</title><rect x="529.6" y="565" width="9.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="532.61" y="575.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,009,009 samples, 0.05%)</title><rect x="1125.0" y="501" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1128.03" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,002,002 samples, 0.01%)</title><rect x="811.8" y="501" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="814.80" y="511.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (3,003,003 samples, 0.02%)</title><rect x="339.3" y="485" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="342.28" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="498.1" y="341" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="501.08" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (87,087,087 samples, 0.52%)</title><rect x="12.5" y="517" width="6.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.46" y="527.5" ></text>
</g>
<g >
<title>YAML::LoadFile (96,096,096 samples, 0.57%)</title><rect x="1181.6" y="597" width="6.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1184.55" y="607.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::export_to_file (282,282,282 samples, 1.68%)</title><rect x="25.7" y="581" width="19.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="28.70" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="498.0" y="453" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="501.01" y="463.5" ></text>
</g>
<g >
<title>operator new (329,329,329 samples, 1.96%)</title><rect x="780.0" y="533" width="23.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="782.98" y="543.5" >o..</text>
</g>
<g >
<title>[libc.so.6] (41,041,041 samples, 0.24%)</title><rect x="1130.4" y="485" width="2.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1133.38" y="495.5" ></text>
</g>
<g >
<title>sim::Link::transmit (53,053,053 samples, 0.32%)</title><rect x="371.4" y="565" width="3.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="374.45" y="575.5" ></text>
</g>
<g >
<title>cfree (4,004,004 samples, 0.02%)</title><rect x="1156.7" y="549" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1159.71" y="559.5" ></text>
</g>
<g >
<title>YAML::detail::node::equals (2,002,002 samples, 0.01%)</title><rect x="1189.7" y="533" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1192.72" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="45.3" y="437" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.26" y="447.5" ></text>
</g>
<g >
<title>operator new (3,003,003 samples, 0.02%)</title><rect x="498.0" y="501" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="501.01" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="44.8" y="501" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="47.77" y="511.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (6,006,006 samples, 0.04%)</title><rect x="1186.5" y="373" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.48" y="383.5" ></text>
</g>
<g >
<title>sim::BaseHasher::get_hash (7,007,007 samples, 0.04%)</title><rect x="1097.4" y="517" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1100.37" y="527.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (16,016,016 samples, 0.10%)</title><rect x="337.7" y="501" width="1.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="340.66" y="511.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (3,003,003 samples, 0.02%)</title><rect x="338.8" y="501" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="341.79" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,003,003 samples, 0.02%)</title><rect x="25.2" y="501" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.20" y="511.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (2,002,002 samples, 0.01%)</title><rect x="35.0" y="565" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="37.99" y="575.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;sim::IHost,  (4,004,004 samples, 0.02%)</title><rect x="504.6" y="549" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="507.62" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,007,007 samples, 0.04%)</title><rect x="1175.6" y="549" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1178.57" y="559.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (7,007,007 samples, 0.04%)</title><rect x="803.7" y="533" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="806.71" y="543.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (48,048,048 samples, 0.29%)</title><rect x="1102.6" y="533" width="3.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1105.58" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,008,008 samples, 0.05%)</title><rect x="1143.3" y="437" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.26" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,008,008 samples, 0.05%)</title><rect x="1129.0" y="469" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.04" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (5,005,005 samples, 0.03%)</title><rect x="338.4" y="469" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="341.36" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; sim::parse_object&lt;sim::Link&gt; (3,003,003 samples, 0.02%)</title><rect x="1189.7" y="565" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1192.72" y="575.5" ></text>
</g>
<g >
<title>operator new (6,006,006 samples, 0.04%)</title><rect x="356.8" y="533" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="359.81" y="543.5" ></text>
</g>
<g >
<title>operator delete (63,063,063 samples, 0.38%)</title><rect x="647.2" y="549" width="4.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="650.23" y="559.5" ></text>
</g>
<g >
<title>memcpy@plt (2,002,002 samples, 0.01%)</title><rect x="1123.6" y="549" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1126.62" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (67,067,067 samples, 0.40%)</title><rect x="28.2" y="309" width="4.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.23" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="1129.5" y="325" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.47" y="335.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (11,011,011 samples, 0.07%)</title><rect x="1184.3" y="341" width="0.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1187.30" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="25.9" y="485" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="28.91" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="1140.6" y="437" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1143.59" y="447.5" ></text>
</g>
<g >
<title>malloc (5,005,005 samples, 0.03%)</title><rect x="373.3" y="533" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="376.35" y="543.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (2,002,002 samples, 0.01%)</title><rect x="1182.3" y="373" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1185.26" y="383.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_insert_unique&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; const&amp;&gt; (98,098,098 samples, 0.58%)</title><rect x="1167.4" y="565" width="6.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1170.41" y="575.5" ></text>
</g>
<g >
<title>operator new (10,010,010 samples, 0.06%)</title><rect x="1125.0" y="533" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1127.96" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (76,076,076 samples, 0.45%)</title><rect x="27.6" y="357" width="5.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="30.60" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,002,002 samples, 0.01%)</title><rect x="350.7" y="341" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="353.68" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,009,009 samples, 0.05%)</title><rect x="26.8" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.75" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,002,002 samples, 0.01%)</title><rect x="486.2" y="501" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="489.18" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,002,002 samples, 0.01%)</title><rect x="350.7" y="245" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="353.68" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,015,015 samples, 0.09%)</title><rect x="26.3" y="389" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.33" y="399.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (4,004,004 samples, 0.02%)</title><rect x="806.0" y="533" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="809.03" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="498.0" y="389" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="501.01" y="399.5" ></text>
</g>
<g >
<title>cfree (7,007,007 samples, 0.04%)</title><rect x="356.3" y="533" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="359.31" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="715.8" y="485" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="718.79" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,002,002 samples, 0.01%)</title><rect x="350.7" y="229" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="353.68" y="239.5" ></text>
</g>
<g >
<title>sim::Generate::operator (189,189,189 samples, 1.13%)</title><rect x="331.0" y="581" width="13.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="334.04" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13,013,013 samples, 0.08%)</title><rect x="26.5" y="309" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.47" y="319.5" ></text>
</g>
<g >
<title>cfree (2,002,002 samples, 0.01%)</title><rect x="25.5" y="581" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="28.49" y="591.5" ></text>
</g>
<g >
<title>malloc (3,003,003 samples, 0.02%)</title><rect x="498.0" y="485" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="501.01" y="495.5" ></text>
</g>
<g >
<title>bool std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (2,002,002 samples, 0.01%)</title><rect x="350.7" y="517" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="353.68" y="527.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (17,017,017 samples, 0.10%)</title><rect x="26.2" y="549" width="1.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="29.19" y="559.5" ></text>
</g>
<g >
<title>cfree (4,004,004 samples, 0.02%)</title><rect x="374.9" y="533" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="377.90" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="44.8" y="485" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="47.77" y="495.5" ></text>
</g>
<g >
<title>operator new (2,002,002 samples, 0.01%)</title><rect x="809.3" y="485" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="812.34" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (184,184,184 samples, 1.10%)</title><rect x="12.5" y="565" width="12.9" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="15.46" y="575.5" ></text>
</g>
<g >
<title>YAML::Stream::_ReadAheadTo (2,002,002 samples, 0.01%)</title><rect x="1187.5" y="325" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1190.54" y="335.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (9,009,009 samples, 0.05%)</title><rect x="492.5" y="549" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="495.52" y="559.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::memory_holder*,  (8,008,008 samples, 0.05%)</title><rect x="1188.4" y="565" width="0.5" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1191.38" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="1164.7" y="293" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1167.73" y="303.5" ></text>
</g>
<g >
<title>sim::Host::get_link_to_destination (155,155,155 samples, 0.92%)</title><rect x="1087.7" y="549" width="10.9" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="1090.72" y="559.5" ></text>
</g>
<g >
<title>sim::Link::get_to (5,005,005 samples, 0.03%)</title><rect x="1134.4" y="549" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1137.39" y="559.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (2,002,002 samples, 0.01%)</title><rect x="1182.3" y="325" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1185.26" y="335.5" ></text>
</g>
<g >
<title>malloc (58,058,058 samples, 0.35%)</title><rect x="642.5" y="549" width="4.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="645.51" y="559.5" ></text>
</g>
<g >
<title>non-virtual thunk to sim::Switch::process (79,079,079 samples, 0.47%)</title><rect x="325.5" y="581" width="5.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="328.48" y="591.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (3,003,003 samples, 0.02%)</title><rect x="1109.8" y="501" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1112.83" y="511.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (41,041,041 samples, 0.24%)</title><rect x="1182.5" y="437" width="2.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1185.54" y="447.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (2,002,002 samples, 0.01%)</title><rect x="495.2" y="485" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="498.19" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="1131.5" y="373" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1134.51" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,002,002 samples, 0.01%)</title><rect x="1185.1" y="325" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1188.14" y="335.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,010,010 samples, 0.06%)</title><rect x="487.1" y="533" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="490.10" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="500.7" y="421" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="503.68" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,012,012 samples, 0.07%)</title><rect x="10.0" y="485" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (2,002,002 samples, 0.01%)</title><rect x="1188.0" y="261" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.03" y="271.5" ></text>
</g>
<g >
<title>sim::Link::arrive (353,353,353 samples, 2.11%)</title><rect x="345.1" y="565" width="24.9" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="348.12" y="575.5" >s..</text>
</g>
<g >
<title>sim::Link::Transmit::operator (74,074,074 samples, 0.44%)</title><rect x="370.2" y="581" width="5.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="373.18" y="591.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (75,075,075 samples, 0.45%)</title><rect x="358.4" y="533" width="5.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="361.35" y="543.5" ></text>
</g>
<g >
<title>operator new (3,003,003 samples, 0.02%)</title><rect x="338.4" y="437" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="341.43" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,004,004 samples, 0.02%)</title><rect x="1150.1" y="485" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1153.09" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (361,361,361 samples, 2.15%)</title><rect x="300.1" y="565" width="25.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="303.07" y="575.5" >[..</text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (3,003,003 samples, 0.02%)</title><rect x="1188.0" y="309" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.96" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="1140.6" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1143.59" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,004,004 samples, 0.02%)</title><rect x="485.0" y="549" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="487.98" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="45.4" y="357" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.41" y="367.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (3,003,003 samples, 0.02%)</title><rect x="375.2" y="565" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="378.18" y="575.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,002,002 samples, 0.01%)</title><rect x="1086.0" y="549" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1089.04" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="42.7" y="501" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="45.73" y="511.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (3,003,003 samples, 0.02%)</title><rect x="337.3" y="485" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="340.31" y="495.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (9,009,009 samples, 0.05%)</title><rect x="336.1" y="517" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="339.11" y="527.5" ></text>
</g>
<g >
<title>malloc (2,002,002 samples, 0.01%)</title><rect x="489.8" y="453" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="492.77" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="1131.4" y="453" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1134.44" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,006,006 samples, 0.04%)</title><rect x="360.0" y="517" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="362.97" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,014,014 samples, 0.08%)</title><rect x="26.4" y="357" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.40" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="45.3" y="405" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.34" y="415.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, unsigned int, std::weak_ptr&lt;sim::IProcessingDevice&gt;&amp;&gt; (1,953,953,952 samples, 11.64%)</title><rect x="941.6" y="565" width="137.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="944.60" y="575.5" >void sim::Schedul..</text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (19,019,019 samples, 0.11%)</title><rect x="1183.7" y="357" width="1.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1186.74" y="367.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (146,146,146 samples, 0.87%)</title><rect x="1100.1" y="549" width="10.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1103.11" y="559.5" ></text>
</g>
<g >
<title>sim::Process::~Process (143,143,143 samples, 0.85%)</title><rect x="138.7" y="597" width="10.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="141.74" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="44.8" y="405" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="47.77" y="415.5" ></text>
</g>
<g >
<title>sim::BaseHasher::get_hash (13,013,013 samples, 0.08%)</title><rect x="854.1" y="517" width="0.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="857.10" y="527.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (2,002,002 samples, 0.01%)</title><rect x="347.2" y="549" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="350.23" y="559.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::~MetricsCollector (2,002,002 samples, 0.01%)</title><rect x="25.5" y="597" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="28.49" y="607.5" ></text>
</g>
<g >
<title>operator new (3,003,003 samples, 0.02%)</title><rect x="500.6" y="501" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="503.61" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (209,209,209 samples, 1.25%)</title><rect x="10.9" y="613" width="14.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.92" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (10,010,010 samples, 0.06%)</title><rect x="1150.4" y="533" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1153.37" y="543.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (4,004,004 samples, 0.02%)</title><rect x="364.2" y="533" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="367.20" y="543.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (4,004,004 samples, 0.02%)</title><rect x="339.8" y="469" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="342.84" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (49,049,049 samples, 0.29%)</title><rect x="1129.8" y="533" width="3.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1132.82" y="543.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (18,018,018 samples, 0.11%)</title><rect x="1186.9" y="373" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1189.90" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="498.0" y="373" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="501.01" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="44.8" y="325" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="47.84" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,006,006 samples, 0.04%)</title><rect x="1120.5" y="565" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1123.46" y="575.5" ></text>
</g>
<g >
<title>operator new (3,003,003 samples, 0.02%)</title><rect x="368.4" y="517" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="371.42" y="527.5" ></text>
</g>
<g >
<title>operator new (30,030,030 samples, 0.18%)</title><rect x="1127.7" y="533" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1130.71" y="543.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3,003,003 samples, 0.02%)</title><rect x="1098.4" y="533" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1101.35" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,002,002 samples, 0.01%)</title><rect x="350.7" y="149" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="353.68" y="159.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (6,006,006 samples, 0.04%)</title><rect x="855.4" y="533" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="858.44" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (1,210,210,209 samples, 7.21%)</title><rect x="856.0" y="549" width="85.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="859.00" y="559.5" >std::_Rb_t..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (19,019,019 samples, 0.11%)</title><rect x="1142.5" y="501" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1145.49" y="511.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (5,005,005 samples, 0.03%)</title><rect x="1101.3" y="517" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1104.31" y="527.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (2,002,002 samples, 0.01%)</title><rect x="1106.6" y="533" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1109.59" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="350.0" y="373" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="352.98" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,003,003 samples, 0.02%)</title><rect x="1103.8" y="517" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1106.77" y="527.5" ></text>
</g>
<g >
<title>YAML::Stream::get (3,003,003 samples, 0.02%)</title><rect x="1181.8" y="373" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1184.83" y="383.5" ></text>
</g>
<g >
<title>malloc (3,003,003 samples, 0.02%)</title><rect x="368.4" y="501" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="371.42" y="511.5" ></text>
</g>
<g >
<title>cfree (3,003,003 samples, 0.02%)</title><rect x="1154.7" y="549" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1157.74" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="1186.0" y="117" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.99" y="127.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (10,010,010 samples, 0.06%)</title><rect x="1181.8" y="453" width="0.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1184.76" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (25,025,025 samples, 0.15%)</title><rect x="1174.3" y="581" width="1.8" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1177.30" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,010,010 samples, 0.06%)</title><rect x="1173.0" y="421" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1176.04" y="431.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (19,019,019 samples, 0.11%)</title><rect x="1101.2" y="533" width="1.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1104.24" y="543.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (5,005,005 samples, 0.03%)</title><rect x="805.2" y="517" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="808.18" y="527.5" ></text>
</g>
<g >
<title>sim::Host::send_packet (389,389,389 samples, 2.32%)</title><rect x="1085.3" y="565" width="27.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1088.33" y="575.5" >s..</text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (2,002,002 samples, 0.01%)</title><rect x="367.5" y="501" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="370.51" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (2,002,002 samples, 0.01%)</title><rect x="1105.0" y="485" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1108.04" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="1127.3" y="485" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1130.28" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="498.0" y="437" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="501.01" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,007,007 samples, 0.04%)</title><rect x="1185.7" y="293" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.71" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (597,597,597 samples, 3.56%)</title><rect x="734.6" y="517" width="42.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="737.58" y="527.5" >[li..</text>
</g>
<g >
<title>std::_Rb_tree_increment (2,002,002 samples, 0.01%)</title><rect x="855.9" y="533" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="858.86" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (11,011,011 samples, 0.07%)</title><rect x="11.7" y="501" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.69" y="511.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (41,041,041 samples, 0.24%)</title><rect x="1182.5" y="421" width="2.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1185.54" y="431.5" ></text>
</g>
<g >
<title>sim::Link::get_max_to_ingress_queue_size (89,089,089 samples, 0.53%)</title><rect x="505.1" y="565" width="6.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="508.12" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,002,002 samples, 0.01%)</title><rect x="350.7" y="485" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="353.68" y="495.5" ></text>
</g>
<g >
<title>sim::Link::get_to (2,002,002 samples, 0.01%)</title><rect x="1135.0" y="581" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1138.03" y="591.5" ></text>
</g>
<g >
<title>sim::Host::notify_about_arrival (13,013,013 samples, 0.08%)</title><rect x="347.4" y="549" width="0.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="350.37" y="559.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (29,029,029 samples, 0.17%)</title><rect x="1110.7" y="549" width="2.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1113.67" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (65,065,065 samples, 0.39%)</title><rect x="37.7" y="485" width="4.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="40.73" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,002,002 samples, 0.01%)</title><rect x="350.7" y="325" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="353.68" y="335.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (3,003,003 samples, 0.02%)</title><rect x="1182.3" y="421" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1185.26" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="1131.4" y="421" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1134.44" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,070,070 samples, 0.42%)</title><rect x="28.0" y="325" width="4.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.02" y="335.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_links (8,008,008 samples, 0.05%)</title><rect x="1189.4" y="597" width="0.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1192.37" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (77,077,077 samples, 0.46%)</title><rect x="27.5" y="421" width="5.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="30.53" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (8,008,008 samples, 0.05%)</title><rect x="349.8" y="485" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="352.77" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13,013,013 samples, 0.08%)</title><rect x="26.5" y="341" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.47" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,010,010 samples, 0.06%)</title><rect x="361.9" y="485" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="364.94" y="495.5" ></text>
</g>
<g >
<title>malloc (6,006,006 samples, 0.04%)</title><rect x="1181.1" y="549" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1184.06" y="559.5" ></text>
</g>
<g >
<title>brk (4,004,004 samples, 0.02%)</title><rect x="1140.6" y="517" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1143.59" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,002,002 samples, 0.01%)</title><rect x="350.7" y="357" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="353.68" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="44.8" y="469" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="47.77" y="479.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (22,022,022 samples, 0.13%)</title><rect x="810.5" y="533" width="1.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="813.53" y="543.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (2,002,002 samples, 0.01%)</title><rect x="337.5" y="485" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="340.52" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (4,004,004 samples, 0.02%)</title><rect x="369.4" y="549" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="372.41" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="1143.5" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.54" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="10.6" y="373" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.56" y="383.5" ></text>
</g>
<g >
<title>malloc (4,004,004 samples, 0.02%)</title><rect x="805.3" y="485" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="808.25" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="45.3" y="389" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.34" y="399.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (7,007,007 samples, 0.04%)</title><rect x="374.7" y="549" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="377.69" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="1140.6" y="453" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1143.59" y="463.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (11,011,011 samples, 0.07%)</title><rect x="1101.7" y="517" width="0.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1104.66" y="527.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (10,010,010 samples, 0.06%)</title><rect x="357.2" y="517" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="360.23" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="1131.5" y="357" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1134.51" y="367.5" ></text>
</g>
<g >
<title>operator new (65,065,065 samples, 0.39%)</title><rect x="421.1" y="565" width="4.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="424.14" y="575.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (3,003,003 samples, 0.02%)</title><rect x="128.4" y="597" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="131.39" y="607.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (2,002,002 samples, 0.01%)</title><rect x="490.3" y="533" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="493.26" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="349.5" y="421" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="352.49" y="431.5" ></text>
</g>
<g >
<title>malloc (3,003,003 samples, 0.02%)</title><rect x="500.6" y="485" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="503.61" y="495.5" ></text>
</g>
<g >
<title>operator new (2,002,002 samples, 0.01%)</title><rect x="494.6" y="517" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="497.63" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="498.0" y="357" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="501.01" y="367.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (15,015,015 samples, 0.09%)</title><rect x="500.8" y="517" width="1.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="503.82" y="527.5" ></text>
</g>
<g >
<title>operator new (6,006,006 samples, 0.04%)</title><rect x="362.2" y="469" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="365.23" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="42.7" y="485" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="45.73" y="495.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (17,017,017 samples, 0.10%)</title><rect x="26.2" y="517" width="1.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="29.19" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,002,002 samples, 0.01%)</title><rect x="350.7" y="293" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="353.68" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,005,005 samples, 0.03%)</title><rect x="803.8" y="501" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="806.85" y="511.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (510,510,510 samples, 3.04%)</title><rect x="812.3" y="549" width="35.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="815.29" y="559.5" >sim..</text>
</g>
<g >
<title>YAML::Scanner::ScanNextToken (9,009,009 samples, 0.05%)</title><rect x="1186.3" y="389" width="0.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1189.27" y="399.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2,002,002 samples, 0.01%)</title><rect x="808.0" y="517" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="811.00" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,002,002 samples, 0.01%)</title><rect x="25.5" y="565" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.49" y="575.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,006,006 samples, 0.04%)</title><rect x="1181.1" y="517" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1184.06" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="44.8" y="421" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="47.77" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,002,002 samples, 0.01%)</title><rect x="350.7" y="53" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="353.68" y="63.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,007,007 samples, 0.04%)</title><rect x="690.4" y="517" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="693.38" y="527.5" ></text>
</g>
<g >
<title>malloc (30,030,030 samples, 0.18%)</title><rect x="1127.7" y="517" width="2.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1130.71" y="527.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (117,117,117 samples, 0.70%)</title><rect x="35.1" y="565" width="8.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="38.13" y="575.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,004,004 samples, 0.02%)</title><rect x="491.5" y="501" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="494.46" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,014,014 samples, 0.08%)</title><rect x="1164.0" y="469" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1166.96" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,002,002 samples, 0.01%)</title><rect x="350.7" y="69" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="353.68" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="1127.4" y="469" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1130.35" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="500.7" y="373" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="503.68" y="383.5" ></text>
</g>
<g >
<title>operator new (45,045,045 samples, 0.27%)</title><rect x="1171.1" y="549" width="3.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1174.14" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="500.7" y="437" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="503.68" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17,017,017 samples, 0.10%)</title><rect x="1172.5" y="501" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.54" y="511.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (17,017,017 samples, 0.10%)</title><rect x="488.9" y="517" width="1.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="491.86" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (61,061,061 samples, 0.36%)</title><rect x="28.7" y="277" width="4.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.65" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="1131.5" y="389" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1134.51" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (7,007,007 samples, 0.04%)</title><rect x="809.1" y="501" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="812.13" y="511.5" ></text>
</g>
<g >
<title>cfree (87,087,087 samples, 0.52%)</title><rect x="12.5" y="533" width="6.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="15.46" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="27.1" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="30.10" y="239.5" ></text>
</g>
<g >
<title>malloc (21,021,021 samples, 0.13%)</title><rect x="1148.9" y="517" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1151.89" y="527.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (5,005,005 samples, 0.03%)</title><rect x="1097.5" y="501" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1100.51" y="511.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (3,003,003 samples, 0.02%)</title><rect x="941.2" y="549" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="944.18" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (28,028,028 samples, 0.17%)</title><rect x="1165.4" y="501" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1168.36" y="511.5" ></text>
</g>
<g >
<title>operator new (8,008,008 samples, 0.05%)</title><rect x="349.8" y="517" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="352.77" y="527.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (13,013,013 samples, 0.08%)</title><rect x="1099.1" y="549" width="0.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1102.06" y="559.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (81,081,081 samples, 0.48%)</title><rect x="36.7" y="533" width="5.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="39.68" y="543.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3,003,003 samples, 0.02%)</title><rect x="341.3" y="501" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="344.25" y="511.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (8,008,008 samples, 0.05%)</title><rect x="803.1" y="533" width="0.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="806.14" y="543.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (49,049,049 samples, 0.29%)</title><rect x="336.7" y="517" width="3.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="339.75" y="527.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (2,002,002 samples, 0.01%)</title><rect x="811.9" y="501" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="814.94" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,002,002 samples, 0.01%)</title><rect x="325.3" y="549" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="328.34" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (25,025,025 samples, 0.15%)</title><rect x="267.3" y="581" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="270.34" y="591.5" ></text>
</g>
<g >
<title>operator new (3,003,003 samples, 0.02%)</title><rect x="347.0" y="549" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="350.02" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,012,012 samples, 0.07%)</title><rect x="10.0" y="533" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>cfree (7,007,007 samples, 0.04%)</title><rect x="416.4" y="565" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="419.43" y="575.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (6,006,006 samples, 0.04%)</title><rect x="1105.5" y="517" width="0.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1108.53" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (12,012,012 samples, 0.07%)</title><rect x="1104.7" y="501" width="0.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1107.69" y="511.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnMapStart (2,002,002 samples, 0.01%)</title><rect x="1181.6" y="453" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1184.55" y="463.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (4,004,004 samples, 0.02%)</title><rect x="497.9" y="517" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="500.94" y="527.5" ></text>
</g>
<g >
<title>fopen (78,078,078 samples, 0.47%)</title><rect x="27.5" y="533" width="5.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="30.46" y="543.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,010,010 samples, 0.06%)</title><rect x="44.3" y="549" width="0.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="47.35" y="559.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (233,233,233 samples, 1.39%)</title><rect x="468.0" y="565" width="16.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="471.02" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="1185.9" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.92" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="1129.5" y="309" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.47" y="319.5" ></text>
</g>
<g >
<title>sim::Event::Event (28,028,028 samples, 0.17%)</title><rect x="425.8" y="565" width="2.0" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="428.79" y="575.5" ></text>
</g>
<g >
<title>fclose (4,004,004 samples, 0.02%)</title><rect x="25.9" y="533" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="28.91" y="543.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (2,002,002 samples, 0.01%)</title><rect x="34.8" y="565" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="37.85" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,008,008 samples, 0.05%)</title><rect x="349.2" y="485" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="352.20" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16,016,016 samples, 0.10%)</title><rect x="26.3" y="405" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.26" y="415.5" ></text>
</g>
<g >
<title>malloc (3,003,003 samples, 0.02%)</title><rect x="338.4" y="421" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="341.43" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,012,012 samples, 0.07%)</title><rect x="10.0" y="597" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (5,005,005 samples, 0.03%)</title><rect x="496.1" y="485" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="499.11" y="495.5" ></text>
</g>
<g >
<title>operator new (4,004,004 samples, 0.02%)</title><rect x="805.3" y="501" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="808.25" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (36,036,036 samples, 0.21%)</title><rect x="30.4" y="229" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="33.41" y="239.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (28,028,028 samples, 0.17%)</title><rect x="1186.3" y="405" width="1.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1189.27" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (77,077,077 samples, 0.46%)</title><rect x="27.5" y="389" width="5.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="30.53" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::weak_ptr&lt;sim::ILink&gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (12,012,012 samples, 0.07%)</title><rect x="1124.8" y="549" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1127.82" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,006,006 samples, 0.04%)</title><rect x="1181.1" y="533" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1184.06" y="543.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (6,006,006 samples, 0.04%)</title><rect x="1098.6" y="549" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1101.64" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="1185.9" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.92" y="159.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_id[abi:cxx11] (4,004,004 samples, 0.02%)</title><rect x="342.4" y="501" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="345.45" y="511.5" ></text>
</g>
<g >
<title>std::locale::operator= (2,002,002 samples, 0.01%)</title><rect x="1102.3" y="501" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1105.30" y="511.5" ></text>
</g>
<g >
<title>malloc (6,006,006 samples, 0.04%)</title><rect x="356.8" y="517" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="359.81" y="527.5" ></text>
</g>
<g >
<title>operator new (2,002,002 samples, 0.01%)</title><rect x="807.1" y="533" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="810.08" y="543.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (4,004,004 samples, 0.02%)</title><rect x="1182.7" y="373" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1185.68" y="383.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (24,024,024 samples, 0.14%)</title><rect x="808.2" y="533" width="1.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="811.21" y="543.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (2,002,002 samples, 0.01%)</title><rect x="1182.3" y="389" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1185.26" y="399.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (37,037,037 samples, 0.22%)</title><rect x="494.8" y="517" width="2.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="497.77" y="527.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (2,002,002 samples, 0.01%)</title><rect x="370.0" y="565" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="373.04" y="575.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,002,002 samples, 0.01%)</title><rect x="346.3" y="549" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="349.32" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (8,008,008 samples, 0.05%)</title><rect x="1185.7" y="341" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1188.71" y="351.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (82,082,082 samples, 0.49%)</title><rect x="335.7" y="533" width="5.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="338.69" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (7,007,007 samples, 0.04%)</title><rect x="504.1" y="549" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="507.13" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,006,006 samples, 0.04%)</title><rect x="367.0" y="501" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="370.01" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,005,005 samples, 0.03%)</title><rect x="32.6" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.59" y="207.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnScalar (11,011,011 samples, 0.07%)</title><rect x="1185.5" y="421" width="0.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1188.50" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,012,012 samples, 0.07%)</title><rect x="10.0" y="565" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>[libc.so.6] (26,026,026 samples, 0.16%)</title><rect x="1163.1" y="517" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1166.11" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,008,008 samples, 0.05%)</title><rect x="1129.0" y="485" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.04" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,004,004 samples, 0.02%)</title><rect x="1127.2" y="533" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1130.21" y="543.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (21,021,021 samples, 0.13%)</title><rect x="1104.1" y="517" width="1.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1107.06" y="527.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (2,002,002 samples, 0.01%)</title><rect x="1188.0" y="277" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.03" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (7,007,007 samples, 0.04%)</title><rect x="1124.1" y="549" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1127.12" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="1131.4" y="469" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1134.44" y="479.5" ></text>
</g>
<g >
<title>sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow, sim::Link&gt;::start (16,149,149,133 samples, 96.24%)</title><rect x="46.0" y="613" width="1135.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="48.97" y="623.5" >sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow, sim::Link&gt;::start</text>
</g>
<g >
<title>malloc (9,009,009 samples, 0.05%)</title><rect x="1185.6" y="357" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1188.64" y="367.5" ></text>
</g>
<g >
<title>__libc_start_main (16,767,767,751 samples, 99.92%)</title><rect x="10.9" y="661" width="1179.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.92" y="671.5" >__libc_start_main</text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (34,034,034 samples, 0.20%)</title><rect x="487.8" y="533" width="2.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="490.80" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="350.0" y="453" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="352.98" y="463.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (937,937,937 samples, 5.59%)</title><rect x="62.1" y="597" width="65.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="65.09" y="607.5" >sim::Ev..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="44.8" y="341" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="47.84" y="351.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (5,005,005 samples, 0.03%)</title><rect x="374.3" y="549" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="377.33" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,007,007 samples, 0.04%)</title><rect x="1143.3" y="405" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.33" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17,017,017 samples, 0.10%)</title><rect x="26.2" y="453" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.19" y="463.5" ></text>
</g>
<g >
<title>malloc (2,002,002 samples, 0.01%)</title><rect x="504.5" y="517" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="507.48" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,004,004 samples, 0.02%)</title><rect x="1140.3" y="533" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1143.31" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (11,011,011 samples, 0.07%)</title><rect x="489.3" y="501" width="0.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="492.28" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,003,003 samples, 0.02%)</title><rect x="1129.6" y="485" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1132.61" y="495.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (96,096,096 samples, 0.57%)</title><rect x="1181.6" y="469" width="6.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1184.55" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,012,012 samples, 0.07%)</title><rect x="1164.1" y="421" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1167.10" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (17,017,017 samples, 0.10%)</title><rect x="41.1" y="453" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="44.11" y="463.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (4,004,004 samples, 0.02%)</title><rect x="486.3" y="549" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="489.32" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="715.8" y="469" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="718.79" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="349.6" y="325" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="352.63" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="715.8" y="533" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="718.79" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="349.6" y="357" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="352.63" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,005,005 samples, 0.03%)</title><rect x="1129.3" y="421" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.25" y="431.5" ></text>
</g>
<g >
<title>sim::RoutingModule::update_routing_table (2,002,002 samples, 0.01%)</title><rect x="1135.2" y="581" width="0.1" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1138.17" y="591.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (15,015,015 samples, 0.09%)</title><rect x="339.1" y="501" width="1.0" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="342.07" y="511.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (24,024,024 samples, 0.14%)</title><rect x="1183.4" y="373" width="1.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1186.38" y="383.5" ></text>
</g>
<g >
<title>operator new (6,006,006 samples, 0.04%)</title><rect x="1181.1" y="565" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1184.06" y="575.5" ></text>
</g>
<g >
<title>operator new (367,367,367 samples, 2.19%)</title><rect x="1053.2" y="549" width="25.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1056.16" y="559.5" >o..</text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (7,007,007 samples, 0.04%)</title><rect x="811.6" y="517" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="814.59" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="1164.7" y="341" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1167.66" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,002,002 samples, 0.01%)</title><rect x="350.7" y="501" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="353.68" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (14,014,014 samples, 0.08%)</title><rect x="500.9" y="501" width="1.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="503.89" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="1127.4" y="405" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1130.35" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (46,046,046 samples, 0.27%)</title><rect x="1141.2" y="533" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1144.15" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="1162.9" y="501" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1165.90" y="511.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (2,002,002 samples, 0.01%)</title><rect x="807.2" y="533" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="810.23" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="1131.5" y="325" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1134.51" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,005,005 samples, 0.03%)</title><rect x="45.2" y="517" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.19" y="527.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (170,170,170 samples, 1.01%)</title><rect x="355.8" y="549" width="11.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="358.75" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,012,012 samples, 0.07%)</title><rect x="10.0" y="645" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (365,365,365 samples, 2.18%)</title><rect x="344.5" y="581" width="25.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="347.49" y="591.5" >s..</text>
</g>
<g >
<title>sim::Link::Transmit::operator (2,002,002 samples, 0.01%)</title><rect x="128.6" y="597" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="131.61" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (77,077,077 samples, 0.46%)</title><rect x="27.5" y="405" width="5.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="30.53" y="415.5" ></text>
</g>
<g >
<title>YAML::Stream::_ReadAheadTo (2,002,002 samples, 0.01%)</title><rect x="1183.2" y="357" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1186.24" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="1129.4" y="341" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.40" y="351.5" ></text>
</g>
<g >
<title>sim::Link::get_from (11,011,011 samples, 0.07%)</title><rect x="1146.2" y="565" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1149.22" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="44.8" y="389" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="47.77" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="45.3" y="485" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.26" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (22,022,022 samples, 0.13%)</title><rect x="498.4" y="501" width="1.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="501.43" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,002,002 samples, 0.01%)</title><rect x="350.7" y="213" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="353.68" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,014,014 samples, 0.08%)</title><rect x="1164.0" y="485" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1166.96" y="495.5" ></text>
</g>
<g >
<title>cfree (4,004,004 samples, 0.02%)</title><rect x="494.3" y="517" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="497.28" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="500.7" y="341" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="503.68" y="351.5" ></text>
</g>
<g >
<title>YAML::Scanner::InsertPotentialSimpleKey (4,004,004 samples, 0.02%)</title><rect x="1185.1" y="389" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1188.07" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,002,002 samples, 0.01%)</title><rect x="500.0" y="421" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="502.98" y="431.5" ></text>
</g>
<g >
<title>std::locale::locale (4,004,004 samples, 0.02%)</title><rect x="1102.0" y="501" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1105.01" y="511.5" ></text>
</g>
<g >
<title>Logger::get_instance (41,041,041 samples, 0.24%)</title><rect x="712.9" y="533" width="2.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="715.90" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16,016,016 samples, 0.10%)</title><rect x="26.3" y="421" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.26" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (3,003,003 samples, 0.02%)</title><rect x="1105.2" y="485" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1108.18" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="1127.4" y="421" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1130.35" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,010,010 samples, 0.06%)</title><rect x="1173.0" y="437" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1176.04" y="447.5" ></text>
</g>
<g >
<title>malloc (2,002,002 samples, 0.01%)</title><rect x="500.0" y="453" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="502.98" y="463.5" ></text>
</g>
<g >
<title>malloc (8,008,008 samples, 0.05%)</title><rect x="349.8" y="501" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="352.77" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="498.1" y="325" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="501.08" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="44.8" y="373" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="47.77" y="383.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::node*,  (5,005,005 samples, 0.03%)</title><rect x="1188.6" y="485" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1191.59" y="495.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (2,002,002 samples, 0.01%)</title><rect x="33.0" y="565" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="36.02" y="575.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (3,003,003 samples, 0.02%)</title><rect x="1186.7" y="325" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.69" y="335.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (13,013,013 samples, 0.08%)</title><rect x="367.7" y="549" width="0.9" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="370.72" y="559.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (6,006,006 samples, 0.04%)</title><rect x="338.3" y="485" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="341.29" y="495.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_devices (2,002,002 samples, 0.01%)</title><rect x="1188.9" y="597" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1191.94" y="607.5" ></text>
</g>
<g >
<title>[libc.so.6] (554,554,554 samples, 3.30%)</title><rect x="603.5" y="533" width="39.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="606.52" y="543.5" >[li..</text>
</g>
<g >
<title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (3,003,003 samples, 0.02%)</title><rect x="34.4" y="549" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="37.42" y="559.5" ></text>
</g>
<g >
<title>__uselocale (3,003,003 samples, 0.02%)</title><rect x="42.4" y="533" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="45.38" y="543.5" ></text>
</g>
<g >
<title>cfree (7,007,007 samples, 0.04%)</title><rect x="803.7" y="517" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="806.71" y="527.5" ></text>
</g>
<g >
<title>writev (2,002,002 samples, 0.01%)</title><rect x="42.7" y="517" width="0.2" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="45.73" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,010,010 samples, 0.06%)</title><rect x="1140.2" y="549" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1143.16" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="42.7" y="453" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="45.73" y="463.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (148,148,148 samples, 0.88%)</title><rect x="1087.9" y="533" width="10.5" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1090.94" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,007,007 samples, 0.04%)</title><rect x="1143.8" y="517" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1146.82" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (25,025,025 samples, 0.15%)</title><rect x="16.8" y="485" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="19.83" y="495.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (19,019,019 samples, 0.11%)</title><rect x="1186.9" y="389" width="1.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1189.90" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (2,002,002 samples, 0.01%)</title><rect x="339.1" y="485" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="342.14" y="495.5" ></text>
</g>
<g >
<title>operator new (10,010,010 samples, 0.06%)</title><rect x="1185.6" y="373" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1188.57" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (19,019,019 samples, 0.11%)</title><rect x="1166.0" y="485" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1169.00" y="495.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (119,119,119 samples, 0.71%)</title><rect x="1181.6" y="613" width="8.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1184.55" y="623.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (572,572,572 samples, 3.41%)</title><rect x="427.8" y="565" width="40.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="430.76" y="575.5" >sim..</text>
</g>
<g >
<title>Logger::get_instance (87,087,087 samples, 0.52%)</title><rect x="582.5" y="549" width="6.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="585.47" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="25.9" y="501" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="28.91" y="511.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (2,002,002 samples, 0.01%)</title><rect x="1182.1" y="389" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1185.12" y="399.5" ></text>
</g>
<g >
<title>malloc (7,007,007 samples, 0.04%)</title><rect x="1052.3" y="549" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1055.32" y="559.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (7,007,007 samples, 0.04%)</title><rect x="1187.7" y="325" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.68" y="335.5" ></text>
</g>
<g >
<title>sim::RoutingModule::update_routing_table (149,149,149 samples, 0.89%)</title><rect x="1122.8" y="565" width="10.5" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1125.85" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="350.0" y="405" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="352.98" y="415.5" ></text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks (2,002,002 samples, 0.01%)</title><rect x="490.3" y="517" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="493.26" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (77,077,077 samples, 0.46%)</title><rect x="27.5" y="469" width="5.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="30.53" y="479.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (4,004,004 samples, 0.02%)</title><rect x="1097.6" y="485" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1100.58" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,005,005 samples, 0.03%)</title><rect x="1185.8" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.85" y="287.5" ></text>
</g>
<g >
<title>cfree (855,855,855 samples, 5.10%)</title><rect x="716.4" y="533" width="60.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="719.42" y="543.5" >cfree</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2,002,002 samples, 0.01%)</title><rect x="1112.7" y="565" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1115.71" y="575.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,003,003 samples, 0.02%)</title><rect x="808.8" y="517" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="811.77" y="527.5" ></text>
</g>
<g >
<title>malloc (5,005,005 samples, 0.03%)</title><rect x="1087.3" y="533" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1090.30" y="543.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (2,002,002 samples, 0.01%)</title><rect x="1108.8" y="517" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1111.84" y="527.5" ></text>
</g>
<g >
<title>sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow, sim::Link&gt;::recalculate_paths (902,902,902 samples, 5.38%)</title><rect x="1118.0" y="597" width="63.5" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1120.99" y="607.5" >sim::S..</text>
</g>
<g >
<title>[libc.so.6] (8,008,008 samples, 0.05%)</title><rect x="1132.7" y="453" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1135.70" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (21,021,021 samples, 0.13%)</title><rect x="11.0" y="565" width="1.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.99" y="575.5" ></text>
</g>
<g >
<title>malloc (486,486,486 samples, 2.90%)</title><rect x="656.7" y="533" width="34.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="659.66" y="543.5" >ma..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,005,005 samples, 0.03%)</title><rect x="1143.5" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.47" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,003,003 samples, 0.02%)</title><rect x="1086.7" y="533" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1089.74" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="1140.6" y="405" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1143.59" y="415.5" ></text>
</g>
<g >
<title>sim::SendData::operator (395,395,395 samples, 2.36%)</title><rect x="1085.1" y="581" width="27.8" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1088.05" y="591.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (77,077,077 samples, 0.46%)</title><rect x="27.5" y="437" width="5.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="30.53" y="447.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (28,028,028 samples, 0.17%)</title><rect x="1186.3" y="421" width="1.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1189.27" y="431.5" ></text>
</g>
<g >
<title>std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;::size_type std::__detail::__erase_nodes_if&lt;std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;, std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;, sim::RoutingModule::correctify_outlinks (5,005,005 samples, 0.03%)</title><rect x="1151.1" y="533" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1154.07" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_pbump (3,003,003 samples, 0.02%)</title><rect x="362.7" y="485" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="365.72" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,002,002 samples, 0.01%)</title><rect x="350.7" y="261" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="353.68" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,007,007 samples, 0.04%)</title><rect x="715.9" y="533" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="718.93" y="543.5" ></text>
</g>
<g >
<title>operator new (27,027,027 samples, 0.16%)</title><rect x="1163.0" y="549" width="1.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1166.04" y="559.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (21,021,021 samples, 0.13%)</title><rect x="11.0" y="549" width="1.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.99" y="559.5" ></text>
</g>
<g >
<title>sim::Simulator&lt;sim::Host, sim::Switch, sim::BasicFlow, sim::Link&gt;::add_link (2,002,002 samples, 0.01%)</title><rect x="1189.5" y="565" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1192.51" y="575.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,002,002 samples, 0.01%)</title><rect x="1087.8" y="533" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1090.80" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (25,025,025 samples, 0.15%)</title><rect x="1157.4" y="565" width="1.8" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1160.41" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,010,010 samples, 0.06%)</title><rect x="1173.0" y="405" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1176.04" y="415.5" ></text>
</g>
<g >
<title>_IO_file_open (78,078,078 samples, 0.47%)</title><rect x="27.5" y="501" width="5.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="30.46" y="511.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (19,019,019 samples, 0.11%)</title><rect x="349.0" y="533" width="1.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="351.99" y="543.5" ></text>
</g>
<g >
<title>sim::Switch::notify_about_arrival (11,011,011 samples, 0.07%)</title><rect x="368.6" y="549" width="0.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="371.63" y="559.5" ></text>
</g>
<g >
<title>malloc (2,002,002 samples, 0.01%)</title><rect x="807.1" y="517" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="810.08" y="527.5" ></text>
</g>
<g >
<title>YAML::Scanner::PopIndentToHere (2,002,002 samples, 0.01%)</title><rect x="1186.3" y="373" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1189.34" y="383.5" ></text>
</g>
<g >
<title>main (16,558,558,542 samples, 98.68%)</title><rect x="25.6" y="629" width="1164.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="28.63" y="639.5" >main</text>
</g>
<g >
<title>operator new (2,002,002 samples, 0.01%)</title><rect x="1123.8" y="549" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1126.76" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,002,002 samples, 0.01%)</title><rect x="1181.3" y="501" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1184.34" y="511.5" ></text>
</g>
<g >
<title>operator new (49,049,049 samples, 0.29%)</title><rect x="1140.9" y="565" width="3.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1143.94" y="575.5" ></text>
</g>
<g >
<title>operator new (2,002,002 samples, 0.01%)</title><rect x="1101.1" y="533" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1104.10" y="543.5" ></text>
</g>
<g >
<title>malloc (41,041,041 samples, 0.24%)</title><rect x="1130.4" y="501" width="2.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1133.38" y="511.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (2,002,002 samples, 0.01%)</title><rect x="1100.7" y="533" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1103.68" y="543.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (2,002,002 samples, 0.01%)</title><rect x="340.7" y="501" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="343.69" y="511.5" ></text>
</g>
<g >
<title>sim::Link::get_to_ingress_queue_size (134,134,134 samples, 0.80%)</title><rect x="520.1" y="565" width="9.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="523.11" y="575.5" ></text>
</g>
<g >
<title>sim::Link::get_from (5,005,005 samples, 0.03%)</title><rect x="1122.4" y="565" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1125.43" y="575.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (2,002,002 samples, 0.01%)</title><rect x="1184.9" y="293" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1187.93" y="303.5" ></text>
</g>
<g >
<title>sim::TcpFlow::update (139,139,139 samples, 0.83%)</title><rect x="493.1" y="549" width="9.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="496.15" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="42.7" y="421" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="45.73" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="1140.6" y="469" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1143.59" y="479.5" ></text>
</g>
<g >
<title>cfree (4,004,004 samples, 0.02%)</title><rect x="486.0" y="517" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="489.04" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,007,007 samples, 0.04%)</title><rect x="1109.3" y="501" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1112.26" y="511.5" ></text>
</g>
<g >
<title>std::filesystem::status (6,006,006 samples, 0.04%)</title><rect x="45.1" y="549" width="0.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="48.12" y="559.5" ></text>
</g>
<g >
<title>sim::TcpFlow::try_to_put_data_to_device (116,116,116 samples, 0.69%)</title><rect x="334.8" y="549" width="8.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="337.84" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="45.4" y="373" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.41" y="383.5" ></text>
</g>
<g >
<title>sim::Event::get_time (43,043,043 samples, 0.26%)</title><rect x="59.1" y="597" width="3.0" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="62.06" y="607.5" ></text>
</g>
<g >
<title>sim::TcpFlow::create_new_data_packet (116,116,116 samples, 0.69%)</title><rect x="334.8" y="565" width="8.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="337.84" y="575.5" ></text>
</g>
<g >
<title>sim::Generate::~Generate (2,002,002 samples, 0.01%)</title><rect x="344.3" y="581" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="347.35" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="1127.3" y="517" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1130.28" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="1173.5" y="309" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1176.46" y="319.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_flows (4,004,004 samples, 0.02%)</title><rect x="1189.1" y="597" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1192.08" y="607.5" ></text>
</g>
<g >
<title>sim::Link::get_from (5,005,005 samples, 0.03%)</title><rect x="1134.0" y="549" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1137.04" y="559.5" ></text>
</g>
<g >
<title>operator new (2,002,002 samples, 0.01%)</title><rect x="500.0" y="469" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="502.98" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (116,116,116 samples, 0.69%)</title><rect x="1159.2" y="565" width="8.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1162.17" y="575.5" ></text>
</g>
<g >
<title>operator new (28,028,028 samples, 0.17%)</title><rect x="1165.4" y="533" width="1.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1168.36" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,012,012 samples, 0.07%)</title><rect x="10.0" y="613" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,005,005 samples, 0.03%)</title><rect x="45.2" y="501" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.19" y="511.5" ></text>
</g>
<g >
<title>operator new (2,002,002 samples, 0.01%)</title><rect x="341.1" y="501" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="344.11" y="511.5" ></text>
</g>
<g >
<title>cfree (726,726,726 samples, 4.33%)</title><rect x="591.4" y="549" width="51.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="594.41" y="559.5" >cfree</text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (12,012,012 samples, 0.07%)</title><rect x="807.4" y="533" width="0.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="810.37" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="42.7" y="373" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="45.73" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,006,006 samples, 0.04%)</title><rect x="346.5" y="533" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="349.53" y="543.5" ></text>
</g>
<g >
<title>malloc (10,010,010 samples, 0.06%)</title><rect x="1125.0" y="517" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1127.96" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="498.1" y="309" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="501.08" y="319.5" ></text>
</g>
<g >
<title>operator new (2,002,002 samples, 0.01%)</title><rect x="1105.3" y="469" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1108.25" y="479.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet const&amp;&gt; (9,009,009 samples, 0.05%)</title><rect x="340.8" y="517" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="343.83" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11,011,011 samples, 0.07%)</title><rect x="1143.1" y="469" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.05" y="479.5" ></text>
</g>
<g >
<title>malloc (27,027,027 samples, 0.16%)</title><rect x="1163.0" y="533" width="1.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1166.04" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (206,206,206 samples, 1.23%)</title><rect x="10.9" y="581" width="14.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.92" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13,013,013 samples, 0.08%)</title><rect x="26.5" y="293" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.47" y="303.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (3,003,003 samples, 0.02%)</title><rect x="42.7" y="533" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="45.66" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (77,077,077 samples, 0.46%)</title><rect x="27.5" y="373" width="5.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="30.53" y="383.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_outlinks (15,015,015 samples, 0.09%)</title><rect x="1144.8" y="549" width="1.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1147.81" y="559.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (7,007,007 samples, 0.04%)</title><rect x="337.2" y="501" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="340.17" y="511.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::export_to_files (285,285,285 samples, 1.70%)</title><rect x="25.6" y="597" width="20.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="28.63" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="1140.6" y="485" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1143.59" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,005,005 samples, 0.03%)</title><rect x="356.5" y="517" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="359.45" y="527.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (2,002,002 samples, 0.01%)</title><rect x="1108.7" y="517" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1111.70" y="527.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (69,069,069 samples, 0.41%)</title><rect x="850.6" y="533" width="4.8" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="853.58" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_erase (2,002,002 samples, 0.01%)</title><rect x="1157.0" y="549" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1159.99" y="559.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (31,031,031 samples, 0.18%)</title><rect x="848.2" y="549" width="2.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="851.19" y="559.5" ></text>
</g>
<g >
<title>cfree (2,002,002 samples, 0.01%)</title><rect x="335.8" y="517" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="338.83" y="527.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (3,003,003 samples, 0.02%)</title><rect x="1182.7" y="325" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1185.75" y="335.5" ></text>
</g>
<g >
<title>std::locale::~locale (2,002,002 samples, 0.01%)</title><rect x="490.5" y="533" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="493.47" y="543.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (3,003,003 samples, 0.02%)</title><rect x="1110.0" y="533" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1113.04" y="543.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (17,017,017 samples, 0.10%)</title><rect x="26.2" y="533" width="1.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="29.19" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_erase (2,002,002 samples, 0.01%)</title><rect x="1154.9" y="549" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1157.95" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,009,009 samples, 0.05%)</title><rect x="1121.8" y="565" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1124.79" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;* std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_Alloc_node&gt; (20,020,020 samples, 0.12%)</title><rect x="1179.4" y="581" width="1.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1182.37" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (3,003,003 samples, 0.02%)</title><rect x="1179.2" y="581" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1182.16" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (109,109,109 samples, 0.65%)</title><rect x="1125.7" y="549" width="7.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1128.66" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="1185.9" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.92" y="175.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (8,008,008 samples, 0.05%)</title><rect x="1106.0" y="533" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1108.96" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17,017,017 samples, 0.10%)</title><rect x="1172.5" y="485" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.54" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,002,002 samples, 0.01%)</title><rect x="350.7" y="117" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="353.68" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,009,009 samples, 0.05%)</title><rect x="1173.1" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1176.11" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (8,008,008 samples, 0.05%)</title><rect x="1173.7" y="501" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1176.74" y="511.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (8,008,008 samples, 0.05%)</title><rect x="368.1" y="533" width="0.5" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="371.07" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (16,016,016 samples, 0.10%)</title><rect x="590.3" y="549" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="593.29" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13,013,013 samples, 0.08%)</title><rect x="1164.0" y="437" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1167.03" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (2,002,002 samples, 0.01%)</title><rect x="500.0" y="485" width="0.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="502.98" y="495.5" ></text>
</g>
<g >
<title>malloc (28,028,028 samples, 0.17%)</title><rect x="1165.4" y="517" width="1.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1168.36" y="527.5" ></text>
</g>
<g >
<title>YAML::Stream::get (3,003,003 samples, 0.02%)</title><rect x="1183.2" y="373" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1186.17" y="383.5" ></text>
</g>
<g >
<title>cfree (11,011,011 samples, 0.07%)</title><rect x="1086.2" y="549" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1089.18" y="559.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (17,017,017 samples, 0.10%)</title><rect x="1107.5" y="517" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1110.50" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="44.8" y="453" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="47.77" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (3,003,003 samples, 0.02%)</title><rect x="496.2" y="453" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="499.25" y="463.5" ></text>
</g>
<g >
<title>malloc (2,002,002 samples, 0.01%)</title><rect x="494.6" y="501" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="497.63" y="511.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (11,011,011 samples, 0.07%)</title><rect x="805.5" y="549" width="0.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="808.54" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,002,002 samples, 0.01%)</title><rect x="1162.9" y="549" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1165.90" y="559.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (4,004,004 samples, 0.02%)</title><rect x="1182.7" y="341" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1185.68" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="1129.5" y="293" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.47" y="303.5" ></text>
</g>
<g >
<title>sim::Switch::get_outlinks (68,068,068 samples, 0.41%)</title><rect x="1148.4" y="565" width="4.8" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1151.40" y="575.5" ></text>
</g>
<g >
<title>sim::Host::get_id[abi:cxx11] (4,004,004 samples, 0.02%)</title><rect x="342.4" y="517" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="345.45" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="42.7" y="341" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="45.73" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,008,008 samples, 0.05%)</title><rect x="1143.3" y="421" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.26" y="431.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (8,008,008 samples, 0.05%)</title><rect x="491.2" y="517" width="0.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="494.25" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (19,019,019 samples, 0.11%)</title><rect x="1149.0" y="501" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1152.03" y="511.5" ></text>
</g>
<g >
<title>fstatat64 (6,006,006 samples, 0.04%)</title><rect x="45.1" y="533" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="48.12" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="44.8" y="437" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="47.77" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,010,010 samples, 0.06%)</title><rect x="365.5" y="517" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="368.46" y="527.5" ></text>
</g>
<g >
<title>YAML::Scanner::PushIndentTo (3,003,003 samples, 0.02%)</title><rect x="1185.1" y="373" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1188.07" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,012,012 samples, 0.07%)</title><rect x="10.0" y="629" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>sim::Host::get_outlinks (21,021,021 samples, 0.13%)</title><rect x="1144.7" y="565" width="1.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1147.74" y="575.5" ></text>
</g>
<g >
<title>_start (16,767,767,751 samples, 99.92%)</title><rect x="10.9" y="677" width="1179.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.92" y="687.5" >_start</text>
</g>
<g >
<title>malloc (2,002,002 samples, 0.01%)</title><rect x="1105.3" y="453" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1108.25" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (43,043,043 samples, 0.26%)</title><rect x="1176.1" y="581" width="3.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1179.13" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (4,004,004 samples, 0.02%)</title><rect x="489.6" y="485" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="492.63" y="495.5" ></text>
</g>
<g >
<title>cfree (10,010,010 samples, 0.06%)</title><rect x="1140.2" y="565" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1143.16" y="575.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (2,002,002 samples, 0.01%)</title><rect x="1188.0" y="293" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.03" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (3,003,003 samples, 0.02%)</title><rect x="338.4" y="453" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="341.43" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,010,010 samples, 0.06%)</title><rect x="11.8" y="485" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.76" y="495.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (4,004,004 samples, 0.02%)</title><rect x="487.5" y="517" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="490.52" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17,017,017 samples, 0.10%)</title><rect x="26.2" y="469" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.19" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="1164.7" y="325" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1167.66" y="335.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (5,005,005 samples, 0.03%)</title><rect x="807.6" y="517" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="810.65" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (75,075,075 samples, 0.45%)</title><rect x="37.0" y="501" width="5.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="40.03" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="1140.6" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1143.59" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,002,002 samples, 0.01%)</title><rect x="850.4" y="533" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="853.44" y="543.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (80,080,080 samples, 0.48%)</title><rect x="27.4" y="565" width="5.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="30.39" y="575.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleDocument (96,096,096 samples, 0.57%)</title><rect x="1181.6" y="549" width="6.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1184.55" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,002,002 samples, 0.01%)</title><rect x="1157.0" y="517" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1159.99" y="527.5" ></text>
</g>
<g >
<title>operator new (3,003,003 samples, 0.02%)</title><rect x="486.9" y="533" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="489.88" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,003,003 samples, 0.02%)</title><rect x="1144.4" y="549" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1147.39" y="559.5" ></text>
</g>
<g >
<title>YAML::Load (96,096,096 samples, 0.57%)</title><rect x="1181.6" y="581" width="6.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1184.55" y="591.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::node_ref*,  (2,002,002 samples, 0.01%)</title><rect x="1188.8" y="469" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1191.80" y="479.5" ></text>
</g>
<g >
<title>sim::parse_flow_common (2,002,002 samples, 0.01%)</title><rect x="1189.2" y="565" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1192.16" y="575.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (8,008,008 samples, 0.05%)</title><rect x="1188.4" y="549" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1191.38" y="559.5" ></text>
</g>
<g >
<title>operator new (7,007,007 samples, 0.04%)</title><rect x="343.9" y="549" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="346.85" y="559.5" ></text>
</g>
<g >
<title>cfree (77,077,077 samples, 0.46%)</title><rect x="48.1" y="597" width="5.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="51.08" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,014,014 samples, 0.08%)</title><rect x="1164.0" y="453" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1166.96" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="350.0" y="437" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="352.98" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="1131.4" y="437" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1134.44" y="447.5" ></text>
</g>
<g >
<title>sim::Host::get_id[abi:cxx11] (5,005,005 samples, 0.03%)</title><rect x="1144.4" y="565" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1147.39" y="575.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2,002,002 samples, 0.01%)</title><rect x="1102.4" y="517" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1105.44" y="527.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (9,009,009 samples, 0.05%)</title><rect x="854.4" y="501" width="0.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="857.39" y="511.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (2,002,002 samples, 0.01%)</title><rect x="1182.3" y="357" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1185.26" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,002,002 samples, 0.01%)</title><rect x="1154.8" y="533" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1157.81" y="543.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (2,002,002 samples, 0.01%)</title><rect x="1182.3" y="341" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1185.26" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;sim::Host, std::allocator&lt;void&gt;,  (97,097,097 samples, 0.58%)</title><rect x="18.6" y="549" width="6.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="21.59" y="559.5" ></text>
</g>
<g >
<title>open64 (77,077,077 samples, 0.46%)</title><rect x="27.5" y="485" width="5.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="30.53" y="495.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (4,004,004 samples, 0.02%)</title><rect x="809.6" y="517" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="812.62" y="527.5" ></text>
</g>
<g >
<title>nons (16,780,780,764 samples, 100.00%)</title><rect x="10.0" y="693" width="1180.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.00" y="703.5" >nons</text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2,002,002 samples, 0.01%)</title><rect x="342.9" y="533" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="345.87" y="543.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (3,003,003 samples, 0.02%)</title><rect x="807.4" y="517" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="810.44" y="527.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_range_insert&lt;std::__detail::_Node_const_iterator&lt;std::shared_ptr&lt;sim::Host&gt;, true, false&gt; &gt; (6,006,006 samples, 0.04%)</title><rect x="1181.1" y="581" width="0.4" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1184.06" y="591.5" ></text>
</g>
<g >
<title>__default_morecore (4,004,004 samples, 0.02%)</title><rect x="1140.6" y="533" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1143.59" y="543.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (2,002,002 samples, 0.01%)</title><rect x="1110.2" y="533" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1113.25" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,002,002 samples, 0.01%)</title><rect x="34.0" y="549" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="37.00" y="559.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (4,004,004 samples, 0.02%)</title><rect x="355.3" y="533" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="358.33" y="543.5" ></text>
</g>
<g >
<title>operator new (2,002,002 samples, 0.01%)</title><rect x="1185.1" y="357" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1188.14" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="349.5" y="405" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="352.49" y="415.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (14,014,014 samples, 0.08%)</title><rect x="1187.2" y="357" width="1.0" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.18" y="367.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (19,019,019 samples, 0.11%)</title><rect x="804.2" y="549" width="1.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="807.20" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,008,008 samples, 0.05%)</title><rect x="1129.0" y="453" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.04" y="463.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::get_size (6,006,006 samples, 0.04%)</title><rect x="539.4" y="565" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="542.40" y="575.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (2,002,002 samples, 0.01%)</title><rect x="1182.3" y="405" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1185.26" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,008,008 samples, 0.05%)</title><rect x="349.2" y="517" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="352.20" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,006,006 samples, 0.04%)</title><rect x="1143.4" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.40" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (6,006,006 samples, 0.04%)</title><rect x="1152.8" y="549" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1155.76" y="559.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (9,009,009 samples, 0.05%)</title><rect x="1184.4" y="325" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1187.44" y="335.5" ></text>
</g>
<g >
<title>std::locale::operator= (2,002,002 samples, 0.01%)</title><rect x="358.1" y="501" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="361.14" y="511.5" ></text>
</g>
<g >
<title>operator new (41,041,041 samples, 0.24%)</title><rect x="1130.4" y="517" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1133.38" y="527.5" ></text>
</g>
<g >
<title>operator new (6,006,006 samples, 0.04%)</title><rect x="1087.2" y="549" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1090.23" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,005,005 samples, 0.03%)</title><rect x="1173.4" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1176.39" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,009,009 samples, 0.05%)</title><rect x="1173.1" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1176.11" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,002,002 samples, 0.01%)</title><rect x="350.7" y="309" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="353.68" y="319.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (27,027,027 samples, 0.16%)</title><rect x="498.2" y="517" width="1.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="501.22" y="527.5" ></text>
</g>
<g >
<title>sim::Switch::get_link_to_destination (80,080,080 samples, 0.48%)</title><rect x="850.4" y="549" width="5.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="853.37" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="1140.6" y="389" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1143.59" y="399.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::Push (11,011,011 samples, 0.07%)</title><rect x="1185.5" y="405" width="0.8" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1188.50" y="415.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (3,003,003 samples, 0.02%)</title><rect x="45.8" y="613" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="48.76" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="498.0" y="405" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="501.01" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="715.8" y="517" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="718.79" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="349.5" y="437" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="352.49" y="447.5" ></text>
</g>
<g >
<title>utils::create_all_directories (6,006,006 samples, 0.04%)</title><rect x="45.1" y="565" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.12" y="575.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (16,016,016 samples, 0.10%)</title><rect x="357.2" y="533" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="360.23" y="543.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (4,004,004 samples, 0.02%)</title><rect x="42.9" y="533" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="45.87" y="543.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (96,096,096 samples, 0.57%)</title><rect x="1181.6" y="517" width="6.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1184.55" y="527.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (5,005,005 samples, 0.03%)</title><rect x="371.1" y="565" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="374.10" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,002,002 samples, 0.01%)</title><rect x="350.7" y="101" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="353.68" y="111.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (2,002,002 samples, 0.01%)</title><rect x="497.8" y="501" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="500.80" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,009,009 samples, 0.05%)</title><rect x="1173.1" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1176.11" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="1127.3" y="501" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1130.28" y="511.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (35,035,035 samples, 0.21%)</title><rect x="1183.0" y="405" width="2.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1185.96" y="415.5" ></text>
</g>
<g >
<title>_IO_file_fopen (78,078,078 samples, 0.47%)</title><rect x="27.5" y="517" width="5.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="30.46" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,002,002 samples, 0.01%)</title><rect x="362.5" y="437" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="365.51" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,003,003 samples, 0.02%)</title><rect x="500.6" y="469" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="503.61" y="479.5" ></text>
</g>
<g >
<title>cfree (22,022,022 samples, 0.13%)</title><rect x="23.9" y="533" width="1.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="26.87" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (19,019,019 samples, 0.11%)</title><rect x="1142.5" y="517" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1145.49" y="527.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (3,003,003 samples, 0.02%)</title><rect x="1087.0" y="549" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1089.95" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,003,003 samples, 0.02%)</title><rect x="357.0" y="501" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="360.02" y="511.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (3,003,003 samples, 0.02%)</title><rect x="34.6" y="549" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="37.64" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="1127.4" y="437" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1130.35" y="447.5" ></text>
</g>
<g >
<title>malloc (3,003,003 samples, 0.02%)</title><rect x="347.0" y="533" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="350.02" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,004,004 samples, 0.02%)</title><rect x="35.4" y="549" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="38.41" y="559.5" ></text>
</g>
<g >
<title>malloc@plt (9,009,009 samples, 0.05%)</title><rect x="646.6" y="549" width="0.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="649.60" y="559.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (3,003,003 samples, 0.02%)</title><rect x="806.7" y="533" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="809.73" y="543.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (6,006,006 samples, 0.04%)</title><rect x="334.4" y="565" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="337.35" y="575.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (2,002,002 samples, 0.01%)</title><rect x="1180.8" y="581" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1183.78" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,002,002 samples, 0.01%)</title><rect x="350.7" y="37" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="353.68" y="47.5" ></text>
</g>
<g >
<title>Logger::get_instance (23,023,023 samples, 0.14%)</title><rect x="413.0" y="565" width="1.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="415.98" y="575.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (4,004,004 samples, 0.02%)</title><rect x="1182.7" y="357" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1185.68" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (19,019,019 samples, 0.11%)</title><rect x="1151.4" y="549" width="1.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1154.43" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,002,002 samples, 0.01%)</title><rect x="47.9" y="597" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="50.94" y="607.5" ></text>
</g>
<g >
<title>sim::Process::Process (2,002,002 samples, 0.01%)</title><rect x="348.1" y="533" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="351.15" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,002,002 samples, 0.01%)</title><rect x="350.7" y="133" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="353.68" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,012,012 samples, 0.07%)</title><rect x="10.0" y="501" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>Logger::info (22,022,022 samples, 0.13%)</title><rect x="588.6" y="549" width="1.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="591.60" y="559.5" ></text>
</g>
<g >
<title>malloc (294,294,294 samples, 1.75%)</title><rect x="782.4" y="517" width="20.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="785.45" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="25.9" y="437" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="28.91" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,005,005 samples, 0.03%)</title><rect x="1185.8" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.85" y="255.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::close (4,004,004 samples, 0.02%)</title><rect x="25.9" y="549" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="28.91" y="559.5" ></text>
</g>
<g >
<title>cfree (10,010,010 samples, 0.06%)</title><rect x="1175.4" y="565" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1178.36" y="575.5" ></text>
</g>
<g >
<title>malloc (2,002,002 samples, 0.01%)</title><rect x="341.1" y="485" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="344.11" y="495.5" ></text>
</g>
<g >
<title>sim::Process::~Process (86,086,086 samples, 0.51%)</title><rect x="1079.0" y="581" width="6.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1082.00" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,002,002 samples, 0.01%)</title><rect x="350.7" y="277" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="353.68" y="287.5" ></text>
</g>
<g >
<title>cfree (2,002,002 samples, 0.01%)</title><rect x="337.0" y="501" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="339.96" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,012,012 samples, 0.07%)</title><rect x="10.0" y="581" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>sim::Process::operator (142,142,142 samples, 0.85%)</title><rect x="128.7" y="597" width="10.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="131.75" y="607.5" ></text>
</g>
<g >
<title>operator new (557,557,557 samples, 3.32%)</title><rect x="651.7" y="549" width="39.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="654.67" y="559.5" >ope..</text>
</g>
<g >
<title>cfree (7,007,007 samples, 0.04%)</title><rect x="346.5" y="549" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="349.46" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,002,002 samples, 0.01%)</title><rect x="350.1" y="469" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="353.12" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="42.7" y="405" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="45.73" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="1173.5" y="293" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1176.46" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17,017,017 samples, 0.10%)</title><rect x="26.2" y="485" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.19" y="495.5" ></text>
</g>
<g >
<title>cfree (2,002,002 samples, 0.01%)</title><rect x="1097.4" y="501" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1100.37" y="511.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (83,083,083 samples, 0.50%)</title><rect x="1182.5" y="453" width="5.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1185.47" y="463.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_outlinks (42,042,042 samples, 0.25%)</title><rect x="1148.5" y="549" width="2.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1151.47" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="42.7" y="309" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="45.73" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (8,008,008 samples, 0.05%)</title><rect x="41.7" y="437" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="44.75" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,014,014 samples, 0.08%)</title><rect x="1164.0" y="501" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1166.96" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="350.0" y="389" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="352.98" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (9,009,009 samples, 0.05%)</title><rect x="500.2" y="517" width="0.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="503.19" y="527.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (6,006,006 samples, 0.04%)</title><rect x="1184.7" y="309" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1187.65" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,003,003 samples, 0.02%)</title><rect x="339.6" y="469" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="342.63" y="479.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_id[abi:cxx11] (10,010,010 samples, 0.06%)</title><rect x="491.8" y="549" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="494.81" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13,013,013 samples, 0.08%)</title><rect x="1172.8" y="453" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.83" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="1129.4" y="373" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.40" y="383.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Generate, unsigned int, std::weak_ptr&lt;sim::IFlow&gt;&amp;, unsigned int&amp;&gt; (19,019,019 samples, 0.11%)</title><rect x="343.0" y="565" width="1.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="346.01" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="42.7" y="357" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="45.73" y="367.5" ></text>
</g>
<g >
<title>YAML::Stream::StreamInUtf8 (2,002,002 samples, 0.01%)</title><rect x="1181.9" y="341" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1184.91" y="351.5" ></text>
</g>
<g >
<title>Logger::warn (21,021,021 samples, 0.13%)</title><rect x="414.6" y="565" width="1.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="417.60" y="575.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (8,008,008 samples, 0.05%)</title><rect x="805.0" y="533" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="807.97" y="543.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (15,015,015 samples, 0.09%)</title><rect x="1109.0" y="517" width="1.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1111.98" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="500.7" y="357" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="503.68" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,008,008 samples, 0.05%)</title><rect x="26.8" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.82" y="271.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (105,105,105 samples, 0.63%)</title><rect x="36.0" y="549" width="7.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="38.97" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,012,012 samples, 0.07%)</title><rect x="10.0" y="661" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>operator new (2,002,002 samples, 0.01%)</title><rect x="489.8" y="469" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="492.77" y="479.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (8,008,008 samples, 0.05%)</title><rect x="1188.4" y="581" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1191.38" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,007,007 samples, 0.04%)</title><rect x="1185.7" y="325" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.71" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="1162.9" y="517" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1165.90" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="1131.5" y="341" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1134.51" y="351.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (2,002,002 samples, 0.01%)</title><rect x="44.1" y="549" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="47.14" y="559.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (10,010,010 samples, 0.06%)</title><rect x="1181.8" y="437" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1184.76" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (209,209,209 samples, 1.25%)</title><rect x="10.9" y="629" width="14.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.92" y="639.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="500.7" y="389" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="503.68" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (21,021,021 samples, 0.13%)</title><rect x="25.9" y="565" width="1.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="28.91" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="350.0" y="421" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="352.98" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,004,004 samples, 0.02%)</title><rect x="350.4" y="517" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="353.40" y="527.5" ></text>
</g>
<g >
<title>operator new (5,005,005 samples, 0.03%)</title><rect x="1145.3" y="533" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1148.30" y="543.5" ></text>
</g>
<g >
<title>YAML::Stream::_ReadAheadTo (3,003,003 samples, 0.02%)</title><rect x="1181.8" y="357" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1184.83" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,002,002 samples, 0.01%)</title><rect x="350.7" y="373" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="353.68" y="383.5" ></text>
</g>
<g >
<title>sim::TcpFlow::create_new_data_packet (13,013,013 samples, 0.08%)</title><rect x="1114.5" y="581" width="0.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1117.47" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (77,077,077 samples, 0.46%)</title><rect x="27.5" y="453" width="5.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="30.53" y="463.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (6,006,006 samples, 0.04%)</title><rect x="370.5" y="565" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="373.53" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="1131.5" y="405" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1134.51" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="500.7" y="325" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="503.68" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,002,002 samples, 0.01%)</title><rect x="350.7" y="389" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="353.68" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,012,012 samples, 0.07%)</title><rect x="10.0" y="517" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (96,096,096 samples, 0.57%)</title><rect x="1181.6" y="533" width="6.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1184.55" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,007,007 samples, 0.04%)</title><rect x="343.9" y="517" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="346.85" y="527.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (44,044,044 samples, 0.26%)</title><rect x="1106.9" y="533" width="3.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1109.94" y="543.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanNextToken (6,006,006 samples, 0.04%)</title><rect x="1182.5" y="405" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1185.54" y="415.5" ></text>
</g>
<g >
<title>sim::TcpFlow::generate_packet (19,019,019 samples, 0.11%)</title><rect x="341.5" y="533" width="1.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="344.53" y="543.5" ></text>
</g>
<g >
<title>sim::Link::get_from (3,003,003 samples, 0.02%)</title><rect x="1134.8" y="581" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1137.82" y="591.5" ></text>
</g>
<g >
<title>malloc@plt (40,040,040 samples, 0.24%)</title><rect x="777.2" y="533" width="2.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="780.17" y="543.5" ></text>
</g>
<g >
<title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (2,002,002 samples, 0.01%)</title><rect x="43.2" y="533" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="46.15" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="500.7" y="453" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="503.68" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,007,007 samples, 0.04%)</title><rect x="1185.7" y="309" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.71" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,002,002 samples, 0.01%)</title><rect x="1097.4" y="485" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1100.37" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (6,006,006 samples, 0.04%)</title><rect x="1188.5" y="501" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1191.52" y="511.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (3,003,003 samples, 0.02%)</title><rect x="34.1" y="549" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="37.14" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,012,012 samples, 0.07%)</title><rect x="10.0" y="437" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,002,002 samples, 0.01%)</title><rect x="350.7" y="421" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="353.68" y="431.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (85,085,085 samples, 0.51%)</title><rect x="806.3" y="549" width="6.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="809.31" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="715.8" y="501" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="718.79" y="511.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (46,046,046 samples, 0.27%)</title><rect x="364.5" y="533" width="3.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="367.48" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,002,002 samples, 0.01%)</title><rect x="350.7" y="85" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="353.68" y="95.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (3,003,003 samples, 0.02%)</title><rect x="363.9" y="533" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="366.92" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,012,012 samples, 0.07%)</title><rect x="1164.1" y="405" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1167.10" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (38,038,038 samples, 0.23%)</title><rect x="1171.6" y="517" width="2.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1174.63" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,006,006 samples, 0.04%)</title><rect x="690.4" y="501" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="693.45" y="511.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (36,036,036 samples, 0.21%)</title><rect x="360.5" y="517" width="2.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="363.47" y="527.5" ></text>
</g>
<g >
<title>malloc (2,002,002 samples, 0.01%)</title><rect x="854.2" y="485" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="857.24" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="1173.5" y="325" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1176.46" y="335.5" ></text>
</g>
<g >
<title>operator delete (78,078,078 samples, 0.47%)</title><rect x="53.5" y="597" width="5.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="56.50" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;YAML::detail::node&gt;, std::shared_ptr&lt;YAML::detail::node&gt;, std::_Identity&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt;, std::less&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt; &gt;::_M_erase (8,008,008 samples, 0.05%)</title><rect x="1188.4" y="517" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1191.38" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17,017,017 samples, 0.10%)</title><rect x="31.8" y="213" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="34.75" y="223.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_RTT (31,031,031 samples, 0.18%)</title><rect x="497.9" y="533" width="2.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="500.94" y="543.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (96,096,096 samples, 0.57%)</title><rect x="1181.6" y="485" width="6.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1184.55" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_erase (29,029,029 samples, 0.17%)</title><rect x="1155.1" y="565" width="2.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1158.09" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (52,052,052 samples, 0.31%)</title><rect x="29.3" y="261" width="3.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.29" y="271.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (2,002,002 samples, 0.01%)</title><rect x="1182.1" y="405" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1185.12" y="415.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (9,009,009 samples, 0.05%)</title><rect x="809.0" y="517" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="811.98" y="527.5" ></text>
</g>
<g >
<title>all (16,780,780,764 samples, 100%)</title><rect x="10.0" y="709" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="1140.6" y="501" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1143.59" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="25.9" y="421" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="28.91" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (3,003,003 samples, 0.02%)</title><rect x="1145.9" y="549" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1148.87" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="1129.4" y="357" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.40" y="367.5" ></text>
</g>
<g >
<title>cfree (7,007,007 samples, 0.04%)</title><rect x="485.3" y="549" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="488.27" y="559.5" ></text>
</g>
<g >
<title>YAML::Node const YAML::Node::operator[]&lt;char [11]&gt; (2,002,002 samples, 0.01%)</title><rect x="1189.7" y="549" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1192.72" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,006,006 samples, 0.04%)</title><rect x="485.3" y="533" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="488.34" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,005,005 samples, 0.03%)</title><rect x="1129.3" y="405" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.25" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,005,005 samples, 0.03%)</title><rect x="349.4" y="453" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="352.42" y="463.5" ></text>
</g>
<g >
<title>malloc@plt (5,005,005 samples, 0.03%)</title><rect x="1052.8" y="549" width="0.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1055.81" y="559.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (3,003,003 samples, 0.02%)</title><rect x="496.5" y="501" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="499.53" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,002,002 samples, 0.01%)</title><rect x="500.0" y="437" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="502.98" y="447.5" ></text>
</g>
<g >
<title>sim::Generate::operator (4,004,004 samples, 0.02%)</title><rect x="128.0" y="597" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="131.04" y="607.5" ></text>
</g>
<g >
<title>operator new (5,005,005 samples, 0.03%)</title><rect x="373.3" y="549" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="376.35" y="559.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (17,017,017 samples, 0.10%)</title><rect x="490.6" y="533" width="1.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="493.62" y="543.5" ></text>
</g>
<g >
<title>malloc (8,008,008 samples, 0.05%)</title><rect x="776.6" y="533" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="779.61" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="42.7" y="293" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="45.73" y="303.5" ></text>
</g>
<g >
<title>sim::Host::update_routing_table (194,194,194 samples, 1.16%)</title><rect x="1121.2" y="581" width="13.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1124.16" y="591.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (4,004,004 samples, 0.02%)</title><rect x="1182.7" y="389" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1185.68" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="42.7" y="469" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="45.73" y="479.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (8,008,008 samples, 0.05%)</title><rect x="810.9" y="517" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="813.89" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="44.8" y="357" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="47.77" y="367.5" ></text>
</g>
<g >
<title>sim::IdentifierFactory::~IdentifierFactory (207,207,207 samples, 1.23%)</title><rect x="10.9" y="597" width="14.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="13.92" y="607.5" ></text>
</g>
<g >
<title>[libc.so.6] (87,087,087 samples, 0.52%)</title><rect x="12.5" y="501" width="6.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.46" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="1127.4" y="453" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1130.35" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,003,003 samples, 0.02%)</title><rect x="1156.8" y="533" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1159.78" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="349.6" y="389" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="352.56" y="399.5" ></text>
</g>
<g >
<title>YAML::Node::~Node (9,009,009 samples, 0.05%)</title><rect x="1188.3" y="597" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1191.31" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="590.1" y="549" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="593.15" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,006,006 samples, 0.04%)</title><rect x="1129.2" y="437" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.18" y="447.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (5,005,005 samples, 0.03%)</title><rect x="1098.7" y="533" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1101.71" y="543.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (6,006,006 samples, 0.04%)</title><rect x="809.9" y="533" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="812.90" y="543.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (2,002,002 samples, 0.01%)</title><rect x="497.0" y="485" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="500.02" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (57,057,057 samples, 0.34%)</title><rect x="38.3" y="469" width="4.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="41.30" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (22,022,022 samples, 0.13%)</title><rect x="1128.3" y="501" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1131.27" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="500.7" y="405" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="503.68" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,009,009 samples, 0.05%)</title><rect x="1143.2" y="453" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.19" y="463.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (12,012,012 samples, 0.07%)</title><rect x="1111.9" y="533" width="0.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1114.87" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,005,005 samples, 0.03%)</title><rect x="1164.6" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1167.59" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,002,002 samples, 0.01%)</title><rect x="350.7" y="181" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="353.68" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,012,012 samples, 0.07%)</title><rect x="10.0" y="453" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;sim::Host, std::allocator&lt;void&gt;,  (21,021,021 samples, 0.13%)</title><rect x="11.0" y="533" width="1.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.99" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,002,002 samples, 0.01%)</title><rect x="350.7" y="469" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="353.68" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (15,015,015 samples, 0.09%)</title><rect x="24.4" y="517" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="27.36" y="527.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, unsigned int, std::weak_ptr&lt;sim::IProcessingDevice&gt;&amp;&gt; (36,036,036 samples, 0.21%)</title><rect x="1115.4" y="581" width="2.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1118.39" y="591.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (24,024,024 samples, 0.14%)</title><rect x="33.2" y="565" width="1.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="36.16" y="575.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanToNextToken (4,004,004 samples, 0.02%)</title><rect x="1181.8" y="405" width="0.2" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="1184.76" y="415.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,010,010 samples, 0.06%)</title><rect x="1187.5" y="341" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.47" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,002,002 samples, 0.01%)</title><rect x="350.7" y="437" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="353.68" y="447.5" ></text>
</g>
<g >
<title>malloc (46,046,046 samples, 0.27%)</title><rect x="1141.2" y="549" width="3.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1144.15" y="559.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (104,104,104 samples, 0.62%)</title><rect x="348.3" y="549" width="7.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="351.29" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="42.7" y="389" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="45.73" y="399.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (9,009,009 samples, 0.05%)</title><rect x="1099.3" y="533" width="0.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1102.34" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,005,005 samples, 0.03%)</title><rect x="1185.8" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.85" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,002,002 samples, 0.01%)</title><rect x="350.7" y="453" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="353.68" y="463.5" ></text>
</g>
<g >
<title>YAML::Stream::eat (3,003,003 samples, 0.02%)</title><rect x="1181.8" y="389" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1184.83" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="42.7" y="325" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="45.73" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,005,005 samples, 0.03%)</title><rect x="1185.8" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.85" y="239.5" ></text>
</g>
<g >
<title>write (17,017,017 samples, 0.10%)</title><rect x="26.2" y="501" width="1.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="29.19" y="511.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (30,030,030 samples, 0.18%)</title><rect x="1183.0" y="389" width="2.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1185.96" y="399.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (13,013,013 samples, 0.08%)</title><rect x="1153.2" y="565" width="0.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1156.19" y="575.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (4,004,004 samples, 0.02%)</title><rect x="366.2" y="517" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="369.24" y="527.5" ></text>
</g>
<g >
<title>sim::is_valid_link (20,020,020 samples, 0.12%)</title><rect x="1133.3" y="565" width="1.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1136.34" y="575.5" ></text>
</g>
<g >
<title>malloc@plt (2,002,002 samples, 0.01%)</title><rect x="1127.6" y="533" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1130.57" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="1140.6" y="421" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1143.59" y="431.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (9,009,009 samples, 0.05%)</title><rect x="363.0" y="517" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="366.00" y="527.5" ></text>
</g>
<g >
<title>sim::TcpFlow::~TcpFlow (87,087,087 samples, 0.52%)</title><rect x="12.5" y="549" width="6.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="15.46" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,003,003 samples, 0.02%)</title><rect x="1186.0" y="133" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.99" y="143.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (6,006,006 samples, 0.04%)</title><rect x="485.9" y="549" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="488.90" y="559.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (4,004,004 samples, 0.02%)</title><rect x="1186.6" y="341" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.62" y="351.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (15,015,015 samples, 0.09%)</title><rect x="495.5" y="501" width="1.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="498.47" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,002,002 samples, 0.01%)</title><rect x="335.7" y="517" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="338.69" y="527.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::export_metrics_to_files (286,286,286 samples, 1.71%)</title><rect x="25.6" y="613" width="20.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="28.63" y="623.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (13,781,781,768 samples, 82.13%)</title><rect x="148.8" y="597" width="969.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="151.81" y="607.5" >sim::Scheduler::tick</text>
</g>
<g >
<title>malloc (2,002,002 samples, 0.01%)</title><rect x="1185.1" y="341" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1188.14" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="45.3" y="469" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.26" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="590.1" y="533" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="593.15" y="543.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (3,003,003 samples, 0.02%)</title><rect x="812.1" y="533" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="815.08" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16,016,016 samples, 0.10%)</title><rect x="26.3" y="437" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.26" y="447.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (6,006,006 samples, 0.04%)</title><rect x="1097.9" y="517" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1100.93" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (2,002,002 samples, 0.01%)</title><rect x="1157.3" y="565" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1160.27" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (2,002,002 samples, 0.01%)</title><rect x="1157.1" y="565" width="0.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1160.13" y="575.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (78,078,078 samples, 0.47%)</title><rect x="27.5" y="549" width="5.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="30.46" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,003,003 samples, 0.02%)</title><rect x="373.1" y="549" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="376.07" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (2,002,002 samples, 0.01%)</title><rect x="500.0" y="501" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="502.98" y="511.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (8,008,008 samples, 0.05%)</title><rect x="496.8" y="501" width="0.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="499.81" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="45.3" y="453" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.26" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,006,006 samples, 0.04%)</title><rect x="1143.4" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.40" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (16,767,767,751 samples, 99.92%)</title><rect x="10.9" y="645" width="1179.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.92" y="655.5" >[libc.so.6]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (19,019,019 samples, 0.11%)</title><rect x="1142.5" y="485" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1145.49" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="350.0" y="469" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="352.98" y="479.5" ></text>
</g>
<g >
<title>operator new (21,021,021 samples, 0.13%)</title><rect x="1148.9" y="533" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1151.89" y="543.5" ></text>
</g>
<g >
<title>sim::Link::get_to (18,018,018 samples, 0.11%)</title><rect x="1147.0" y="565" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1149.99" y="575.5" ></text>
</g>
<g >
<title>sim::Host::process (294,294,294 samples, 1.75%)</title><rect x="484.4" y="565" width="20.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="487.42" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,006,006 samples, 0.04%)</title><rect x="1143.4" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.40" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,002,002 samples, 0.01%)</title><rect x="498.3" y="501" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="501.29" y="511.5" ></text>
</g>
<g >
<title>malloc (6,006,006 samples, 0.04%)</title><rect x="362.2" y="453" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="365.23" y="463.5" ></text>
</g>
<g >
<title>auto sim::YamlParser::process_links (6,006,006 samples, 0.04%)</title><rect x="1189.5" y="581" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1192.51" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,007,007 samples, 0.04%)</title><rect x="1164.4" y="373" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1167.45" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,002,002 samples, 0.01%)</title><rect x="350.7" y="197" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="353.68" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,010,010 samples, 0.06%)</title><rect x="1164.2" y="389" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1167.24" y="399.5" ></text>
</g>
<g >
<title>operator new (2,002,002 samples, 0.01%)</title><rect x="504.5" y="533" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="507.48" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="42.7" y="437" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="45.73" y="447.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_delivery_rate (38,038,038 samples, 0.23%)</title><rect x="500.1" y="533" width="2.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="503.12" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,012,012 samples, 0.07%)</title><rect x="10.0" y="549" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,004,004 samples, 0.02%)</title><rect x="27.1" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="30.10" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (73,073,073 samples, 0.44%)</title><rect x="27.8" y="341" width="5.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="30.81" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (45,045,045 samples, 0.27%)</title><rect x="29.8" y="245" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.78" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (26,026,026 samples, 0.16%)</title><rect x="361.2" y="501" width="1.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="364.17" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (3,003,003 samples, 0.02%)</title><rect x="1124.6" y="549" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1127.61" y="559.5" ></text>
</g>
<g >
<title>operator new (2,002,002 samples, 0.01%)</title><rect x="854.2" y="501" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="857.24" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (3,003,003 samples, 0.02%)</title><rect x="496.2" y="469" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="499.25" y="479.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::Arrive (9,009,009 samples, 0.05%)</title><rect x="373.7" y="549" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="376.70" y="559.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (57,057,057 samples, 0.34%)</title><rect x="493.9" y="533" width="4.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="496.92" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="349.6" y="373" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="352.63" y="383.5" ></text>
</g>
<g >
<title>operator delete (2,002,002 samples, 0.01%)</title><rect x="1120.9" y="581" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1123.88" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,007,007 samples, 0.04%)</title><rect x="1143.3" y="389" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.33" y="399.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (3,003,003 samples, 0.02%)</title><rect x="854.8" y="485" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="857.81" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,006,006 samples, 0.04%)</title><rect x="1139.7" y="565" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1142.74" y="575.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,002,002 samples, 0.01%)</title><rect x="338.2" y="485" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="341.15" y="495.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (124,124,124 samples, 0.74%)</title><rect x="511.4" y="565" width="8.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="514.38" y="575.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (13,013,013 samples, 0.08%)</title><rect x="501.9" y="517" width="0.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="504.88" y="527.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (1,610,610,609 samples, 9.60%)</title><rect x="690.9" y="549" width="113.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="693.94" y="559.5" >sim::Link::ge..</text>
</g>
<g >
<title>[libc.so.6] (23,023,023 samples, 0.14%)</title><rect x="1131.6" y="469" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1134.65" y="479.5" ></text>
</g>
<g >
<title>cfree (2,002,002 samples, 0.01%)</title><rect x="1157.0" y="533" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1159.99" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,003,003 samples, 0.02%)</title><rect x="1123.4" y="549" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1126.41" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,004,004 samples, 0.02%)</title><rect x="416.1" y="565" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="419.14" y="575.5" ></text>
</g>
<g >
<title>sim::bfs[abi:cxx11] (553,553,553 samples, 3.30%)</title><rect x="1135.4" y="581" width="38.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1138.38" y="591.5" >sim..</text>
</g>
<g >
<title>[libc.so.6] (2,002,002 samples, 0.01%)</title><rect x="44.6" y="533" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="47.63" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,002,002 samples, 0.01%)</title><rect x="349.6" y="341" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="352.63" y="351.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (2,002,002 samples, 0.01%)</title><rect x="355.6" y="549" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="358.61" y="559.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (5,005,005 samples, 0.03%)</title><rect x="43.8" y="549" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="46.79" y="559.5" ></text>
</g>
</g>
</svg>
