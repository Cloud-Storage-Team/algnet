<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="646.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="629" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="629" > </text>
<g id="frames">
<g >
<title>[[kernel.kallsyms]] (161,616,160 samples, 0.05%)</title><rect x="1084.0" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1086.98" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="747.0" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.05" y="223.5" ></text>
</g>
<g >
<title>malloc (121,212,120 samples, 0.04%)</title><rect x="1113.5" y="357" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1116.47" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1169.3" y="389" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1172.34" y="399.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.02%)</title><rect x="943.7" y="373" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="946.71" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (353,535,350 samples, 0.12%)</title><rect x="12.2" y="373" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.19" y="383.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (90,909,090 samples, 0.03%)</title><rect x="963.3" y="453" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="966.26" y="463.5" ></text>
</g>
<g >
<title>sim::Process::Process (40,404,040 samples, 0.01%)</title><rect x="918.9" y="421" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="921.87" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (313,131,310 samples, 0.10%)</title><rect x="785.8" y="213" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.79" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1109.2" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1112.17" y="223.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.01%)</title><rect x="1024.1" y="357" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1027.10" y="367.5" ></text>
</g>
<g >
<title>cfree (40,404,040 samples, 0.01%)</title><rect x="1179.3" y="405" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1182.31" y="415.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::~Arrive (40,404,040 samples, 0.01%)</title><rect x="959.4" y="469" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="962.40" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (222,222,220 samples, 0.07%)</title><rect x="1051.1" y="357" width="0.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1054.08" y="367.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::Arrive (424,242,420 samples, 0.14%)</title><rect x="974.8" y="437" width="1.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="977.78" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.4" y="165" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.41" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="817.9" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.90" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1109.2" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1112.17" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.4" y="277" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.41" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="747.0" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.05" y="319.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::get_storage_named (80,808,080 samples, 0.03%)</title><rect x="1046.5" y="373" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1049.47" y="383.5" ></text>
</g>
<g >
<title>all (299,949,491,950 samples, 100%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>[libc.so.6] (161,616,160 samples, 0.05%)</title><rect x="1082.3" y="373" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1085.27" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,767,676,660 samples, 3.59%)</title><rect x="231.2" y="421" width="42.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="234.18" y="431.5" >[li..</text>
</g>
<g >
<title>sim::MetricsStorage::add_record (80,808,080 samples, 0.03%)</title><rect x="1046.8" y="373" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1049.79" y="383.5" ></text>
</g>
<g >
<title>sim::SendData::operator (3,020,201,990 samples, 1.01%)</title><rect x="1170.2" y="469" width="11.9" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1173.21" y="479.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (171,717,170 samples, 0.06%)</title><rect x="1181.0" y="421" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1183.98" y="431.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (30,303,030 samples, 0.01%)</title><rect x="1000.3" y="453" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1003.33" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,979,797,960 samples, 0.66%)</title><rect x="714.5" y="389" width="7.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="717.50" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.4" y="245" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.41" y="255.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (414,141,410 samples, 0.14%)</title><rect x="1185.0" y="421" width="1.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1187.95" y="431.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (80,868,686,060 samples, 26.96%)</title><rect x="416.1" y="453" width="318.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="419.12" y="463.5" >std::ostream&amp; std::ostream::_M_insert&lt;doub..</text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (6,858,585,790 samples, 2.29%)</title><rect x="792.0" y="437" width="27.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="794.99" y="447.5" >s..</text>
</g>
<g >
<title>sim::MetricsCollector::add_RTT (545,454,540 samples, 0.18%)</title><rect x="1046.2" y="389" width="2.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1049.19" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="996.8" y="325" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="999.80" y="335.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (626,262,620 samples, 0.21%)</title><rect x="440.0" y="437" width="2.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="443.04" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="722.0" y="85" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="724.97" y="95.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.03%)</title><rect x="10.0" y="501" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>operator new (60,606,060 samples, 0.02%)</title><rect x="1116.8" y="421" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1119.84" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (313,131,310 samples, 0.10%)</title><rect x="973.4" y="405" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="976.39" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1018.2" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1021.22" y="319.5" ></text>
</g>
<g >
<title>malloc (11,353,535,240 samples, 3.79%)</title><rect x="228.9" y="437" width="44.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="231.87" y="447.5" >malloc</text>
</g>
<g >
<title>sim::SimplePacketQueue::front (232,323,230 samples, 0.08%)</title><rect x="1070.5" y="405" width="0.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1073.51" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt;, std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::less&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt; &gt;::_M_erase (80,808,080 samples, 0.03%)</title><rect x="10.1" y="469" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="13.08" y="479.5" ></text>
</g>
<g >
<title>__libc_start_main (299,939,390,940 samples, 100.00%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >__libc_start_main</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.5" y="293" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.52" y="303.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (121,212,120 samples, 0.04%)</title><rect x="1189.5" y="389" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.48" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (5,767,676,710 samples, 1.92%)</title><rect x="794.5" y="421" width="22.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="797.53" y="431.5" >[..</text>
</g>
<g >
<title>malloc (70,707,070 samples, 0.02%)</title><rect x="1109.5" y="341" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1112.45" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.4" y="341" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.41" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (299,939,390,940 samples, 100.00%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >[libc.so.6]</text>
</g>
<g >
<title>sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::get_flag (80,808,080 samples, 0.03%)</title><rect x="1020.9" y="421" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1023.92" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="996.8" y="357" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="999.80" y="367.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (595,959,590 samples, 0.20%)</title><rect x="1065.8" y="437" width="2.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1068.82" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="340.3" y="389" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="343.26" y="399.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.01%)</title><rect x="1116.9" y="405" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1119.92" y="415.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (80,808,080 samples, 0.03%)</title><rect x="1018.5" y="405" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1021.53" y="415.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (1,222,222,210 samples, 0.41%)</title><rect x="963.7" y="453" width="4.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="966.70" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.02%)</title><rect x="1170.7" y="437" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1173.69" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (797,979,790 samples, 0.27%)</title><rect x="80.3" y="437" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="83.34" y="447.5" ></text>
</g>
<g >
<title>YAML::LoadFile (121,212,120 samples, 0.04%)</title><rect x="1189.5" y="469" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1192.48" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.02%)</title><rect x="1105.6" y="373" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1108.56" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="786.9" y="37" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="789.90" y="47.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (40,404,040 samples, 0.01%)</title><rect x="1145.4" y="437" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1148.41" y="447.5" ></text>
</g>
<g >
<title>malloc (60,606,060 samples, 0.02%)</title><rect x="1179.5" y="389" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1182.51" y="399.5" ></text>
</g>
<g >
<title>__default_morecore (30,303,030 samples, 0.01%)</title><rect x="747.4" y="389" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="750.41" y="399.5" ></text>
</g>
<g >
<title>malloc (171,717,170 samples, 0.06%)</title><rect x="1041.4" y="357" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1044.42" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (151,515,150 samples, 0.05%)</title><rect x="817.7" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.70" y="287.5" ></text>
</g>
<g >
<title>sim::write_to_csv (167,939,392,260 samples, 55.99%)</title><rect x="86.3" y="469" width="660.7" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="89.34" y="479.5" >sim::write_to_csv</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="652.8" y="229" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="655.79" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.02%)</title><rect x="1038.8" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1041.84" y="383.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (929,292,920 samples, 0.31%)</title><rect x="1114.4" y="437" width="3.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1117.42" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (313,131,310 samples, 0.10%)</title><rect x="1107.9" y="325" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1110.94" y="335.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::get_storage_named (40,404,040 samples, 0.01%)</title><rect x="1184.6" y="421" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1187.60" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1023.0" y="357" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1025.98" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1089.5" y="421" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1092.46" y="431.5" ></text>
</g>
<g >
<title>operator new (575,757,570 samples, 0.19%)</title><rect x="1167.2" y="437" width="2.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1170.23" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.4" y="149" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.41" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (242,424,240 samples, 0.08%)</title><rect x="942.3" y="229" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="945.28" y="239.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (80,808,080 samples, 0.03%)</title><rect x="1157.6" y="453" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1160.57" y="463.5" ></text>
</g>
<g >
<title>sim::PacketNumMonitor::confirm_one (373,737,370 samples, 0.12%)</title><rect x="1040.6" y="405" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1043.63" y="415.5" ></text>
</g>
<g >
<title>sim::ECMPHasher::get_hash (80,808,080 samples, 0.03%)</title><rect x="1065.5" y="437" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1068.50" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (151,515,150 samples, 0.05%)</title><rect x="1108.6" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1111.58" y="223.5" ></text>
</g>
<g >
<title>operator new (60,606,060 samples, 0.02%)</title><rect x="1179.5" y="405" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1182.51" y="415.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (383,838,380 samples, 0.13%)</title><rect x="946.9" y="405" width="1.5" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="949.89" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.08" y="287.5" ></text>
</g>
<g >
<title>sim::Event::get_time (111,111,110 samples, 0.04%)</title><rect x="820.6" y="485" width="0.4" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="823.56" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (151,515,150 samples, 0.05%)</title><rect x="817.7" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.70" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (60,606,060 samples, 0.02%)</title><rect x="747.5" y="405" width="0.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="750.52" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (242,424,240 samples, 0.08%)</title><rect x="1171.8" y="389" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1174.84" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="13.4" y="245" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.42" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="747.2" y="133" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.25" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (515,151,510 samples, 0.17%)</title><rect x="720.3" y="133" width="2.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="723.27" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="652.8" y="261" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="655.79" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="996.8" y="277" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="999.80" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,505,050,490 samples, 0.50%)</title><rect x="716.4" y="213" width="5.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="719.37" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="818.1" y="133" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="821.14" y="143.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (404,040,400 samples, 0.13%)</title><rect x="1112.4" y="389" width="1.5" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1115.35" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.5" y="245" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.52" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1084.3" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1087.34" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (9,171,717,080 samples, 3.06%)</title><rect x="747.8" y="469" width="36.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="750.76" y="479.5" >std..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.04%)</title><rect x="943.2" y="213" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="946.23" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.03%)</title><rect x="790.9" y="437" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="793.92" y="447.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (101,010,100 samples, 0.03%)</title><rect x="1118.8" y="437" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1121.83" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (343,434,340 samples, 0.11%)</title><rect x="941.9" y="293" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="944.88" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (202,020,200 samples, 0.07%)</title><rect x="12.8" y="293" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.78" y="303.5" ></text>
</g>
<g >
<title>sim::Simulator::start (93,949,494,010 samples, 31.32%)</title><rect x="819.5" y="501" width="369.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="822.53" y="511.5" >sim::Simulator::start</text>
</g>
<g >
<title>std::_Hash_bytes (50,505,050 samples, 0.02%)</title><rect x="1181.7" y="437" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1184.66" y="447.5" ></text>
</g>
<g >
<title>fstatat64 (30,303,030 samples, 0.01%)</title><rect x="819.1" y="421" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="822.05" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.08" y="383.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (30,303,030 samples, 0.01%)</title><rect x="1109.8" y="373" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1112.85" y="383.5" ></text>
</g>
<g >
<title>__uselocale (60,606,060 samples, 0.02%)</title><rect x="817.2" y="421" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="820.22" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="819.1" y="405" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="822.05" y="415.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (40,404,040 samples, 0.01%)</title><rect x="1015.4" y="405" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1018.35" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="789.0" y="229" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="791.97" y="239.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (50,505,050 samples, 0.02%)</title><rect x="1015.3" y="421" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1018.31" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (313,131,310 samples, 0.10%)</title><rect x="1107.9" y="341" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1110.94" y="351.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (121,212,120 samples, 0.04%)</title><rect x="1189.5" y="373" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.48" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.04%)</title><rect x="943.2" y="277" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="946.23" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,909,090,890 samples, 0.64%)</title><rect x="714.8" y="293" width="7.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="717.78" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1018.4" y="229" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1021.37" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (262,626,260 samples, 0.09%)</title><rect x="1083.6" y="357" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1086.58" y="367.5" ></text>
</g>
<g >
<title>operator delete (80,808,080 samples, 0.03%)</title><rect x="304.6" y="437" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="307.61" y="447.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (90,909,090 samples, 0.03%)</title><rect x="1183.2" y="437" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1186.24" y="447.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (101,010,100 samples, 0.03%)</title><rect x="1054.5" y="453" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1057.54" y="463.5" ></text>
</g>
<g >
<title>sim::Link::transmit (8,090,909,010 samples, 2.70%)</title><rect x="968.5" y="453" width="31.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="971.50" y="463.5" >si..</text>
</g>
<g >
<title>[libc.so.6] (15,949,494,790 samples, 5.32%)</title><rect x="351.2" y="405" width="62.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="354.22" y="415.5" >[libc...</text>
</g>
<g >
<title>sim::TcpFlow::process_ack (2,636,363,610 samples, 0.88%)</title><rect x="1042.1" y="405" width="10.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1045.10" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="747.0" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.05" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="747.0" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.05" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.4" y="261" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.41" y="271.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.01%)</title><rect x="918.8" y="421" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="921.75" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="788.9" y="357" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="791.93" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,717,171,670 samples, 1.57%)</title><rect x="798.7" y="373" width="18.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="801.67" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="1018.3" y="293" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1021.26" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="747.1" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.13" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="786.8" y="69" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="789.83" y="79.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,979,797,870 samples, 3.66%)</title><rect x="821.0" y="485" width="43.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="824.00" y="495.5" >sim:..</text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (60,999,999,390 samples, 20.34%)</title><rect x="463.6" y="421" width="239.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="466.56" y="431.5" >[libstdc++.so.6.0.33]</text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.01%)</title><rect x="1184.0" y="421" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1187.04" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (616,161,610 samples, 0.21%)</title><rect x="337.4" y="405" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="340.44" y="415.5" ></text>
</g>
<g >
<title>operator new (60,606,060 samples, 0.02%)</title><rect x="1134.5" y="389" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1137.49" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (50,505,050 samples, 0.02%)</title><rect x="785.6" y="453" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="788.55" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (90,909,090 samples, 0.03%)</title><rect x="747.4" y="453" width="0.4" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="750.41" y="463.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (494,949,490 samples, 0.17%)</title><rect x="976.5" y="437" width="1.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="979.45" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1086.6" y="373" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1089.56" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="942.9" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="945.91" y="175.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.02%)</title><rect x="956.8" y="389" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="959.78" y="399.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.01%)</title><rect x="1023.0" y="373" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1025.98" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (48,939,393,450 samples, 16.32%)</title><rect x="510.7" y="373" width="192.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="513.65" y="383.5" >[libc.so.6]</text>
</g>
<g >
<title>sim::MetricsStorage::add_record (80,808,080 samples, 0.03%)</title><rect x="1023.9" y="389" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1026.90" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (60,606,060 samples, 0.02%)</title><rect x="747.5" y="421" width="0.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="750.52" y="431.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (6,191,919,130 samples, 2.06%)</title><rect x="1089.6" y="421" width="24.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1092.62" y="431.5" >s..</text>
</g>
<g >
<title>memcpy@plt (161,616,160 samples, 0.05%)</title><rect x="702.5" y="357" width="0.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="705.54" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.02%)</title><rect x="1109.5" y="325" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1112.45" y="335.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (565,656,560 samples, 0.19%)</title><rect x="730.0" y="421" width="2.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="733.04" y="431.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.01%)</title><rect x="86.2" y="453" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="89.22" y="463.5" ></text>
</g>
<g >
<title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (40,404,040 samples, 0.01%)</title><rect x="789.3" y="437" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="792.29" y="447.5" ></text>
</g>
<g >
<title>open64 (323,232,320 samples, 0.11%)</title><rect x="785.8" y="373" width="1.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="788.75" y="383.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (5,484,848,430 samples, 1.83%)</title><rect x="978.4" y="437" width="21.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="981.40" y="447.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="788.9" y="405" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="791.93" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="819.1" y="309" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="822.05" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.5" y="165" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.52" y="175.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1,282,828,270 samples, 0.43%)</title><rect x="722.3" y="421" width="5.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="725.29" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.04%)</title><rect x="943.2" y="229" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="946.23" y="239.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (80,808,080 samples, 0.03%)</title><rect x="1189.6" y="309" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.64" y="319.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (232,323,230 samples, 0.08%)</title><rect x="864.2" y="485" width="0.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="867.19" y="495.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (535,353,530 samples, 0.18%)</title><rect x="787.3" y="453" width="2.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="790.34" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (161,616,160 samples, 0.05%)</title><rect x="1084.0" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1086.98" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.4" y="357" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.41" y="367.5" ></text>
</g>
<g >
<title>sim::TcpFlow::process_single_ack (3,242,424,210 samples, 1.08%)</title><rect x="1039.8" y="421" width="12.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1042.75" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (151,515,150 samples, 0.05%)</title><rect x="817.7" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.70" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="652.8" y="309" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="655.79" y="319.5" ></text>
</g>
<g >
<title>strlen@plt (60,606,060 samples, 0.02%)</title><rect x="703.2" y="373" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="706.18" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (30,303,030 samples, 0.01%)</title><rect x="747.6" y="389" width="0.2" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="750.64" y="399.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (60,606,060 samples, 0.02%)</title><rect x="1052.2" y="389" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1055.23" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (202,020,200 samples, 0.07%)</title><rect x="1047.5" y="357" width="0.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1050.54" y="367.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_id[abi:cxx11] (30,303,030 samples, 0.01%)</title><rect x="1019.4" y="437" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1022.45" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 0.08%)</title><rect x="995.8" y="293" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="998.80" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="943.4" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="946.43" y="175.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (191,919,190 samples, 0.06%)</title><rect x="916.7" y="437" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="919.73" y="447.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (3,888,888,850 samples, 1.30%)</title><rect x="1071.4" y="421" width="15.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1074.42" y="431.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::export_to_files (196,979,796,010 samples, 65.67%)</title><rect x="10.4" y="485" width="774.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="13.40" y="495.5" >sim::LinksQueueSizeStorage::export_to_files</text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1174.1" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1177.11" y="287.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (151,515,150 samples, 0.05%)</title><rect x="784.0" y="469" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="787.00" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (373,737,370 samples, 0.12%)</title><rect x="12.1" y="405" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.11" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.04%)</title><rect x="1024.5" y="373" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1027.45" y="383.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (30,303,030 samples, 0.01%)</title><rect x="1109.7" y="373" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1112.73" y="383.5" ></text>
</g>
<g >
<title>__munmap (121,212,120 samples, 0.04%)</title><rect x="943.2" y="373" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="946.23" y="383.5" ></text>
</g>
<g >
<title>memchr@plt (141,414,140 samples, 0.05%)</title><rect x="433.5" y="437" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="436.48" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,868,686,850 samples, 0.62%)</title><rect x="1091.4" y="389" width="7.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1094.41" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1174.1" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1177.11" y="303.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (1,616,161,600 samples, 0.54%)</title><rect x="937.5" y="389" width="6.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="940.55" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (494,949,490 samples, 0.17%)</title><rect x="941.3" y="341" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="944.28" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="819.1" y="373" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="822.05" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (323,232,320 samples, 0.11%)</title><rect x="785.8" y="325" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.75" y="335.5" ></text>
</g>
<g >
<title>memcpy@plt (30,303,030 samples, 0.01%)</title><rect x="961.3" y="453" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="964.31" y="463.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (90,909,090 samples, 0.03%)</title><rect x="791.6" y="437" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="794.63" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (828,282,820 samples, 0.28%)</title><rect x="429.7" y="437" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="432.67" y="447.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (959,595,950 samples, 0.32%)</title><rect x="1110.2" y="405" width="3.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1113.17" y="415.5" ></text>
</g>
<g >
<title>sim::Link::arrive (11,313,131,200 samples, 3.77%)</title><rect x="913.8" y="453" width="44.5" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="916.83" y="463.5" >sim:..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (202,020,200 samples, 0.07%)</title><rect x="1108.4" y="277" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1111.38" y="287.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (181,818,180 samples, 0.06%)</title><rect x="438.1" y="437" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="441.09" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (212,121,210 samples, 0.07%)</title><rect x="816.3" y="325" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="819.27" y="335.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::operator (323,232,320 samples, 0.11%)</title><rect x="865.3" y="485" width="1.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="868.27" y="495.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::~MetricsCollector (90,909,090 samples, 0.03%)</title><rect x="10.0" y="485" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="13.04" y="495.5" ></text>
</g>
<g >
<title>brk (30,303,030 samples, 0.01%)</title><rect x="747.4" y="373" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="750.41" y="383.5" ></text>
</g>
<g >
<title>__default_morecore (30,303,030 samples, 0.01%)</title><rect x="747.5" y="357" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="750.52" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (494,949,490 samples, 0.17%)</title><rect x="941.3" y="373" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="944.28" y="383.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (50,505,050 samples, 0.02%)</title><rect x="1114.2" y="421" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1117.22" y="431.5" ></text>
</g>
<g >
<title>cfree (60,606,060 samples, 0.02%)</title><rect x="1018.6" y="389" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1021.61" y="399.5" ></text>
</g>
<g >
<title>pthread_once (212,121,210 samples, 0.07%)</title><rect x="710.4" y="421" width="0.8" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="713.41" y="431.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (60,606,060 samples, 0.02%)</title><rect x="1039.5" y="405" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1042.47" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_cwnd (80,808,080 samples, 0.03%)</title><rect x="1040.3" y="405" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1043.31" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="818.1" y="149" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="821.06" y="159.5" ></text>
</g>
<g >
<title>cfree (1,989,898,970 samples, 0.66%)</title><rect x="902.6" y="469" width="7.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="905.62" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 0.08%)</title><rect x="85.2" y="325" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.22" y="335.5" ></text>
</g>
<g >
<title>cfree (161,616,160 samples, 0.05%)</title><rect x="1086.1" y="389" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1089.09" y="399.5" ></text>
</g>
<g >
<title>malloc (121,212,120 samples, 0.04%)</title><rect x="947.9" y="373" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="950.92" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="1117.1" y="405" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1120.12" y="415.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (40,404,040 samples, 0.01%)</title><rect x="1019.6" y="437" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1022.57" y="447.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::~Arrive (40,404,040 samples, 0.01%)</title><rect x="865.1" y="485" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="868.11" y="495.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (121,212,120 samples, 0.04%)</title><rect x="1189.5" y="341" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.48" y="351.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (383,838,380 samples, 0.13%)</title><rect x="1048.7" y="373" width="1.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1051.65" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (131,313,130 samples, 0.04%)</title><rect x="1041.6" y="341" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1044.58" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1046.3" y="373" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1049.27" y="383.5" ></text>
</g>
<g >
<title>operator new (80,808,080 samples, 0.03%)</title><rect x="956.7" y="405" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="959.66" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (393,939,390 samples, 0.13%)</title><rect x="941.7" y="325" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="944.68" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (262,626,260 samples, 0.09%)</title><rect x="1013.8" y="437" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1016.84" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1109.2" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1112.17" y="303.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.01%)</title><rect x="996.9" y="373" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="999.92" y="383.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (333,333,330 samples, 0.11%)</title><rect x="785.8" y="453" width="1.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="788.75" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (151,515,150 samples, 0.05%)</title><rect x="817.7" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.70" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="974.4" y="389" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="977.42" y="399.5" ></text>
</g>
<g >
<title>__uselocale@plt (121,212,120 samples, 0.04%)</title><rect x="709.9" y="421" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="712.89" y="431.5" ></text>
</g>
<g >
<title>sim::Process::~Process (131,313,130 samples, 0.04%)</title><rect x="1169.7" y="469" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1172.69" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (191,919,190 samples, 0.06%)</title><rect x="942.5" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="945.48" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="747.0" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.05" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.04%)</title><rect x="943.2" y="341" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="946.23" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.03%)</title><rect x="1047.1" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1050.14" y="367.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (525,252,520 samples, 0.18%)</title><rect x="1136.8" y="389" width="2.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1139.75" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (111,111,110 samples, 0.04%)</title><rect x="999.5" y="389" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1002.54" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (303,030,300 samples, 0.10%)</title><rect x="85.0" y="341" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.02" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.08" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="652.8" y="277" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="655.79" y="287.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (90,909,090 samples, 0.03%)</title><rect x="952.8" y="421" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="955.77" y="431.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (2,717,171,690 samples, 0.91%)</title><rect x="711.6" y="421" width="10.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="714.60" y="431.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (70,707,070 samples, 0.02%)</title><rect x="787.1" y="453" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="790.06" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,939,393,920 samples, 0.65%)</title><rect x="714.7" y="357" width="7.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="717.66" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.5" y="277" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.52" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.04%)</title><rect x="943.2" y="245" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="946.23" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="747.1" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.09" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="747.2" y="101" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.25" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,252,525,240 samples, 0.42%)</title><rect x="812.2" y="341" width="4.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="815.18" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (131,313,130 samples, 0.04%)</title><rect x="996.3" y="213" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="999.28" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.04%)</title><rect x="943.2" y="261" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="946.23" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.04%)</title><rect x="943.2" y="325" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="946.23" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (151,515,150 samples, 0.05%)</title><rect x="817.7" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.70" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (191,919,190 samples, 0.06%)</title><rect x="85.5" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.46" y="287.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanNextToken (30,303,030 samples, 0.01%)</title><rect x="1189.6" y="261" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1192.64" y="271.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::~Transmit (50,505,050 samples, 0.02%)</title><rect x="866.5" y="485" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="869.54" y="495.5" ></text>
</g>
<g >
<title>__uselocale (1,616,161,600 samples, 0.54%)</title><rect x="703.5" y="421" width="6.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="706.54" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1113.8" y="341" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1116.82" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1046.9" y="309" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1049.95" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (151,515,150 samples, 0.05%)</title><rect x="817.7" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.70" y="383.5" ></text>
</g>
<g >
<title>__munmap (70,707,070 samples, 0.02%)</title><rect x="1109.2" y="357" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1112.17" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="819.1" y="341" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="822.05" y="351.5" ></text>
</g>
<g >
<title>sim::Summary::Summary (40,404,040 samples, 0.01%)</title><rect x="1189.1" y="501" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1192.13" y="511.5" ></text>
</g>
<g >
<title>sim::Event::Event (40,404,040 samples, 0.01%)</title><rect x="974.6" y="437" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="977.62" y="447.5" ></text>
</g>
<g >
<title>operator new (70,707,070 samples, 0.02%)</title><rect x="1109.5" y="357" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1112.45" y="367.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (1,040,404,030 samples, 0.35%)</title><rect x="1134.7" y="405" width="4.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1137.73" y="415.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.01%)</title><rect x="1022.9" y="389" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1025.94" y="399.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned int&gt;, bool&gt; std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;unsigned int&gt; &gt;::_M_insert_unique&lt;unsigned int const&amp;&gt; (191,919,190 samples, 0.06%)</title><rect x="1041.3" y="389" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1044.34" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (181,818,180 samples, 0.06%)</title><rect x="1108.5" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1111.46" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="996.8" y="245" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="999.80" y="255.5" ></text>
</g>
<g >
<title>writev (2,020,202,000 samples, 0.67%)</title><rect x="714.3" y="405" width="8.0" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="717.34" y="415.5" ></text>
</g>
<g >
<title>virtual thunk to sim::RoutingModule::get_id[abi:cxx11] (30,303,030 samples, 0.01%)</title><rect x="1053.5" y="437" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1056.46" y="447.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (848,484,840 samples, 0.28%)</title><rect x="1015.5" y="421" width="3.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1018.51" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.04%)</title><rect x="943.2" y="309" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="946.23" y="319.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.01%)</title><rect x="1167.0" y="437" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1170.03" y="447.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (2,353,535,330 samples, 0.78%)</title><rect x="988.1" y="405" width="9.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="991.05" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (454,545,450 samples, 0.15%)</title><rect x="1138.8" y="421" width="1.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1141.82" y="431.5" ></text>
</g>
<g >
<title>sim::ECMPHasher::get_hash (1,868,686,850 samples, 0.62%)</title><rect x="1131.5" y="421" width="7.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1134.47" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (30,303,030 samples, 0.01%)</title><rect x="1048.5" y="373" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1051.54" y="383.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (12,434,343,310 samples, 4.15%)</title><rect x="910.5" y="469" width="48.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="913.49" y="479.5" >sim:..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="788.9" y="389" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="791.93" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="996.8" y="213" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="999.80" y="223.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (616,161,610 samples, 0.21%)</title><rect x="743.7" y="437" width="2.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="746.71" y="447.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (979,797,970 samples, 0.33%)</title><rect x="1105.9" y="373" width="3.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1108.88" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 0.08%)</title><rect x="942.2" y="245" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="945.24" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="996.8" y="197" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="999.80" y="207.5" ></text>
</g>
<g >
<title>writev (40,404,040 samples, 0.01%)</title><rect x="788.9" y="421" width="0.2" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="791.93" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,292,929,250 samples, 1.43%)</title><rect x="800.2" y="357" width="16.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="803.22" y="367.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (50,505,050 samples, 0.02%)</title><rect x="1174.9" y="389" width="0.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1177.86" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.04%)</title><rect x="943.2" y="357" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="946.23" y="367.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (50,505,050 samples, 0.02%)</title><rect x="819.3" y="501" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="822.33" y="511.5" ></text>
</g>
<g >
<title>std::ostream::put (181,818,180 samples, 0.06%)</title><rect x="784.6" y="469" width="0.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="787.60" y="479.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.01%)</title><rect x="1037.5" y="389" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1040.53" y="399.5" ></text>
</g>
<g >
<title>__default_morecore (90,909,090 samples, 0.03%)</title><rect x="747.0" y="421" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="750.05" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="405" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.08" y="415.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (515,151,510 samples, 0.17%)</title><rect x="966.5" y="421" width="2.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="969.48" y="431.5" ></text>
</g>
<g >
<title>operator delete (30,303,030 samples, 0.01%)</title><rect x="1131.3" y="421" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1134.35" y="431.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (70,707,070 samples, 0.02%)</title><rect x="1000.6" y="453" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1003.61" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="786.8" y="85" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="789.79" y="95.5" ></text>
</g>
<g >
<title>sim::ECN::get_congestion_mark (40,404,040 samples, 0.01%)</title><rect x="1006.1" y="453" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1009.06" y="463.5" ></text>
</g>
<g >
<title>sim::Host::notify_about_arrival (373,737,370 samples, 0.12%)</title><rect x="917.6" y="437" width="1.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="920.56" y="447.5" ></text>
</g>
<g >
<title>sim::Switch::notify_about_arrival (2,090,909,070 samples, 0.70%)</title><rect x="949.3" y="437" width="8.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="952.27" y="447.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.02%)</title><rect x="1046.9" y="341" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1049.91" y="351.5" ></text>
</g>
<g >
<title>sim::TcpFlow::process_data_packet (4,656,565,610 samples, 1.55%)</title><rect x="1021.4" y="421" width="18.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1024.43" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (6,010,100,950 samples, 2.00%)</title><rect x="920.9" y="421" width="23.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="923.90" y="431.5" >s..</text>
</g>
<g >
<title>sim::EventComparator::operator (171,717,170 samples, 0.06%)</title><rect x="1012.0" y="453" width="0.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1014.98" y="463.5" ></text>
</g>
<g >
<title>cfree (30,303,030 samples, 0.01%)</title><rect x="747.4" y="421" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="750.41" y="431.5" ></text>
</g>
<g >
<title>operator new (191,919,190 samples, 0.06%)</title><rect x="1133.5" y="405" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1136.49" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="1084.3" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1087.26" y="223.5" ></text>
</g>
<g >
<title>operator new (131,313,130 samples, 0.04%)</title><rect x="947.9" y="389" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="950.88" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (40,404,040 samples, 0.01%)</title><rect x="1053.1" y="437" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1056.14" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::FlagInfo&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::FlagInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (30,303,030 samples, 0.01%)</title><rect x="1039.1" y="373" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1042.08" y="383.5" ></text>
</g>
<g >
<title>_start (299,939,390,940 samples, 100.00%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >_start</text>
</g>
<g >
<title>cfree (131,313,130 samples, 0.04%)</title><rect x="819.6" y="485" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="822.61" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="1174.0" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1177.03" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (171,717,170 samples, 0.06%)</title><rect x="1083.9" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1086.94" y="303.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (292,929,290 samples, 0.10%)</title><rect x="1085.6" y="405" width="1.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1088.57" y="415.5" ></text>
</g>
<g >
<title>strchrnul@plt (30,303,030 samples, 0.01%)</title><rect x="703.4" y="389" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="706.42" y="399.5" ></text>
</g>
<g >
<title>sim::Process::operator (373,737,370 samples, 0.12%)</title><rect x="866.7" y="485" width="1.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="869.74" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1109.2" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1112.17" y="351.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (30,303,030 samples, 0.01%)</title><rect x="1068.2" y="437" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1071.17" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (141,414,140 samples, 0.05%)</title><rect x="786.5" y="117" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="789.47" y="127.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="996.9" y="325" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="999.92" y="335.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (121,212,120 samples, 0.04%)</title><rect x="1189.5" y="357" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.48" y="367.5" ></text>
</g>
<g >
<title>utils::create_all_directories (30,303,030 samples, 0.01%)</title><rect x="819.1" y="453" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="822.05" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (323,232,320 samples, 0.11%)</title><rect x="785.8" y="277" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.75" y="287.5" ></text>
</g>
<g >
<title>sim::Process::operator (42,878,787,450 samples, 14.30%)</title><rect x="1001.0" y="469" width="168.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1004.01" y="479.5" >sim::Process::operator</text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (333,333,330 samples, 0.11%)</title><rect x="1050.6" y="373" width="1.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1053.64" y="383.5" ></text>
</g>
<g >
<title>sim::load_file (121,212,120 samples, 0.04%)</title><rect x="1189.5" y="485" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1192.48" y="495.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (171,717,170 samples, 0.06%)</title><rect x="746.1" y="453" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="749.13" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.04%)</title><rect x="13.1" y="261" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.10" y="271.5" ></text>
</g>
<g >
<title>__munmap (30,303,030 samples, 0.01%)</title><rect x="996.8" y="373" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="999.80" y="383.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.02%)</title><rect x="1046.9" y="357" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1049.91" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (474,747,470 samples, 0.16%)</title><rect x="11.7" y="453" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="14.71" y="463.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (181,818,180 samples, 0.06%)</title><rect x="438.8" y="437" width="0.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="441.81" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="996.6" y="165" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="999.56" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.4" y="309" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.41" y="319.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::operator (10,505,050,400 samples, 3.50%)</title><rect x="959.6" y="469" width="41.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="962.56" y="479.5" >sim..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (363,636,360 samples, 0.12%)</title><rect x="84.8" y="405" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.79" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1020.8" y="421" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1023.76" y="431.5" ></text>
</g>
<g >
<title>memcpy@plt (202,020,200 samples, 0.07%)</title><rect x="434.0" y="437" width="0.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="437.04" y="447.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::export_metrics_to_files (205,626,260,570 samples, 68.55%)</title><rect x="10.4" y="501" width="808.9" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="13.40" y="511.5" >sim::MetricsCollector::export_metrics_to_files</text>
</g>
<g >
<title>sim::ECMPHasher::get_hash (444,444,440 samples, 0.15%)</title><rect x="1179.2" y="421" width="1.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1182.23" y="431.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (7,464,646,390 samples, 2.49%)</title><rect x="919.0" y="437" width="29.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="922.03" y="447.5" >si..</text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="794.4" y="421" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="797.38" y="431.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (70,707,070 samples, 0.02%)</title><rect x="943.9" y="389" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="946.91" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.03%)</title><rect x="10.0" y="517" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (70,707,070 samples, 0.02%)</title><rect x="1026.6" y="389" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1029.56" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="788.9" y="325" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="791.93" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (191,919,190 samples, 0.06%)</title><rect x="942.5" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="945.48" y="223.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (40,404,040 samples, 0.01%)</title><rect x="1086.7" y="421" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1089.72" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::get_instance (60,606,060 samples, 0.02%)</title><rect x="997.4" y="421" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1000.43" y="431.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (50,505,050 samples, 0.02%)</title><rect x="1169.5" y="453" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1172.50" y="463.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (101,010,100 samples, 0.03%)</title><rect x="1189.6" y="325" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.56" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,222,222,210 samples, 0.41%)</title><rect x="905.6" y="453" width="4.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="908.64" y="463.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_data (393,939,390 samples, 0.13%)</title><rect x="1044.1" y="373" width="1.5" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1047.08" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1018.1" y="373" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1021.06" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="1108.7" y="197" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1111.74" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="819.1" y="293" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="822.05" y="303.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (30,303,030 samples, 0.01%)</title><rect x="819.2" y="469" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="822.21" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1109.3" y="133" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1112.33" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,929,292,910 samples, 0.64%)</title><rect x="714.7" y="325" width="7.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="717.70" y="335.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (323,232,320 samples, 0.11%)</title><rect x="785.8" y="437" width="1.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="788.75" y="447.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (60,606,060 samples, 0.02%)</title><rect x="1133.1" y="405" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1136.14" y="415.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (50,505,050 samples, 0.02%)</title><rect x="789.1" y="437" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="792.09" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="1046.9" y="325" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1049.91" y="335.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::get_instance (50,505,050 samples, 0.02%)</title><rect x="948.4" y="437" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="951.44" y="447.5" ></text>
</g>
<g >
<title>sim::ConnectionImpl::send_data (666,666,660 samples, 0.22%)</title><rect x="1043.2" y="389" width="2.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1046.17" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1042.0" y="325" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1044.98" y="335.5" ></text>
</g>
<g >
<title>main (299,838,380,840 samples, 99.96%)</title><rect x="10.4" y="517" width="1179.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="13.40" y="527.5" >main</text>
</g>
<g >
<title>YAML::Parser::HandleNextDocument (121,212,120 samples, 0.04%)</title><rect x="1189.5" y="437" width="0.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1192.48" y="447.5" ></text>
</g>
<g >
<title>memcpy@plt (30,303,030 samples, 0.01%)</title><rect x="977.0" y="421" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="980.05" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::export_to_file (8,595,959,510 samples, 2.87%)</title><rect x="785.4" y="469" width="33.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="788.35" y="479.5" >si..</text>
</g>
<g >
<title>sim::SimplePacketReordering::add_record (2,747,474,720 samples, 0.92%)</title><rect x="1026.9" y="405" width="10.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1029.88" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.08" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.02%)</title><rect x="1040.9" y="341" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1043.95" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (242,424,240 samples, 0.08%)</title><rect x="995.8" y="261" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="998.84" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="996.9" y="341" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="999.92" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="10.2" y="245" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.20" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (131,313,130 samples, 0.04%)</title><rect x="966.0" y="421" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="968.96" y="431.5" ></text>
</g>
<g >
<title>vsnprintf (40,404,040 samples, 0.01%)</title><rect x="818.8" y="421" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="821.81" y="431.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (343,434,340 samples, 0.11%)</title><rect x="1022.3" y="405" width="1.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1025.35" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="652.8" y="245" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="655.79" y="255.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (141,414,140 samples, 0.05%)</title><rect x="1174.5" y="405" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1177.50" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (111,111,110 samples, 0.04%)</title><rect x="1185.1" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1188.07" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.03%)</title><rect x="1130.9" y="421" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1133.91" y="431.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;sim::IHost,  (40,404,040 samples, 0.01%)</title><rect x="1053.3" y="437" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1056.30" y="447.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (80,808,080 samples, 0.03%)</title><rect x="1018.2" y="373" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1021.18" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,828,282,810 samples, 0.61%)</title><rect x="715.1" y="245" width="7.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="718.10" y="255.5" ></text>
</g>
<g >
<title>sim::Event::Event (30,303,030 samples, 0.01%)</title><rect x="1006.2" y="453" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1009.21" y="463.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.01%)</title><rect x="1037.5" y="373" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1040.53" y="383.5" ></text>
</g>
<g >
<title>cfree (191,919,190 samples, 0.06%)</title><rect x="1132.4" y="405" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1135.38" y="415.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (434,343,430 samples, 0.14%)</title><rect x="1172.8" y="389" width="1.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1175.79" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="85.8" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.78" y="255.5" ></text>
</g>
<g >
<title>sim::PacketNumMonitor::correctify_state (131,313,130 samples, 0.04%)</title><rect x="1040.7" y="389" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1043.67" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="1174.0" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1177.03" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.02%)</title><rect x="1005.7" y="453" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1008.66" y="463.5" ></text>
</g>
<g >
<title>sim::Scheduler::get_current_time (262,626,260 samples, 0.09%)</title><rect x="958.4" y="453" width="1.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="961.37" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="943.3" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="946.27" y="207.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (282,828,280 samples, 0.09%)</title><rect x="1156.5" y="437" width="1.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1159.46" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.08" y="271.5" ></text>
</g>
<g >
<title>cfree (5,767,676,710 samples, 1.92%)</title><rect x="281.9" y="437" width="22.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="284.92" y="447.5" >c..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (383,838,380 samples, 0.13%)</title><rect x="995.3" y="357" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="998.29" y="367.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (5,434,343,380 samples, 1.81%)</title><rect x="1119.2" y="437" width="21.4" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1122.23" y="447.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,696,969,680 samples, 0.57%)</title><rect x="715.6" y="229" width="6.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="718.62" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="1018.2" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1021.18" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="996.8" y="261" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="999.80" y="271.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::data[abi:cxx11] (727,272,720 samples, 0.24%)</title><rect x="83.5" y="469" width="2.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="86.47" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="1018.3" y="277" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1021.26" y="287.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (50,505,050 samples, 0.02%)</title><rect x="1189.6" y="277" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1192.64" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (151,515,150 samples, 0.05%)</title><rect x="817.7" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.70" y="255.5" ></text>
</g>
<g >
<title>operator new (343,434,340 samples, 0.11%)</title><rect x="274.2" y="437" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="277.21" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (474,747,470 samples, 0.16%)</title><rect x="11.7" y="437" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="14.71" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,979,797,960 samples, 0.66%)</title><rect x="980.3" y="405" width="7.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="983.27" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::FlagInfo&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::FlagInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (30,303,030 samples, 0.01%)</title><rect x="1039.2" y="389" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1042.20" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1109.2" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1112.17" y="335.5" ></text>
</g>
<g >
<title>sim::Link::get_from_egress_queue_size (40,404,040 samples, 0.01%)</title><rect x="1053.6" y="453" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1056.58" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (151,515,150 samples, 0.05%)</title><rect x="817.7" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.70" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="747.0" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.05" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="1018.2" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1021.18" y="335.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (111,111,110 samples, 0.04%)</title><rect x="1023.1" y="389" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1026.10" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.04%)</title><rect x="1132.7" y="389" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1135.66" y="399.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_packet_now (1,080,808,070 samples, 0.36%)</title><rect x="1182.5" y="453" width="4.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1185.53" y="463.5" ></text>
</g>
<g >
<title>sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::set_flag (50,505,050 samples, 0.02%)</title><rect x="1045.2" y="341" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1048.24" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="788.9" y="341" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="791.93" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (909,090,900 samples, 0.30%)</title><rect x="718.7" y="165" width="3.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="721.72" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="819.1" y="325" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="822.05" y="335.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (4,595,959,550 samples, 1.53%)</title><rect x="979.4" y="421" width="18.0" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="982.35" y="431.5" ></text>
</g>
<g >
<title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (686,868,680 samples, 0.23%)</title><rect x="727.3" y="421" width="2.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="730.34" y="431.5" ></text>
</g>
<g >
<title>operator delete (101,010,100 samples, 0.03%)</title><rect x="227.9" y="453" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="230.92" y="463.5" ></text>
</g>
<g >
<title>sim::TcpFlow::update (8,373,737,290 samples, 2.79%)</title><rect x="1019.8" y="437" width="32.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1022.77" y="447.5" >si..</text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1024.1" y="341" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1027.10" y="351.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (30,303,030 samples, 0.01%)</title><rect x="1189.8" y="277" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.84" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="996.8" y="181" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="999.80" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="996.7" y="149" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="999.68" y="159.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (80,808,080 samples, 0.03%)</title><rect x="1084.9" y="373" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1087.86" y="383.5" ></text>
</g>
<g >
<title>_IO_file_open (323,232,320 samples, 0.11%)</title><rect x="785.8" y="389" width="1.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="788.75" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.5" y="133" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.52" y="143.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (70,707,070 samples, 0.02%)</title><rect x="1050.4" y="373" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1053.36" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="996.8" y="341" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="999.80" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (171,717,170 samples, 0.06%)</title><rect x="1108.5" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1111.50" y="239.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.01%)</title><rect x="1189.1" y="485" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1192.13" y="495.5" ></text>
</g>
<g >
<title>writev (151,515,150 samples, 0.05%)</title><rect x="817.7" y="405" width="0.6" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="820.70" y="415.5" ></text>
</g>
<g >
<title>_IO_file_fopen (323,232,320 samples, 0.11%)</title><rect x="785.8" y="405" width="1.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="788.75" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (272,727,270 samples, 0.09%)</title><rect x="1185.5" y="405" width="1.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1188.51" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (303,030,300 samples, 0.10%)</title><rect x="785.8" y="181" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.83" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.4" y="229" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.41" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (323,232,320 samples, 0.11%)</title><rect x="785.8" y="293" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.75" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (242,424,240 samples, 0.08%)</title><rect x="995.8" y="245" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="998.84" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (313,131,310 samples, 0.10%)</title><rect x="721.1" y="117" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="724.06" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1084.4" y="149" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1087.42" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="747.0" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.05" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (151,515,150 samples, 0.05%)</title><rect x="817.7" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.70" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (474,747,470 samples, 0.16%)</title><rect x="436.2" y="437" width="1.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="439.22" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (292,929,290 samples, 0.10%)</title><rect x="995.6" y="309" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="998.64" y="319.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (60,606,060 samples, 0.02%)</title><rect x="944.2" y="389" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="947.18" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="996.8" y="293" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="999.80" y="303.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_packet_spacing (575,757,570 samples, 0.19%)</title><rect x="1184.4" y="437" width="2.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1187.40" y="447.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.01%)</title><rect x="1184.0" y="405" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1187.04" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="819.1" y="261" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="822.05" y="271.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::get_records (515,151,510 samples, 0.17%)</title><rect x="273.5" y="453" width="2.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="276.54" y="463.5" ></text>
</g>
<g >
<title>malloc (565,656,560 samples, 0.19%)</title><rect x="1167.3" y="421" width="2.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1170.27" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (90,909,090 samples, 0.03%)</title><rect x="747.4" y="437" width="0.4" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="750.41" y="447.5" ></text>
</g>
<g >
<title>std::filesystem::status (30,303,030 samples, 0.01%)</title><rect x="819.1" y="437" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="822.05" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="1108.8" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1111.78" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="818.0" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="821.02" y="175.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.01%)</title><rect x="1052.3" y="357" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1055.31" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (4,848,484,800 samples, 1.62%)</title><rect x="1091.0" y="405" width="19.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1094.01" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,242,424,230 samples, 0.41%)</title><rect x="717.4" y="181" width="4.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="720.40" y="191.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::get_storage_named (40,404,040 samples, 0.01%)</title><rect x="1023.7" y="389" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1026.74" y="399.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (979,797,970 samples, 0.33%)</title><rect x="944.5" y="421" width="3.9" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="947.54" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1109.2" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1112.17" y="191.5" ></text>
</g>
<g >
<title>cfree (80,808,080 samples, 0.03%)</title><rect x="1040.9" y="357" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1043.87" y="367.5" ></text>
</g>
<g >
<title>cfree (7,090,909,020 samples, 2.36%)</title><rect x="312.0" y="421" width="27.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="314.96" y="431.5" >c..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="943.1" y="149" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="946.11" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="652.8" y="293" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="655.79" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1109.2" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1112.17" y="175.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (1,030,303,020 samples, 0.34%)</title><rect x="1015.0" y="437" width="4.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1017.96" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.02%)</title><rect x="1109.5" y="309" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1112.49" y="319.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (6,929,292,860 samples, 2.31%)</title><rect x="1087.2" y="437" width="27.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1090.16" y="447.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.08" y="319.5" ></text>
</g>
<g >
<title>sim::TcpFlow::retransmit_packet (30,303,030 samples, 0.01%)</title><rect x="1187.4" y="453" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1190.38" y="463.5" ></text>
</g>
<g >
<title>sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::get_flag (40,404,040 samples, 0.01%)</title><rect x="1038.4" y="389" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1041.44" y="399.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (1,676,767,660 samples, 0.56%)</title><rect x="1078.6" y="389" width="6.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1081.58" y="399.5" ></text>
</g>
<g >
<title>fopen (323,232,320 samples, 0.11%)</title><rect x="785.8" y="421" width="1.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="788.75" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.5" y="229" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.52" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="789.0" y="293" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="791.97" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (272,727,270 samples, 0.09%)</title><rect x="469.4" y="405" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="472.40" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,020,202,000 samples, 0.67%)</title><rect x="72.1" y="421" width="8.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="75.15" y="431.5" ></text>
</g>
<g >
<title>sim::Process::Process (131,313,130 samples, 0.04%)</title><rect x="957.0" y="405" width="0.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="959.98" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="819.1" y="357" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="822.05" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (40,404,040 samples, 0.01%)</title><rect x="1000.0" y="437" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1002.98" y="447.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.01%)</title><rect x="1189.1" y="469" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1192.13" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="13.4" y="229" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.42" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;Time&lt;Nanosecond&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (16,929,292,760 samples, 5.64%)</title><rect x="347.4" y="453" width="66.6" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="350.37" y="463.5" >std::_R..</text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.04%)</title><rect x="993.5" y="389" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="996.54" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (212,121,210 samples, 0.07%)</title><rect x="12.7" y="309" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.74" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="747.0" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.05" y="335.5" ></text>
</g>
<g >
<title>operator new (838,383,830 samples, 0.28%)</title><rect x="80.2" y="469" width="3.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="83.18" y="479.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (707,070,700 samples, 0.24%)</title><rect x="1015.8" y="405" width="2.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1018.75" y="415.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (292,929,290 samples, 0.10%)</title><rect x="1179.8" y="405" width="1.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1182.83" y="415.5" ></text>
</g>
<g >
<title>memcpy@plt (30,303,030 samples, 0.01%)</title><rect x="791.2" y="437" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="794.24" y="447.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (535,353,530 samples, 0.18%)</title><rect x="414.0" y="453" width="2.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="417.01" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="789.0" y="309" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="791.97" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,979,797,960 samples, 0.66%)</title><rect x="714.5" y="373" width="7.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="717.50" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,444,444,430 samples, 0.48%)</title><rect x="1072.9" y="389" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1075.89" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="747.5" y="373" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="750.52" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1070.0" y="421" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1072.95" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.5" y="309" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.52" y="319.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (50,505,050 samples, 0.02%)</title><rect x="1114.0" y="421" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1116.98" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (757,575,750 samples, 0.25%)</title><rect x="994.1" y="389" width="2.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="997.06" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1174.2" y="213" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1177.18" y="223.5" ></text>
</g>
<g >
<title>sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::set_flag (151,515,150 samples, 0.05%)</title><rect x="1038.6" y="389" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1041.60" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,999,999,980 samples, 0.67%)</title><rect x="922.2" y="405" width="7.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="925.25" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (303,030,300 samples, 0.10%)</title><rect x="785.8" y="197" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.83" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (323,232,320 samples, 0.11%)</title><rect x="785.8" y="261" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.75" y="271.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (212,121,210 samples, 0.07%)</title><rect x="957.5" y="437" width="0.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="960.50" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (111,111,110 samples, 0.04%)</title><rect x="1131.9" y="405" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1134.94" y="415.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (353,535,350 samples, 0.12%)</title><rect x="434.8" y="437" width="1.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="437.83" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="795.2" y="405" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="798.21" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (212,121,210 samples, 0.07%)</title><rect x="786.2" y="133" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="789.19" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (16,707,070,540 samples, 5.57%)</title><rect x="14.4" y="437" width="65.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.37" y="447.5" >[libc.s..</text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (252,525,250 samples, 0.08%)</title><rect x="1017.5" y="389" width="1.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1020.54" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="1018.3" y="245" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1021.33" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (787,878,780 samples, 0.26%)</title><rect x="719.2" y="149" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="722.19" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="747.1" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.09" y="191.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (333,333,330 samples, 0.11%)</title><rect x="1070.1" y="421" width="1.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1073.11" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="747.0" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.05" y="303.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (242,424,240 samples, 0.08%)</title><rect x="1117.1" y="421" width="0.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1120.08" y="431.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (585,858,580 samples, 0.20%)</title><rect x="997.7" y="421" width="2.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1000.67" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.4" y="213" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.41" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.04%)</title><rect x="943.2" y="293" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="946.23" y="303.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::export_to_files (8,646,464,560 samples, 2.88%)</title><rect x="785.3" y="485" width="34.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="788.32" y="495.5" >si..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="722.1" y="69" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="725.09" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.5" y="181" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.52" y="191.5" ></text>
</g>
<g >
<title>sim::Link::get_max_from_egress_buffer_size (50,505,050 samples, 0.02%)</title><rect x="1053.7" y="453" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1056.74" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="818.2" y="117" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="821.18" y="127.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (3,272,727,240 samples, 1.09%)</title><rect x="1072.5" y="405" width="12.9" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1075.50" y="415.5" ></text>
</g>
<g >
<title>sim::TcpFlow::get_sending_quota (30,303,030 samples, 0.01%)</title><rect x="1043.8" y="357" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1046.81" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="943.3" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="946.27" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1109.2" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1112.17" y="319.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (313,131,310 samples, 0.10%)</title><rect x="977.2" y="421" width="1.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="980.17" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,292,929,280 samples, 0.43%)</title><rect x="342.3" y="453" width="5.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="345.28" y="463.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (171,717,170 samples, 0.06%)</title><rect x="817.6" y="421" width="0.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="820.62" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1109.2" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1112.17" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (353,535,350 samples, 0.12%)</title><rect x="941.8" y="309" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="944.84" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="1109.0" y="149" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1112.02" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="652.8" y="341" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="655.79" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (323,232,320 samples, 0.11%)</title><rect x="84.9" y="357" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.94" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1109.2" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1112.17" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (474,747,470 samples, 0.16%)</title><rect x="11.7" y="469" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="14.71" y="479.5" ></text>
</g>
<g >
<title>operator new (515,151,510 samples, 0.17%)</title><rect x="972.6" y="437" width="2.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="975.60" y="447.5" ></text>
</g>
<g >
<title>sim::TcpFlow::SendAtTime::operator (1,181,818,170 samples, 0.39%)</title><rect x="1182.2" y="469" width="4.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1185.21" y="479.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (7,444,444,370 samples, 2.48%)</title><rect x="789.7" y="453" width="29.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="792.69" y="463.5" >st..</text>
</g>
<g >
<title>[libc.so.6] (16,707,070,540 samples, 5.57%)</title><rect x="14.4" y="453" width="65.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.37" y="463.5" >[libc.s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (242,424,240 samples, 0.08%)</title><rect x="786.1" y="149" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="789.07" y="159.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_cwnd (484,848,480 samples, 0.16%)</title><rect x="1048.3" y="389" width="1.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1051.34" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="819.1" y="277" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="822.05" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (333,333,330 samples, 0.11%)</title><rect x="84.9" y="389" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.90" y="399.5" ></text>
</g>
<g >
<title>cfree (90,909,090 samples, 0.03%)</title><rect x="747.0" y="453" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="750.05" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (191,919,190 samples, 0.06%)</title><rect x="85.5" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.46" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (141,414,140 samples, 0.05%)</title><rect x="1084.1" y="245" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1087.06" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (363,636,360 samples, 0.12%)</title><rect x="12.1" y="389" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.15" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (181,818,180 samples, 0.06%)</title><rect x="1083.9" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1086.90" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (282,828,280 samples, 0.09%)</title><rect x="12.5" y="341" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.46" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="943.7" y="341" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="946.71" y="351.5" ></text>
</g>
<g >
<title>std::ostream::put (3,020,201,990 samples, 1.01%)</title><rect x="734.3" y="453" width="11.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="737.25" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (313,131,310 samples, 0.10%)</title><rect x="942.0" y="261" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="945.00" y="271.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (111,111,110 samples, 0.04%)</title><rect x="1019.0" y="437" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1022.01" y="447.5" ></text>
</g>
<g >
<title>cfree (30,303,030 samples, 0.01%)</title><rect x="747.5" y="389" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="750.52" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (181,818,180 samples, 0.06%)</title><rect x="747.0" y="469" width="0.8" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="750.05" y="479.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.01%)</title><rect x="1005.9" y="453" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1008.94" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.4" y="325" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.41" y="335.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (3,636,363,600 samples, 1.21%)</title><rect x="930.1" y="405" width="14.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="933.12" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="1174.1" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1177.14" y="255.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (4,797,979,750 samples, 1.60%)</title><rect x="1068.3" y="437" width="18.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1071.28" y="447.5" ></text>
</g>
<g >
<title>sim::RoundRobinMPLB::select_flow (90,909,090 samples, 0.03%)</title><rect x="1043.6" y="373" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1046.65" y="383.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (74,161,615,420 samples, 24.72%)</title><rect x="442.5" y="437" width="291.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="445.50" y="447.5" >std::ostreambuf_iterator&lt;char, std::cha..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (232,323,230 samples, 0.08%)</title><rect x="85.3" y="309" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.30" y="319.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (1,040,404,030 samples, 0.35%)</title><rect x="1171.0" y="437" width="4.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1174.01" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.4" y="293" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.41" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="1174.0" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1177.03" y="367.5" ></text>
</g>
<g >
<title>sim::Link::get_to_ingress_queue_size (80,808,080 samples, 0.03%)</title><rect x="1054.9" y="453" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1057.93" y="463.5" ></text>
</g>
<g >
<title>sim::SendData::operator (80,808,080 samples, 0.03%)</title><rect x="1188.6" y="485" width="0.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1191.65" y="495.5" ></text>
</g>
<g >
<title>memcpy@plt (30,303,030 samples, 0.01%)</title><rect x="1065.4" y="437" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1068.38" y="447.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Host::process (50,505,050 samples, 0.02%)</title><rect x="1187.6" y="469" width="0.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1190.58" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="913.6" y="453" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="916.59" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (141,414,140 samples, 0.05%)</title><rect x="432.9" y="437" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="435.92" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (141,414,140 samples, 0.05%)</title><rect x="339.9" y="421" width="0.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="342.86" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="817.9" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.90" y="207.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (525,252,520 samples, 0.18%)</title><rect x="950.7" y="421" width="2.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="953.70" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1189.1" y="453" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1192.13" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (171,717,170 samples, 0.06%)</title><rect x="971.9" y="437" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="974.88" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (333,333,330 samples, 0.11%)</title><rect x="941.9" y="277" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="944.92" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,525,252,470 samples, 1.84%)</title><rect x="795.5" y="389" width="21.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="798.49" y="399.5" >[..</text>
</g>
<g >
<title>sim::Switch::process (25,878,787,620 samples, 8.63%)</title><rect x="1055.8" y="453" width="101.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1058.77" y="463.5" >sim::Switch:..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.4" y="181" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.41" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="943.7" y="325" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="946.75" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (343,434,340 samples, 0.11%)</title><rect x="274.2" y="405" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="277.21" y="415.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (656,565,650 samples, 0.22%)</title><rect x="965.9" y="437" width="2.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="968.92" y="447.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (50,505,050 samples, 0.02%)</title><rect x="1189.6" y="293" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1192.64" y="303.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (262,626,260 samples, 0.09%)</title><rect x="953.1" y="421" width="1.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="956.13" y="431.5" ></text>
</g>
<g >
<title>brk (30,303,030 samples, 0.01%)</title><rect x="747.5" y="341" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="750.52" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (222,222,220 samples, 0.07%)</title><rect x="995.9" y="229" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="998.92" y="239.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (70,707,070 samples, 0.02%)</title><rect x="1118.4" y="437" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1121.43" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (262,626,260 samples, 0.09%)</title><rect x="1083.6" y="325" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1086.58" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.5" y="325" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.52" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (202,020,200 samples, 0.07%)</title><rect x="13.6" y="469" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.58" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (2,515,151,490 samples, 0.84%)</title><rect x="1146.6" y="437" width="9.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1149.57" y="447.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (121,212,120 samples, 0.04%)</title><rect x="732.3" y="421" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="735.27" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1184.4" y="421" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1187.44" y="431.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.01%)</title><rect x="1052.3" y="373" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1055.31" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (494,949,490 samples, 0.17%)</title><rect x="941.3" y="357" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="944.28" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1084.3" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1087.34" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (313,131,310 samples, 0.10%)</title><rect x="785.8" y="245" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.79" y="255.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (1,585,858,570 samples, 0.53%)</title><rect x="1175.4" y="437" width="6.3" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1178.42" y="447.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (30,303,030 samples, 0.01%)</title><rect x="1189.8" y="261" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.84" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,040,404,020 samples, 0.68%)</title><rect x="693.8" y="325" width="8.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="696.80" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="942.9" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="945.87" y="191.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_delivery_rate (454,545,450 samples, 0.15%)</title><rect x="1050.2" y="389" width="1.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1053.24" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_packet_reordering (797,979,790 samples, 0.27%)</title><rect x="1023.7" y="405" width="3.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1026.70" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.5" y="149" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.52" y="159.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (80,808,080 samples, 0.03%)</title><rect x="1175.1" y="437" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1178.10" y="447.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (171,717,170 samples, 0.06%)</title><rect x="1173.7" y="373" width="0.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1176.71" y="383.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (81,232,322,420 samples, 27.08%)</title><rect x="869.1" y="485" width="319.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="872.08" y="495.5" >sim::Scheduler::tick</text>
</g>
<g >
<title>[[kernel.kallsyms]] (262,626,260 samples, 0.09%)</title><rect x="12.5" y="325" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.54" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.02%)</title><rect x="961.1" y="453" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="964.07" y="463.5" ></text>
</g>
<g >
<title>__munmap (80,808,080 samples, 0.03%)</title><rect x="10.1" y="453" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.08" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="652.8" y="325" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="655.79" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="86.2" y="421" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="89.22" y="431.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.01%)</title><rect x="227.8" y="453" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="230.76" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,323,232,310 samples, 0.44%)</title><rect x="408.8" y="389" width="5.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="411.76" y="399.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::get_max_size (70,707,070 samples, 0.02%)</title><rect x="1055.4" y="453" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1058.45" y="463.5" ></text>
</g>
<g >
<title>vsnprintf (5,565,656,510 samples, 1.86%)</title><rect x="795.3" y="405" width="21.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="798.33" y="415.5" >v..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="1174.1" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1177.14" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="281.8" y="437" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="284.76" y="447.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (707,070,700 samples, 0.24%)</title><rect x="1171.7" y="405" width="2.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1174.72" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="747.0" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.05" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.03%)</title><rect x="747.0" y="437" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="750.05" y="447.5" ></text>
</g>
<g >
<title>operator new (11,494,949,380 samples, 3.83%)</title><rect x="228.3" y="453" width="45.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="231.32" y="463.5" >oper..</text>
</g>
<g >
<title>sim::TcpFlow::get_id[abi:cxx11] (121,212,120 samples, 0.04%)</title><rect x="1134.2" y="405" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1137.25" y="415.5" ></text>
</g>
<g >
<title>sim::Host::send_packet (2,919,191,890 samples, 0.97%)</title><rect x="1170.4" y="453" width="11.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1173.45" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (313,131,310 samples, 0.10%)</title><rect x="995.6" y="325" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="998.57" y="335.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (111,111,110 samples, 0.04%)</title><rect x="1021.9" y="405" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1024.87" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="389" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.08" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (474,747,470 samples, 0.16%)</title><rect x="84.3" y="453" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.35" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (262,626,260 samples, 0.09%)</title><rect x="1083.6" y="341" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1086.58" y="351.5" ></text>
</g>
<g >
<title>operator delete (111,111,110 samples, 0.04%)</title><rect x="820.1" y="485" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="823.12" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="996.5" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="999.52" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,929,292,910 samples, 0.64%)</title><rect x="714.7" y="341" width="7.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="717.70" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1109.3" y="149" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1112.33" y="159.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (131,313,130 samples, 0.04%)</title><rect x="439.5" y="437" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="442.52" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1018.4" y="213" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1021.37" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (383,838,380 samples, 0.13%)</title><rect x="995.3" y="341" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="998.29" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1109.2" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1112.17" y="255.5" ></text>
</g>
<g >
<title>malloc (16,212,121,050 samples, 5.40%)</title><rect x="350.2" y="421" width="63.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="353.19" y="431.5" >malloc</text>
</g>
<g >
<title>operator new (16,313,131,150 samples, 5.44%)</title><rect x="349.8" y="437" width="64.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="352.79" y="447.5" >operato..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="747.0" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.05" y="271.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleDocument (121,212,120 samples, 0.04%)</title><rect x="1189.5" y="421" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1192.48" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::get_instance (50,505,050 samples, 0.02%)</title><rect x="1085.4" y="405" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1088.37" y="415.5" ></text>
</g>
<g >
<title>sim::LinkQueue::empty (90,909,090 samples, 0.03%)</title><rect x="1118.1" y="437" width="0.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1121.08" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (151,515,150 samples, 0.05%)</title><rect x="85.6" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.62" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;unsigned int&gt; &gt;::_M_erase (111,111,110 samples, 0.04%)</title><rect x="1040.7" y="373" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1043.75" y="383.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (111,111,110 samples, 0.04%)</title><rect x="1043.2" y="373" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1046.17" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="996.4" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="999.36" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (787,878,780 samples, 0.26%)</title><rect x="1062.3" y="437" width="3.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1065.28" y="447.5" ></text>
</g>
<g >
<title>cfree (16,707,070,540 samples, 5.57%)</title><rect x="14.4" y="469" width="65.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="17.37" y="479.5" >cfree</text>
</g>
<g >
<title>[libc.so.6] (161,616,160 samples, 0.05%)</title><rect x="909.8" y="437" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="912.81" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (90,909,090 samples, 0.03%)</title><rect x="1052.7" y="437" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1055.71" y="447.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (50,505,050 samples, 0.02%)</title><rect x="1184.8" y="421" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1187.75" y="431.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (40,404,040 samples, 0.01%)</title><rect x="1055.3" y="453" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1058.29" y="463.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (171,717,170 samples, 0.06%)</title><rect x="1180.3" y="389" width="0.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1183.30" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,929,292,910 samples, 0.64%)</title><rect x="714.7" y="309" width="7.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="717.70" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (323,232,320 samples, 0.11%)</title><rect x="785.8" y="309" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.75" y="319.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (1,222,222,210 samples, 0.41%)</title><rect x="1140.6" y="437" width="4.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1143.61" y="447.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.01%)</title><rect x="996.9" y="357" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="999.92" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="421" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.08" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (202,020,200 samples, 0.07%)</title><rect x="1108.4" y="261" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1111.38" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (111,111,110 samples, 0.04%)</title><rect x="1050.6" y="357" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1053.64" y="367.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (595,959,590 samples, 0.20%)</title><rect x="1024.2" y="389" width="2.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1027.22" y="399.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.01%)</title><rect x="86.2" y="437" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="89.22" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (212,121,210 samples, 0.07%)</title><rect x="1108.3" y="293" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1111.34" y="303.5" ></text>
</g>
<g >
<title>cfree (373,737,370 samples, 0.12%)</title><rect x="998.5" y="405" width="1.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1001.51" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="786.8" y="53" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="789.83" y="63.5" ></text>
</g>
<g >
<title>cfree (121,212,120 samples, 0.04%)</title><rect x="339.9" y="405" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="342.94" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (151,515,150 samples, 0.05%)</title><rect x="13.0" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.98" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="789.0" y="245" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="791.97" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (262,626,260 samples, 0.09%)</title><rect x="786.0" y="165" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.99" y="175.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Switch::process (202,020,200 samples, 0.07%)</title><rect x="1187.8" y="469" width="0.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1190.77" y="479.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (50,505,050 samples, 0.02%)</title><rect x="789.5" y="453" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="792.49" y="463.5" ></text>
</g>
<g >
<title>sim::TcpFlow::generate_data_packet (222,222,220 samples, 0.07%)</title><rect x="1044.7" y="357" width="0.9" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1047.72" y="367.5" ></text>
</g>
<g >
<title>malloc (60,606,060 samples, 0.02%)</title><rect x="1134.5" y="373" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1137.49" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (393,939,390 samples, 0.13%)</title><rect x="12.0" y="421" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.03" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="789.0" y="261" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="791.97" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (12,434,343,310 samples, 4.15%)</title><rect x="652.9" y="341" width="48.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="655.91" y="351.5" >[lib..</text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (2,838,383,810 samples, 0.95%)</title><rect x="1098.8" y="389" width="11.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1101.80" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="789.0" y="277" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="791.97" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (16,484,848,320 samples, 5.50%)</title><rect x="275.6" y="453" width="64.8" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="278.56" y="463.5" >std::_R..</text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.01%)</title><rect x="918.8" y="405" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="921.75" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (58,333,332,750 samples, 19.45%)</title><rect x="473.9" y="389" width="229.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="476.93" y="399.5" >[libc.so.6]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="817.9" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.86" y="223.5" ></text>
</g>
<g >
<title>malloc (151,515,150 samples, 0.05%)</title><rect x="1133.7" y="389" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1136.65" y="399.5" ></text>
</g>
<g >
<title>sim::Process::~Process (222,222,220 samples, 0.07%)</title><rect x="868.2" y="485" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="871.21" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="788.9" y="373" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="791.93" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="747.1" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.13" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1109.2" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1112.17" y="239.5" ></text>
</g>
<g >
<title>sim::Scheduler::get_current_time (30,303,030 samples, 0.01%)</title><rect x="1000.5" y="453" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1003.49" y="463.5" ></text>
</g>
<g >
<title>vsnprintf (343,434,340 samples, 0.11%)</title><rect x="732.7" y="421" width="1.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="735.74" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="1174.1" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1177.14" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="747.0" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.05" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (323,232,320 samples, 0.11%)</title><rect x="785.8" y="357" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.75" y="367.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;, std::weak_ptr&lt;sim::IProcessingDevice&gt;&amp;&gt; (2,818,181,790 samples, 0.94%)</title><rect x="1158.4" y="453" width="11.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1161.41" y="463.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (252,525,250 samples, 0.08%)</title><rect x="1145.6" y="437" width="1.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1148.57" y="447.5" ></text>
</g>
<g >
<title>malloc (343,434,340 samples, 0.11%)</title><rect x="274.2" y="421" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="277.21" y="431.5" ></text>
</g>
<g >
<title>sim::Link::get_max_to_ingress_queue_size (151,515,150 samples, 0.05%)</title><rect x="1053.9" y="453" width="0.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1056.94" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;Time&lt;Nanosecond&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (30,303,030 samples, 0.01%)</title><rect x="783.8" y="469" width="0.2" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="786.84" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1021.7" y="405" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1024.71" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.08" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.08" y="351.5" ></text>
</g>
<g >
<title>vsnprintf (59,242,423,650 samples, 19.75%)</title><rect x="470.5" y="405" width="233.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="473.48" y="415.5" >vsnprintf</text>
</g>
<g >
<title>[libc.so.6] (202,020,200 samples, 0.07%)</title><rect x="936.7" y="389" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="939.71" y="399.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (80,808,080 samples, 0.03%)</title><rect x="818.3" y="421" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="821.30" y="431.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (30,303,030 samples, 0.01%)</title><rect x="791.5" y="437" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="794.51" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="996.8" y="229" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="999.80" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (9,020,201,930 samples, 3.01%)</title><rect x="304.9" y="437" width="35.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="307.93" y="447.5" >std..</text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (313,131,310 samples, 0.10%)</title><rect x="1047.1" y="373" width="1.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1050.10" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (323,232,320 samples, 0.11%)</title><rect x="84.9" y="373" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.94" y="383.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.02%)</title><rect x="943.7" y="357" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="946.71" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="948.3" y="357" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="951.28" y="367.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.01%)</title><rect x="1024.1" y="373" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1027.10" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="902.4" y="469" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="905.42" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1018.7" y="373" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1021.69" y="383.5" ></text>
</g>
<g >
<title>YAML::Load (121,212,120 samples, 0.04%)</title><rect x="1189.5" y="453" width="0.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1192.48" y="463.5" ></text>
</g>
<g >
<title>sim::TcpFlow::Timeout::operator (161,616,160 samples, 0.05%)</title><rect x="1186.9" y="469" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1189.86" y="479.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (454,545,450 samples, 0.15%)</title><rect x="961.5" y="453" width="1.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="964.47" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (474,747,470 samples, 0.16%)</title><rect x="340.4" y="453" width="1.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="343.42" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="996.8" y="309" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="999.80" y="319.5" ></text>
</g>
<g >
<title>malloc (484,848,480 samples, 0.16%)</title><rect x="972.7" y="421" width="1.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="975.72" y="431.5" ></text>
</g>
<g >
<title>sim::Host::process (10,404,040,300 samples, 3.47%)</title><rect x="1012.7" y="453" width="40.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1015.65" y="463.5" >sim..</text>
</g>
<g >
<title>brk (90,909,090 samples, 0.03%)</title><rect x="747.0" y="405" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="750.05" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="819.1" y="245" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="822.05" y="255.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (1,434,343,420 samples, 0.48%)</title><rect x="1006.3" y="453" width="5.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1009.33" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (525,252,520 samples, 0.18%)</title><rect x="461.5" y="421" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="464.50" y="431.5" ></text>
</g>
<g >
<title>pthread_once@plt (90,909,090 samples, 0.03%)</title><rect x="711.2" y="421" width="0.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="714.24" y="431.5" ></text>
</g>
<g >
<title>operator new (171,717,170 samples, 0.06%)</title><rect x="1041.4" y="373" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1044.42" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (323,232,320 samples, 0.11%)</title><rect x="785.8" y="341" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.75" y="351.5" ></text>
</g>
<g >
<title>vsnprintf@plt (40,404,040 samples, 0.01%)</title><rect x="734.1" y="421" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="737.09" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (474,747,470 samples, 0.16%)</title><rect x="84.3" y="437" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.35" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (151,515,150 samples, 0.05%)</title><rect x="817.7" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.70" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="1018.2" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1021.18" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (141,414,140 samples, 0.05%)</title><rect x="817.7" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.74" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.5" y="213" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.52" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="747.4" y="405" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="750.41" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="819.1" y="389" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="822.05" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,424,242,410 samples, 0.47%)</title><rect x="716.7" y="197" width="5.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="719.69" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.04%)</title><rect x="1084.1" y="229" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1087.14" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (474,747,470 samples, 0.16%)</title><rect x="84.3" y="421" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.35" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.02%)</title><rect x="916.4" y="437" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="919.37" y="447.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (121,212,120 samples, 0.04%)</title><rect x="1189.5" y="405" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.48" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (373,737,370 samples, 0.12%)</title><rect x="1016.0" y="389" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1018.99" y="399.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (929,292,920 samples, 0.31%)</title><rect x="1171.4" y="421" width="3.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1174.40" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="86.1" y="229" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="89.10" y="239.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (60,606,060 samples, 0.02%)</title><rect x="997.1" y="389" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1000.08" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="437" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.08" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,878,787,860 samples, 0.63%)</title><rect x="714.9" y="277" width="7.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="717.90" y="287.5" ></text>
</g>
<g >
<title>sim::Scheduler::get_current_time (30,303,030 samples, 0.01%)</title><rect x="948.6" y="437" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="951.64" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (494,949,490 samples, 0.17%)</title><rect x="302.7" y="421" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="305.67" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.04%)</title><rect x="721.8" y="101" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="724.81" y="111.5" ></text>
</g>
<g >
<title>nons (299,949,491,950 samples, 100.00%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >nons</text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (30,303,030 samples, 0.01%)</title><rect x="1189.8" y="293" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.84" y="303.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;&amp;, std::weak_ptr&lt;sim::ISwitch&gt;&amp;&gt; (848,484,840 samples, 0.28%)</title><rect x="954.2" y="421" width="3.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="957.16" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (44,656,565,210 samples, 14.89%)</title><rect x="526.2" y="357" width="175.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="529.19" y="367.5" >[libc.so.6]</text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (50,505,050 samples, 0.02%)</title><rect x="1084.7" y="373" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1087.66" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (131,313,130 samples, 0.04%)</title><rect x="1157.9" y="453" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1160.89" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.5" y="197" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.52" y="207.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (131,313,130 samples, 0.04%)</title><rect x="948.8" y="437" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="951.75" y="447.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (70,707,070 samples, 0.02%)</title><rect x="788.8" y="437" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="791.81" y="447.5" ></text>
</g>
<g >
<title>virtual thunk to sim::RoutingModule::get_id[abi:cxx11] (30,303,030 samples, 0.01%)</title><rect x="1052.6" y="421" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1055.59" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="1070.3" y="405" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1073.31" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1108.9" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1111.90" y="175.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (444,444,440 samples, 0.15%)</title><rect x="1082.9" y="373" width="1.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1085.91" y="383.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (50,505,050 samples, 0.02%)</title><rect x="746.8" y="453" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="749.81" y="463.5" ></text>
</g>
<g >
<title>malloc (797,979,790 samples, 0.27%)</title><rect x="80.3" y="453" width="3.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="83.34" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (111,111,110 samples, 0.04%)</title><rect x="976.6" y="421" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="979.61" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (292,929,290 samples, 0.10%)</title><rect x="12.4" y="357" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.42" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (313,131,310 samples, 0.10%)</title><rect x="1107.9" y="357" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1110.94" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.03%)</title><rect x="1044.9" y="341" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1047.88" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 0.08%)</title><rect x="995.8" y="277" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="998.80" y="287.5" ></text>
</g>
<g >
<title>__libc_alloca_cutoff (171,717,170 samples, 0.06%)</title><rect x="701.9" y="357" width="0.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="704.87" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="1174.1" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1177.07" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (292,929,290 samples, 0.10%)</title><rect x="1168.3" y="405" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1171.34" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="747.2" y="117" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.25" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,878,787,860 samples, 0.63%)</title><rect x="714.9" y="261" width="7.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="717.90" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (414,141,410 samples, 0.14%)</title><rect x="1024.9" y="373" width="1.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1027.93" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="1018.3" y="261" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1021.26" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (313,131,310 samples, 0.10%)</title><rect x="785.8" y="229" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.79" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="786.7" y="101" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="789.67" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.4" y="197" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.41" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="943.5" y="149" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="946.51" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (343,434,340 samples, 0.11%)</title><rect x="1048.8" y="357" width="1.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1051.81" y="367.5" ></text>
</g>
<g >
<title>operator new (131,313,130 samples, 0.04%)</title><rect x="1113.4" y="373" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1116.43" y="383.5" ></text>
</g>
<g >
<title>sim::ConnectionImpl::update (101,010,100 samples, 0.03%)</title><rect x="1045.8" y="389" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1048.79" y="399.5" ></text>
</g>
<g >
<title>sim::TcpFlow::create_ack (434,343,430 samples, 0.14%)</title><rect x="1037.7" y="405" width="1.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1040.69" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1084.3" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1087.34" y="207.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (171,717,170 samples, 0.06%)</title><rect x="1117.4" y="405" width="0.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1120.36" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="1038.2" y="389" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1041.24" y="399.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (161,616,160 samples, 0.05%)</title><rect x="1189.3" y="501" width="0.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1192.32" y="511.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (202,020,200 samples, 0.07%)</title><rect x="1183.6" y="437" width="0.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1186.60" y="447.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (50,505,050 samples, 0.02%)</title><rect x="818.6" y="421" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="821.61" y="431.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (30,303,030 samples, 0.01%)</title><rect x="997.3" y="405" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1000.31" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (383,838,380 samples, 0.13%)</title><rect x="995.3" y="373" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="998.29" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (222,222,220 samples, 0.07%)</title><rect x="1108.3" y="309" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1111.30" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="747.5" y="261" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="750.52" y="271.5" ></text>
</g>
</g>
</svg>
