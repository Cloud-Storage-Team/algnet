<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="614.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="597" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="597" > </text>
<g id="frames">
<g >
<title>[[kernel.kallsyms]] (171,717,170 samples, 0.06%)</title><rect x="926.3" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="929.34" y="223.5" ></text>
</g>
<g >
<title>operator new (80,808,080 samples, 0.03%)</title><rect x="1042.4" y="341" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1045.35" y="351.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (30,303,030 samples, 0.01%)</title><rect x="1034.6" y="309" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1037.56" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="926.6" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="929.63" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (14,474,747,330 samples, 4.88%)</title><rect x="346.3" y="373" width="57.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="349.33" y="383.5" >[libc...</text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (60,606,060 samples, 0.02%)</title><rect x="1075.3" y="389" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1078.28" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="743.0" y="181" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="746.00" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,858,585,840 samples, 0.63%)</title><rect x="713.8" y="213" width="7.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="716.82" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 0.09%)</title><rect x="806.7" y="325" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="809.72" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1172.6" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.63" y="335.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (40,404,040 samples, 0.01%)</title><rect x="780.9" y="405" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="783.87" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="743.0" y="245" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="746.00" y="255.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (111,111,110 samples, 0.04%)</title><rect x="1189.6" y="373" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.56" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,999,999,900 samples, 3.37%)</title><rect x="229.6" y="389" width="39.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="232.56" y="399.5" >[li..</text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (60,606,060 samples, 0.02%)</title><rect x="1189.8" y="261" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.76" y="271.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (1,343,434,330 samples, 0.45%)</title><rect x="949.9" y="421" width="5.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="952.86" y="431.5" ></text>
</g>
<g >
<title>sim::ConnectionImpl::send_data (838,383,830 samples, 0.28%)</title><rect x="1031.7" y="357" width="3.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1034.66" y="367.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (363,636,360 samples, 0.12%)</title><rect x="775.3" y="421" width="1.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="778.32" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1098.4" y="165" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1101.39" y="175.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::get_max_size (151,515,150 samples, 0.05%)</title><rect x="1045.0" y="421" width="0.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1048.01" y="431.5" ></text>
</g>
<g >
<title>malloc@plt (50,505,050 samples, 0.02%)</title><rect x="344.0" y="405" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="347.04" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="1007.5" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1010.50" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (333,333,330 samples, 0.11%)</title><rect x="12.2" y="357" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.17" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="985.3" y="197" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="988.27" y="207.5" ></text>
</g>
<g >
<title>sim::PacketNumMonitor::confirm_one (242,424,240 samples, 0.08%)</title><rect x="1029.5" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1032.45" y="383.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (30,303,030 samples, 0.01%)</title><rect x="1034.7" y="325" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1037.68" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1035.6" y="325" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1038.56" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.03%)</title><rect x="1030.1" y="309" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1033.09" y="319.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (747,474,740 samples, 0.25%)</title><rect x="952.2" y="389" width="3.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="955.23" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (313,131,310 samples, 0.11%)</title><rect x="775.5" y="213" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="778.48" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="985.1" y="133" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="988.07" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (353,535,350 samples, 0.12%)</title><rect x="82.9" y="309" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="85.88" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (363,636,360 samples, 0.12%)</title><rect x="12.1" y="373" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.05" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (414,141,410 samples, 0.14%)</title><rect x="983.6" y="309" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="986.63" y="319.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (40,404,040 samples, 0.01%)</title><rect x="1028.9" y="373" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1031.89" y="383.5" ></text>
</g>
<g >
<title>sim::Link::get_to_ingress_queue_size (50,505,050 samples, 0.02%)</title><rect x="1044.4" y="421" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1047.36" y="431.5" ></text>
</g>
<g >
<title>all (296,515,148,550 samples, 100%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="742.5" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.48" y="335.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (111,111,110 samples, 0.04%)</title><rect x="1042.2" y="357" width="0.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1045.23" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="985.3" y="325" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="988.27" y="335.5" ></text>
</g>
<g >
<title>__uselocale@plt (101,010,100 samples, 0.03%)</title><rect x="709.5" y="389" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="712.52" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (2,636,363,610 samples, 0.89%)</title><rect x="710.7" y="389" width="10.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="713.72" y="399.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (70,707,070 samples, 0.02%)</title><rect x="808.3" y="389" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="811.32" y="399.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (1,242,424,230 samples, 0.42%)</title><rect x="928.2" y="389" width="5.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="931.23" y="399.5" ></text>
</g>
<g >
<title>sim::Process::~Process (282,828,280 samples, 0.10%)</title><rect x="853.4" y="453" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="856.39" y="463.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.02%)</title><rect x="1189.2" y="453" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1192.20" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.02%)</title><rect x="1094.5" y="341" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1097.53" y="351.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (1,070,707,060 samples, 0.36%)</title><rect x="1126.2" y="373" width="4.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1129.25" y="383.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (30,303,030 samples, 0.01%)</title><rect x="775.2" y="389" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="778.20" y="399.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (6,151,515,090 samples, 2.07%)</title><rect x="1108.9" y="405" width="24.5" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1111.88" y="415.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (313,131,310 samples, 0.11%)</title><rect x="775.5" y="245" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="778.48" y="255.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.02%)</title><rect x="1098.3" y="309" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1101.31" y="319.5" ></text>
</g>
<g >
<title>sim::Link::transmit (8,363,636,280 samples, 2.82%)</title><rect x="955.2" y="421" width="33.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="958.21" y="431.5" >si..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="84.3" y="261" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.29" y="271.5" ></text>
</g>
<g >
<title>sim::Summary::Summary (50,505,050 samples, 0.02%)</title><rect x="1189.2" y="469" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1192.20" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (414,141,410 samples, 0.14%)</title><rect x="983.6" y="341" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="986.63" y="351.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (878,787,870 samples, 0.30%)</title><rect x="1099.4" y="373" width="3.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1102.39" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="778.3" y="245" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="781.34" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1035.6" y="309" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1038.56" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (3,343,434,310 samples, 1.13%)</title><rect x="1138.9" y="405" width="13.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1141.95" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (40,404,040 samples, 0.01%)</title><rect x="743.0" y="373" width="0.2" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="746.00" y="383.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (5,040,403,990 samples, 1.70%)</title><rect x="1055.6" y="405" width="20.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1058.58" y="415.5" ></text>
</g>
<g >
<title>memchr@plt (131,313,130 samples, 0.04%)</title><rect x="424.8" y="405" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="427.76" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="84.3" y="325" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.29" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="1097.9" y="133" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.91" y="143.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (1,060,606,050 samples, 0.36%)</title><rect x="1133.4" y="405" width="4.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1136.36" y="415.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (393,939,390 samples, 0.13%)</title><rect x="1006.5" y="357" width="1.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1009.46" y="367.5" ></text>
</g>
<g >
<title>_IO_file_open (343,434,340 samples, 0.12%)</title><rect x="775.4" y="357" width="1.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="778.36" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (60,606,060 samples, 0.02%)</title><rect x="742.9" y="389" width="0.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="745.92" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.12" y="383.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.02%)</title><rect x="1106.1" y="389" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1109.11" y="399.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (60,606,060 samples, 0.02%)</title><rect x="1039.8" y="341" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1042.78" y="351.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (30,303,030 samples, 0.01%)</title><rect x="1172.9" y="341" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1175.92" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="927.1" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="930.15" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="807.5" y="85" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="810.52" y="95.5" ></text>
</g>
<g >
<title>fopen (343,434,340 samples, 0.12%)</title><rect x="775.4" y="389" width="1.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="778.36" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,888,888,870 samples, 0.64%)</title><rect x="713.7" y="245" width="7.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="716.70" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (303,030,300 samples, 0.10%)</title><rect x="1071.9" y="325" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1074.94" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (171,717,170 samples, 0.06%)</title><rect x="987.8" y="357" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="990.77" y="367.5" ></text>
</g>
<g >
<title>sim::TcpFlow::get_sending_quota (30,303,030 samples, 0.01%)</title><rect x="1032.5" y="325" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1035.51" y="335.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (30,303,030 samples, 0.01%)</title><rect x="780.7" y="405" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="783.75" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="1007.7" y="213" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1010.66" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 0.09%)</title><rect x="806.7" y="277" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="809.72" y="287.5" ></text>
</g>
<g >
<title>operator new (353,535,350 samples, 0.12%)</title><rect x="270.0" y="405" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="273.00" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,242,424,230 samples, 0.42%)</title><rect x="399.0" y="357" width="4.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="401.99" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (161,616,160 samples, 0.05%)</title><rect x="926.4" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="929.38" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.03%)</title><rect x="1057.3" y="389" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1060.31" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,949,494,930 samples, 0.66%)</title><rect x="695.5" y="293" width="7.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="698.49" y="303.5" ></text>
</g>
<g >
<title>__close_nocancel (30,303,030 samples, 0.01%)</title><rect x="775.1" y="373" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="778.08" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (60,606,060 samples, 0.02%)</title><rect x="1103.0" y="389" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1105.97" y="399.5" ></text>
</g>
<g >
<title>cfree (6,383,838,320 samples, 2.15%)</title><rect x="308.9" y="389" width="25.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="311.95" y="399.5" >c..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.12" y="303.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (9,757,575,660 samples, 3.29%)</title><rect x="810.7" y="453" width="38.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="813.74" y="463.5" >sim..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (333,333,330 samples, 0.11%)</title><rect x="1096.9" y="293" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1099.94" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1007.6" y="245" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1010.62" y="255.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (60,606,060 samples, 0.02%)</title><rect x="1137.6" y="405" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1140.58" y="415.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.01%)</title><rect x="1011.3" y="341" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1014.28" y="351.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (252,525,250 samples, 0.09%)</title><rect x="1173.1" y="373" width="1.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1176.08" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="927.0" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="930.03" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (383,838,380 samples, 0.13%)</title><rect x="82.8" y="357" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="85.76" y="367.5" ></text>
</g>
<g >
<title>virtual thunk to sim::RoutingModule::get_id[abi:cxx11] (30,303,030 samples, 0.01%)</title><rect x="1028.6" y="357" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1031.65" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="742.5" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.48" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (303,030,300 samples, 0.10%)</title><rect x="1071.9" y="293" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1074.94" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (90,909,090 samples, 0.03%)</title><rect x="742.8" y="421" width="0.4" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="745.80" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (40,404,040 samples, 0.01%)</title><rect x="1038.1" y="341" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1041.13" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (333,333,330 samples, 0.11%)</title><rect x="1096.9" y="325" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1099.94" y="335.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.01%)</title><rect x="1179.4" y="373" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1182.39" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (474,747,470 samples, 0.16%)</title><rect x="11.6" y="421" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="14.61" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (131,313,130 samples, 0.04%)</title><rect x="1172.4" y="341" width="0.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1175.39" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="927.1" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="930.07" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,878,787,860 samples, 0.63%)</title><rect x="967.4" y="373" width="7.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="970.39" y="383.5" ></text>
</g>
<g >
<title>operator new (757,575,750 samples, 0.26%)</title><rect x="78.5" y="437" width="3.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="81.46" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1072.9" y="149" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1075.86" y="159.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (80,808,080 samples, 0.03%)</title><rect x="936.6" y="389" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="939.59" y="399.5" ></text>
</g>
<g >
<title>cfree (50,505,050 samples, 0.02%)</title><rect x="1008.3" y="357" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1011.27" y="367.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (30,303,030 samples, 0.01%)</title><rect x="985.6" y="357" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="988.60" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (5,111,111,060 samples, 1.72%)</title><rect x="1078.9" y="373" width="20.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1081.93" y="383.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (30,303,030 samples, 0.01%)</title><rect x="1186.2" y="421" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1189.18" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="775.2" y="325" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="778.20" y="335.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_id[abi:cxx11] (30,303,030 samples, 0.01%)</title><rect x="1044.8" y="421" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1047.77" y="431.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (30,303,030 samples, 0.01%)</title><rect x="1044.9" y="421" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1047.89" y="431.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (282,828,280 samples, 0.10%)</title><rect x="1137.8" y="405" width="1.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1140.82" y="415.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (80,808,080 samples, 0.03%)</title><rect x="1098.5" y="341" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1101.51" y="351.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (50,505,050 samples, 0.02%)</title><rect x="1186.0" y="405" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1188.98" y="415.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.01%)</title><rect x="1040.2" y="309" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1043.18" y="319.5" ></text>
</g>
<g >
<title>__uselocale (70,707,070 samples, 0.02%)</title><rect x="806.2" y="389" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="809.15" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (40,404,040 samples, 0.01%)</title><rect x="743.0" y="357" width="0.2" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="746.00" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (16,141,413,980 samples, 5.44%)</title><rect x="14.1" y="421" width="64.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.14" y="431.5" >[libc.s..</text>
</g>
<g >
<title>[libc.so.6] (161,616,160 samples, 0.05%)</title><rect x="13.5" y="437" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.50" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="776.3" y="69" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="779.29" y="79.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (555,555,550 samples, 0.19%)</title><rect x="728.5" y="389" width="2.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="731.53" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (323,232,320 samples, 0.11%)</title><rect x="775.4" y="309" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="778.44" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (323,232,320 samples, 0.11%)</title><rect x="775.4" y="325" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="778.44" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (353,535,350 samples, 0.12%)</title><rect x="270.0" y="373" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="273.00" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (232,323,230 samples, 0.08%)</title><rect x="1169.7" y="357" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1172.66" y="367.5" ></text>
</g>
<g >
<title>vsnprintf (5,636,363,580 samples, 1.90%)</title><rect x="783.7" y="373" width="22.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="786.72" y="383.5" >v..</text>
</g>
<g >
<title>[libc.so.6] (1,858,585,840 samples, 0.63%)</title><rect x="1079.8" y="357" width="7.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1082.78" y="367.5" ></text>
</g>
<g >
<title>sim::load_file (111,111,110 samples, 0.04%)</title><rect x="1189.6" y="453" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1192.56" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.12" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="926.7" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="929.67" y="175.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (30,303,030 samples, 0.01%)</title><rect x="1189.4" y="437" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1192.44" y="447.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (404,040,400 samples, 0.14%)</title><rect x="1184.2" y="389" width="1.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1187.21" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,979,797,960 samples, 0.67%)</title><rect x="713.3" y="293" width="7.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="716.34" y="303.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::get_storage_named (80,808,080 samples, 0.03%)</title><rect x="1035.2" y="341" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1038.20" y="351.5" ></text>
</g>
<g >
<title>sim::TcpFlow::process_single_ack (3,434,343,400 samples, 1.16%)</title><rect x="1029.0" y="389" width="13.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1032.05" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_cwnd (525,252,520 samples, 0.18%)</title><rect x="1037.9" y="357" width="2.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1040.93" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,282,828,260 samples, 0.77%)</title><rect x="905.6" y="373" width="9.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="908.64" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="742.8" y="293" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.80" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="742.8" y="229" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.80" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="720.9" y="69" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="723.85" y="79.5" ></text>
</g>
<g >
<title>[libc.so.6] (141,414,140 samples, 0.05%)</title><rect x="885.1" y="437" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="888.10" y="447.5" ></text>
</g>
<g >
<title>nons (296,515,148,550 samples, 100.00%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >nons</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (30,303,030 samples, 0.01%)</title><rect x="1189.4" y="421" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1192.44" y="431.5" ></text>
</g>
<g >
<title>sim::SendData::SendData (50,505,050 samples, 0.02%)</title><rect x="1011.9" y="357" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1014.92" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="927.1" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="930.11" y="175.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (575,757,570 samples, 0.19%)</title><rect x="739.5" y="405" width="2.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="742.51" y="415.5" ></text>
</g>
<g >
<title>sim::TcpFlow::Timeout::operator (131,313,130 samples, 0.04%)</title><rect x="1186.3" y="437" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1189.30" y="447.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (151,515,150 samples, 0.05%)</title><rect x="900.2" y="405" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="903.22" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::get_instance (30,303,030 samples, 0.01%)</title><rect x="985.9" y="389" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="988.88" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (313,131,310 samples, 0.11%)</title><rect x="775.5" y="293" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="778.48" y="303.5" ></text>
</g>
<g >
<title>YAML::Parser::HandleNextDocument (111,111,110 samples, 0.04%)</title><rect x="1189.6" y="405" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1192.56" y="415.5" ></text>
</g>
<g >
<title>sim::TcpFlow::process_ack (3,070,707,040 samples, 1.04%)</title><rect x="1030.5" y="373" width="12.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1033.46" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="277.8" y="405" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="280.84" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1072.9" y="133" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1075.86" y="143.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (2,727,272,700 samples, 0.92%)</title><rect x="974.9" y="373" width="10.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="977.86" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,272,727,260 samples, 0.43%)</title><rect x="716.2" y="149" width="5.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="719.15" y="159.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (616,161,610 samples, 0.21%)</title><rect x="1170.6" y="357" width="2.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1173.58" y="367.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (60,606,060 samples, 0.02%)</title><rect x="781.1" y="405" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="784.11" y="415.5" ></text>
</g>
<g >
<title>YAML::Load (111,111,110 samples, 0.04%)</title><rect x="1189.6" y="421" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1192.56" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="927.1" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="930.07" y="191.5" ></text>
</g>
<g >
<title>sim::TcpFlow::get_id[abi:cxx11] (121,212,120 samples, 0.04%)</title><rect x="1125.8" y="373" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1128.76" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="947.6" y="421" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="950.57" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.03%)</title><rect x="10.0" y="469" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.04" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,707,070,200 samples, 17.10%)</title><rect x="502.9" y="341" width="201.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="505.90" y="351.5" >[libc.so.6]</text>
</g>
<g >
<title>sim::ECMPHasher::get_hash (30,303,030 samples, 0.01%)</title><rect x="1053.5" y="405" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1056.53" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="742.8" y="261" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.80" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="405" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.12" y="415.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (30,303,030 samples, 0.01%)</title><rect x="1189.4" y="453" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1192.44" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="985.3" y="213" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="988.27" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="993.6" y="421" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="996.55" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (232,323,230 samples, 0.08%)</title><rect x="1072.2" y="261" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1075.22" y="271.5" ></text>
</g>
<g >
<title>operator delete (90,909,090 samples, 0.03%)</title><rect x="1122.3" y="389" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1125.31" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (50,505,050 samples, 0.02%)</title><rect x="778.3" y="405" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="781.26" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,040,404,020 samples, 0.69%)</title><rect x="713.1" y="341" width="8.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="716.10" y="351.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (1,323,232,310 samples, 0.45%)</title><rect x="1168.8" y="389" width="5.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1171.82" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1172.7" y="197" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.72" y="207.5" ></text>
</g>
<g >
<title>open64 (343,434,340 samples, 0.12%)</title><rect x="775.4" y="341" width="1.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="778.36" y="351.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (4,131,313,090 samples, 1.39%)</title><rect x="1058.8" y="389" width="16.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1061.84" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (212,121,210 samples, 0.07%)</title><rect x="83.4" y="261" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="86.44" y="271.5" ></text>
</g>
<g >
<title>operator new (545,454,540 samples, 0.18%)</title><rect x="959.1" y="405" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="962.06" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (60,606,060 samples, 0.02%)</title><rect x="1040.1" y="341" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1043.06" y="351.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (101,010,100 samples, 0.03%)</title><rect x="1004.9" y="389" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1007.93" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::get_instance (30,303,030 samples, 0.01%)</title><rect x="1099.3" y="373" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1102.27" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.03%)</title><rect x="10.0" y="485" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.04" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (151,515,150 samples, 0.05%)</title><rect x="1035.8" y="325" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1038.80" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,040,404,020 samples, 0.69%)</title><rect x="713.1" y="357" width="8.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="716.10" y="367.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (181,818,180 samples, 0.06%)</title><rect x="1001.9" y="421" width="0.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1004.88" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="742.8" y="309" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.80" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="778.3" y="309" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="781.34" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="1172.7" y="277" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.67" y="287.5" ></text>
</g>
<g >
<title>operator new (80,808,080 samples, 0.03%)</title><rect x="1030.1" y="341" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1033.09" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1034.2" y="293" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1037.15" y="303.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (7,717,171,640 samples, 2.60%)</title><rect x="902.5" y="405" width="30.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="905.55" y="415.5" >si..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (313,131,310 samples, 0.11%)</title><rect x="775.5" y="277" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="778.48" y="287.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (111,111,110 samples, 0.04%)</title><rect x="730.7" y="389" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="733.74" y="399.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (60,606,060 samples, 0.02%)</title><rect x="1044.1" y="421" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1047.12" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (888,888,880 samples, 0.30%)</title><rect x="717.7" y="117" width="3.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="720.68" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="1007.6" y="277" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1010.58" y="287.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (3,010,100,980 samples, 1.02%)</title><rect x="1087.2" y="357" width="12.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1090.17" y="367.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (5,656,565,600 samples, 1.91%)</title><rect x="965.9" y="405" width="22.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="968.94" y="415.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1172.8" y="149" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.80" y="159.5" ></text>
</g>
<g >
<title>_IO_file_fopen (343,434,340 samples, 0.12%)</title><rect x="775.4" y="373" width="1.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="778.36" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,979,797,960 samples, 0.67%)</title><rect x="713.3" y="309" width="7.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="716.34" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="985.0" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="987.99" y="191.5" ></text>
</g>
<g >
<title>vsnprintf (60,686,868,080 samples, 20.47%)</title><rect x="463.5" y="373" width="241.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="466.55" y="383.5" >vsnprintf</text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (6,818,181,750 samples, 2.30%)</title><rect x="781.7" y="405" width="27.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="784.71" y="415.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (90,909,090 samples, 0.03%)</title><rect x="334.4" y="389" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="337.35" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="778.3" y="277" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="781.34" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="985.3" y="277" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="988.27" y="287.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (6,424,242,360 samples, 2.17%)</title><rect x="1077.4" y="389" width="25.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1080.41" y="399.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="778.3" y="197" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="781.34" y="207.5" ></text>
</g>
<g >
<title>virtual thunk to sim::RoutingModule::get_id[abi:cxx11] (30,303,030 samples, 0.01%)</title><rect x="1043.6" y="405" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1046.56" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="778.3" y="373" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="781.34" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="743.0" y="277" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="746.00" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (202,020,200 samples, 0.07%)</title><rect x="1166.1" y="373" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1169.08" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="650.3" y="277" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="653.35" y="287.5" ></text>
</g>
<g >
<title>vsnprintf@plt (30,303,030 samples, 0.01%)</title><rect x="732.3" y="389" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="735.27" y="399.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (13,131,313,000 samples, 4.43%)</title><rect x="893.1" y="437" width="52.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="896.06" y="447.5" >sim::..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="778.3" y="213" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="781.34" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (272,727,270 samples, 0.09%)</title><rect x="1005.4" y="357" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1008.37" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1172.7" y="181" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.72" y="191.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (60,606,060 samples, 0.02%)</title><rect x="1166.9" y="421" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1169.89" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="926.8" y="149" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="929.83" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.03%)</title><rect x="896.6" y="421" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="899.56" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="742.8" y="277" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.80" y="287.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (101,010,100 samples, 0.03%)</title><rect x="949.5" y="421" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="952.46" y="431.5" ></text>
</g>
<g >
<title>sim::ECMPHasher::get_hash (444,444,440 samples, 0.15%)</title><rect x="1178.9" y="389" width="1.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1181.91" y="399.5" ></text>
</g>
<g >
<title>brk (30,303,030 samples, 0.01%)</title><rect x="742.8" y="341" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="745.80" y="351.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (787,878,780 samples, 0.27%)</title><rect x="1005.3" y="389" width="3.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1008.33" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (60,606,060 samples, 0.02%)</title><rect x="1035.5" y="341" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1038.52" y="351.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.01%)</title><rect x="947.8" y="421" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="950.77" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,979,797,960 samples, 0.67%)</title><rect x="713.3" y="325" width="7.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="716.34" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1011.3" y="325" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1014.32" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (565,656,560 samples, 0.19%)</title><rect x="1013.8" y="341" width="2.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1016.77" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="743.0" y="261" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="746.00" y="271.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::export_metrics_to_files (200,747,472,740 samples, 67.70%)</title><rect x="10.4" y="469" width="798.9" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="13.44" y="479.5" >sim::MetricsCollector::export_metrics_to_files</text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (1,161,616,150 samples, 0.39%)</title><rect x="1103.4" y="405" width="4.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1106.37" y="415.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (222,222,220 samples, 0.07%)</title><rect x="1182.7" y="405" width="0.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1185.72" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (333,333,330 samples, 0.11%)</title><rect x="12.2" y="341" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.17" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.02%)</title><rect x="1102.7" y="309" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1105.65" y="319.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (30,303,030 samples, 0.01%)</title><rect x="985.5" y="357" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="988.47" y="367.5" ></text>
</g>
<g >
<title>_start (296,505,047,540 samples, 100.00%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.04" y="543.5" >_start</text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (30,303,030 samples, 0.01%)</title><rect x="1189.9" y="229" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.88" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 0.09%)</title><rect x="806.7" y="341" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="809.72" y="351.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (40,404,040 samples, 0.01%)</title><rect x="778.8" y="405" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="781.82" y="415.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (393,939,390 samples, 0.13%)</title><rect x="1106.4" y="373" width="1.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1109.43" y="383.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (90,909,090 samples, 0.03%)</title><rect x="1073.2" y="341" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1076.19" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (191,919,190 samples, 0.06%)</title><rect x="1072.4" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1075.38" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (191,919,190 samples, 0.06%)</title><rect x="1072.4" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1075.38" y="223.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::data[abi:cxx11] (737,373,730 samples, 0.25%)</title><rect x="81.5" y="437" width="2.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="84.47" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt;, std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::less&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt; &gt;::_M_erase (80,808,080 samples, 0.03%)</title><rect x="10.1" y="437" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="13.12" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (191,919,190 samples, 0.06%)</title><rect x="941.6" y="405" width="0.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="944.58" y="415.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (1,606,060,590 samples, 0.54%)</title><rect x="1174.7" y="405" width="6.4" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1177.68" y="415.5" ></text>
</g>
<g >
<title>strchrnul@plt (50,505,050 samples, 0.02%)</title><rect x="704.9" y="357" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="707.86" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (474,747,470 samples, 0.16%)</title><rect x="82.4" y="405" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="85.40" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (181,818,180 samples, 0.06%)</title><rect x="12.8" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.77" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (313,131,310 samples, 0.11%)</title><rect x="775.5" y="261" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="778.48" y="271.5" ></text>
</g>
<g >
<title>cfree (272,727,270 samples, 0.09%)</title><rect x="1123.4" y="373" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1126.39" y="383.5" ></text>
</g>
<g >
<title>sim::TcpFlow::Timeout::operator (80,808,080 samples, 0.03%)</title><rect x="1188.8" y="453" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1191.83" y="463.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (80,808,080 samples, 0.03%)</title><rect x="1183.9" y="389" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1186.89" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (111,111,110 samples, 0.04%)</title><rect x="1010.2" y="373" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1013.24" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="775.2" y="341" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="778.20" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (474,747,470 samples, 0.16%)</title><rect x="82.4" y="421" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="85.40" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="892.8" y="405" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="895.78" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (333,333,330 samples, 0.11%)</title><rect x="1096.9" y="309" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1099.94" y="319.5" ></text>
</g>
<g >
<title>sim::SendData::operator (3,565,656,530 samples, 1.20%)</title><rect x="1167.5" y="437" width="14.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1170.53" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1172.8" y="133" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.80" y="143.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (30,303,030 samples, 0.01%)</title><rect x="775.2" y="405" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="778.20" y="415.5" ></text>
</g>
<g >
<title>malloc (70,707,070 samples, 0.02%)</title><rect x="1126.0" y="341" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1128.97" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.02%)</title><rect x="1027.4" y="357" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1030.44" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1035.6" y="293" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1038.56" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 0.09%)</title><rect x="806.7" y="309" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="809.72" y="319.5" ></text>
</g>
<g >
<title>cfree (141,414,140 samples, 0.05%)</title><rect x="1074.7" y="357" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1077.71" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (131,313,130 samples, 0.04%)</title><rect x="807.2" y="133" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="810.20" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="84.3" y="293" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.29" y="303.5" ></text>
</g>
<g >
<title>sim::Host::send_packet (3,474,747,440 samples, 1.17%)</title><rect x="1167.9" y="421" width="13.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1170.85" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1033.9" y="309" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1036.91" y="319.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (62,515,150,890 samples, 21.08%)</title><rect x="456.3" y="389" width="248.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="459.27" y="399.5" >[libstdc++.so.6.0.33]</text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (80,808,080 samples, 0.03%)</title><rect x="1098.8" y="341" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1101.83" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="1172.7" y="245" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.67" y="255.5" ></text>
</g>
<g >
<title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (40,404,040 samples, 0.01%)</title><rect x="778.7" y="405" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="781.66" y="415.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.01%)</title><rect x="993.8" y="421" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="996.76" y="431.5" ></text>
</g>
<g >
<title>brk (80,808,080 samples, 0.03%)</title><rect x="742.5" y="373" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="745.48" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="1189.2" y="421" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1192.20" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="985.3" y="181" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="988.27" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (484,848,480 samples, 0.16%)</title><rect x="719.3" y="101" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="722.29" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="742.8" y="325" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.80" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (202,020,200 samples, 0.07%)</title><rect x="926.2" y="245" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="929.22" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (40,404,040 samples, 0.01%)</title><rect x="1181.5" y="405" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1184.52" y="415.5" ></text>
</g>
<g >
<title>sim::RoundRobinMPLB::select_flow (30,303,030 samples, 0.01%)</title><rect x="1042.0" y="357" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1045.03" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="742.8" y="165" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.80" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="1172.7" y="213" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.67" y="223.5" ></text>
</g>
<g >
<title>sim::TcpFlow::process_data_packet (4,777,777,730 samples, 1.61%)</title><rect x="1010.0" y="389" width="19.0" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1013.04" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (272,727,270 samples, 0.09%)</title><rect x="83.2" y="277" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="86.20" y="287.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (404,040,400 samples, 0.14%)</title><rect x="1040.3" y="341" width="1.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1043.30" y="351.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (40,404,040 samples, 0.01%)</title><rect x="808.8" y="421" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="811.85" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="778.3" y="229" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="781.34" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="743.0" y="117" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="746.00" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,979,797,960 samples, 0.67%)</title><rect x="713.3" y="277" width="7.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="716.34" y="287.5" ></text>
</g>
<g >
<title>sim::Host::process (10,323,232,220 samples, 3.48%)</title><rect x="1002.6" y="421" width="41.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1005.60" y="431.5" >sim..</text>
</g>
<g >
<title>sim::Switch::process (27,191,918,920 samples, 9.17%)</title><rect x="1045.6" y="421" width="108.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1048.61" y="431.5" >sim::Switch::..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (161,616,160 samples, 0.05%)</title><rect x="1072.5" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1075.50" y="207.5" ></text>
</g>
<g >
<title>cfree (30,303,030 samples, 0.01%)</title><rect x="1168.3" y="405" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1171.29" y="415.5" ></text>
</g>
<g >
<title>operator new (272,727,270 samples, 0.09%)</title><rect x="1124.7" y="373" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1127.68" y="383.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (121,212,120 samples, 0.04%)</title><rect x="1174.2" y="405" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1177.20" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (222,222,220 samples, 0.07%)</title><rect x="806.8" y="197" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="809.84" y="207.5" ></text>
</g>
<g >
<title>__default_morecore (30,303,030 samples, 0.01%)</title><rect x="743.0" y="309" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="746.00" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (484,848,480 samples, 0.16%)</title><rect x="299.1" y="389" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="302.06" y="399.5" ></text>
</g>
<g >
<title>malloc (14,898,989,750 samples, 5.02%)</title><rect x="344.6" y="389" width="59.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="347.64" y="399.5" >malloc</text>
</g>
<g >
<title>cfree (60,606,060 samples, 0.02%)</title><rect x="809.6" y="453" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="812.61" y="463.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (606,060,600 samples, 0.20%)</title><rect x="930.8" y="373" width="2.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="933.77" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (414,141,410 samples, 0.14%)</title><rect x="983.6" y="325" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="986.63" y="335.5" ></text>
</g>
<g >
<title>__munmap (80,808,080 samples, 0.03%)</title><rect x="10.1" y="421" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.12" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (303,030,300 samples, 0.10%)</title><rect x="1071.9" y="309" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1074.94" y="319.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet const&amp;&gt; (60,606,060 samples, 0.02%)</title><rect x="1012.1" y="357" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1015.13" y="367.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (90,909,090 samples, 0.03%)</title><rect x="1008.6" y="405" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1011.59" y="415.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (373,737,370 samples, 0.13%)</title><rect x="935.1" y="389" width="1.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="938.11" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_cwnd (70,707,070 samples, 0.02%)</title><rect x="1029.2" y="373" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1032.17" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (141,414,140 samples, 0.05%)</title><rect x="776.2" y="85" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="779.17" y="95.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (111,111,110 samples, 0.04%)</title><rect x="1108.2" y="405" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1111.24" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1098.4" y="229" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1101.39" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="778.3" y="293" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="781.34" y="303.5" ></text>
</g>
<g >
<title>__libc_alloca_cutoff (222,222,220 samples, 0.07%)</title><rect x="703.2" y="325" width="0.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="706.25" y="335.5" ></text>
</g>
<g >
<title>__mmap (30,303,030 samples, 0.01%)</title><rect x="1098.4" y="261" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1101.39" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,191,919,180 samples, 0.40%)</title><rect x="801.3" y="309" width="4.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="804.29" y="319.5" ></text>
</g>
<g >
<title>sim::ECMPHasher::get_hash (1,969,696,950 samples, 0.66%)</title><rect x="1122.7" y="389" width="7.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1125.67" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (212,121,210 samples, 0.07%)</title><rect x="1097.4" y="213" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.42" y="223.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (757,575,750 samples, 0.26%)</title><rect x="982.5" y="357" width="3.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="985.46" y="367.5" ></text>
</g>
<g >
<title>__default_morecore (30,303,030 samples, 0.01%)</title><rect x="742.8" y="357" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="745.80" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (171,717,170 samples, 0.06%)</title><rect x="83.6" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="86.60" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (151,515,150 samples, 0.05%)</title><rect x="962.7" y="389" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="965.68" y="399.5" ></text>
</g>
<g >
<title>writev (252,525,250 samples, 0.09%)</title><rect x="806.7" y="373" width="1.0" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="809.72" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="743.0" y="149" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="746.00" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1098.4" y="245" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1101.39" y="255.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::get_storage_named (40,404,040 samples, 0.01%)</title><rect x="1183.7" y="389" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1186.73" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="807.4" y="101" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="810.40" y="111.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::export_to_files (192,121,210,200 samples, 64.79%)</title><rect x="10.4" y="453" width="764.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="13.44" y="463.5" >sim::LinksQueueSizeStorage::export_to_files</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="742.8" y="181" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.80" y="191.5" ></text>
</g>
<g >
<title>cfree (414,141,410 samples, 0.14%)</title><rect x="986.8" y="373" width="1.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="989.80" y="383.5" ></text>
</g>
<g >
<title>malloc (737,373,730 samples, 0.25%)</title><rect x="78.5" y="421" width="3.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="81.54" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="778.3" y="341" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="781.34" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="308.8" y="389" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="311.83" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.03%)</title><rect x="1168.0" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1170.97" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="778.3" y="325" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="781.34" y="335.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (111,111,110 samples, 0.04%)</title><rect x="1189.6" y="341" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.56" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (242,424,240 samples, 0.08%)</title><rect x="984.3" y="245" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="987.31" y="255.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (5,767,676,710 samples, 1.95%)</title><rect x="783.2" y="389" width="23.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="786.20" y="399.5" >[..</text>
</g>
<g >
<title>operator new (80,808,080 samples, 0.03%)</title><rect x="951.2" y="405" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="954.23" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="1007.7" y="197" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1010.66" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (292,929,290 samples, 0.10%)</title><rect x="775.6" y="197" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="778.56" y="207.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (616,161,610 samples, 0.21%)</title><rect x="986.0" y="389" width="2.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="989.00" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.03%)</title><rect x="1184.2" y="373" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1187.21" y="383.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (151,515,150 samples, 0.05%)</title><rect x="1189.4" y="469" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1192.40" y="479.5" ></text>
</g>
<g >
<title>main (296,404,037,440 samples, 99.96%)</title><rect x="10.4" y="485" width="1179.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="13.44" y="495.5" >main</text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="1007.7" y="165" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1010.66" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.02%)</title><rect x="961.0" y="357" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="963.95" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (282,828,280 samples, 0.10%)</title><rect x="925.9" y="341" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="928.90" y="351.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (111,111,110 samples, 0.04%)</title><rect x="1189.6" y="325" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.56" y="335.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::~Arrive (60,606,060 samples, 0.02%)</title><rect x="850.5" y="453" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="853.53" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="1097.9" y="117" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.95" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (303,030,300 samples, 0.10%)</title><rect x="1040.7" y="325" width="1.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1043.71" y="335.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (474,747,470 samples, 0.16%)</title><rect x="427.6" y="405" width="1.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="430.61" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (212,121,210 samples, 0.07%)</title><rect x="806.9" y="165" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="809.88" y="175.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (50,505,050 samples, 0.02%)</title><rect x="778.5" y="405" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="781.46" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.03%)</title><rect x="932.8" y="325" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="935.82" y="335.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_packet_spacing (565,656,560 samples, 0.19%)</title><rect x="1183.6" y="405" width="2.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1186.61" y="415.5" ></text>
</g>
<g >
<title>sim::SendData::operator (60,606,060 samples, 0.02%)</title><rect x="1188.4" y="453" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1191.35" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.03%)</title><rect x="1040.3" y="325" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1043.30" y="335.5" ></text>
</g>
<g >
<title>operator delete (60,606,060 samples, 0.02%)</title><rect x="225.3" y="421" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="228.26" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.02%)</title><rect x="1028.0" y="341" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1031.04" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.12" y="223.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;, std::weak_ptr&lt;sim::IProcessingDevice&gt;&amp;&gt; (2,646,464,620 samples, 0.89%)</title><rect x="1156.4" y="421" width="10.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1159.35" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="742.5" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.48" y="319.5" ></text>
</g>
<g >
<title>sim::write_to_csv (165,363,634,710 samples, 55.77%)</title><rect x="84.4" y="437" width="658.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="87.41" y="447.5" >sim::write_to_csv</text>
</g>
<g >
<title>[[kernel.kallsyms]] (181,818,180 samples, 0.06%)</title><rect x="984.6" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="987.55" y="207.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (101,010,100 samples, 0.03%)</title><rect x="1189.6" y="293" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.60" y="303.5" ></text>
</g>
<g >
<title>pthread_once (101,010,100 samples, 0.03%)</title><rect x="710.0" y="389" width="0.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="712.96" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (212,121,210 samples, 0.07%)</title><rect x="926.2" y="293" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="929.18" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (151,515,150 samples, 0.05%)</title><rect x="1097.7" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.67" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::FlagInfo&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::FlagInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (60,606,060 samples, 0.02%)</title><rect x="1028.3" y="341" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1031.33" y="351.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (595,959,590 samples, 0.20%)</title><rect x="1128.1" y="357" width="2.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1131.14" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1072.9" y="165" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1075.86" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="742.5" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.48" y="303.5" ></text>
</g>
<g >
<title>cfree (30,303,030 samples, 0.01%)</title><rect x="743.0" y="341" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="746.00" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (202,020,200 samples, 0.07%)</title><rect x="424.0" y="405" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="426.95" y="415.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (434,343,430 samples, 0.15%)</title><rect x="1053.7" y="405" width="1.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1056.73" y="415.5" ></text>
</g>
<g >
<title>operator new (202,020,200 samples, 0.07%)</title><rect x="932.4" y="357" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="935.37" y="367.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (7,464,646,390 samples, 2.52%)</title><rect x="779.1" y="421" width="29.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="782.14" y="431.5" >st..</text>
</g>
<g >
<title>sim::RoundRobinMPLB::select_flow (50,505,050 samples, 0.02%)</title><rect x="1032.5" y="341" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1035.47" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.12" y="335.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (30,303,030 samples, 0.01%)</title><rect x="927.5" y="357" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="930.51" y="367.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (60,606,060 samples, 0.02%)</title><rect x="775.1" y="421" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="778.08" y="431.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (111,111,110 samples, 0.04%)</title><rect x="1189.6" y="357" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.56" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="742.6" y="133" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.56" y="143.5" ></text>
</g>
<g >
<title>malloc (434,343,430 samples, 0.15%)</title><rect x="1165.2" y="389" width="1.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1168.16" y="399.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (868,686,860 samples, 0.29%)</title><rect x="962.5" y="405" width="3.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="965.48" y="415.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (121,212,120 samples, 0.04%)</title><rect x="933.5" y="405" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="936.50" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (212,121,210 samples, 0.07%)</title><rect x="1072.3" y="245" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1075.30" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="84.3" y="389" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="87.29" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,727,272,710 samples, 0.58%)</title><rect x="714.3" y="197" width="6.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="717.34" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1098.4" y="149" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1101.39" y="159.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::~MetricsCollector (90,909,090 samples, 0.03%)</title><rect x="10.1" y="453" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="13.08" y="463.5" ></text>
</g>
<g >
<title>malloc (191,919,190 samples, 0.06%)</title><rect x="932.4" y="341" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="935.41" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="742.6" y="117" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.60" y="127.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (90,909,090 samples, 0.03%)</title><rect x="988.8" y="421" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="991.81" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;Time&lt;Nanosecond&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (15,747,474,590 samples, 5.31%)</title><rect x="341.3" y="421" width="62.6" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="344.27" y="431.5" >std::_..</text>
</g>
<g >
<title>[libc.so.6] (1,202,020,190 samples, 0.41%)</title><rect x="888.2" y="421" width="4.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="891.16" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (90,909,090 samples, 0.03%)</title><rect x="742.8" y="405" width="0.4" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="745.80" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (707,070,700 samples, 0.24%)</title><rect x="1130.5" y="389" width="2.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1133.55" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="13.1" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.10" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,565,656,510 samples, 1.88%)</title><rect x="784.0" y="357" width="22.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="787.00" y="367.5" >[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="776.6" y="37" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="779.61" y="47.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (202,020,200 samples, 0.07%)</title><rect x="83.5" y="245" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="86.48" y="255.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (1,141,414,130 samples, 0.38%)</title><rect x="923.0" y="357" width="4.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="925.97" y="367.5" ></text>
</g>
<g >
<title>sim::Host::notify_about_arrival (404,040,400 samples, 0.14%)</title><rect x="900.9" y="405" width="1.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="903.94" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1031.5" y="357" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1034.50" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="1097.9" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.87" y="159.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (121,212,120 samples, 0.04%)</title><rect x="1011.4" y="357" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1014.44" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="776.5" y="53" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="779.53" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (232,323,230 samples, 0.08%)</title><rect x="806.8" y="229" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="809.80" y="239.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;, std::weak_ptr&lt;sim::IProcessingDevice&gt;&amp;&gt; (30,303,030 samples, 0.01%)</title><rect x="1188.2" y="437" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1191.23" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="743.0" y="325" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="746.00" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="743.0" y="101" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="746.00" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,030,303,020 samples, 0.35%)</title><rect x="717.1" y="133" width="4.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="720.12" y="143.5" ></text>
</g>
<g >
<title>cfree (50,505,050 samples, 0.02%)</title><rect x="1179.2" y="373" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1182.19" y="383.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (30,303,030 samples, 0.01%)</title><rect x="775.2" y="373" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="778.20" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="1007.5" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1010.50" y="319.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::export_to_file (8,565,656,480 samples, 2.89%)</title><rect x="775.0" y="437" width="34.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="778.04" y="447.5" >si..</text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (494,949,490 samples, 0.17%)</title><rect x="777.0" y="421" width="2.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="780.01" y="431.5" ></text>
</g>
<g >
<title>operator new (60,606,060 samples, 0.02%)</title><rect x="941.0" y="373" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="943.98" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (282,828,280 samples, 0.10%)</title><rect x="775.6" y="181" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="778.60" y="191.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (393,939,390 samples, 0.13%)</title><rect x="947.9" y="421" width="1.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="950.89" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,868,686,850 samples, 0.63%)</title><rect x="713.8" y="229" width="7.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="716.78" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.02%)</title><rect x="1057.8" y="373" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1060.79" y="383.5" ></text>
</g>
<g >
<title>sim::TcpFlow::SendAtTime::operator (1,141,414,130 samples, 0.38%)</title><rect x="1181.8" y="437" width="4.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1184.76" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="226.3" y="405" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="229.30" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="985.3" y="149" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="988.27" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (191,919,190 samples, 0.06%)</title><rect x="981.7" y="357" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="984.66" y="367.5" ></text>
</g>
<g >
<title>operator new (14,999,999,850 samples, 5.06%)</title><rect x="344.2" y="405" width="59.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="347.24" y="415.5" >operat..</text>
</g>
<g >
<title>__libc_start_main (296,505,047,540 samples, 100.00%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.04" y="527.5" >__libc_start_main</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="84.3" y="277" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.29" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="743.0" y="165" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="746.00" y="175.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::get_instance (30,303,030 samples, 0.01%)</title><rect x="1073.9" y="373" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1076.95" y="383.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (363,636,360 samples, 0.12%)</title><rect x="1010.9" y="373" width="1.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1013.92" y="383.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (101,010,100 samples, 0.03%)</title><rect x="1180.7" y="389" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1183.67" y="399.5" ></text>
</g>
<g >
<title>sim::TcpFlow::update (8,494,949,410 samples, 2.86%)</title><rect x="1009.1" y="405" width="33.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1012.07" y="415.5" >si..</text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.01%)</title><rect x="902.3" y="373" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="905.31" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (232,323,230 samples, 0.08%)</title><rect x="1097.3" y="261" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.34" y="271.5" ></text>
</g>
<g >
<title>sim::Process::Process (90,909,090 samples, 0.03%)</title><rect x="941.2" y="373" width="0.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="944.22" y="383.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (101,010,100 samples, 0.03%)</title><rect x="774.2" y="437" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="777.16" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (222,222,220 samples, 0.07%)</title><rect x="775.8" y="117" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="778.84" y="127.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.03%)</title><rect x="1123.1" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1126.07" y="383.5" ></text>
</g>
<g >
<title>write (30,303,030 samples, 0.01%)</title><rect x="775.2" y="357" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="778.20" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (888,888,880 samples, 0.30%)</title><rect x="330.8" y="373" width="3.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="333.82" y="383.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_packet_now (1,060,606,050 samples, 0.36%)</title><rect x="1182.0" y="421" width="4.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1184.96" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (151,515,150 samples, 0.05%)</title><rect x="1123.9" y="357" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1126.87" y="367.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (202,020,200 samples, 0.07%)</title><rect x="1058.0" y="373" width="0.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1061.03" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1098.4" y="133" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1101.39" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1098.4" y="213" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1101.39" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1098.4" y="197" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1101.39" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (282,828,280 samples, 0.10%)</title><rect x="775.6" y="149" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="778.60" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (202,020,200 samples, 0.07%)</title><rect x="926.2" y="261" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="929.22" y="271.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.01%)</title><rect x="84.3" y="405" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="87.29" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="742.5" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.48" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="84.3" y="373" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.29" y="383.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (292,929,290 samples, 0.10%)</title><rect x="1057.7" y="389" width="1.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1060.67" y="399.5" ></text>
</g>
<g >
<title>utils::create_all_directories (30,303,030 samples, 0.01%)</title><rect x="809.0" y="421" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="812.01" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,585,858,570 samples, 0.53%)</title><rect x="714.9" y="181" width="6.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="717.90" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="985.3" y="309" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="988.27" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="926.8" y="133" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="929.83" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (131,313,130 samples, 0.04%)</title><rect x="1155.8" y="421" width="0.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1158.83" y="431.5" ></text>
</g>
<g >
<title>malloc (60,606,060 samples, 0.02%)</title><rect x="941.0" y="357" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="943.98" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (151,515,150 samples, 0.05%)</title><rect x="1003.9" y="405" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1006.89" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="742.5" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.48" y="207.5" ></text>
</g>
<g >
<title>sim::Event::get_time (101,010,100 samples, 0.03%)</title><rect x="810.3" y="453" width="0.4" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="813.33" y="463.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1,323,232,310 samples, 0.45%)</title><rect x="721.2" y="389" width="5.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="724.22" y="399.5" ></text>
</g>
<g >
<title>malloc (161,616,160 samples, 0.05%)</title><rect x="1102.2" y="325" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1105.25" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 0.09%)</title><rect x="775.7" y="133" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="778.72" y="143.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned int&gt;, bool&gt; std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;unsigned int&gt; &gt;::_M_insert_unique&lt;unsigned int const&amp;&gt; (141,414,140 samples, 0.05%)</title><rect x="1029.9" y="357" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1032.85" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="743.0" y="229" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="746.00" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.04%)</title><rect x="13.0" y="277" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.01" y="287.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (60,606,060 samples, 0.02%)</title><rect x="776.8" y="421" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="779.77" y="431.5" ></text>
</g>
<g >
<title>__munmap (40,404,040 samples, 0.01%)</title><rect x="985.3" y="341" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="988.27" y="351.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (30,303,030 samples, 0.01%)</title><rect x="1189.6" y="261" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1192.64" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1073.0" y="101" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1076.03" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (296,505,047,540 samples, 100.00%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.04" y="511.5" >[libc.so.6]</text>
</g>
<g >
<title>malloc (525,252,520 samples, 0.18%)</title><rect x="959.1" y="389" width="2.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="962.15" y="399.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::operator (10,959,595,850 samples, 3.70%)</title><rect x="945.6" y="437" width="43.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="948.56" y="447.5" >sim:..</text>
</g>
<g >
<title>sim::Link::Transmit::operator (191,919,190 samples, 0.06%)</title><rect x="850.8" y="453" width="0.7" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="853.77" y="463.5" ></text>
</g>
<g >
<title>malloc (10,787,878,680 samples, 3.64%)</title><rect x="226.4" y="405" width="43.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="229.42" y="415.5" >malloc</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1007.7" y="117" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1010.70" y="127.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (676,767,670 samples, 0.23%)</title><rect x="1005.3" y="373" width="2.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1008.33" y="383.5" ></text>
</g>
<g >
<title>sim::Host::send_packet (30,303,030 samples, 0.01%)</title><rect x="892.9" y="437" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="895.94" y="447.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (111,111,110 samples, 0.04%)</title><rect x="1181.1" y="405" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1184.08" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (131,313,130 samples, 0.04%)</title><rect x="951.7" y="389" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="954.71" y="399.5" ></text>
</g>
<g >
<title>cfree (60,606,060 samples, 0.02%)</title><rect x="334.5" y="373" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="337.47" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (191,919,190 samples, 0.06%)</title><rect x="926.3" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="929.26" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.12" y="351.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Switch::process (222,222,220 samples, 0.07%)</title><rect x="1187.3" y="437" width="0.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1190.35" y="447.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.01%)</title><rect x="1028.9" y="341" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1031.93" y="351.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (6,969,696,900 samples, 2.35%)</title><rect x="1075.6" y="405" width="27.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1078.64" y="415.5" >s..</text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1004.9" y="373" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1007.93" y="383.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (1,757,575,740 samples, 0.59%)</title><rect x="1066.7" y="357" width="7.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1069.71" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1098.4" y="117" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1101.39" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (242,424,240 samples, 0.08%)</title><rect x="984.3" y="229" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="987.31" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (171,717,170 samples, 0.06%)</title><rect x="742.5" y="437" width="0.7" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="745.48" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="1007.7" y="181" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1010.66" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="985.3" y="165" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="988.27" y="175.5" ></text>
</g>
<g >
<title>std::ostream::put (2,363,636,340 samples, 0.80%)</title><rect x="732.4" y="421" width="9.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="735.39" y="431.5" ></text>
</g>
<g >
<title>sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::get_flag (50,505,050 samples, 0.02%)</title><rect x="1027.7" y="357" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1030.72" y="367.5" ></text>
</g>
<g >
<title>sim::SimplePacketReordering::add_record (2,595,959,570 samples, 0.88%)</title><rect x="1016.2" y="373" width="10.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1019.23" y="383.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (171,717,170 samples, 0.06%)</title><rect x="430.5" y="405" width="0.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="433.47" y="415.5" ></text>
</g>
<g >
<title>cfree (30,303,030 samples, 0.01%)</title><rect x="742.8" y="389" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="745.80" y="399.5" ></text>
</g>
<g >
<title>__default_morecore (80,808,080 samples, 0.03%)</title><rect x="742.5" y="389" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="745.48" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,323,232,300 samples, 0.78%)</title><rect x="69.1" y="389" width="9.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="72.13" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="742.8" y="373" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="745.80" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="927.0" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="930.03" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="13.3" y="229" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.30" y="239.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (171,717,170 samples, 0.06%)</title><rect x="741.8" y="421" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="744.80" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="985.3" y="245" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="988.27" y="255.5" ></text>
</g>
<g >
<title>vsnprintf (50,505,050 samples, 0.02%)</title><rect x="808.6" y="389" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="811.65" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (363,636,360 samples, 0.12%)</title><rect x="12.1" y="389" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.05" y="399.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.02%)</title><rect x="1189.2" y="437" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1192.20" y="447.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (787,878,780 samples, 0.27%)</title><rect x="1012.9" y="357" width="3.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1015.89" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="389" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.12" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1007.6" y="229" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1010.62" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="927.0" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="930.03" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="742.8" y="197" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.80" y="207.5" ></text>
</g>
<g >
<title>sim::Link::arrive (11,393,939,280 samples, 3.84%)</title><rect x="897.0" y="421" width="45.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="900.00" y="431.5" >sim:..</text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (74,838,383,090 samples, 25.24%)</title><rect x="434.6" y="405" width="297.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="437.57" y="415.5" >std::ostreambuf_iterator&lt;char, std::char..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="1007.7" y="149" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1010.66" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (474,747,470 samples, 0.16%)</title><rect x="82.4" y="389" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="85.40" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="84.3" y="357" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.29" y="367.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_id[abi:cxx11] (50,505,050 samples, 0.02%)</title><rect x="1108.7" y="405" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1111.68" y="415.5" ></text>
</g>
<g >
<title>sim::PacketNumMonitor::correctify_state (40,404,040 samples, 0.01%)</title><rect x="1029.6" y="357" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1032.61" y="367.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (151,515,150 samples, 0.05%)</title><rect x="1173.5" y="357" width="0.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1176.48" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="721.1" y="53" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="724.06" y="63.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.01%)</title><rect x="1011.3" y="357" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1014.28" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (303,030,300 samples, 0.10%)</title><rect x="1184.6" y="373" width="1.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1187.61" y="383.5" ></text>
</g>
<g >
<title>memcpy@plt (121,212,120 samples, 0.04%)</title><rect x="425.3" y="405" width="0.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="428.28" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="927.0" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="930.03" y="271.5" ></text>
</g>
<g >
<title>sim::Scheduler::get_current_time (717,171,710 samples, 0.24%)</title><rect x="942.4" y="421" width="2.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="945.42" y="431.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (30,303,030 samples, 0.01%)</title><rect x="900.8" y="405" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="903.82" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="927.2" y="101" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="930.23" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (181,818,180 samples, 0.06%)</title><rect x="1097.5" y="197" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.55" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="10.2" y="181" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.24" y="191.5" ></text>
</g>
<g >
<title>operator delete (121,212,120 samples, 0.04%)</title><rect x="809.9" y="453" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="812.85" y="463.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.01%)</title><rect x="1028.9" y="357" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1031.93" y="367.5" ></text>
</g>
<g >
<title>cfree (80,808,080 samples, 0.03%)</title><rect x="742.5" y="421" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="745.48" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (383,838,380 samples, 0.13%)</title><rect x="82.8" y="373" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="85.76" y="383.5" ></text>
</g>
<g >
<title>sim::Scheduler::get_current_time (40,404,040 samples, 0.01%)</title><rect x="988.7" y="421" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="991.65" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 0.09%)</title><rect x="806.7" y="357" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="809.72" y="367.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (353,535,350 samples, 0.12%)</title><rect x="1153.8" y="421" width="1.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1156.82" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 0.09%)</title><rect x="806.7" y="245" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="809.72" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (353,535,350 samples, 0.12%)</title><rect x="959.8" y="373" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="962.83" y="383.5" ></text>
</g>
<g >
<title>sim::Process::Process (30,303,030 samples, 0.01%)</title><rect x="902.4" y="389" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="905.43" y="399.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (242,424,240 samples, 0.08%)</title><rect x="849.6" y="453" width="0.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="852.57" y="463.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (1,888,888,870 samples, 0.64%)</title><rect x="994.4" y="421" width="7.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="997.36" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (404,040,400 samples, 0.14%)</title><rect x="1051.7" y="405" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1054.72" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="778.3" y="357" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="781.34" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (60,606,060 samples, 0.02%)</title><rect x="1012.6" y="357" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1015.65" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="742.5" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.48" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="1098.3" y="277" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1101.31" y="287.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (252,525,250 samples, 0.09%)</title><rect x="937.0" y="389" width="1.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="939.96" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.04%)</title><rect x="922.5" y="357" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="925.49" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (161,616,160 samples, 0.05%)</title><rect x="1072.5" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1075.50" y="191.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.01%)</title><rect x="902.3" y="389" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="905.31" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 0.09%)</title><rect x="1097.3" y="277" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.26" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1172.2" y="341" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1175.23" y="351.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (282,828,280 samples, 0.10%)</title><rect x="806.6" y="389" width="1.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="809.60" y="399.5" ></text>
</g>
<g >
<title>malloc (242,424,240 samples, 0.08%)</title><rect x="1124.8" y="357" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1127.80" y="367.5" ></text>
</g>
<g >
<title>operator new (70,707,070 samples, 0.02%)</title><rect x="1126.0" y="357" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1128.97" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="742.5" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.48" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1098.4" y="101" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1101.39" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (191,919,190 samples, 0.06%)</title><rect x="807.0" y="149" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="809.96" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="743.0" y="133" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="746.00" y="143.5" ></text>
</g>
<g >
<title>operator delete (90,909,090 samples, 0.03%)</title><rect x="301.0" y="405" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="303.99" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (8,383,838,300 samples, 2.83%)</title><rect x="301.4" y="405" width="33.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="304.35" y="415.5" >st..</text>
</g>
<g >
<title>[libc.so.6] (1,606,060,590 samples, 0.54%)</title><rect x="1060.3" y="357" width="6.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1063.32" y="367.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet const&amp;&gt; (50,505,050 samples, 0.02%)</title><rect x="1183.4" y="389" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1186.41" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="743.0" y="85" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="746.00" y="95.5" ></text>
</g>
<g >
<title>[libc.so.6] (181,818,180 samples, 0.06%)</title><rect x="1013.1" y="341" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1016.05" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.12" y="287.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (30,303,030 samples, 0.01%)</title><rect x="1007.9" y="341" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1010.90" y="351.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (90,909,090 samples, 0.03%)</title><rect x="781.4" y="405" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="784.35" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="807.3" y="117" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="810.32" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 0.09%)</title><rect x="806.7" y="293" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="809.72" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="985.3" y="293" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="988.27" y="303.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::get_records (515,151,510 samples, 0.17%)</title><rect x="269.4" y="421" width="2.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="272.35" y="431.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (101,010,100 samples, 0.03%)</title><rect x="1008.1" y="373" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1011.07" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (272,727,270 samples, 0.09%)</title><rect x="12.4" y="325" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.41" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="742.8" y="245" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.80" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (212,121,210 samples, 0.07%)</title><rect x="1097.4" y="245" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.42" y="255.5" ></text>
</g>
<g >
<title>cfree (5,787,878,730 samples, 1.95%)</title><rect x="278.0" y="405" width="23.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="280.96" y="415.5" >c..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (282,828,280 samples, 0.10%)</title><rect x="925.9" y="325" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="928.90" y="335.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleDocument (111,111,110 samples, 0.04%)</title><rect x="1189.6" y="389" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1192.56" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (646,464,640 samples, 0.22%)</title><rect x="453.7" y="389" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="456.70" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="1097.9" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.87" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1172.6" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.63" y="319.5" ></text>
</g>
<g >
<title>malloc (80,808,080 samples, 0.03%)</title><rect x="1042.4" y="325" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1045.35" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="742.6" y="149" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.56" y="159.5" ></text>
</g>
<g >
<title>fclose (30,303,030 samples, 0.01%)</title><rect x="775.1" y="389" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="778.08" y="399.5" ></text>
</g>
<g >
<title>sim::Switch::notify_about_arrival (1,909,090,890 samples, 0.64%)</title><rect x="934.0" y="405" width="7.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="936.98" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1007.6" y="261" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1010.62" y="271.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (5,919,191,860 samples, 2.00%)</title><rect x="904.7" y="389" width="23.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="907.68" y="399.5" >s..</text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (111,111,110 samples, 0.04%)</title><rect x="1189.6" y="309" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.56" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="650.3" y="293" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="653.35" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 0.09%)</title><rect x="1072.1" y="277" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1075.14" y="287.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.02%)</title><rect x="951.3" y="389" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="954.35" y="399.5" ></text>
</g>
<g >
<title>cfree (16,141,413,980 samples, 5.44%)</title><rect x="14.1" y="437" width="64.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="17.14" y="447.5" >cfree</text>
</g>
<g >
<title>sim::LinkQueue::front (424,242,420 samples, 0.14%)</title><rect x="1106.3" y="389" width="1.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1109.31" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (282,828,280 samples, 0.10%)</title><rect x="775.6" y="165" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="778.60" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="927.2" y="117" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="930.19" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (363,636,360 samples, 0.12%)</title><rect x="1036.4" y="325" width="1.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1039.41" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="927.0" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="930.03" y="335.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;&amp;, std::weak_ptr&lt;sim::ISwitch&gt;&amp;&gt; (909,090,900 samples, 0.31%)</title><rect x="938.0" y="389" width="3.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="940.96" y="399.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (30,303,030 samples, 0.01%)</title><rect x="1055.5" y="405" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1058.46" y="415.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (83,888,888,050 samples, 28.29%)</title><rect x="854.5" y="453" width="333.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="857.51" y="463.5" >sim::Scheduler::tick</text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (525,252,520 samples, 0.18%)</title><rect x="1035.8" y="341" width="2.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1038.76" y="351.5" ></text>
</g>
<g >
<title>malloc (353,535,350 samples, 0.12%)</title><rect x="270.0" y="389" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="273.00" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1098.4" y="181" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1101.39" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1166.7" y="357" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1169.73" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1075.1" y="341" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1078.12" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="1172.7" y="229" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.67" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.12" y="255.5" ></text>
</g>
<g >
<title>std::ostream::put (111,111,110 samples, 0.04%)</title><rect x="774.6" y="437" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="777.56" y="447.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (525,252,520 samples, 0.18%)</title><rect x="404.0" y="421" width="2.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="406.98" y="431.5" ></text>
</g>
<g >
<title>operator new (11,020,201,910 samples, 3.72%)</title><rect x="225.5" y="421" width="43.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="228.50" y="431.5" >oper..</text>
</g>
<g >
<title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (30,303,030 samples, 0.01%)</title><rect x="808.2" y="389" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="811.20" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.03%)</title><rect x="1038.4" y="325" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1041.37" y="335.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (656,565,650 samples, 0.22%)</title><rect x="432.0" y="405" width="2.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="434.95" y="415.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (60,606,060 samples, 0.02%)</title><rect x="1189.8" y="245" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.76" y="255.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (70,707,070 samples, 0.02%)</title><rect x="1005.1" y="373" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1008.05" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,454,545,440 samples, 0.49%)</title><rect x="715.4" y="165" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="718.43" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1179.3" y="357" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1182.27" y="367.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (121,212,120 samples, 0.04%)</title><rect x="807.7" y="389" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="810.72" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="84.3" y="341" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.29" y="351.5" ></text>
</g>
<g >
<title>writev (2,050,505,030 samples, 0.69%)</title><rect x="713.1" y="373" width="8.1" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="716.06" y="383.5" ></text>
</g>
<g >
<title>std::filesystem::status (30,303,030 samples, 0.01%)</title><rect x="809.0" y="405" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="812.01" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (474,747,470 samples, 0.16%)</title><rect x="11.6" y="405" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="14.61" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.03%)</title><rect x="780.4" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="783.39" y="415.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::export_to_files (8,626,262,540 samples, 2.91%)</title><rect x="775.0" y="453" width="34.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="778.00" y="463.5" >si..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,949,494,930 samples, 0.66%)</title><rect x="713.5" y="261" width="7.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="716.46" y="271.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::close (30,303,030 samples, 0.01%)</title><rect x="775.1" y="405" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="778.08" y="415.5" ></text>
</g>
<g >
<title>brk (30,303,030 samples, 0.01%)</title><rect x="743.0" y="293" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="746.00" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="1172.7" y="261" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.67" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (232,323,230 samples, 0.08%)</title><rect x="1038.8" y="325" width="0.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1041.78" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (131,313,130 samples, 0.04%)</title><rect x="1042.9" y="405" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1045.88" y="415.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (30,303,030 samples, 0.01%)</title><rect x="1189.6" y="229" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1192.64" y="239.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (30,303,030 samples, 0.01%)</title><rect x="779.0" y="421" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="782.02" y="431.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (81,999,999,180 samples, 27.65%)</title><rect x="406.1" y="421" width="326.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="409.07" y="431.5" >std::ostream&amp; std::ostream::_M_insert&lt;double&gt;</text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="1072.9" y="117" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1075.90" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="743.0" y="197" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="746.00" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.04%)</title><rect x="1070.7" y="341" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1073.73" y="351.5" ></text>
</g>
<g >
<title>strlen@plt (40,404,040 samples, 0.01%)</title><rect x="704.7" y="341" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="707.69" y="351.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (373,737,370 samples, 0.13%)</title><rect x="1038.3" y="341" width="1.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1041.29" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (171,717,170 samples, 0.06%)</title><rect x="83.6" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="86.60" y="239.5" ></text>
</g>
<g >
<title>sim::ECN::get_congestion_mark (101,010,100 samples, 0.03%)</title><rect x="993.9" y="421" width="0.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="996.88" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (40,404,040 samples, 0.01%)</title><rect x="1073.7" y="357" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1076.71" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.03%)</title><rect x="958.6" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="961.58" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="927.0" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="930.03" y="303.5" ></text>
</g>
<g >
<title>malloc (80,808,080 samples, 0.03%)</title><rect x="1030.1" y="325" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1033.09" y="335.5" ></text>
</g>
<g >
<title>sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::set_flag (90,909,090 samples, 0.03%)</title><rect x="1034.0" y="309" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1037.03" y="319.5" ></text>
</g>
<g >
<title>operator new (161,616,160 samples, 0.05%)</title><rect x="1102.2" y="341" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1105.25" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (929,292,920 samples, 0.31%)</title><rect x="1169.4" y="373" width="3.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1172.38" y="383.5" ></text>
</g>
<g >
<title>memcpy@plt (40,404,040 samples, 0.01%)</title><rect x="1053.3" y="405" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1056.33" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="742.5" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.48" y="351.5" ></text>
</g>
<g >
<title>virtual thunk to sim::RoutingModule::get_id[abi:cxx11] (30,303,030 samples, 0.01%)</title><rect x="1042.8" y="389" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1045.76" y="399.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (242,424,240 samples, 0.08%)</title><rect x="429.5" y="405" width="1.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="432.50" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="1007.5" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1010.50" y="335.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (151,515,150 samples, 0.05%)</title><rect x="1155.2" y="421" width="0.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1158.23" y="431.5" ></text>
</g>
<g >
<title>sim::Process::~Process (101,010,100 samples, 0.03%)</title><rect x="1167.1" y="437" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1170.13" y="447.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (393,939,390 samples, 0.13%)</title><rect x="1152.3" y="405" width="1.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1155.25" y="415.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (3,343,434,310 samples, 1.13%)</title><rect x="914.7" y="373" width="13.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="917.73" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="927.0" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="930.03" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="650.3" y="261" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="653.35" y="271.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.01%)</title><rect x="1040.2" y="325" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1043.18" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 0.09%)</title><rect x="806.7" y="261" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="809.72" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (45,808,080,350 samples, 15.45%)</title><rect x="521.0" y="325" width="182.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="523.95" y="335.5" >[libc.so.6]</text>
</g>
<g >
<title>sim::TcpFlow::send_data (555,555,550 samples, 0.19%)</title><rect x="1032.7" y="341" width="2.2" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1035.71" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.02%)</title><rect x="1009.6" y="389" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1012.63" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (929,292,920 samples, 0.31%)</title><rect x="420.3" y="405" width="3.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="423.26" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (242,424,240 samples, 0.08%)</title><rect x="984.3" y="261" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="987.31" y="271.5" ></text>
</g>
<g >
<title>memcpy@plt (141,414,140 samples, 0.05%)</title><rect x="704.1" y="325" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="707.13" y="335.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (535,353,530 samples, 0.18%)</title><rect x="1100.8" y="357" width="2.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1103.76" y="367.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::Arrive (313,131,310 samples, 0.11%)</title><rect x="961.2" y="405" width="1.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="964.24" y="415.5" ></text>
</g>
<g >
<title>sim::Simulator::start (95,444,443,490 samples, 32.19%)</title><rect x="809.4" y="469" width="379.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="812.37" y="479.5" >sim::Simulator::start</text>
</g>
<g >
<title>sim::MetricsCollector::add_packet_reordering (919,191,910 samples, 0.31%)</title><rect x="1012.4" y="373" width="3.6" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1015.37" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (373,737,370 samples, 0.13%)</title><rect x="82.8" y="325" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="85.80" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="1172.8" y="165" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.76" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (16,141,413,980 samples, 5.44%)</title><rect x="14.1" y="405" width="64.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.14" y="415.5" >[libc.s..</text>
</g>
<g >
<title>sim::Link::Transmit::~Transmit (30,303,030 samples, 0.01%)</title><rect x="851.5" y="453" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="854.54" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="743.0" y="213" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="746.00" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="742.5" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.48" y="223.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (40,404,040 samples, 0.01%)</title><rect x="1124.5" y="373" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1127.48" y="383.5" ></text>
</g>
<g >
<title>sim::Link::get_max_to_ingress_queue_size (70,707,070 samples, 0.02%)</title><rect x="1043.8" y="421" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1046.84" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::FlagInfo&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::FlagInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (30,303,030 samples, 0.01%)</title><rect x="1034.3" y="293" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1037.27" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (292,929,290 samples, 0.10%)</title><rect x="984.1" y="277" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="987.11" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="1007.7" y="133" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1010.66" y="143.5" ></text>
</g>
<g >
<title>YAML::LoadFile (111,111,110 samples, 0.04%)</title><rect x="1189.6" y="437" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1192.56" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="927.0" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="930.03" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="650.3" y="309" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="653.35" y="319.5" ></text>
</g>
<g >
<title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (515,151,510 samples, 0.17%)</title><rect x="726.5" y="389" width="2.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="729.48" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.12" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="1098.3" y="293" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1101.31" y="303.5" ></text>
</g>
<g >
<title>pthread_once@plt (90,909,090 samples, 0.03%)</title><rect x="710.4" y="389" width="0.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="713.36" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (222,222,220 samples, 0.07%)</title><rect x="806.8" y="213" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="809.84" y="223.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (40,404,040 samples, 0.01%)</title><rect x="1073.5" y="341" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1076.55" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,303,030,290 samples, 0.44%)</title><rect x="336.1" y="421" width="5.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="339.08" y="431.5" ></text>
</g>
<g >
<title>sim::TcpFlow::create_ack (575,757,570 samples, 0.19%)</title><rect x="1026.6" y="373" width="2.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1029.56" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (282,828,280 samples, 0.10%)</title><rect x="925.9" y="309" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="928.90" y="319.5" ></text>
</g>
<g >
<title>cfree (1,828,282,810 samples, 0.62%)</title><rect x="885.7" y="437" width="7.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="888.66" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (7,757,575,680 samples, 2.62%)</title><rect x="743.2" y="437" width="30.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="746.16" y="447.5" >st..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="742.8" y="213" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.80" y="223.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (999,999,990 samples, 0.34%)</title><rect x="1004.6" y="405" width="3.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1007.57" y="415.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (30,303,030 samples, 0.01%)</title><rect x="1189.9" y="213" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.88" y="223.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (181,818,180 samples, 0.06%)</title><rect x="1180.0" y="357" width="0.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1182.95" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (494,949,490 samples, 0.17%)</title><rect x="1071.2" y="341" width="2.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1074.22" y="351.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (101,010,100 samples, 0.03%)</title><rect x="927.6" y="357" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="930.63" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="742.8" y="149" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.80" y="159.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (40,404,040 samples, 0.01%)</title><rect x="1010.7" y="373" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1013.68" y="383.5" ></text>
</g>
<g >
<title>operator new (494,949,490 samples, 0.17%)</title><rect x="1164.9" y="405" width="2.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1167.92" y="415.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (343,434,340 samples, 0.12%)</title><rect x="775.4" y="405" width="1.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="778.36" y="415.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (202,020,200 samples, 0.07%)</title><rect x="431.2" y="405" width="0.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="434.15" y="415.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.01%)</title><rect x="1179.4" y="357" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1182.39" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="742.5" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.48" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (313,131,310 samples, 0.11%)</title><rect x="984.0" y="293" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="987.03" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="783.0" y="389" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="786.00" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1172.6" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1175.63" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (737,373,730 samples, 0.25%)</title><rect x="78.5" y="405" width="3.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="81.54" y="415.5" ></text>
</g>
<g >
<title>vsnprintf (272,727,270 samples, 0.09%)</title><rect x="731.2" y="389" width="1.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="734.18" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::get_instance (30,303,030 samples, 0.01%)</title><rect x="933.3" y="405" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="936.34" y="415.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (30,303,030 samples, 0.01%)</title><rect x="1189.6" y="245" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1192.64" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (313,131,310 samples, 0.11%)</title><rect x="775.5" y="229" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="778.48" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="84.3" y="309" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.29" y="319.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.03%)</title><rect x="1189.6" y="277" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.64" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (474,747,470 samples, 0.16%)</title><rect x="11.6" y="437" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="14.61" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (292,929,290 samples, 0.10%)</title><rect x="83.1" y="293" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="86.12" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="927.1" y="133" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="930.15" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (212,121,210 samples, 0.07%)</title><rect x="805.2" y="293" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="808.19" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="985.3" y="261" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="988.27" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (242,424,240 samples, 0.08%)</title><rect x="12.5" y="309" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.53" y="319.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.02%)</title><rect x="1098.3" y="325" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1101.31" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (202,020,200 samples, 0.07%)</title><rect x="984.5" y="213" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="987.47" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="742.5" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.48" y="367.5" ></text>
</g>
<g >
<title>sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::set_flag (161,616,160 samples, 0.05%)</title><rect x="1027.9" y="357" width="0.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1030.92" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (90,909,090 samples, 0.03%)</title><rect x="1007.5" y="341" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1010.46" y="351.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (181,818,180 samples, 0.06%)</title><rect x="1031.7" y="341" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1034.70" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.03%)</title><rect x="742.5" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="745.48" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.12" y="271.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (40,404,040 samples, 0.01%)</title><rect x="1108.1" y="405" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1111.08" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (15,909,090,750 samples, 5.37%)</title><rect x="271.4" y="421" width="63.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="274.40" y="431.5" >std::_..</text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (303,030,300 samples, 0.10%)</title><rect x="1074.1" y="373" width="1.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1077.07" y="383.5" ></text>
</g>
<g >
<title>sim::Process::operator (44,646,464,200 samples, 15.06%)</title><rect x="989.5" y="437" width="177.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="992.45" y="447.5" >sim::Process::operator</text>
</g>
<g >
<title>[libc.so.6] (13,262,626,130 samples, 4.47%)</title><rect x="650.5" y="309" width="52.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="653.47" y="319.5" >[libc..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.1" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.12" y="239.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (272,727,270 samples, 0.09%)</title><rect x="1179.6" y="373" width="1.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1182.59" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="985.0" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="988.03" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (222,222,220 samples, 0.07%)</title><rect x="806.8" y="181" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="809.84" y="191.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.02%)</title><rect x="1106.1" y="373" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1109.11" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (343,434,340 samples, 0.12%)</title><rect x="334.7" y="421" width="1.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="337.72" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="985.3" y="229" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="988.27" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (202,020,200 samples, 0.07%)</title><rect x="926.2" y="277" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="929.22" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="10.2" y="197" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.16" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,808,080,760 samples, 1.62%)</title><rect x="787.0" y="341" width="19.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="790.02" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="778.3" y="261" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="781.34" y="271.5" ></text>
</g>
<g >
<title>__uselocale (1,121,212,110 samples, 0.38%)</title><rect x="705.1" y="389" width="4.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="708.06" y="399.5" ></text>
</g>
<g >
<title>__munmap (101,010,100 samples, 0.03%)</title><rect x="927.0" y="341" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="930.03" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,565,656,520 samples, 1.54%)</title><rect x="787.9" y="325" width="18.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="790.86" y="335.5" ></text>
</g>
<g >
<title>sim::Process::operator (434,343,430 samples, 0.15%)</title><rect x="851.7" y="453" width="1.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="854.66" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="13.3" y="245" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.26" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (383,838,380 samples, 0.13%)</title><rect x="82.8" y="341" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="85.76" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;unsigned int&gt; &gt;::_M_erase (30,303,030 samples, 0.01%)</title><rect x="1029.7" y="341" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1032.65" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (59,737,373,140 samples, 20.15%)</title><rect x="467.1" y="357" width="237.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="470.13" y="367.5" >[libc.so.6]</text>
</g>
<g >
<title>writev (30,303,030 samples, 0.01%)</title><rect x="778.3" y="389" width="0.2" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="781.34" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1040.2" y="293" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1043.18" y="303.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.01%)</title><rect x="84.3" y="421" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="87.29" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_RTT (727,272,720 samples, 0.25%)</title><rect x="1035.0" y="357" width="2.9" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1038.04" y="367.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Host::process (101,010,100 samples, 0.03%)</title><rect x="1186.9" y="437" width="0.4" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1189.94" y="447.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (1,424,242,410 samples, 0.48%)</title><rect x="1168.5" y="405" width="5.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1171.49" y="415.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (666,666,660 samples, 0.22%)</title><rect x="963.3" y="389" width="2.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="966.29" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (4,787,878,740 samples, 1.61%)</title><rect x="966.8" y="389" width="19.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="969.82" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (323,232,320 samples, 0.11%)</title><rect x="462.3" y="373" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="465.26" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (3,545,454,510 samples, 1.20%)</title><rect x="1059.8" y="373" width="14.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1062.84" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="927.3" y="85" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="930.31" y="95.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (464,646,460 samples, 0.16%)</title><rect x="425.8" y="405" width="1.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="428.76" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_delivery_rate (494,949,490 samples, 0.17%)</title><rect x="1040.0" y="357" width="2.0" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1043.02" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (262,626,260 samples, 0.09%)</title><rect x="720.2" y="85" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="723.17" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (171,717,170 samples, 0.06%)</title><rect x="776.0" y="101" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="779.05" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (212,121,210 samples, 0.07%)</title><rect x="1097.4" y="229" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.42" y="239.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::~Arrive (60,606,060 samples, 0.02%)</title><rect x="945.3" y="437" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="948.32" y="447.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (30,303,030 samples, 0.01%)</title><rect x="928.1" y="373" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="931.11" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::get_storage_named (30,303,030 samples, 0.01%)</title><rect x="1012.5" y="357" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1015.53" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="985.0" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="988.03" y="175.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (939,393,930 samples, 0.32%)</title><rect x="1094.8" y="341" width="3.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1097.77" y="351.5" ></text>
</g>
<g >
<title>sim::TcpFlow::generate_data_packet (252,525,250 samples, 0.09%)</title><rect x="1033.7" y="325" width="1.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1036.67" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="742.5" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="745.48" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1077.3" y="389" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1080.29" y="399.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (919,191,910 samples, 0.31%)</title><rect x="951.5" y="405" width="3.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="954.55" y="415.5" ></text>
</g>
</g>
</svg>
