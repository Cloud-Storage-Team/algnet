<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="598.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="581" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="581" > </text>
<g id="frames">
<g >
<title>sim::MultiIdMetricsStorage::add_record (525,252,520 samples, 0.17%)</title><rect x="1038.1" y="325" width="2.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1041.11" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="773.1" y="85" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="776.10" y="95.5" ></text>
</g>
<g >
<title>cfree (90,909,090 samples, 0.03%)</title><rect x="735.7" y="405" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="738.75" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="640.3" y="293" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="643.25" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="1097.3" y="133" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.29" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (272,727,270 samples, 0.09%)</title><rect x="772.5" y="309" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.49" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (101,010,100 samples, 0.03%)</title><rect x="338.8" y="373" width="0.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="341.84" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (383,838,380 samples, 0.12%)</title><rect x="464.9" y="357" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="467.86" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (353,535,350 samples, 0.11%)</title><rect x="921.2" y="229" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="924.21" y="239.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (30,303,030 samples, 0.01%)</title><rect x="1189.4" y="421" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1192.43" y="431.5" ></text>
</g>
<g >
<title>_IO_file_open (272,727,270 samples, 0.09%)</title><rect x="772.5" y="341" width="1.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="775.49" y="351.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (181,818,180 samples, 0.06%)</title><rect x="845.3" y="437" width="0.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="848.29" y="447.5" ></text>
</g>
<g >
<title>open64 (272,727,270 samples, 0.09%)</title><rect x="772.5" y="325" width="1.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="775.49" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt;, std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::less&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt; &gt;::_M_erase (90,909,090 samples, 0.03%)</title><rect x="10.1" y="421" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="13.11" y="431.5" ></text>
</g>
<g >
<title>sim::Scheduler::get_current_time (494,949,490 samples, 0.16%)</title><rect x="938.8" y="405" width="1.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="941.84" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (161,616,160 samples, 0.05%)</title><rect x="916.4" y="341" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="919.37" y="351.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (292,929,290 samples, 0.09%)</title><rect x="772.4" y="389" width="1.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="775.41" y="399.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.01%)</title><rect x="1011.3" y="309" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1014.33" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (202,020,200 samples, 0.06%)</title><rect x="802.9" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="805.86" y="271.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (81,242,423,430 samples, 26.01%)</title><rect x="416.8" y="405" width="306.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="419.83" y="415.5" >std::ostream&amp; std::ostream::_M_insert&lt;dou..</text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (30,303,030 samples, 0.01%)</title><rect x="774.6" y="389" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="777.55" y="399.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (999,999,990 samples, 0.32%)</title><rect x="1002.4" y="389" width="3.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1005.36" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1072.0" y="133" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1074.95" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1005.3" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1008.34" y="319.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (818,181,810 samples, 0.26%)</title><rect x="1002.9" y="373" width="3.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1005.90" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="1097.2" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.25" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1170.2" y="245" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1173.16" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (494,949,490 samples, 0.16%)</title><rect x="979.1" y="309" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="982.05" y="319.5" ></text>
</g>
<g >
<title>operator new (171,717,170 samples, 0.05%)</title><rect x="1127.8" y="357" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1130.85" y="367.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (40,404,040 samples, 0.01%)</title><rect x="804.8" y="453" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="807.81" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (171,717,170 samples, 0.05%)</title><rect x="921.9" y="149" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="924.90" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="1005.5" y="181" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1008.45" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="922.5" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="925.55" y="271.5" ></text>
</g>
<g >
<title>pthread_once@plt (70,707,070 samples, 0.02%)</title><rect x="700.4" y="373" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="703.38" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="922.5" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="925.55" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (202,020,200 samples, 0.06%)</title><rect x="802.9" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="805.86" y="223.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (7,272,727,200 samples, 2.33%)</title><rect x="1075.0" y="389" width="27.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1078.04" y="399.5" >s..</text>
</g>
<g >
<title>sim::SendData::operator (3,939,393,900 samples, 1.26%)</title><rect x="1165.3" y="421" width="14.9" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1168.31" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (323,232,320 samples, 0.10%)</title><rect x="85.2" y="293" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.24" y="303.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (3,999,999,960 samples, 1.28%)</title><rect x="908.5" y="357" width="15.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="911.51" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="770.4" y="373" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="773.43" y="383.5" ></text>
</g>
<g >
<title>operator new (17,292,929,120 samples, 5.54%)</title><rect x="349.3" y="389" width="65.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="352.33" y="399.5" >operato..</text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (161,616,160 samples, 0.05%)</title><rect x="437.3" y="389" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="440.28" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="943.4" y="405" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="946.42" y="415.5" ></text>
</g>
<g >
<title>malloc (111,111,110 samples, 0.04%)</title><rect x="1033.1" y="309" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1036.11" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="736.0" y="53" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="738.98" y="63.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1005.1" y="325" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1008.11" y="335.5" ></text>
</g>
<g >
<title>cfree (505,050,500 samples, 0.16%)</title><rect x="982.1" y="357" width="1.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="985.14" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,515,151,500 samples, 0.48%)</title><rect x="707.0" y="133" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="710.02" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (181,818,180 samples, 0.06%)</title><rect x="772.8" y="101" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.83" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (212,121,210 samples, 0.07%)</title><rect x="1071.4" y="213" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1074.42" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1005.4" y="245" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1008.42" y="255.5" ></text>
</g>
<g >
<title>sim::TcpFlow::process_data_packet (6,242,424,180 samples, 2.00%)</title><rect x="1008.4" y="373" width="23.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1011.39" y="383.5" >s..</text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (50,505,050 samples, 0.02%)</title><rect x="1186.2" y="389" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1189.18" y="399.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (30,303,030 samples, 0.01%)</title><rect x="1189.4" y="437" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1192.43" y="447.5" ></text>
</g>
<g >
<title>fopen (292,929,290 samples, 0.09%)</title><rect x="772.4" y="373" width="1.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="775.41" y="383.5" ></text>
</g>
<g >
<title>strlen@plt (40,404,040 samples, 0.01%)</title><rect x="693.8" y="325" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="696.78" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1125.6" y="373" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1128.60" y="383.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (111,111,110 samples, 0.04%)</title><rect x="1189.5" y="309" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.54" y="319.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (141,414,140 samples, 0.05%)</title><rect x="1097.9" y="325" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1100.94" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1008.0" y="373" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1011.01" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="1170.2" y="197" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1173.20" y="207.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (111,111,110 samples, 0.04%)</title><rect x="1170.8" y="341" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1173.81" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1097.4" y="101" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.36" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1005.3" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1008.34" y="303.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (70,707,070 samples, 0.02%)</title><rect x="772.1" y="357" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="775.15" y="367.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.01%)</title><rect x="1189.2" y="437" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1192.16" y="447.5" ></text>
</g>
<g >
<title>sim::TcpFlow::get_id[abi:cxx11] (70,707,070 samples, 0.02%)</title><rect x="1128.5" y="357" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1131.50" y="367.5" ></text>
</g>
<g >
<title>operator new (80,808,080 samples, 0.03%)</title><rect x="1045.4" y="325" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1048.40" y="335.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (40,404,040 samples, 0.01%)</title><rect x="1189.8" y="181" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.77" y="191.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.01%)</title><rect x="1186.2" y="373" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1189.22" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (131,313,130 samples, 0.04%)</title><rect x="1010.9" y="341" width="0.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1013.95" y="351.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (111,111,110 samples, 0.04%)</title><rect x="1189.5" y="341" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.54" y="351.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (70,707,070 samples, 0.02%)</title><rect x="1009.1" y="357" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1012.08" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="10.1" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.11" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (333,333,330 samples, 0.11%)</title><rect x="921.3" y="213" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="924.29" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (313,131,310 samples, 0.10%)</title><rect x="1044.1" y="309" width="1.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1047.10" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (312,383,835,260 samples, 99.99%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.04" y="495.5" >[libc.so.6]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (161,616,160 samples, 0.05%)</title><rect x="803.0" y="165" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="806.01" y="175.5" ></text>
</g>
<g >
<title>malloc (131,313,130 samples, 0.04%)</title><rect x="1101.6" y="309" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1104.56" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (222,222,220 samples, 0.07%)</title><rect x="1096.4" y="245" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1099.41" y="255.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::operator (252,525,250 samples, 0.08%)</title><rect x="846.4" y="437" width="0.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="849.35" y="447.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (1,070,707,060 samples, 0.34%)</title><rect x="1167.2" y="373" width="4.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1170.18" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1170.2" y="229" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1173.16" y="239.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (393,939,390 samples, 0.13%)</title><rect x="1105.3" y="373" width="1.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1108.30" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::FlagInfo&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::FlagInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (101,010,100 samples, 0.03%)</title><rect x="1031.1" y="325" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1034.05" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (525,252,520 samples, 0.17%)</title><rect x="84.5" y="389" width="2.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.47" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="735.7" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="738.75" y="303.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (353,535,350 samples, 0.11%)</title><rect x="1057.8" y="373" width="1.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1060.84" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="712.4" y="53" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="715.44" y="63.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.01%)</title><rect x="947.3" y="373" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="950.27" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_packet_spacing (868,686,860 samples, 0.28%)</title><rect x="1182.7" y="389" width="3.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1185.71" y="399.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.01%)</title><rect x="989.9" y="405" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="992.92" y="415.5" ></text>
</g>
<g >
<title>sim::ConnectionImpl::update (30,303,030 samples, 0.01%)</title><rect x="1037.5" y="341" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1040.46" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (373,737,370 samples, 0.12%)</title><rect x="273.1" y="357" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="276.14" y="367.5" ></text>
</g>
<g >
<title>malloc (80,808,080 samples, 0.03%)</title><rect x="1105.0" y="357" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1107.99" y="367.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (161,616,160 samples, 0.05%)</title><rect x="735.1" y="405" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="738.06" y="415.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (383,838,380 samples, 0.12%)</title><rect x="1130.4" y="341" width="1.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1133.44" y="351.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.01%)</title><rect x="1036.7" y="309" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1039.66" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (272,727,270 samples, 0.09%)</title><rect x="772.5" y="277" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.49" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (979,797,970 samples, 0.31%)</title><rect x="429.5" y="389" width="3.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="432.46" y="399.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (60,606,060 samples, 0.02%)</title><rect x="1181.5" y="389" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1184.49" y="399.5" ></text>
</g>
<g >
<title>__uselocale@plt (101,010,100 samples, 0.03%)</title><rect x="698.6" y="373" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="701.59" y="383.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (888,888,880 samples, 0.28%)</title><rect x="1098.7" y="357" width="3.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1101.70" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1011.2" y="293" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1014.21" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (383,838,380 samples, 0.12%)</title><rect x="85.0" y="341" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.01" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (9,030,302,940 samples, 2.89%)</title><rect x="736.4" y="421" width="34.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="739.44" y="431.5" >st..</text>
</g>
<g >
<title>YAML::Parser::HandleNextDocument (111,111,110 samples, 0.04%)</title><rect x="1189.5" y="389" width="0.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1192.54" y="399.5" ></text>
</g>
<g >
<title>malloc (80,808,080 samples, 0.03%)</title><rect x="936.6" y="341" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="939.59" y="351.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (1,242,424,230 samples, 0.40%)</title><rect x="923.9" y="373" width="4.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="926.92" y="383.5" ></text>
</g>
<g >
<title>YAML::LoadFile (111,111,110 samples, 0.04%)</title><rect x="1189.5" y="421" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1192.54" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (151,515,150 samples, 0.05%)</title><rect x="803.1" y="149" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="806.05" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="414.7" y="293" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="417.73" y="303.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (828,282,820 samples, 0.27%)</title><rect x="1128.8" y="357" width="3.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1131.76" y="367.5" ></text>
</g>
<g >
<title>sim::ConnectionImpl::send_data (555,555,550 samples, 0.18%)</title><rect x="1035.4" y="341" width="2.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1038.37" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (535,353,530 samples, 0.17%)</title><rect x="11.8" y="389" width="2.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="14.76" y="399.5" ></text>
</g>
<g >
<title>operator new (737,373,730 samples, 0.24%)</title><rect x="80.9" y="421" width="2.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="83.85" y="431.5" ></text>
</g>
<g >
<title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (80,808,080 samples, 0.03%)</title><rect x="774.8" y="389" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="777.82" y="399.5" ></text>
</g>
<g >
<title>sim::SendData::~SendData (30,303,030 samples, 0.01%)</title><rect x="1188.7" y="437" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1191.74" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="1057.6" y="373" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1060.65" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="922.5" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="925.55" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.02%)</title><rect x="880.5" y="421" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="883.54" y="431.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (30,303,030 samples, 0.01%)</title><rect x="1035.4" y="325" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1038.44" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.02%)</title><rect x="1058.1" y="357" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1061.07" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1170.2" y="213" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1173.16" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (272,727,270 samples, 0.09%)</title><rect x="772.5" y="293" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.49" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (9,333,333,240 samples, 2.99%)</title><rect x="304.0" y="389" width="35.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="306.97" y="399.5" >st..</text>
</g>
<g >
<title>sim::SimplePacketQueue::push (171,717,170 samples, 0.05%)</title><rect x="1170.6" y="357" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1173.58" y="367.5" ></text>
</g>
<g >
<title>_IO_file_open (30,303,030 samples, 0.01%)</title><rect x="414.7" y="341" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="417.73" y="351.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (50,505,050 samples, 0.02%)</title><rect x="981.1" y="341" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="984.11" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="414.7" y="261" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="417.73" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (111,111,110 samples, 0.04%)</title><rect x="1094.0" y="325" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1097.04" y="335.5" ></text>
</g>
<g >
<title>sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::set_flag (60,606,060 samples, 0.02%)</title><rect x="1037.0" y="293" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1039.97" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1005.4" y="229" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1008.42" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1182.8" y="373" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1185.79" y="383.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (50,505,050 samples, 0.02%)</title><rect x="1107.0" y="389" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1109.98" y="399.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (90,909,090 samples, 0.03%)</title><rect x="932.4" y="373" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="935.35" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="735.7" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="738.75" y="255.5" ></text>
</g>
<g >
<title>sim::load_file (111,111,110 samples, 0.04%)</title><rect x="1189.5" y="437" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1192.54" y="447.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.02%)</title><rect x="1181.3" y="373" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1184.30" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (393,939,390 samples, 0.13%)</title><rect x="1038.6" y="309" width="1.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1041.57" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="922.2" y="133" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="925.20" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="1097.2" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.25" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="640.3" y="261" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="643.25" y="271.5" ></text>
</g>
<g >
<title>sim::Event::Event (30,303,030 samples, 0.01%)</title><rect x="990.3" y="405" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="993.34" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.03%)</title><rect x="1164.4" y="341" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1167.36" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="770.4" y="357" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="773.43" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (414,141,410 samples, 0.13%)</title><rect x="921.0" y="277" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="923.98" y="287.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (8,535,353,450 samples, 2.73%)</title><rect x="896.4" y="389" width="32.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="899.45" y="399.5" >si..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,222,222,210 samples, 0.39%)</title><rect x="708.1" y="117" width="4.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="711.13" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1072.0" y="101" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1074.95" y="111.5" ></text>
</g>
<g >
<title>operator new (60,606,060 samples, 0.02%)</title><rect x="1009.7" y="341" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1012.69" y="351.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (171,717,170 samples, 0.05%)</title><rect x="770.7" y="421" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="773.70" y="431.5" ></text>
</g>
<g >
<title>malloc (373,737,370 samples, 0.12%)</title><rect x="273.1" y="373" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="276.14" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (202,020,200 samples, 0.06%)</title><rect x="802.9" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="805.86" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="736.1" y="293" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="739.09" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,323,232,300 samples, 0.74%)</title><rect x="683.3" y="277" width="8.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="686.29" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (11,505,050,390 samples, 3.68%)</title><rect x="229.0" y="373" width="43.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="232.00" y="383.5" >[lib..</text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.03%)</title><rect x="1127.2" y="341" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1130.20" y="351.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::~Arrive (80,808,080 samples, 0.03%)</title><rect x="940.7" y="421" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="943.71" y="431.5" ></text>
</g>
<g >
<title>cfree (2,020,202,000 samples, 0.65%)</title><rect x="880.8" y="421" width="7.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="883.77" y="431.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::export_to_files (201,575,755,560 samples, 64.52%)</title><rect x="10.5" y="437" width="761.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="13.46" y="447.5" >sim::LinksQueueSizeStorage::export_to_files</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="922.7" y="101" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="925.66" y="111.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (30,303,030 samples, 0.01%)</title><rect x="1072.2" y="325" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1075.22" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="1030.3" y="341" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1033.29" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (363,636,360 samples, 0.12%)</title><rect x="85.1" y="325" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.09" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (272,727,270 samples, 0.09%)</title><rect x="772.5" y="197" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.49" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="1097.3" y="117" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.29" y="127.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (474,747,470 samples, 0.15%)</title><rect x="1100.3" y="341" width="1.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1103.26" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="780.6" y="357" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="783.58" y="367.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.01%)</title><rect x="896.2" y="357" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="899.22" y="367.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.01%)</title><rect x="1189.2" y="421" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1192.16" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="10.1" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.11" y="351.5" ></text>
</g>
<g >
<title>__munmap (101,010,100 samples, 0.03%)</title><rect x="1097.2" y="309" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1100.25" y="319.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (7,656,565,580 samples, 2.45%)</title><rect x="775.6" y="405" width="28.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="778.58" y="415.5" >st..</text>
</g>
<g >
<title>std::_Hash_bytes (262,626,260 samples, 0.08%)</title><rect x="1139.0" y="389" width="1.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1141.99" y="399.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (90,909,090 samples, 0.03%)</title><rect x="1179.7" y="389" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1182.66" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="735.7" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="738.75" y="223.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (5,535,353,480 samples, 1.77%)</title><rect x="1077.8" y="357" width="20.9" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1080.79" y="367.5" ></text>
</g>
<g >
<title>nons (312,404,037,280 samples, 100.00%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >nons</text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="735.8" y="133" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="738.79" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1005.3" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1008.34" y="287.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (70,707,070 samples, 0.02%)</title><rect x="895.0" y="389" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="898.00" y="399.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (6,626,262,560 samples, 2.12%)</title><rect x="1077.1" y="373" width="25.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1080.07" y="383.5" >s..</text>
</g>
<g >
<title>sim::Simulator::start (101,717,170,700 samples, 32.56%)</title><rect x="805.0" y="453" width="384.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="807.96" y="463.5" >sim::Simulator::start</text>
</g>
<g >
<title>sim::Packet::Packet (131,313,130 samples, 0.04%)</title><rect x="1009.9" y="341" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1012.92" y="351.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (222,222,220 samples, 0.07%)</title><rect x="802.8" y="373" width="0.8" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="805.78" y="383.5" ></text>
</g>
<g >
<title>__uselocale (1,212,121,200 samples, 0.39%)</title><rect x="694.0" y="373" width="4.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="697.01" y="383.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (525,252,520 samples, 0.17%)</title><rect x="414.8" y="405" width="2.0" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="417.84" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="989.8" y="405" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="992.81" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.04%)</title><rect x="1096.8" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1099.79" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,848,484,830 samples, 0.59%)</title><rect x="705.8" y="165" width="6.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="708.76" y="175.5" ></text>
</g>
<g >
<title>malloc (707,070,700 samples, 0.23%)</title><rect x="1162.0" y="373" width="2.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1165.03" y="383.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_data (373,737,370 samples, 0.12%)</title><rect x="1035.9" y="325" width="1.4" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1038.90" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (323,232,320 samples, 0.10%)</title><rect x="1096.0" y="309" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1099.03" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (17,575,757,400 samples, 5.63%)</title><rect x="14.4" y="405" width="66.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.43" y="415.5" >[libc.s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="736.1" y="165" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="739.09" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (171,717,170 samples, 0.05%)</title><rect x="13.1" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.13" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (464,646,460 samples, 0.15%)</title><rect x="1184.1" y="357" width="1.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1187.12" y="367.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (515,151,510 samples, 0.16%)</title><rect x="930.4" y="373" width="2.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="933.41" y="383.5" ></text>
</g>
<g >
<title>__munmap (90,909,090 samples, 0.03%)</title><rect x="10.1" y="405" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.11" y="415.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (313,131,310 samples, 0.10%)</title><rect x="772.4" y="405" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="775.41" y="415.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (40,404,040 samples, 0.01%)</title><rect x="1189.8" y="213" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.77" y="223.5" ></text>
</g>
<g >
<title>operator delete (121,212,120 samples, 0.04%)</title><rect x="303.5" y="389" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="306.51" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="735.7" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="738.75" y="207.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (131,313,130 samples, 0.04%)</title><rect x="1178.8" y="341" width="0.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1181.78" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1005.4" y="213" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1008.42" y="223.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (1,161,616,150 samples, 0.37%)</title><rect x="1166.9" y="389" width="4.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1169.92" y="399.5" ></text>
</g>
<g >
<title>operator new (141,414,140 samples, 0.05%)</title><rect x="1101.5" y="325" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1104.52" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="1183.2" y="325" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1186.21" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (262,626,260 samples, 0.08%)</title><rect x="772.5" y="165" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.53" y="175.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (414,141,410 samples, 0.13%)</title><rect x="1151.4" y="389" width="1.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1154.43" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="770.4" y="389" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="773.43" y="399.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (171,717,170 samples, 0.05%)</title><rect x="1153.0" y="405" width="0.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1155.99" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 0.08%)</title><rect x="772.6" y="149" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.57" y="159.5" ></text>
</g>
<g >
<title>sim::Switch::notify_about_arrival (2,252,525,230 samples, 0.72%)</title><rect x="929.3" y="389" width="8.5" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="932.30" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (323,232,320 samples, 0.10%)</title><rect x="1096.0" y="277" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1099.03" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="1096.9" y="133" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1099.94" y="143.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (80,808,080 samples, 0.03%)</title><rect x="1045.4" y="341" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1048.40" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="1166.7" y="373" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1169.65" y="383.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.01%)</title><rect x="1043.5" y="293" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1046.53" y="303.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.01%)</title><rect x="1097.6" y="309" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1100.63" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="10.1" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.11" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (232,323,230 samples, 0.07%)</title><rect x="980.0" y="197" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="983.04" y="207.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (1,242,424,230 samples, 0.40%)</title><rect x="1134.1" y="389" width="4.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1137.07" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="10.2" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.19" y="207.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.01%)</title><rect x="1097.6" y="293" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1100.63" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (181,818,180 samples, 0.06%)</title><rect x="735.7" y="421" width="0.7" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="738.75" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="803.5" y="85" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="806.51" y="95.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,141,414,120 samples, 0.69%)</title><rect x="900.3" y="357" width="8.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="903.34" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,363,636,350 samples, 0.44%)</title><rect x="883.2" y="405" width="5.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="886.25" y="415.5" ></text>
</g>
<g >
<title>operator new (60,606,060 samples, 0.02%)</title><rect x="1183.2" y="357" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1186.17" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="736.1" y="229" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="739.09" y="239.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.01%)</title><rect x="1161.6" y="389" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1164.61" y="399.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (111,111,110 samples, 0.04%)</title><rect x="1189.5" y="325" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.54" y="335.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (989,898,980 samples, 0.32%)</title><rect x="958.8" y="389" width="3.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="961.79" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="735.7" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="738.75" y="319.5" ></text>
</g>
<g >
<title>vsnprintf (30,303,030 samples, 0.01%)</title><rect x="804.4" y="373" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="807.39" y="383.5" ></text>
</g>
<g >
<title>sim::Link::transmit (8,707,070,620 samples, 2.79%)</title><rect x="951.4" y="405" width="32.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="954.39" y="415.5" >si..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,343,434,320 samples, 0.75%)</title><rect x="703.9" y="277" width="8.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="706.89" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,353,535,330 samples, 0.75%)</title><rect x="703.9" y="293" width="8.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="706.85" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="712.6" y="37" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="715.59" y="47.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="736.1" y="261" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="739.09" y="271.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (353,535,350 samples, 0.11%)</title><rect x="1009.4" y="357" width="1.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1012.38" y="367.5" ></text>
</g>
<g >
<title>sim::TcpFlow::update (10,313,131,210 samples, 3.30%)</title><rect x="1006.8" y="389" width="39.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1009.83" y="399.5" >sim..</text>
</g>
<g >
<title>sim::LinkQueue::pop (5,696,969,640 samples, 1.82%)</title><rect x="962.5" y="389" width="21.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="965.53" y="399.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="772.3" y="213" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.26" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (323,232,320 samples, 0.10%)</title><rect x="1167.8" y="341" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1170.83" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (131,313,130 samples, 0.04%)</title><rect x="983.6" y="341" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="986.55" y="351.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (50,505,050 samples, 0.02%)</title><rect x="1006.1" y="389" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1009.14" y="399.5" ></text>
</g>
<g >
<title>__default_morecore (30,303,030 samples, 0.01%)</title><rect x="736.1" y="341" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="739.09" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (272,727,270 samples, 0.09%)</title><rect x="772.5" y="213" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.49" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (111,111,110 samples, 0.04%)</title><rect x="1045.8" y="389" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1048.78" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,707,070,690 samples, 0.55%)</title><rect x="408.2" y="341" width="6.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="411.20" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,505,050,450 samples, 1.76%)</title><rect x="781.2" y="341" width="20.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="784.19" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.04%)</title><rect x="891.7" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="894.68" y="415.5" ></text>
</g>
<g >
<title>malloc (12,161,616,040 samples, 3.89%)</title><rect x="226.5" y="389" width="46.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="229.52" y="399.5" >malloc</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1161.5" y="389" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.50" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (242,424,240 samples, 0.08%)</title><rect x="12.9" y="277" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.86" y="287.5" ></text>
</g>
<g >
<title>cfree (50,505,050 samples, 0.02%)</title><rect x="1032.9" y="309" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1035.89" y="319.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.01%)</title><rect x="1031.8" y="325" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1034.82" y="335.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (181,818,180 samples, 0.06%)</title><rect x="1178.6" y="357" width="0.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1181.59" y="367.5" ></text>
</g>
<g >
<title>cfree (303,030,300 samples, 0.10%)</title><rect x="1073.7" y="341" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1076.67" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="772.2" y="261" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.19" y="271.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (404,040,400 samples, 0.13%)</title><rect x="1169.1" y="341" width="1.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1172.05" y="351.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (131,313,130 samples, 0.04%)</title><rect x="777.4" y="389" width="0.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="780.37" y="399.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (40,404,040 samples, 0.01%)</title><rect x="774.7" y="389" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="777.67" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (252,525,250 samples, 0.08%)</title><rect x="1011.4" y="325" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1014.44" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="414.7" y="165" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="417.73" y="175.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.01%)</title><rect x="1186.2" y="357" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1189.22" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="772.2" y="245" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.19" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,747,474,700 samples, 1.52%)</title><rect x="784.1" y="325" width="17.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="787.05" y="335.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (1,050,505,040 samples, 0.34%)</title><rect x="947.4" y="389" width="4.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="950.38" y="399.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (89,636,362,740 samples, 28.69%)</title><rect x="850.1" y="437" width="338.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.09" y="447.5" >sim::Scheduler::tick</text>
</g>
<g >
<title>[[kernel.kallsyms]] (222,222,220 samples, 0.07%)</title><rect x="1071.4" y="229" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1074.38" y="239.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::~Arrive (101,010,100 samples, 0.03%)</title><rect x="846.0" y="437" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="848.97" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1161.5" y="357" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.50" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="414.7" y="181" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="417.73" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,191,919,170 samples, 0.70%)</title><rect x="704.5" y="213" width="8.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="707.46" y="223.5" ></text>
</g>
<g >
<title>writev (2,474,747,450 samples, 0.79%)</title><rect x="703.4" y="357" width="9.3" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="706.39" y="367.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (70,707,070 samples, 0.02%)</title><rect x="1189.7" y="261" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.69" y="271.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (5,838,383,780 samples, 1.87%)</title><rect x="779.9" y="373" width="22.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="782.93" y="383.5" >[..</text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (40,404,040 samples, 0.01%)</title><rect x="1189.8" y="245" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.77" y="255.5" ></text>
</g>
<g >
<title>cfree (7,303,030,230 samples, 2.34%)</title><rect x="311.3" y="373" width="27.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="314.26" y="383.5" >c..</text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (2,121,212,100 samples, 0.68%)</title><rect x="1171.6" y="389" width="8.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1174.65" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="980.5" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="983.50" y="175.5" ></text>
</g>
<g >
<title>sim::write_to_csv (171,888,887,170 samples, 55.02%)</title><rect x="86.5" y="421" width="649.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="89.50" y="431.5" >sim::write_to_csv</text>
</g>
<g >
<title>pthread_once (111,111,110 samples, 0.04%)</title><rect x="802.3" y="373" width="0.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="805.33" y="383.5" ></text>
</g>
<g >
<title>cfree (30,303,030 samples, 0.01%)</title><rect x="736.1" y="373" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="739.09" y="383.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (131,313,130 samples, 0.04%)</title><rect x="803.6" y="373" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="806.62" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (60,606,060 samples, 0.02%)</title><rect x="736.2" y="373" width="0.2" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="739.21" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="736.1" y="149" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="739.09" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.02%)</title><rect x="779.7" y="373" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="782.66" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="803.3" y="101" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="806.32" y="111.5" ></text>
</g>
<g >
<title>sim::ECMPHasher::get_hash (1,585,858,570 samples, 0.51%)</title><rect x="1125.9" y="373" width="6.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1128.90" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1005.4" y="261" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1008.42" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (272,727,270 samples, 0.09%)</title><rect x="12.7" y="293" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.75" y="303.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (1,878,787,860 samples, 0.60%)</title><rect x="1065.5" y="341" width="7.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1068.47" y="351.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (3,191,919,160 samples, 1.02%)</title><rect x="700.7" y="373" width="12.0" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="703.69" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (50,505,050 samples, 0.02%)</title><rect x="1180.0" y="389" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1183.00" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="414.7" y="309" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="417.73" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="770.4" y="405" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="773.43" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (555,555,550 samples, 0.18%)</title><rect x="1132.0" y="373" width="2.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1134.97" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="414.7" y="213" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="417.73" y="223.5" ></text>
</g>
<g >
<title>malloc (60,606,060 samples, 0.02%)</title><rect x="1183.2" y="341" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1186.17" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (6,727,272,660 samples, 2.15%)</title><rect x="898.4" y="373" width="25.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="901.43" y="383.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (232,323,230 samples, 0.07%)</title><rect x="772.6" y="117" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.64" y="127.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (62,181,817,560 samples, 19.90%)</title><rect x="459.1" y="373" width="234.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="462.14" y="383.5" >[libstdc++.so.6.0.33]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (202,020,200 samples, 0.06%)</title><rect x="802.9" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="805.86" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (474,747,470 samples, 0.15%)</title><rect x="1041.3" y="309" width="1.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1044.28" y="319.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (30,303,030 samples, 0.01%)</title><rect x="804.3" y="373" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="807.27" y="383.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (30,303,030 samples, 0.01%)</title><rect x="923.7" y="357" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="926.73" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="13.4" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.36" y="223.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (232,323,230 samples, 0.07%)</title><rect x="1058.3" y="357" width="0.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1061.30" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="803.2" y="117" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="806.24" y="127.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (101,010,100 samples, 0.03%)</title><rect x="1189.6" y="293" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.58" y="303.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (13,848,484,710 samples, 4.43%)</title><rect x="888.4" y="421" width="52.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="891.40" y="431.5" >sim::..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="1097.2" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.25" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.02%)</title><rect x="928.4" y="309" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="931.38" y="319.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::get_max_size (80,808,080 samples, 0.03%)</title><rect x="1048.6" y="405" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1051.57" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (16,757,575,590 samples, 5.36%)</title><rect x="351.4" y="357" width="63.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="354.36" y="367.5" >[libc...</text>
</g>
<g >
<title>[[kernel.kallsyms]] (303,030,300 samples, 0.10%)</title><rect x="979.8" y="245" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="982.78" y="255.5" ></text>
</g>
<g >
<title>brk (30,303,030 samples, 0.01%)</title><rect x="736.1" y="325" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="739.09" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (191,919,190 samples, 0.06%)</title><rect x="958.9" y="373" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="961.91" y="383.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.01%)</title><rect x="1178.4" y="357" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1181.40" y="367.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_packet_now (1,575,757,560 samples, 0.50%)</title><rect x="1180.4" y="405" width="6.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1183.42" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,131,313,110 samples, 0.68%)</title><rect x="963.9" y="357" width="8.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="966.87" y="367.5" ></text>
</g>
<g >
<title>sim::TcpFlow::process_ack (3,222,222,190 samples, 1.03%)</title><rect x="1033.5" y="357" width="12.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1036.53" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1181.4" y="357" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1184.38" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_cwnd (50,505,050 samples, 0.02%)</title><rect x="1032.2" y="357" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1035.16" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,212,121,190 samples, 0.71%)</title><rect x="704.4" y="229" width="8.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="707.39" y="239.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (30,303,030 samples, 0.01%)</title><rect x="414.7" y="389" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="417.73" y="399.5" ></text>
</g>
<g >
<title>sim::TcpFlow::create_ack (515,151,510 samples, 0.16%)</title><rect x="1029.7" y="357" width="1.9" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1032.68" y="367.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (50,505,050 samples, 0.02%)</title><rect x="773.6" y="405" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="776.60" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (44,979,797,530 samples, 14.40%)</title><rect x="522.3" y="309" width="169.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="525.28" y="319.5" >[libc.so.6]</text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.03%)</title><rect x="1033.2" y="293" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1036.19" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="772.3" y="149" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.26" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="736.1" y="197" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="739.09" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.02%)</title><rect x="1030.8" y="325" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1033.83" y="335.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (80,808,080 samples, 0.03%)</title><rect x="1171.3" y="389" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1174.34" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (111,111,110 samples, 0.04%)</title><rect x="1183.0" y="373" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1185.98" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (494,949,490 samples, 0.16%)</title><rect x="1070.4" y="325" width="1.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1073.35" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (181,818,180 samples, 0.06%)</title><rect x="85.8" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.77" y="239.5" ></text>
</g>
<g >
<title>sim::Scheduler::get_current_time (50,505,050 samples, 0.02%)</title><rect x="984.4" y="405" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="987.35" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1161.5" y="341" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.50" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (202,020,200 samples, 0.06%)</title><rect x="980.2" y="181" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="983.16" y="191.5" ></text>
</g>
<g >
<title>sim::PacketNumMonitor::correctify_state (90,909,090 samples, 0.03%)</title><rect x="1032.7" y="341" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1035.73" y="351.5" ></text>
</g>
<g >
<title>__libc_start_main (312,383,835,260 samples, 99.99%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.04" y="511.5" >__libc_start_main</text>
</g>
<g >
<title>main (312,272,724,150 samples, 99.96%)</title><rect x="10.5" y="469" width="1179.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="13.46" y="479.5" >main</text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1011.3" y="293" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1014.33" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="10.1" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.11" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="773.4" y="37" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="776.41" y="47.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (323,232,320 samples, 0.10%)</title><rect x="944.0" y="405" width="1.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="946.95" y="415.5" ></text>
</g>
<g >
<title>sim::Host::send_packet (3,858,585,820 samples, 1.24%)</title><rect x="1165.6" y="405" width="14.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1168.62" y="415.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (30,303,030 samples, 0.01%)</title><rect x="1031.6" y="357" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1034.63" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;Time&lt;Nanosecond&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (17,999,999,820 samples, 5.76%)</title><rect x="346.7" y="405" width="68.0" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="349.66" y="415.5" >std::_R..</text>
</g>
<g >
<title>cfree (161,616,160 samples, 0.05%)</title><rect x="1126.9" y="357" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1129.93" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (515,151,510 samples, 0.16%)</title><rect x="920.6" y="309" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="923.60" y="319.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Switch::process (252,525,250 samples, 0.08%)</title><rect x="1187.6" y="421" width="1.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1190.60" y="431.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;, std::weak_ptr&lt;sim::IProcessingDevice&gt;&amp;&gt; (30,303,030 samples, 0.01%)</title><rect x="1188.6" y="421" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1191.55" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (999,999,990 samples, 0.32%)</title><rect x="709.0" y="101" width="3.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="711.97" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1097.7" y="261" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1100.67" y="271.5" ></text>
</g>
<g >
<title>sim::Link::arrive (12,313,131,190 samples, 3.94%)</title><rect x="892.3" y="405" width="46.5" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="895.33" y="415.5" >sim:..</text>
</g>
<g >
<title>memcpy@plt (30,303,030 samples, 0.01%)</title><rect x="692.1" y="293" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="695.06" y="303.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (3,464,646,430 samples, 1.11%)</title><rect x="1059.6" y="357" width="13.0" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1062.55" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="922.5" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="925.55" y="223.5" ></text>
</g>
<g >
<title>sim::Link::get_max_from_egress_buffer_size (40,404,040 samples, 0.01%)</title><rect x="1046.8" y="405" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1049.81" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.02%)</title><rect x="1105.1" y="341" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1108.07" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1189.2" y="405" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1192.16" y="415.5" ></text>
</g>
<g >
<title>sim::Process::operator (47,646,464,170 samples, 15.25%)</title><rect x="984.9" y="421" width="180.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="987.93" y="431.5" >sim::Process::operator</text>
</g>
<g >
<title>sim::Process::~Process (111,111,110 samples, 0.04%)</title><rect x="1164.9" y="421" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1167.90" y="431.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.01%)</title><rect x="896.2" y="373" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="899.18" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1097.6" y="277" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1100.63" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1011.2" y="325" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1014.21" y="335.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleDocument (111,111,110 samples, 0.04%)</title><rect x="1189.5" y="373" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1192.54" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,444,444,430 samples, 0.46%)</title><rect x="1060.0" y="341" width="5.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1062.97" y="351.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (70,707,070 samples, 0.02%)</title><rect x="772.1" y="389" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="775.15" y="399.5" ></text>
</g>
<g >
<title>sim::Event::Event (30,303,030 samples, 0.01%)</title><rect x="943.8" y="405" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="946.84" y="415.5" ></text>
</g>
<g >
<title>sim::Event::get_time (60,606,060 samples, 0.02%)</title><rect x="806.0" y="437" width="0.3" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="809.03" y="447.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (101,010,100 samples, 0.03%)</title><rect x="1179.3" y="373" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1182.28" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.02%)</title><rect x="1008.8" y="357" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1011.81" y="367.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.01%)</title><rect x="943.7" y="405" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="946.72" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="10.1" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.11" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.02%)</title><rect x="1126.7" y="357" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1129.67" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1043.5" y="277" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1046.53" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="922.5" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="925.55" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (262,626,260 samples, 0.08%)</title><rect x="921.6" y="181" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="924.55" y="191.5" ></text>
</g>
<g >
<title>malloc@plt (60,606,060 samples, 0.02%)</title><rect x="225.5" y="405" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="228.45" y="415.5" ></text>
</g>
<g >
<title>operator delete (50,505,050 samples, 0.02%)</title><rect x="1125.7" y="373" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1128.71" y="383.5" ></text>
</g>
<g >
<title>cfree (17,575,757,400 samples, 5.63%)</title><rect x="14.4" y="421" width="66.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="17.43" y="431.5" >cfree</text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (50,505,050 samples, 0.02%)</title><rect x="1005.8" y="357" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1008.80" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (191,919,190 samples, 0.06%)</title><rect x="1096.5" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1099.52" y="239.5" ></text>
</g>
<g >
<title>operator new (60,606,060 samples, 0.02%)</title><rect x="1181.3" y="389" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1184.26" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,313,130,810 samples, 16.11%)</title><rect x="503.7" y="325" width="190.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="506.74" y="335.5" >[libc.so.6]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 0.08%)</title><rect x="1096.3" y="261" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1099.30" y="271.5" ></text>
</g>
<g >
<title>malloc (545,454,540 samples, 0.17%)</title><rect x="955.3" y="373" width="2.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="958.32" y="383.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (30,303,030 samples, 0.01%)</title><rect x="414.7" y="405" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="417.73" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (393,939,390 samples, 0.13%)</title><rect x="339.2" y="405" width="1.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="342.22" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (494,949,490 samples, 0.16%)</title><rect x="979.1" y="293" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="982.05" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (272,727,270 samples, 0.09%)</title><rect x="772.5" y="181" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.49" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (292,929,290 samples, 0.09%)</title><rect x="1163.6" y="357" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1166.60" y="367.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::~Transmit (30,303,030 samples, 0.01%)</title><rect x="984.7" y="421" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="987.70" y="431.5" ></text>
</g>
<g >
<title>sim::ECMPHasher::get_hash (343,434,340 samples, 0.11%)</title><rect x="1178.0" y="373" width="1.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1180.98" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (171,717,170 samples, 0.05%)</title><rect x="13.8" y="421" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.78" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (90,909,090 samples, 0.03%)</title><rect x="736.1" y="405" width="0.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="739.09" y="415.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.01%)</title><rect x="981.0" y="309" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="984.00" y="319.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;&amp;, std::weak_ptr&lt;sim::ISwitch&gt;&amp;&gt; (1,070,707,060 samples, 0.34%)</title><rect x="933.8" y="373" width="4.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="936.76" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="922.6" y="117" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="925.58" y="127.5" ></text>
</g>
<g >
<title>operator new (90,909,090 samples, 0.03%)</title><rect x="1105.0" y="373" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1107.96" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (1,565,656,550 samples, 0.50%)</title><rect x="917.0" y="341" width="5.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="919.98" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="1096.9" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1099.94" y="159.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (80,808,080 samples, 0.03%)</title><rect x="1037.8" y="325" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1040.81" y="335.5" ></text>
</g>
<g >
<title>operator new (181,818,180 samples, 0.06%)</title><rect x="927.9" y="341" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="930.93" y="351.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (1,626,262,610 samples, 0.52%)</title><rect x="945.2" y="405" width="6.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="948.25" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="10.3" y="181" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.31" y="191.5" ></text>
</g>
<g >
<title>cfree (40,404,040 samples, 0.01%)</title><rect x="805.3" y="437" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="808.26" y="447.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (30,303,030 samples, 0.01%)</title><rect x="1189.4" y="405" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1192.43" y="415.5" ></text>
</g>
<g >
<title>sim::TcpFlow::Timeout::operator (242,424,240 samples, 0.08%)</title><rect x="1186.5" y="421" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1189.45" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (232,323,230 samples, 0.07%)</title><rect x="887.5" y="389" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="890.52" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (70,707,070 samples, 0.02%)</title><rect x="772.1" y="373" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="775.15" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="980.5" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="983.54" y="159.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (272,727,270 samples, 0.09%)</title><rect x="932.7" y="373" width="1.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="935.73" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (303,030,300 samples, 0.10%)</title><rect x="921.4" y="197" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="924.40" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="735.7" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="738.75" y="287.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (40,404,040 samples, 0.01%)</title><rect x="776.8" y="389" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="779.80" y="399.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (252,525,250 samples, 0.08%)</title><rect x="1181.8" y="389" width="0.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1184.76" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (262,626,260 samples, 0.08%)</title><rect x="979.9" y="213" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="982.93" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="10.1" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.11" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="10.1" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.11" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.03%)</title><rect x="1166.1" y="389" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1169.08" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="1071.9" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1074.88" y="159.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (282,828,280 samples, 0.09%)</title><rect x="434.6" y="389" width="1.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="437.57" y="399.5" ></text>
</g>
<g >
<title>malloc (151,515,150 samples, 0.05%)</title><rect x="1127.9" y="341" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1130.92" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,171,717,150 samples, 0.70%)</title><rect x="72.6" y="373" width="8.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="75.61" y="383.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (40,404,040 samples, 0.01%)</title><rect x="1189.8" y="229" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.77" y="239.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (4,141,414,100 samples, 1.33%)</title><rect x="1059.2" y="373" width="15.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1062.17" y="383.5" ></text>
</g>
<g >
<title>fopen (30,303,030 samples, 0.01%)</title><rect x="414.7" y="373" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="417.73" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="1097.2" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.25" y="239.5" ></text>
</g>
<g >
<title>__libc_alloca_cutoff (292,929,290 samples, 0.09%)</title><rect x="692.2" y="309" width="1.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="695.18" y="319.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (434,343,430 samples, 0.14%)</title><rect x="435.6" y="389" width="1.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="438.64" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1097.5" y="69" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.52" y="79.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_delivery_rate (585,858,580 samples, 0.19%)</title><rect x="1043.1" y="341" width="2.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1046.15" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,363,636,340 samples, 0.76%)</title><rect x="703.8" y="309" width="8.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="706.81" y="319.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.01%)</title><rect x="1127.7" y="357" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1130.70" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="772.3" y="197" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.26" y="207.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (30,303,030 samples, 0.01%)</title><rect x="1040.1" y="325" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1043.10" y="335.5" ></text>
</g>
<g >
<title>sim::Host::notify_about_arrival (292,929,290 samples, 0.09%)</title><rect x="895.3" y="389" width="1.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="898.34" y="399.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (141,414,140 samples, 0.05%)</title><rect x="438.7" y="389" width="0.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="441.73" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (30,303,030 samples, 0.01%)</title><rect x="1098.5" y="341" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1101.47" y="351.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.03%)</title><rect x="1189.6" y="277" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.62" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (363,636,360 samples, 0.12%)</title><rect x="12.4" y="357" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.40" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (737,373,730 samples, 0.24%)</title><rect x="1012.4" y="325" width="2.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1015.40" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="776.4" y="389" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="779.38" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1005.4" y="197" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1008.42" y="207.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (606,060,600 samples, 0.19%)</title><rect x="926.3" y="357" width="2.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="929.32" y="367.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (101,010,100 samples, 0.03%)</title><rect x="922.9" y="341" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="925.89" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (333,333,330 samples, 0.11%)</title><rect x="12.5" y="325" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.52" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="735.7" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="738.75" y="239.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (60,606,060 samples, 0.02%)</title><rect x="1072.3" y="325" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1075.34" y="335.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::data[abi:cxx11] (757,575,750 samples, 0.24%)</title><rect x="83.6" y="421" width="2.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="86.64" y="431.5" ></text>
</g>
<g >
<title>sim::Process::Process (242,424,240 samples, 0.08%)</title><rect x="936.9" y="357" width="0.9" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="939.89" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;unsigned int&gt; &gt;::_M_erase (60,606,060 samples, 0.02%)</title><rect x="1032.8" y="325" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1035.85" y="335.5" ></text>
</g>
<g >
<title>operator new (12,262,626,140 samples, 3.93%)</title><rect x="226.1" y="405" width="46.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="229.14" y="415.5" >oper..</text>
</g>
<g >
<title>[libc.so.6] (111,111,110 samples, 0.04%)</title><rect x="10.0" y="453" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.04" y="463.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::export_to_files (8,727,272,640 samples, 2.79%)</title><rect x="771.8" y="437" width="33.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="774.84" y="447.5" >si..</text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned int&gt;, bool&gt; std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;unsigned int&gt; &gt;::_M_insert_unique&lt;unsigned int const&amp;&gt; (111,111,110 samples, 0.04%)</title><rect x="1033.1" y="341" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1036.11" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (232,323,230 samples, 0.07%)</title><rect x="772.6" y="133" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.64" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (151,515,150 samples, 0.05%)</title><rect x="1096.7" y="197" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1099.68" y="207.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (383,838,380 samples, 0.12%)</title><rect x="773.8" y="405" width="1.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="776.83" y="415.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (3,010,100,980 samples, 0.96%)</title><rect x="1087.1" y="341" width="11.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1090.10" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (797,979,790 samples, 0.26%)</title><rect x="1167.6" y="357" width="3.0" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1170.57" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,080,808,060 samples, 0.67%)</title><rect x="704.9" y="181" width="7.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="707.88" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="1097.2" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.25" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (373,737,370 samples, 0.12%)</title><rect x="979.5" y="261" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="982.51" y="271.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.02%)</title><rect x="947.2" y="389" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="950.19" y="399.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (74,757,575,010 samples, 23.93%)</title><rect x="441.3" y="389" width="282.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="444.32" y="399.5" >std::ostreambuf_iterator&lt;char, std::c..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (626,262,620 samples, 0.20%)</title><rect x="710.4" y="85" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="713.38" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (525,252,520 samples, 0.17%)</title><rect x="84.5" y="405" width="2.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.47" y="415.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (282,828,280 samples, 0.09%)</title><rect x="1054.9" y="389" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1057.90" y="399.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (7,121,212,050 samples, 2.28%)</title><rect x="1107.2" y="389" width="26.9" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1110.17" y="399.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="10.1" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.11" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="772.2" y="293" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.19" y="303.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (90,909,090 samples, 0.03%)</title><rect x="923.3" y="341" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="926.27" y="351.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (424,242,420 samples, 0.14%)</title><rect x="1043.7" y="325" width="1.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1046.68" y="335.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (80,808,080 samples, 0.03%)</title><rect x="1040.4" y="325" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1043.36" y="335.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (333,333,330 samples, 0.11%)</title><rect x="998.1" y="405" width="1.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1001.13" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (515,151,510 samples, 0.16%)</title><rect x="920.6" y="293" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="923.60" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="773.2" y="69" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="776.22" y="79.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="736.1" y="357" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="739.09" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,454,545,410 samples, 1.43%)</title><rect x="785.0" y="309" width="16.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="788.04" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,171,717,150 samples, 0.70%)</title><rect x="704.5" y="197" width="8.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="707.54" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1170.2" y="181" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1173.24" y="191.5" ></text>
</g>
<g >
<title>operator new (565,656,560 samples, 0.18%)</title><rect x="955.2" y="389" width="2.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="958.24" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (40,404,040 samples, 0.01%)</title><rect x="984.0" y="389" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="987.05" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (40,404,040 samples, 0.01%)</title><rect x="736.3" y="357" width="0.1" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="739.28" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1161.5" y="373" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.50" y="383.5" ></text>
</g>
<g >
<title>__munmap (60,606,060 samples, 0.02%)</title><rect x="922.5" y="325" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="925.55" y="335.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (7,050,504,980 samples, 2.26%)</title><rect x="777.9" y="389" width="26.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="780.87" y="399.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="980.7" y="133" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="983.65" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (373,737,370 samples, 0.12%)</title><rect x="1070.8" y="309" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1073.81" y="319.5" ></text>
</g>
<g >
<title>utils::create_all_directories (30,303,030 samples, 0.01%)</title><rect x="804.6" y="405" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="807.62" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (30,303,030 samples, 0.01%)</title><rect x="1037.3" y="325" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1040.31" y="335.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.01%)</title><rect x="1031.8" y="341" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1034.82" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::FlagInfo&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::FlagInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (30,303,030 samples, 0.01%)</title><rect x="1037.1" y="277" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1040.08" y="287.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (434,343,430 samples, 0.14%)</title><rect x="720.3" y="373" width="1.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="723.30" y="383.5" ></text>
</g>
<g >
<title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (555,555,550 samples, 0.18%)</title><rect x="718.2" y="373" width="2.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="721.20" y="383.5" ></text>
</g>
<g >
<title>open64 (30,303,030 samples, 0.01%)</title><rect x="414.7" y="325" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="417.73" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="735.9" y="85" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="738.90" y="95.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="981.0" y="293" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="984.00" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="414.7" y="245" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="417.73" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="894.8" y="389" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="897.81" y="399.5" ></text>
</g>
<g >
<title>operator new (111,111,110 samples, 0.04%)</title><rect x="1033.1" y="325" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1036.11" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (59,464,645,870 samples, 19.03%)</title><rect x="469.3" y="341" width="224.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="472.33" y="351.5" >[libc.so.6]</text>
</g>
<g >
<title>cfree (121,212,120 samples, 0.04%)</title><rect x="1166.4" y="389" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1169.38" y="399.5" ></text>
</g>
<g >
<title>pthread_once (353,535,350 samples, 0.11%)</title><rect x="699.0" y="373" width="1.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="702.05" y="383.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet const&amp;&gt; (40,404,040 samples, 0.01%)</title><rect x="1182.6" y="373" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1185.56" y="383.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (1,141,414,130 samples, 0.37%)</title><rect x="1102.5" y="389" width="4.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1105.51" y="399.5" ></text>
</g>
<g >
<title>sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::get_flag (30,303,030 samples, 0.01%)</title><rect x="1008.1" y="373" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1011.12" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1170.2" y="165" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1173.24" y="175.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (30,303,030 samples, 0.01%)</title><rect x="1182.4" y="373" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1185.41" y="383.5" ></text>
</g>
<g >
<title>cfree (50,505,050 samples, 0.02%)</title><rect x="339.0" y="357" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="342.03" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_RTT (696,969,690 samples, 0.22%)</title><rect x="1037.6" y="341" width="2.6" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1040.58" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (393,939,390 samples, 0.13%)</title><rect x="921.1" y="261" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="924.06" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1170.1" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1173.08" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (333,333,330 samples, 0.11%)</title><rect x="12.5" y="341" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.52" y="351.5" ></text>
</g>
<g >
<title>sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::set_flag (202,020,200 samples, 0.06%)</title><rect x="1030.7" y="341" width="0.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1033.67" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (17,575,757,400 samples, 5.63%)</title><rect x="14.4" y="389" width="66.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.43" y="399.5" >[libc.s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (202,020,200 samples, 0.06%)</title><rect x="802.9" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="805.86" y="319.5" ></text>
</g>
<g >
<title>operator delete (30,303,030 samples, 0.01%)</title><rect x="1035.2" y="341" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1038.17" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (202,020,200 samples, 0.06%)</title><rect x="1071.5" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1074.46" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1101.9" y="293" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1104.94" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="736.1" y="213" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="739.09" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,656,565,640 samples, 0.53%)</title><rect x="706.5" y="149" width="6.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="709.49" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="10.1" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.11" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (131,313,130 samples, 0.04%)</title><rect x="977.1" y="341" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="980.07" y="351.5" ></text>
</g>
<g >
<title>sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::get_flag (50,505,050 samples, 0.02%)</title><rect x="1030.5" y="341" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1033.48" y="351.5" ></text>
</g>
<g >
<title>sim::SimplePacketReordering::add_record (3,808,080,770 samples, 1.22%)</title><rect x="1015.3" y="357" width="14.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1018.30" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (141,414,140 samples, 0.05%)</title><rect x="803.1" y="133" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="806.09" y="143.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (343,434,340 samples, 0.11%)</title><rect x="1105.5" y="357" width="1.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1108.49" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (3,030,303,000 samples, 0.97%)</title><rect x="1140.0" y="389" width="11.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1142.98" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (737,373,730 samples, 0.24%)</title><rect x="1002.9" y="357" width="2.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1005.94" y="367.5" ></text>
</g>
<g >
<title>sim::LinkQueue::empty (30,303,030 samples, 0.01%)</title><rect x="1106.8" y="389" width="0.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1109.83" y="399.5" ></text>
</g>
<g >
<title>malloc (70,707,070 samples, 0.02%)</title><rect x="1045.4" y="309" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1048.44" y="319.5" ></text>
</g>
<g >
<title>_start (312,383,835,260 samples, 99.99%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.04" y="527.5" >_start</text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (656,565,650 samples, 0.21%)</title><rect x="1183.4" y="373" width="2.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1186.40" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="1097.2" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.25" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="10.1" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.11" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (212,121,210 samples, 0.07%)</title><rect x="802.8" y="325" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="805.82" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="735.7" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="738.75" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="772.2" y="309" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.19" y="319.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.01%)</title><rect x="1128.6" y="341" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1131.61" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (212,121,210 samples, 0.07%)</title><rect x="802.8" y="341" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="805.82" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (40,404,040 samples, 0.01%)</title><rect x="928.7" y="389" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="931.69" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (121,212,120 samples, 0.04%)</title><rect x="1153.6" y="405" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1156.64" y="415.5" ></text>
</g>
<g >
<title>vsnprintf (303,030,300 samples, 0.10%)</title><rect x="722.5" y="373" width="1.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="725.47" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="1097.2" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.25" y="223.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (222,222,220 samples, 0.07%)</title><rect x="433.2" y="389" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="436.16" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (151,515,150 samples, 0.05%)</title><rect x="1071.6" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1074.65" y="191.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (141,414,140 samples, 0.05%)</title><rect x="1047.6" y="405" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1050.57" y="415.5" ></text>
</g>
<g >
<title>operator delete (121,212,120 samples, 0.04%)</title><rect x="225.7" y="405" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="228.68" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,373,737,360 samples, 0.44%)</title><rect x="796.7" y="293" width="5.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="799.68" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="922.5" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="925.55" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (494,949,490 samples, 0.16%)</title><rect x="979.1" y="325" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="982.05" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,434,343,410 samples, 0.78%)</title><rect x="703.5" y="341" width="9.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="706.55" y="351.5" ></text>
</g>
<g >
<title>sim::Process::operator (414,141,410 samples, 0.13%)</title><rect x="847.4" y="437" width="1.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="850.42" y="447.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (595,959,590 samples, 0.19%)</title><rect x="732.8" y="389" width="2.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="735.81" y="399.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1,444,444,430 samples, 0.46%)</title><rect x="712.7" y="373" width="5.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="715.74" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="414.7" y="229" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="417.73" y="239.5" ></text>
</g>
<g >
<title>memchr@plt (70,707,070 samples, 0.02%)</title><rect x="434.0" y="389" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="437.00" y="399.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;, std::weak_ptr&lt;sim::IProcessingDevice&gt;&amp;&gt; (2,808,080,780 samples, 0.90%)</title><rect x="1154.1" y="405" width="10.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1157.10" y="415.5" ></text>
</g>
<g >
<title>sim::TcpFlow::generate_data_packet (141,414,140 samples, 0.05%)</title><rect x="1036.8" y="309" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1039.78" y="319.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (222,222,220 samples, 0.07%)</title><rect x="437.9" y="389" width="0.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="440.89" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.03%)</title><rect x="1034.9" y="341" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1037.87" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (414,141,410 samples, 0.13%)</title><rect x="84.9" y="357" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.89" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.03%)</title><rect x="735.7" y="389" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="738.75" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="772.2" y="325" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.19" y="335.5" ></text>
</g>
<g >
<title>sim::Link::get_to_ingress_queue_size (70,707,070 samples, 0.02%)</title><rect x="1048.1" y="405" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1051.11" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (626,262,620 samples, 0.20%)</title><rect x="81.3" y="389" width="2.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="84.27" y="399.5" ></text>
</g>
<g >
<title>all (312,404,037,280 samples, 100%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="735.9" y="69" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="738.90" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (535,353,530 samples, 0.17%)</title><rect x="11.8" y="405" width="2.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="14.76" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="772.3" y="229" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.26" y="239.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (2,484,848,460 samples, 0.80%)</title><rect x="971.9" y="357" width="9.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="974.92" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::FlagInfo&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::FlagInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (30,303,030 samples, 0.01%)</title><rect x="1031.4" y="341" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1034.44" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (585,858,580 samples, 0.19%)</title><rect x="301.3" y="373" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="304.30" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="922.5" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="925.55" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="922.6" y="133" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="925.58" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.04%)</title><rect x="956.9" y="341" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="959.92" y="351.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,333,333,230 samples, 3.31%)</title><rect x="806.3" y="437" width="39.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="809.26" y="447.5" >sim..</text>
</g>
<g >
<title>std::ostream::put (3,010,100,980 samples, 0.96%)</title><rect x="723.7" y="405" width="11.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="726.69" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (111,111,110 samples, 0.04%)</title><rect x="10.0" y="469" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.04" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1074.7" y="325" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1077.70" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="980.7" y="117" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="983.69" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,343,434,320 samples, 0.75%)</title><rect x="703.9" y="261" width="8.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="706.89" y="271.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (141,414,140 samples, 0.05%)</title><rect x="721.9" y="373" width="0.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="724.94" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (484,848,480 samples, 0.16%)</title><rect x="1052.9" y="389" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1055.88" y="399.5" ></text>
</g>
<g >
<title>sim::TcpFlow::SendAtTime::operator (1,646,464,630 samples, 0.53%)</title><rect x="1180.2" y="421" width="6.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1183.23" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (525,252,520 samples, 0.17%)</title><rect x="84.5" y="373" width="2.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.47" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.03%)</title><rect x="1043.8" y="309" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1046.76" y="319.5" ></text>
</g>
<g >
<title>sim::Link::get_from_egress_queue_size (70,707,070 samples, 0.02%)</title><rect x="1046.5" y="405" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1049.54" y="415.5" ></text>
</g>
<g >
<title>operator new (101,010,100 samples, 0.03%)</title><rect x="936.5" y="357" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="939.51" y="367.5" ></text>
</g>
<g >
<title>sim::TcpFlow::get_sending_quota (40,404,040 samples, 0.01%)</title><rect x="1035.6" y="309" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1038.63" y="319.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.01%)</title><rect x="1128.6" y="325" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1131.61" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="86.1" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="89.08" y="207.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (60,606,060 samples, 0.02%)</title><rect x="1056.0" y="389" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1058.97" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (303,030,300 samples, 0.10%)</title><rect x="1071.1" y="261" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1074.08" y="271.5" ></text>
</g>
<g >
<title>malloc (60,606,060 samples, 0.02%)</title><rect x="1009.7" y="325" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1012.69" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (515,151,510 samples, 0.16%)</title><rect x="920.6" y="325" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="923.60" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="736.1" y="309" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="739.09" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="1005.5" y="165" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1008.45" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1183.2" y="309" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1186.25" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (151,515,150 samples, 0.05%)</title><rect x="1183.6" y="357" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1186.55" y="367.5" ></text>
</g>
<g >
<title>memcpy@plt (30,303,030 samples, 0.01%)</title><rect x="943.6" y="405" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="946.61" y="415.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (40,404,040 samples, 0.01%)</title><rect x="1127.5" y="357" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1130.54" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="640.3" y="277" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="643.25" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="414.7" y="197" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="417.73" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (373,737,370 samples, 0.12%)</title><rect x="921.1" y="245" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="924.13" y="255.5" ></text>
</g>
<g >
<title>std::ostream::put (131,313,130 samples, 0.04%)</title><rect x="771.3" y="421" width="0.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="774.35" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (272,727,270 samples, 0.09%)</title><rect x="772.5" y="229" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.49" y="239.5" ></text>
</g>
<g >
<title>__uselocale (90,909,090 samples, 0.03%)</title><rect x="802.0" y="373" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="804.98" y="383.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.01%)</title><rect x="1043.5" y="309" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1046.53" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="922.5" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="925.55" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="772.3" y="181" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.26" y="191.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (30,303,030 samples, 0.01%)</title><rect x="777.2" y="389" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="780.18" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (292,929,290 samples, 0.09%)</title><rect x="12.7" y="309" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.67" y="319.5" ></text>
</g>
<g >
<title>memcpy@plt (40,404,040 samples, 0.01%)</title><rect x="892.1" y="405" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="895.14" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (191,919,190 samples, 0.06%)</title><rect x="921.8" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="924.82" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (333,333,330 samples, 0.11%)</title><rect x="956.1" y="357" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="959.12" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::export_metrics_to_files (210,303,028,200 samples, 67.32%)</title><rect x="10.5" y="453" width="794.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="13.46" y="463.5" >sim::MetricsCollector::export_metrics_to_files</text>
</g>
<g >
<title>sim::MetricsStorage::export_to_file (8,686,868,600 samples, 2.78%)</title><rect x="771.9" y="421" width="32.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="774.92" y="431.5" >si..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (202,020,200 samples, 0.06%)</title><rect x="802.9" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="805.86" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1032.9" y="293" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1035.92" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="736.1" y="181" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="739.09" y="191.5" ></text>
</g>
<g >
<title>sim::RoundRobinMPLB::select_flow (70,707,070 samples, 0.02%)</title><rect x="1035.6" y="325" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1038.56" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (373,737,370 samples, 0.12%)</title><rect x="1070.8" y="277" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1073.81" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.04%)</title><rect x="13.3" y="229" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.32" y="239.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (898,989,890 samples, 0.29%)</title><rect x="948.0" y="373" width="3.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="950.96" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.02%)</title><rect x="983.8" y="325" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="986.82" y="335.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (2,030,303,010 samples, 0.65%)</title><rect x="990.5" y="405" width="7.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="993.46" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (383,838,380 samples, 0.12%)</title><rect x="12.3" y="373" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.33" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1009.8" y="309" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1012.80" y="319.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (636,363,630 samples, 0.20%)</title><rect x="1040.7" y="325" width="2.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1043.67" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1097.4" y="85" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.36" y="95.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (989,898,980 samples, 0.32%)</title><rect x="1011.4" y="341" width="3.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1014.44" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,434,343,410 samples, 0.78%)</title><rect x="703.5" y="325" width="9.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="706.55" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.03%)</title><rect x="954.9" y="389" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="957.90" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_cwnd (777,777,770 samples, 0.25%)</title><rect x="1040.2" y="341" width="2.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1043.21" y="351.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.01%)</title><rect x="981.0" y="325" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="984.00" y="335.5" ></text>
</g>
<g >
<title>cfree (5,929,292,870 samples, 1.90%)</title><rect x="281.1" y="389" width="22.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="284.12" y="399.5" >c..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (191,919,190 samples, 0.06%)</title><rect x="1096.5" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1099.52" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="735.7" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="738.75" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;Time&lt;Nanosecond&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (40,404,040 samples, 0.01%)</title><rect x="770.5" y="421" width="0.2" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="773.54" y="431.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (353,535,350 samples, 0.11%)</title><rect x="1004.3" y="341" width="1.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1007.31" y="351.5" ></text>
</g>
<g >
<title>sim::Host::process (12,484,848,360 samples, 4.00%)</title><rect x="999.4" y="405" width="47.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1002.39" y="415.5" >sim:..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,272,727,250 samples, 0.73%)</title><rect x="704.2" y="245" width="8.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="707.16" y="255.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::get_records (555,555,550 samples, 0.18%)</title><rect x="272.5" y="405" width="2.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="275.46" y="415.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (50,505,050 samples, 0.02%)</title><rect x="1002.7" y="373" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1005.71" y="383.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (646,464,640 samples, 0.21%)</title><rect x="981.6" y="373" width="2.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="984.61" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (17,121,211,950 samples, 5.48%)</title><rect x="274.6" y="405" width="64.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="277.55" y="415.5" >std::_R..</text>
</g>
<g >
<title>sim::PacketNumMonitor::confirm_one (313,131,310 samples, 0.10%)</title><rect x="1032.4" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1035.35" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="10.3" y="165" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.34" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,969,696,950 samples, 0.63%)</title><rect x="1079.6" y="341" width="7.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1082.58" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="1097.0" y="101" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.02" y="111.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (919,191,910 samples, 0.29%)</title><rect x="977.6" y="341" width="3.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="980.64" y="351.5" ></text>
</g>
<g >
<title>sim::ECN::get_congestion_mark (80,808,080 samples, 0.03%)</title><rect x="990.0" y="405" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="993.04" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1097.0" y="117" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1099.98" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="1097.2" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.25" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (202,020,200 samples, 0.06%)</title><rect x="802.9" y="181" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="805.86" y="191.5" ></text>
</g>
<g >
<title>_IO_file_fopen (272,727,270 samples, 0.09%)</title><rect x="772.5" y="357" width="1.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="775.49" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (212,121,210 samples, 0.07%)</title><rect x="85.7" y="245" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.66" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (272,727,270 samples, 0.09%)</title><rect x="772.5" y="245" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.49" y="255.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (40,404,040 samples, 0.01%)</title><rect x="775.1" y="389" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="778.12" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1170.2" y="261" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1173.16" y="271.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (161,616,160 samples, 0.05%)</title><rect x="1189.4" y="453" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1192.35" y="463.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.01%)</title><rect x="1011.3" y="325" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1014.33" y="335.5" ></text>
</g>
<g >
<title>malloc@plt (30,303,030 samples, 0.01%)</title><rect x="349.2" y="389" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="352.22" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="1097.2" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.25" y="287.5" ></text>
</g>
<g >
<title>__default_morecore (90,909,090 samples, 0.03%)</title><rect x="735.7" y="373" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="738.75" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (404,040,400 samples, 0.13%)</title><rect x="711.2" y="69" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="714.22" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="736.1" y="245" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="739.09" y="255.5" ></text>
</g>
<g >
<title>cfree (30,303,030 samples, 0.01%)</title><rect x="1005.9" y="341" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1008.87" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="735.8" y="117" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="738.79" y="127.5" ></text>
</g>
<g >
<title>sim::Link::get_max_to_ingress_queue_size (161,616,160 samples, 0.05%)</title><rect x="1047.0" y="405" width="0.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1049.96" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="10.1" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.11" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (373,737,370 samples, 0.12%)</title><rect x="1070.8" y="293" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1073.81" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (161,616,160 samples, 0.05%)</title><rect x="13.2" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.17" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (202,020,200 samples, 0.06%)</title><rect x="802.9" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="805.86" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="414.7" y="277" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="417.73" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="1096.8" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1099.83" y="175.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::Arrive (363,636,360 samples, 0.12%)</title><rect x="957.4" y="389" width="1.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="960.42" y="399.5" ></text>
</g>
<g >
<title>sim::TcpFlow::SendAtTime::~SendAtTime (30,303,030 samples, 0.01%)</title><rect x="1188.9" y="437" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1191.89" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1170.1" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1173.08" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="772.2" y="277" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.19" y="287.5" ></text>
</g>
<g >
<title>YAML::Load (111,111,110 samples, 0.04%)</title><rect x="1189.5" y="405" width="0.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1192.54" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (141,414,140 samples, 0.05%)</title><rect x="947.4" y="373" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="950.42" y="383.5" ></text>
</g>
<g >
<title>operator new (373,737,370 samples, 0.12%)</title><rect x="273.1" y="389" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="276.14" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (858,585,850 samples, 0.27%)</title><rect x="1094.5" y="325" width="3.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1097.54" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="735.8" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="738.79" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.04%)</title><rect x="801.4" y="277" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="804.41" y="287.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet const&amp;&gt; (70,707,070 samples, 0.02%)</title><rect x="1010.5" y="341" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1013.45" y="351.5" ></text>
</g>
<g >
<title>sim::TcpFlow::process_single_ack (3,636,363,600 samples, 1.16%)</title><rect x="1032.0" y="373" width="13.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1034.97" y="383.5" ></text>
</g>
<g >
<title>memcpy@plt (80,808,080 samples, 0.03%)</title><rect x="434.3" y="389" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="437.26" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (90,909,090 samples, 0.03%)</title><rect x="736.1" y="389" width="0.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="739.09" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="414.7" y="149" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="417.73" y="159.5" ></text>
</g>
<g >
<title>operator new (767,676,760 samples, 0.25%)</title><rect x="1161.8" y="389" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1164.80" y="399.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::operator (11,565,656,450 samples, 3.70%)</title><rect x="941.0" y="421" width="43.7" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="944.01" y="431.5" >sim:..</text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,575,757,560 samples, 0.50%)</title><rect x="340.7" y="405" width="6.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="343.71" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (313,131,310 samples, 0.10%)</title><rect x="1003.1" y="341" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1006.13" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (4,848,484,800 samples, 1.55%)</title><rect x="963.3" y="373" width="18.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="966.26" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (414,141,410 samples, 0.13%)</title><rect x="457.6" y="373" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="460.57" y="383.5" ></text>
</g>
<g >
<title>operator delete (161,616,160 samples, 0.05%)</title><rect x="805.4" y="437" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="808.42" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="735.7" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="738.75" y="191.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Host::process (30,303,030 samples, 0.01%)</title><rect x="1187.5" y="421" width="0.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1190.48" y="431.5" ></text>
</g>
<g >
<title>sim::Summary::Summary (40,404,040 samples, 0.01%)</title><rect x="1189.2" y="453" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1192.16" y="463.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::get_storage_named (40,404,040 samples, 0.01%)</title><rect x="1037.7" y="325" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1040.65" y="335.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (90,909,090 samples, 0.03%)</title><rect x="1043.3" y="325" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1046.34" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="735.7" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="738.75" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="922.3" y="117" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="925.28" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (141,414,140 samples, 0.05%)</title><rect x="1071.7" y="165" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1074.69" y="175.5" ></text>
</g>
<g >
<title>write (60,606,060 samples, 0.02%)</title><rect x="772.2" y="341" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="775.19" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="735.8" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="738.79" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 0.08%)</title><rect x="85.5" y="277" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.51" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.03%)</title><rect x="1097.2" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1100.25" y="255.5" ></text>
</g>
<g >
<title>vsnprintf (60,282,827,680 samples, 19.30%)</title><rect x="466.3" y="357" width="227.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="469.31" y="367.5" >vsnprintf</text>
</g>
<g >
<title>sim::MetricsStorage::add_record (131,313,130 samples, 0.04%)</title><rect x="1169.9" y="325" width="0.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1172.89" y="335.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (50,505,050 samples, 0.02%)</title><rect x="1164.7" y="405" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1167.70" y="415.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (40,404,040 samples, 0.01%)</title><rect x="777.0" y="389" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="779.95" y="399.5" ></text>
</g>
<g >
<title>vsnprintf (5,636,363,580 samples, 1.80%)</title><rect x="780.7" y="357" width="21.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="783.69" y="367.5" >v..</text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.03%)</title><rect x="1038.2" y="309" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1041.23" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="922.5" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="925.55" y="255.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (767,676,760 samples, 0.25%)</title><rect x="959.6" y="373" width="2.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="962.63" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="640.3" y="245" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="643.25" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="86.0" y="213" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="89.04" y="223.5" ></text>
</g>
<g >
<title>sim::Process::~Process (282,828,280 samples, 0.09%)</title><rect x="849.0" y="437" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="851.99" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (13,676,767,540 samples, 4.38%)</title><rect x="640.4" y="293" width="51.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="643.40" y="303.5" >[libc..</text>
</g>
<g >
<title>sim::Process::Process (30,303,030 samples, 0.01%)</title><rect x="896.3" y="373" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="899.34" y="383.5" ></text>
</g>
<g >
<title>memchr@plt (30,303,030 samples, 0.01%)</title><rect x="776.6" y="389" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="779.61" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1011.2" y="309" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1014.21" y="319.5" ></text>
</g>
<g >
<title>_IO_file_fopen (30,303,030 samples, 0.01%)</title><rect x="414.7" y="357" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="417.73" y="367.5" ></text>
</g>
<g >
<title>brk (90,909,090 samples, 0.03%)</title><rect x="735.7" y="357" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="738.75" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="10.1" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.11" y="383.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (50,505,050 samples, 0.02%)</title><rect x="1170.4" y="325" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1173.39" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (202,020,200 samples, 0.06%)</title><rect x="802.9" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="805.86" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="772.3" y="165" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.26" y="175.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (90,909,090 samples, 0.03%)</title><rect x="772.1" y="405" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="775.07" y="415.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::~Transmit (30,303,030 samples, 0.01%)</title><rect x="847.3" y="437" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="850.31" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (535,353,530 samples, 0.17%)</title><rect x="11.8" y="421" width="2.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="14.76" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (202,020,200 samples, 0.06%)</title><rect x="1001.5" y="389" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1004.52" y="399.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (262,626,260 samples, 0.08%)</title><rect x="937.8" y="389" width="1.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="940.81" y="399.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (70,707,070 samples, 0.02%)</title><rect x="775.3" y="405" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="778.31" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (393,939,390 samples, 0.13%)</title><rect x="979.4" y="277" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="982.43" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1170.1" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1173.08" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="735.8" y="101" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="738.83" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (323,232,320 samples, 0.10%)</title><rect x="1096.0" y="293" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1099.03" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;sim::IHost,  (70,707,070 samples, 0.02%)</title><rect x="1046.2" y="389" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1049.24" y="399.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (70,707,070 samples, 0.02%)</title><rect x="1102.2" y="373" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1105.25" y="383.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (40,404,040 samples, 0.01%)</title><rect x="984.5" y="405" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="987.55" y="415.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (111,111,110 samples, 0.04%)</title><rect x="1189.5" y="357" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.54" y="367.5" ></text>
</g>
<g >
<title>malloc (636,363,630 samples, 0.20%)</title><rect x="81.2" y="405" width="2.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="84.23" y="415.5" ></text>
</g>
<g >
<title>cfree (40,404,040 samples, 0.01%)</title><rect x="225.2" y="405" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="228.22" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (272,727,270 samples, 0.09%)</title><rect x="772.5" y="261" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="775.49" y="271.5" ></text>
</g>
<g >
<title>writev (212,121,210 samples, 0.07%)</title><rect x="802.8" y="357" width="0.8" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="805.82" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (606,060,600 samples, 0.19%)</title><rect x="336.6" y="357" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="339.55" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1105.3" y="357" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1108.34" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="922.5" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="925.55" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1036.8" y="293" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1039.82" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (222,222,220 samples, 0.07%)</title><rect x="85.6" y="261" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.62" y="271.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (545,454,540 samples, 0.17%)</title><rect x="439.3" y="389" width="2.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="442.26" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="922.5" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="925.55" y="175.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (90,909,090 samples, 0.03%)</title><rect x="1005.3" y="325" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1008.26" y="335.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (60,606,060 samples, 0.02%)</title><rect x="1138.8" y="389" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1141.76" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::~MetricsCollector (101,010,100 samples, 0.03%)</title><rect x="10.1" y="437" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="13.08" y="447.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (4,989,898,940 samples, 1.60%)</title><rect x="1056.2" y="389" width="18.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1059.20" y="399.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (121,212,120 samples, 0.04%)</title><rect x="928.8" y="389" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="931.84" y="399.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (30,303,030 samples, 0.01%)</title><rect x="1185.9" y="373" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1188.88" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (171,717,170 samples, 0.05%)</title><rect x="1069.7" y="325" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1072.67" y="335.5" ></text>
</g>
<g >
<title>sim::Switch::process (27,565,656,290 samples, 8.82%)</title><rect x="1048.9" y="405" width="104.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1051.87" y="415.5" >sim::Switch:..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="736.1" y="277" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="739.09" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (292,929,290 samples, 0.09%)</title><rect x="979.8" y="229" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="982.81" y="239.5" ></text>
</g>
<g >
<title>memcpy@plt (131,313,130 samples, 0.04%)</title><rect x="693.3" y="309" width="0.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="696.28" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (353,535,350 samples, 0.11%)</title><rect x="85.1" y="309" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.12" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="1072.0" y="117" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1074.95" y="127.5" ></text>
</g>
<g >
<title>malloc (17,171,717,000 samples, 5.50%)</title><rect x="349.8" y="373" width="64.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="352.79" y="383.5" >malloc</text>
</g>
<g >
<title>sim::MetricsCollector::get_instance (131,313,130 samples, 0.04%)</title><rect x="1072.6" y="357" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1075.64" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (141,414,140 samples, 0.05%)</title><rect x="1040.7" y="309" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1043.71" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.02%)</title><rect x="773.3" y="53" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="776.25" y="63.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (50,505,050 samples, 0.02%)</title><rect x="1031.8" y="357" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1034.78" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_packet_reordering (1,191,919,180 samples, 0.38%)</title><rect x="1010.7" y="357" width="4.5" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1013.72" y="367.5" ></text>
</g>
<g >
<title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (40,404,040 samples, 0.01%)</title><rect x="804.1" y="373" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="807.12" y="383.5" ></text>
</g>
<g >
<title>malloc (171,717,170 samples, 0.05%)</title><rect x="928.0" y="325" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="930.96" y="335.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (40,404,040 samples, 0.01%)</title><rect x="1189.8" y="197" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.77" y="207.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (444,444,440 samples, 0.14%)</title><rect x="1073.1" y="357" width="1.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1076.14" y="367.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (40,404,040 samples, 0.01%)</title><rect x="1097.8" y="325" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1100.78" y="335.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (90,909,090 samples, 0.03%)</title><rect x="1006.4" y="389" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1009.41" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (262,626,260 samples, 0.08%)</title><rect x="1071.2" y="245" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1074.23" y="255.5" ></text>
</g>
</g>
</svg>
