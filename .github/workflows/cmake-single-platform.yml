name: Build and run project

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]

env:
  EXECUTABLE_NAME: nons
  TEST_EXECUTABLE_NAME: test_nons

jobs:
  clang-format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Clang Format
      run: sudo apt-get install clang-format

    - name: Collect files for Clang
      run:
        files_for_clang="
        main.cpp
        $(
          find source -type f -name "*.cpp" -o -name "*.hpp";
          find test -type f -name "*.cpp" -o -name "*.hpp"
        )"
    - name: Clang format
      run:
        clang-format --dry-run -Werror $files_for_clang
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Update submodules
      run: git submodule update --init --recursive

    - name: Configure CMake for building project
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_PROJECT=ON -DBUILD_TESTS=OFF

    - name: Build project
      run: cmake --build build --config Debug -j $(nproc)

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-artifact
        path: build/**

  run-simulations:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4

    - name: Apt update
      run: sudo apt update

    - name: Install gnuplot
      run: sudo apt install --fix-missing gnuplot

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: build-artifact

    - name: Add executable flag
      run: chmod +x ${{env.EXECUTABLE_NAME}}

    - name: Run simulation
      run: python3 scripts/run_simulations.py -e ./${{env.EXECUTABLE_NAME}} -c configuration_examples/simulation_examples --output-dir ./metrics

    - name: Create html
      run: python3 scripts/generate-html.py ./metrics

    - name: Upload metrics
      uses: actions/upload-artifact@v4
      with:
        name: metrics
        path: metrics/**

    - name: Calculate deploy destination directory
      run: |
        python3 scripts/caclulate_deploy_dir.py \
          --github-event-name "${{ github.event_name }}" \
          --github-head-ref "${{ github.head_ref }}" \
          --github-run-id "${{ github.run_id }}" \
          --github-ref "${{ github.ref }}" \
          --github-env-varname GITHUB_ENV \
          --deploy-dir-varname DEPLOY_DIR

    - name: Deploy to GitHub Pages
      if: ${{env.DEPLOY_DIR}} != ''
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: metrics
        destination_dir: ${{env.DEPLOY_DIR}}
    - name: Wait for artifacts to be avaliable
      run:
        URL="https://cloud-storage-team.github.io/algnet/${{env.DEPLOY_DIR}}";
        while true; do
          if curl --output /dev/null --silent --head --fail "$URL"; then
            echo "Artifacts are avaliable at $URL";
            break;
          else
            echo "Waiting for page to be available...";
            sleep 1;
          fi
        done

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Update submodules
      run: git submodule update --init --recursive

    - name: Configure CMake for building tests
      run: cmake -B build -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_PROJECT=OFF -DBUILD_TESTS=ON

    - name: Build tests
      run: cmake --build build --config Debug -j $(nproc)

    - name: Run tests
      working-directory: build
      run: ./${{env.TEST_EXECUTABLE_NAME}}

