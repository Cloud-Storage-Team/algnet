name: Load testing

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

env:
  BUILD_DIR: build
  EXECUTABLE_PATH: $BUILD_DIR/nons

jobs:
  load_testing:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4

    - name: Update submodules
      run: git submodule update --init --recursive

    - name: Configure CMake for building project
      run: cmake -B ${{env.BUILD_DIR}} -DCMAKE_BUILD_TYPE=Release -DBUILD_PROJECT=ON -DBUILD_TESTS=OFF

    - name: Build project
      run: cmake --build ${{env.BUILD_DIR}} -j $(nproc)

    - name: Run simulations
      run: | 
        python3 scripts/run_incast_simulation.py -e ${{env.EXECUTABLE_PATH}} --senders 300 --receivers 5 --time 100000000 --packets 20000
        python3 scripts/run_incast_simulation.py -e ${{env.EXECUTABLE_PATH}} --senders 1000 --receivers 10 --time 100000000 --packets 20000
        python3 scripts/run_incast_simulation.py -e ${{env.EXECUTABLE_PATH}} --senders 1000 --receivers 30 --time 100000000 --packets 20000

  profiling_load_testing:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Update submodules
      run: git submodule update --init --recursive

    - name: Configure CMake for profiling
      run: cmake -B ${{env.BUILD_DIR}} -DCMAKE_BUILD_TYPE=Release -DBUILD_PROJECT=ON -DBUILD_TESTS=OFF -DPROFILING=ON

    - name: Build project with profiling
      run: cmake --build ${{env.BUILD_DIR}} -j $(nproc)

    - name: Run simulations with profiling
      run: | 
        python3 scripts/run_incast_simulation.py -e ${{env.EXECUTABLE_PATH}} --senders 300 --receivers 5 --time 100000000 --packets 20000
        gprof ${{env.EXECUTABLE_PATH}} > profile.txt
        head profile.txt
        
        python3 scripts/run_incast_simulation.py -e ${{env.EXECUTABLE_PATH}} --senders 1000 --receivers 10 --time 100000000 --packets 20000
        gprof ${{env.EXECUTABLE_PATH}} > profile.txt
        head profile.txt
        
        python3 scripts/run_incast_simulation.py -e ${{env.EXECUTABLE_PATH}} --senders 1000 --receivers 30 --time 100000000 --packets 20000  
        gprof ${{env.EXECUTABLE_PATH}} > profile.txt
        head profile.txt

  flamegraph:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Update submodules
      run: git submodule update --init --recursive

    - name: Get dependencies  
      run: git clone https://github.com/brendangregg/FlameGraph.git

    - name: Configure CMake for perf
      run: cmake -B ${{env.BUILD_DIR}} -DCMAKE_BUILD_TYPE=Release -DBUILD_PROJECT=ON -DBUILD_TESTS=OFF -DCMAKE_CXX_FLAGS="-g -fno-omit-frame-pointer"

    - name: Build project with profiling
      run: cmake --build ${{env.BUILD_DIR}} -j $(nproc)

    - name: Run perf
      run: sudo perf record -F 99 -g -- ./build/nons -c configuration_examples/simulation_examples/incast_simulation.yml --no-logs --no-plots > perf.data

    - name: Debug perf.data
      run: |
        ls -hal
        file perf.data
        perf report -i perf.data --header-only
        perf script -i perf.data -v > out.perf 2>&1 || true
        cat out.perf

    - name: Generate flamegraph
      run: |
        cat perf.data
        ls -hal
        sudo perf script -v > out.perf
        ls -hal
        ./FlameGraph/stackcollapse-perf.pl out.perf > out.folded
        ./FlameGraph/flamegraph.pl out.folded > flamegraph.svg

    - name: Upload flamegraph
      uses: actions/upload-artifact@v4
      with:
        name: flamegraph
        path: flamegraph.svg
