<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="646.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="629" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="629" > </text>
<g id="frames">
<g >
<title>sim::LinkQueue::push (171,717,170 samples, 0.51%)</title><rect x="1130.3" y="421" width="6.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1133.30" y="431.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="344.9" y="389" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="347.95" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="64.0" y="421" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="66.98" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1177.1" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.13" y="271.5" ></text>
</g>
<g >
<title>std::ostream::put (40,404,040 samples, 0.12%)</title><rect x="64.7" y="453" width="1.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="67.69" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="16.8" y="373" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="19.79" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="886.2" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="889.15" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1177.1" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.13" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="73.6" y="357" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="76.63" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (70,707,070 samples, 0.21%)</title><rect x="1158.5" y="453" width="2.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1161.54" y="463.5" ></text>
</g>
<g >
<title>cfree (111,111,110 samples, 0.33%)</title><rect x="13.9" y="421" width="4.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="16.93" y="431.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="1141.7" y="405" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1144.74" y="415.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="19.7" y="453" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="22.65" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (70,707,070 samples, 0.21%)</title><rect x="73.3" y="421" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="76.27" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="53" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.43" y="63.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="18.9" y="469" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.94" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 0.67%)</title><rect x="10.7" y="517" width="7.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.71" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="881.1" y="373" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="884.15" y="383.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="337.8" y="357" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="340.80" y="367.5" ></text>
</g>
<g >
<title>Logger::warn (30,303,030 samples, 0.09%)</title><rect x="376.8" y="453" width="1.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="379.76" y="463.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanValue (10,101,010 samples, 0.03%)</title><rect x="1187.5" y="293" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1190.50" y="303.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.03%)</title><rect x="597.7" y="373" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="600.68" y="383.5" ></text>
</g>
<g >
<title>write (40,404,040 samples, 0.12%)</title><rect x="67.9" y="389" width="1.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="70.91" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (33,323,231,990 samples, 99.94%)</title><rect x="10.7" y="533" width="1179.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.71" y="543.5" >[libc.so.6]</text>
</g>
<g >
<title>Logger::info (30,303,030 samples, 0.09%)</title><rect x="330.6" y="437" width="1.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="333.65" y="447.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (363,636,360 samples, 1.09%)</title><rect x="831.5" y="405" width="12.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="834.46" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1167.1" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.12" y="223.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (20,202,020 samples, 0.06%)</title><rect x="584.1" y="373" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="587.09" y="383.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,101,010 samples, 0.03%)</title><rect x="593.0" y="405" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="596.03" y="415.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="36.5" y="421" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="39.45" y="431.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="1142.1" y="421" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1145.10" y="431.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (20,202,020 samples, 0.06%)</title><rect x="1188.6" y="261" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1191.57" y="271.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (5,393,939,340 samples, 16.18%)</title><rect x="390.0" y="453" width="190.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="392.99" y="463.5" >sim::Event::operator&gt;</text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="588.7" y="325" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="591.74" y="335.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.03%)</title><rect x="897.6" y="389" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="900.59" y="399.5" ></text>
</g>
<g >
<title>fopen (30,303,030 samples, 0.09%)</title><rect x="69.3" y="421" width="1.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="72.34" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="882.2" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="885.22" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="20.0" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.01" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.03%)</title><rect x="1141.7" y="373" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1144.74" y="383.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (181,818,180 samples, 0.55%)</title><rect x="1129.9" y="437" width="6.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1132.95" y="447.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (101,010,100 samples, 0.30%)</title><rect x="1186.4" y="501" width="3.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1189.43" y="511.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (30,303,030 samples, 0.09%)</title><rect x="1150.3" y="437" width="1.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1153.32" y="447.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (20,202,020 samples, 0.06%)</title><rect x="1136.4" y="437" width="0.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1139.38" y="447.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (20,202,020 samples, 0.06%)</title><rect x="1188.6" y="277" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1191.57" y="287.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::operator (131,313,130 samples, 0.39%)</title><rect x="345.7" y="469" width="4.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="348.66" y="479.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="1157.8" y="421" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1160.83" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="68.6" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.62" y="175.5" ></text>
</g>
<g >
<title>sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::recalculate_paths (868,686,860 samples, 2.61%)</title><rect x="1155.3" y="485" width="30.8" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="1158.33" y="495.5" >si..</text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1168.2" y="421" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1171.19" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="1159.6" y="389" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1162.62" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="20.0" y="453" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.01" y="463.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnMapStart (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="341" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1189.43" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="1142.5" y="341" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1145.46" y="351.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (50,505,050 samples, 0.15%)</title><rect x="585.9" y="405" width="1.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="588.88" y="415.5" ></text>
</g>
<g >
<title>sim::LinkQueue::empty (40,404,040 samples, 0.12%)</title><rect x="889.7" y="437" width="1.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="892.73" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="85" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.43" y="95.5" ></text>
</g>
<g >
<title>sim::bfs[abi:cxx11] (565,656,560 samples, 1.70%)</title><rect x="1161.0" y="469" width="20.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1164.05" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1132.8" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1135.81" y="351.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (10,101,010 samples, 0.03%)</title><rect x="41.1" y="437" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="44.10" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.36" y="303.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (80,808,080 samples, 0.24%)</title><rect x="1186.4" y="357" width="2.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.43" y="367.5" ></text>
</g>
<g >
<title>vsnprintf (50,505,050 samples, 0.15%)</title><rect x="895.8" y="373" width="1.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="898.80" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="600.9" y="357" width="2.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="603.89" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (20,202,020 samples, 0.06%)</title><rect x="35.0" y="453" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="38.02" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (40,404,040 samples, 0.12%)</title><rect x="1182.9" y="469" width="1.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1185.85" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.7" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.72" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.2" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.17" y="383.5" ></text>
</g>
<g >
<title>__default_morecore (10,101,010 samples, 0.03%)</title><rect x="889.4" y="309" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="892.37" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="32.2" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.16" y="335.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::Arrive (10,101,010 samples, 0.03%)</title><rect x="347.4" y="437" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="350.45" y="447.5" ></text>
</g>
<g >
<title>writev (10,101,010 samples, 0.03%)</title><rect x="64.0" y="405" width="0.3" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="66.98" y="415.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::node*,  (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="421" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1192.29" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="886.2" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="889.15" y="319.5" ></text>
</g>
<g >
<title>std::locale::~locale (10,101,010 samples, 0.03%)</title><rect x="598.7" y="389" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="601.75" y="399.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (40,404,040 samples, 0.12%)</title><rect x="580.9" y="453" width="1.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="583.88" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="37.5" y="357" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.52" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="896.9" y="309" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="899.88" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (191,919,190 samples, 0.58%)</title><rect x="56.8" y="373" width="6.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="59.83" y="383.5" ></text>
</g>
<g >
<title>sim::write_to_csv (1,282,828,270 samples, 3.85%)</title><rect x="21.1" y="469" width="45.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="24.08" y="479.5" >sim:..</text>
</g>
<g >
<title>cfree (202,020,200 samples, 0.61%)</title><rect x="739.6" y="437" width="7.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="742.59" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="32.2" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.16" y="367.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="587.3" y="357" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="590.31" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.7" y="405" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.72" y="415.5" ></text>
</g>
<g >
<title>sim::ECN::get_congestion_mark (10,101,010 samples, 0.03%)</title><rect x="381.8" y="453" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="384.77" y="463.5" ></text>
</g>
<g >
<title>sim::Process::operator (40,404,040 samples, 0.12%)</title><rect x="240.6" y="485" width="1.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="243.57" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="882.9" y="277" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="885.94" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="882.9" y="293" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="885.94" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="886.2" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="889.15" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="889.4" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="892.37" y="287.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (40,404,040 samples, 0.12%)</title><rect x="1187.9" y="325" width="1.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1190.86" y="335.5" ></text>
</g>
<g >
<title>operator delete (10,101,010 samples, 0.03%)</title><rect x="33.6" y="437" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="36.59" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="66.5" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="69.48" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="593.7" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="596.74" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="53.6" y="325" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.61" y="335.5" ></text>
</g>
<g >
<title>auto sim::YamlParser::process_links (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="453" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1192.64" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="594.8" y="341" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="597.82" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="889.4" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="892.37" y="207.5" ></text>
</g>
<g >
<title>utils::Statistics::get_mean (10,101,010 samples, 0.03%)</title><rect x="595.5" y="421" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="598.53" y="431.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (50,505,050 samples, 0.15%)</title><rect x="593.7" y="389" width="1.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="596.74" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="437" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>sim::Link::get_to_ingress_queue_size (40,404,040 samples, 0.12%)</title><rect x="612.0" y="453" width="1.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="614.98" y="463.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="592.3" y="405" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="595.31" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="32.2" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.16" y="351.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::export_to_files (1,393,939,380 samples, 4.18%)</title><rect x="18.6" y="485" width="49.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="21.58" y="495.5" >sim:..</text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="1177.8" y="405" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1180.85" y="415.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (70,707,070 samples, 0.21%)</title><rect x="1186.8" y="341" width="2.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.78" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (40,404,040 samples, 0.12%)</title><rect x="1159.6" y="437" width="1.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1162.62" y="447.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="20.7" y="453" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="23.72" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1134.2" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1137.24" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="64.0" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.98" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (202,020,200 samples, 0.61%)</title><rect x="11.1" y="453" width="7.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="14.07" y="463.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="587.3" y="341" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="590.31" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (131,313,130 samples, 0.39%)</title><rect x="1130.7" y="405" width="4.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1133.66" y="415.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="894.4" y="357" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="897.37" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 0.67%)</title><rect x="10.7" y="501" width="7.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.71" y="511.5" ></text>
</g>
<g >
<title>vsnprintf (303,030,300 samples, 0.91%)</title><rect x="43.6" y="405" width="10.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="46.60" y="415.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="1156.4" y="453" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1159.40" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="549" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="885.8" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="888.80" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.7" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.72" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.03%)</title><rect x="598.4" y="357" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="601.39" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1166.8" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1169.76" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="64.0" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.98" y="239.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="1176.8" y="437" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1179.77" y="447.5" ></text>
</g>
<g >
<title>virtual thunk to sim::RoutingModule::get_id[abi:cxx11] (20,202,020 samples, 0.06%)</title><rect x="1180.3" y="453" width="0.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1183.35" y="463.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (30,303,030 samples, 0.09%)</title><rect x="594.5" y="357" width="1.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="597.46" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="69.7" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.70" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.7" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.72" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="882.9" y="309" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="885.94" y="319.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (10,101,010 samples, 0.03%)</title><rect x="336.0" y="405" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="339.01" y="415.5" ></text>
</g>
<g >
<title>sim::Process::operator (21,919,191,700 samples, 65.74%)</title><rect x="350.3" y="469" width="775.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="353.31" y="479.5" >sim::Process::operator</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="485" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (10,101,010 samples, 0.03%)</title><rect x="1136.7" y="405" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1139.74" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (70,707,070 samples, 0.21%)</title><rect x="1132.8" y="373" width="2.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1135.81" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::export_metrics_to_files (1,626,262,610 samples, 4.88%)</title><rect x="18.6" y="501" width="57.5" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="21.58" y="511.5" >sim::M..</text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="66.5" y="389" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="69.48" y="399.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.03%)</title><rect x="343.2" y="389" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="346.16" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (30,303,030 samples, 0.09%)</title><rect x="66.8" y="469" width="1.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="69.84" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="889.4" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="892.37" y="223.5" ></text>
</g>
<g >
<title>Logger::get_instance (30,303,030 samples, 0.09%)</title><rect x="375.7" y="453" width="1.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="378.69" y="463.5" ></text>
</g>
<g >
<title>operator delete (50,505,050 samples, 0.15%)</title><rect x="378.9" y="453" width="1.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="381.91" y="463.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::Timeout::operator (10,101,010 samples, 0.03%)</title><rect x="1186.1" y="485" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1189.07" y="495.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="882.9" y="357" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="885.94" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1130.7" y="389" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1133.66" y="399.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="1146.0" y="405" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1149.03" y="415.5" ></text>
</g>
<g >
<title>cfree (383,838,380 samples, 1.15%)</title><rect x="316.3" y="469" width="13.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="319.35" y="479.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (272,727,270 samples, 0.82%)</title><rect x="719.6" y="421" width="9.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="722.57" y="431.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::send_packet_now (90,909,090 samples, 0.27%)</title><rect x="592.3" y="421" width="3.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="595.31" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.43" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="37.9" y="229" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.88" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;Time&lt;Nanosecond&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (40,404,040 samples, 0.12%)</title><rect x="35.7" y="453" width="1.5" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="38.74" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="882.9" y="325" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="885.94" y="335.5" ></text>
</g>
<g >
<title>Logger::info (20,202,020 samples, 0.06%)</title><rect x="643.4" y="437" width="0.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="646.43" y="447.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="485" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1192.64" y="495.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="1146.0" y="389" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1149.03" y="399.5" ></text>
</g>
<g >
<title>open64 (50,505,050 samples, 0.15%)</title><rect x="37.5" y="373" width="1.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="40.52" y="383.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (131,313,130 samples, 0.39%)</title><rect x="338.9" y="405" width="4.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="341.87" y="415.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="337.4" y="373" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="340.44" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="67.9" y="373" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.91" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (181,818,180 samples, 0.55%)</title><rect x="57.2" y="357" width="6.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="60.19" y="367.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.12%)</title><rect x="1159.6" y="421" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1162.62" y="431.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="1171.8" y="437" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1174.77" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.7" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.72" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="883.3" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="886.29" y="207.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="335.7" y="421" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="338.65" y="431.5" ></text>
</g>
<g >
<title>malloc (303,030,300 samples, 0.91%)</title><rect x="871.1" y="405" width="10.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="874.14" y="415.5" ></text>
</g>
<g >
<title>sim::Host::~Host (10,101,010 samples, 0.03%)</title><rect x="10.7" y="421" width="0.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="13.71" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1166.8" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1169.76" y="351.5" ></text>
</g>
<g >
<title>sim::Process::~Process (90,909,090 samples, 0.27%)</title><rect x="242.0" y="485" width="3.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="245.00" y="495.5" ></text>
</g>
<g >
<title>sim::Host::send_packet (666,666,660 samples, 2.00%)</title><rect x="1127.8" y="453" width="23.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1130.80" y="463.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.2" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.17" y="255.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanNextToken (10,101,010 samples, 0.03%)</title><rect x="1186.8" y="293" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1189.78" y="303.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (161,616,160 samples, 0.48%)</title><rect x="884.0" y="437" width="5.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="887.01" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1165.0" y="437" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1167.98" y="447.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="65.8" y="437" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="68.76" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="74.7" y="341" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="77.70" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="597.3" y="405" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="600.32" y="415.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (50,505,050 samples, 0.15%)</title><rect x="336.7" y="405" width="1.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="339.73" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1160.7" y="357" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1163.69" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="64.0" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.98" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="69.0" y="117" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.98" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.43" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1144.2" y="309" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1147.24" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1134.2" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1137.24" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (30,303,030 samples, 0.09%)</title><rect x="337.4" y="389" width="1.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="340.44" y="399.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="898.3" y="421" width="0.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="901.31" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="37.5" y="309" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.52" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="565" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1177.1" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.13" y="287.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="894.0" y="405" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="897.02" y="415.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::data[abi:cxx11] (30,303,030 samples, 0.09%)</title><rect x="20.0" y="469" width="1.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="23.01" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="20.0" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.01" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="69.3" y="325" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.34" y="335.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (202,020,200 samples, 0.61%)</title><rect x="584.8" y="437" width="7.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="587.81" y="447.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (80,808,080 samples, 0.24%)</title><rect x="1142.5" y="421" width="2.8" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1145.46" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="880.1" y="389" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="883.08" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="32.2" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.16" y="319.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (30,303,030 samples, 0.09%)</title><rect x="1128.9" y="437" width="1.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1131.87" y="447.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="33.2" y="437" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="36.24" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="69.0" y="133" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.98" y="143.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (292,929,290 samples, 0.88%)</title><rect x="54.3" y="453" width="10.4" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="57.33" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.6" y="453" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.58" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1134.2" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1137.24" y="303.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (30,303,030 samples, 0.09%)</title><rect x="1188.2" y="293" width="1.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1191.21" y="303.5" ></text>
</g>
<g >
<title>YAML::LoadFile (80,808,080 samples, 0.24%)</title><rect x="1186.4" y="485" width="2.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1189.43" y="495.5" ></text>
</g>
<g >
<title>vsnprintf (70,707,070 samples, 0.21%)</title><rect x="73.3" y="405" width="2.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="76.27" y="415.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1186.8" y="277" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.78" y="287.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="593.4" y="389" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="596.39" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="886.2" y="133" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="889.15" y="143.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1151.8" y="405" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1154.75" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="66.5" y="453" width="0.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="69.48" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="69" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.43" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="64.0" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.98" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="69.7" y="181" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.70" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="66.5" y="405" width="0.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="69.48" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="885.8" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="888.80" y="335.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="31.8" y="437" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="34.81" y="447.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (10,101,010 samples, 0.03%)</title><rect x="881.9" y="421" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="884.86" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (20,202,020 samples, 0.06%)</title><rect x="604.1" y="421" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="607.11" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1180.0" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1182.99" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (50,505,050 samples, 0.15%)</title><rect x="599.1" y="357" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="602.11" y="367.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (10,101,010 samples, 0.03%)</title><rect x="37.2" y="405" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="40.17" y="415.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (80,808,080 samples, 0.24%)</title><rect x="1142.5" y="405" width="2.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1145.46" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="377.8" y="405" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="380.83" y="415.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="34.3" y="421" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="37.31" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1167.1" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.12" y="287.5" ></text>
</g>
<g >
<title>malloc (60,606,060 samples, 0.18%)</title><rect x="1133.2" y="341" width="2.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1136.16" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="20.0" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.01" y="367.5" ></text>
</g>
<g >
<title>sim::SendData::operator (666,666,660 samples, 2.00%)</title><rect x="1127.8" y="469" width="23.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1130.80" y="479.5" >s..</text>
</g>
<g >
<title>YAML::NodeBuilder::Push (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="325" width="0.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1189.43" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1166.8" y="405" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1169.76" y="415.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1180.0" y="421" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1182.99" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="34.3" y="405" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="37.31" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="69.3" y="229" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.34" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 0.67%)</title><rect x="46.5" y="373" width="7.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="49.46" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1176.8" y="405" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1179.77" y="415.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="293" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1189.43" y="303.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (292,929,290 samples, 0.88%)</title><rect x="334.9" y="437" width="10.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="337.94" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (292,929,290 samples, 0.88%)</title><rect x="729.2" y="437" width="10.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="732.22" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.7" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.72" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="517" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="588.4" y="341" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="591.38" y="351.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1187.1" y="229" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.14" y="239.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (50,505,050 samples, 0.15%)</title><rect x="599.1" y="373" width="1.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="602.11" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.27%)</title><rect x="339.9" y="341" width="3.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="342.94" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (60,606,060 samples, 0.18%)</title><rect x="347.8" y="421" width="2.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="350.81" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1167.1" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.12" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="37.5" y="341" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.52" y="351.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="349.6" y="373" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="352.59" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="69.7" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.70" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="594.8" y="293" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="597.82" y="303.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (10,101,010 samples, 0.03%)</title><rect x="1187.1" y="293" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1190.14" y="303.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (10,101,010 samples, 0.03%)</title><rect x="883.7" y="405" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="886.65" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="69.7" y="149" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.70" y="159.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.03%)</title><rect x="590.2" y="389" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="593.17" y="399.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="335.7" y="405" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="338.65" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (60,606,060 samples, 0.18%)</title><rect x="332.8" y="421" width="2.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="335.79" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="39.0" y="133" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.95" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="37.9" y="181" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.88" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="39.0" y="117" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.95" y="127.5" ></text>
</g>
<g >
<title>cfree (343,434,340 samples, 1.03%)</title><rect x="857.9" y="421" width="12.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="860.91" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="101" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.43" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1177.1" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.13" y="367.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.03%)</title><rect x="37.2" y="421" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="40.17" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (40,404,040 samples, 0.12%)</title><rect x="586.2" y="389" width="1.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="589.24" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (50,505,050 samples, 0.15%)</title><rect x="37.5" y="453" width="1.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="40.52" y="463.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_RTT (80,808,080 samples, 0.24%)</title><rect x="600.9" y="421" width="2.9" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="603.89" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="66.5" y="421" width="0.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="69.48" y="431.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (50,505,050 samples, 0.15%)</title><rect x="882.2" y="421" width="1.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="885.22" y="431.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (30,303,030 samples, 0.09%)</title><rect x="891.9" y="421" width="1.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="894.87" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="599.1" y="309" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="602.11" y="319.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1138.2" y="421" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1141.17" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="64.0" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.98" y="303.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (20,202,020 samples, 0.06%)</title><rect x="1150.7" y="421" width="0.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1153.68" y="431.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (50,505,050 samples, 0.15%)</title><rect x="892.9" y="421" width="1.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="895.94" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="895.8" y="341" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="898.80" y="351.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (10,101,010 samples, 0.03%)</title><rect x="1136.7" y="421" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1139.74" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1177.1" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.13" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="20.0" y="437" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.01" y="447.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (30,303,030 samples, 0.09%)</title><rect x="69.3" y="437" width="1.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="72.34" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="453" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.29" y="463.5" ></text>
</g>
<g >
<title>main (33,101,009,770 samples, 99.27%)</title><rect x="18.6" y="517" width="1171.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="21.58" y="527.5" >main</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="20.0" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.01" y="271.5" ></text>
</g>
<g >
<title>brk (10,101,010 samples, 0.03%)</title><rect x="889.4" y="293" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="892.37" y="303.5" ></text>
</g>
<g >
<title>operator new (80,808,080 samples, 0.24%)</title><rect x="600.9" y="389" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="603.89" y="399.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (60,606,060 samples, 0.18%)</title><rect x="332.8" y="437" width="2.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="335.79" y="447.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1141.7" y="357" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1144.74" y="367.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (40,404,040 samples, 0.12%)</title><rect x="71.5" y="437" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="74.48" y="447.5" ></text>
</g>
<g >
<title>all (33,343,434,010 samples, 100%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>operator new (101,010,100 samples, 0.30%)</title><rect x="886.2" y="357" width="3.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="889.15" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1167.1" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.12" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1132.8" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1135.81" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="64.0" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.98" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.7" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.72" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1141.4" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1144.38" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="64.0" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.98" y="287.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (80,808,080 samples, 0.24%)</title><rect x="1186.4" y="405" width="2.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.43" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (262,626,260 samples, 0.79%)</title><rect x="320.6" y="453" width="9.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="323.64" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="32.2" y="389" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.16" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="886.2" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="889.15" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="64.0" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.98" y="271.5" ></text>
</g>
<g >
<title>Logger::get_instance (40,404,040 samples, 0.12%)</title><rect x="767.5" y="421" width="1.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="770.47" y="431.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (444,444,440 samples, 1.33%)</title><rect x="329.9" y="469" width="15.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="332.93" y="479.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (40,404,040 samples, 0.12%)</title><rect x="67.9" y="453" width="1.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="70.91" y="463.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (70,707,070 samples, 0.21%)</title><rect x="585.2" y="421" width="2.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="588.17" y="431.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (20,202,020 samples, 0.06%)</title><rect x="892.2" y="405" width="0.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="895.23" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1177.1" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.13" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (70,707,070 samples, 0.21%)</title><rect x="32.5" y="453" width="2.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="35.52" y="463.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (30,303,030 samples, 0.09%)</title><rect x="1188.2" y="309" width="1.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1191.21" y="319.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="1176.8" y="421" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1179.77" y="431.5" ></text>
</g>
<g >
<title>std::locale::locale (10,101,010 samples, 0.03%)</title><rect x="1140.0" y="389" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1142.95" y="399.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;, std::weak_ptr&lt;sim::IProcessingDevice&gt;&amp;&gt; (2,646,464,620 samples, 7.94%)</title><rect x="1032.4" y="453" width="93.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1035.36" y="463.5" >void sim::S..</text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.12%)</title><rect x="1159.6" y="405" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1162.62" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.43" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="886.2" y="101" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="889.15" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="898.3" y="405" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="901.31" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (111,111,110 samples, 0.33%)</title><rect x="885.8" y="373" width="3.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="888.80" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="886.2" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="889.15" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1177.1" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.13" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="69.3" y="245" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.34" y="255.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (272,727,270 samples, 0.82%)</title><rect x="55.0" y="437" width="9.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="58.04" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.03%)</title><rect x="598.4" y="341" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="601.39" y="351.5" ></text>
</g>
<g >
<title>write (10,101,010 samples, 0.03%)</title><rect x="37.2" y="389" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="40.17" y="399.5" ></text>
</g>
<g >
<title>malloc (202,020,200 samples, 0.61%)</title><rect x="1108.1" y="421" width="7.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1111.14" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (20,202,020 samples, 0.06%)</title><rect x="1184.3" y="469" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1187.28" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.2" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.17" y="303.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::Timeout::operator (20,202,020 samples, 0.06%)</title><rect x="1151.4" y="469" width="0.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1154.39" y="479.5" ></text>
</g>
<g >
<title>sim::Process::~Process (50,505,050 samples, 0.15%)</title><rect x="1126.0" y="469" width="1.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1129.01" y="479.5" ></text>
</g>
<g >
<title>strchrnul@plt (10,101,010 samples, 0.03%)</title><rect x="589.8" y="357" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="592.81" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="71.8" y="389" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="74.84" y="399.5" ></text>
</g>
<g >
<title>vsnprintf (30,303,030 samples, 0.09%)</title><rect x="71.8" y="405" width="1.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="74.84" y="415.5" ></text>
</g>
<g >
<title>sim::RoutingModule::update_routing_table (131,313,130 samples, 0.39%)</title><rect x="1156.4" y="469" width="4.6" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1159.40" y="479.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.06%)</title><rect x="1188.6" y="245" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.57" y="255.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (10,101,010 samples, 0.03%)</title><rect x="1151.8" y="437" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1154.75" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="884.7" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="887.72" y="415.5" ></text>
</g>
<g >
<title>operator new (222,222,220 samples, 0.67%)</title><rect x="748.9" y="437" width="7.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="751.89" y="447.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (80,808,080 samples, 0.24%)</title><rect x="600.9" y="405" width="2.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="603.89" y="415.5" ></text>
</g>
<g >
<title>memchr@plt (10,101,010 samples, 0.03%)</title><rect x="895.4" y="405" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="898.45" y="415.5" ></text>
</g>
<g >
<title>Logger::warn (2,404,040,380 samples, 7.21%)</title><rect x="644.1" y="437" width="85.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="647.15" y="447.5" >Logger::warn</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="69.3" y="293" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.34" y="303.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="591.6" y="389" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="594.60" y="399.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1187.9" y="277" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1190.86" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.7" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.72" y="287.5" ></text>
</g>
<g >
<title>sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::start (31,333,333,020 samples, 93.97%)</title><rect x="77.6" y="501" width="1108.8" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="80.56" y="511.5" >sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::start</text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (242,424,240 samples, 0.73%)</title><rect x="1137.8" y="437" width="8.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1140.81" y="447.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="1158.9" y="421" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1161.90" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="377.8" y="421" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="380.83" y="431.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (60,606,060 samples, 0.18%)</title><rect x="70.8" y="453" width="2.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="73.77" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="69.3" y="357" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.34" y="367.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="31.8" y="453" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="34.81" y="463.5" ></text>
</g>
<g >
<title>_start (33,323,231,990 samples, 99.94%)</title><rect x="10.7" y="565" width="1179.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.71" y="575.5" >_start</text>
</g>
<g >
<title>vsnprintf (70,707,070 samples, 0.21%)</title><rect x="1142.5" y="373" width="2.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1145.46" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="64.0" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.98" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.7" y="389" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.65" y="399.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (10,101,010 samples, 0.03%)</title><rect x="345.3" y="437" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="348.30" y="447.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="1151.8" y="389" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1154.75" y="399.5" ></text>
</g>
<g >
<title>operator delete (30,303,030 samples, 0.09%)</title><rect x="747.8" y="437" width="1.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="750.81" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="67.9" y="293" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.91" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (202,020,200 samples, 0.61%)</title><rect x="862.9" y="405" width="7.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="865.92" y="415.5" ></text>
</g>
<g >
<title>strlen@plt (30,303,030 samples, 0.09%)</title><rect x="1030.9" y="437" width="1.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1033.93" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (30,303,030 samples, 0.09%)</title><rect x="1177.5" y="437" width="1.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1180.49" y="447.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleDocument (80,808,080 samples, 0.24%)</title><rect x="1186.4" y="437" width="2.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1189.43" y="447.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="79.0" y="485" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="81.99" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.03%)</title><rect x="587.3" y="373" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="590.31" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1168.2" y="389" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1171.19" y="399.5" ></text>
</g>
<g >
<title>Logger::info (2,131,313,110 samples, 6.39%)</title><rect x="768.9" y="421" width="75.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="771.90" y="431.5" >Logger::..</text>
</g>
<g >
<title>sim::Event::Event (303,030,300 samples, 0.91%)</title><rect x="1115.3" y="437" width="10.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1118.29" y="447.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="64.3" y="421" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="67.34" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (30,303,030 samples, 0.09%)</title><rect x="34.0" y="437" width="1.0" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="36.95" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="889.4" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="892.37" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int&gt;::FlagInfo&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int&gt;::FlagInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (10,101,010 samples, 0.03%)</title><rect x="603.8" y="421" width="0.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="606.75" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1167.1" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.12" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1172.1" y="421" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1175.13" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1180.0" y="389" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1182.99" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="331.7" y="437" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="334.72" y="447.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.09%)</title><rect x="380.7" y="453" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="383.69" y="463.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::node_ref*,  (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="405" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1192.29" y="415.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (50,505,050 samples, 0.15%)</title><rect x="583.0" y="437" width="1.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="586.02" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="583.4" y="389" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="586.38" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="886.2" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="889.15" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="421" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (50,505,050 samples, 0.15%)</title><rect x="37.5" y="437" width="1.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="40.52" y="447.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (60,606,060 samples, 0.18%)</title><rect x="588.4" y="405" width="2.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="591.38" y="415.5" ></text>
</g>
<g >
<title>_IO_file_fopen (50,505,050 samples, 0.15%)</title><rect x="37.5" y="405" width="1.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="40.52" y="415.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (363,636,360 samples, 1.09%)</title><rect x="41.5" y="437" width="12.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="44.46" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="63.3" y="325" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="66.26" y="335.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (40,404,040 samples, 0.12%)</title><rect x="76.1" y="501" width="1.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="79.13" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="602.0" y="341" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="604.97" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::get_instance (10,101,010 samples, 0.03%)</title><rect x="350.0" y="421" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="352.95" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="20.7" y="421" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="23.72" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (50,505,050 samples, 0.15%)</title><rect x="1181.1" y="469" width="1.8" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1184.06" y="479.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="70.4" y="437" width="0.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="73.41" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="895.8" y="357" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="898.80" y="367.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_links (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="469" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1192.64" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="886.2" y="117" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="889.15" y="127.5" ></text>
</g>
<g >
<title>[libc.so.6] (383,838,380 samples, 1.15%)</title><rect x="844.3" y="421" width="13.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="847.33" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="68.3" y="181" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.27" y="191.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (70,707,070 samples, 0.21%)</title><rect x="588.0" y="421" width="2.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="591.02" y="431.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (111,111,110 samples, 0.33%)</title><rect x="1146.4" y="437" width="3.9" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1149.39" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.43" y="207.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::update (252,525,250 samples, 0.76%)</title><rect x="595.9" y="437" width="8.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="598.89" y="447.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (40,404,040 samples, 0.12%)</title><rect x="594.1" y="373" width="1.4" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="597.10" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1156.0" y="469" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1159.04" y="479.5" ></text>
</g>
<g >
<title>operator new (323,232,320 samples, 0.97%)</title><rect x="870.4" y="421" width="11.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="873.42" y="431.5" ></text>
</g>
<g >
<title>__libc_start_main (33,323,231,990 samples, 99.94%)</title><rect x="10.7" y="549" width="1179.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.71" y="559.5" >__libc_start_main</text>
</g>
<g >
<title>_IO_file_fopen (30,303,030 samples, 0.09%)</title><rect x="69.3" y="405" width="1.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="72.34" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="20.0" y="421" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.01" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="883.3" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="886.29" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="67.9" y="341" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.91" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (30,303,030 samples, 0.09%)</title><rect x="882.6" y="405" width="1.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="885.58" y="415.5" ></text>
</g>
<g >
<title>malloc (80,808,080 samples, 0.24%)</title><rect x="600.9" y="373" width="2.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="603.89" y="383.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="36.5" y="437" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="39.45" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="453" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="67.9" y="309" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.91" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="889.4" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="892.37" y="191.5" ></text>
</g>
<g >
<title>vsnprintf (10,101,010 samples, 0.03%)</title><rect x="594.8" y="325" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="597.82" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="886.2" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="889.15" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1134.2" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1137.24" y="271.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="335.3" y="421" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="338.30" y="431.5" ></text>
</g>
<g >
<title>sim::Switch::process (11,747,474,630 samples, 35.23%)</title><rect x="616.3" y="453" width="415.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="619.26" y="463.5" >sim::Switch::process</text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="18.2" y="469" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="21.22" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="20.0" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.01" y="255.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="591.2" y="405" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="594.24" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1177.1" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.13" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="51.8" y="341" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="54.82" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (70,707,070 samples, 0.21%)</title><rect x="1142.5" y="389" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1145.46" y="399.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (131,313,130 samples, 0.39%)</title><rect x="338.9" y="421" width="4.6" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="341.87" y="431.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.15%)</title><rect x="1106.0" y="437" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1109.00" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="588.4" y="357" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="591.38" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="117" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.43" y="127.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="337.8" y="341" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="340.80" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (40,404,040 samples, 0.12%)</title><rect x="67.9" y="405" width="1.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="70.91" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="582.3" y="437" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="585.31" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="37.9" y="165" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.88" y="175.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1168.2" y="437" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1171.19" y="447.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (40,404,040 samples, 0.12%)</title><rect x="898.7" y="437" width="1.4" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="901.66" y="447.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="593.7" y="373" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="596.74" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_erase (50,505,050 samples, 0.15%)</title><rect x="1170.7" y="453" width="1.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1173.70" y="463.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (80,808,080 samples, 0.24%)</title><rect x="72.9" y="453" width="2.9" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="75.91" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="64.0" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.98" y="319.5" ></text>
</g>
<g >
<title>sim::IdentifierFactory::~IdentifierFactory (212,121,210 samples, 0.64%)</title><rect x="10.7" y="485" width="7.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="13.71" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::memory_holder*,  (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="469" width="0.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1192.29" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="68.3" y="277" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.27" y="287.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.03%)</title><rect x="597.7" y="389" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="600.68" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="340.7" y="325" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="343.66" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="261" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1189.43" y="271.5" ></text>
</g>
<g >
<title>operator delete (60,606,060 samples, 0.18%)</title><rect x="79.3" y="485" width="2.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="82.35" y="495.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="71.1" y="437" width="0.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="74.13" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1167.1" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.12" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="1142.5" y="357" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1145.46" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1168.2" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1171.19" y="415.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="344.9" y="405" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="347.95" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="67.9" y="357" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.91" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (40,404,040 samples, 0.12%)</title><rect x="1172.5" y="453" width="1.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1175.48" y="463.5" ></text>
</g>
<g >
<title>fmt::v11::vformat[abi:cxx11] (10,101,010 samples, 0.03%)</title><rect x="597.0" y="421" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="599.96" y="431.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="587.7" y="421" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="590.67" y="431.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="20.7" y="437" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="23.72" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="378.2" y="453" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="381.19" y="463.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (50,505,050 samples, 0.15%)</title><rect x="1140.3" y="421" width="1.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1143.31" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="78.6" y="485" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="81.63" y="495.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (414,141,410 samples, 1.24%)</title><rect x="39.7" y="453" width="14.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="42.67" y="463.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1187.1" y="245" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.14" y="255.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="598.4" y="373" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="601.39" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1158.9" y="405" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.90" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1134.2" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1137.24" y="255.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="746.7" y="437" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="749.74" y="447.5" ></text>
</g>
<g >
<title>YAML::Load (80,808,080 samples, 0.24%)</title><rect x="1186.4" y="469" width="2.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1189.43" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="32.2" y="405" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.16" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="64.0" y="389" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.98" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="594.8" y="309" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="597.82" y="319.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1187.9" y="261" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1190.86" y="271.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (131,313,130 samples, 0.39%)</title><rect x="885.1" y="405" width="4.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="888.08" y="415.5" ></text>
</g>
<g >
<title>YAML::detail::memory::create_node (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="309" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1189.43" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="377.8" y="453" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="380.83" y="463.5" ></text>
</g>
<g >
<title>sim::Link::arrive (434,343,430 samples, 1.30%)</title><rect x="330.3" y="453" width="15.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="333.29" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="70.1" y="117" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.05" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="37.5" y="293" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.52" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="333.2" y="405" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="336.15" y="415.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (20,202,020 samples, 0.06%)</title><rect x="1139.6" y="405" width="0.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1142.60" y="415.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (40,404,040 samples, 0.12%)</title><rect x="67.9" y="437" width="1.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="70.91" y="447.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="1157.8" y="437" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1160.83" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="67.9" y="325" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.91" y="335.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (30,303,030 samples, 0.09%)</title><rect x="1138.5" y="405" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1141.52" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="64.0" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.98" y="207.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;sim::IHost,  (10,101,010 samples, 0.03%)</title><rect x="605.5" y="437" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="608.54" y="447.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (70,707,070 samples, 0.21%)</title><rect x="613.4" y="453" width="2.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="616.41" y="463.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (30,303,030 samples, 0.09%)</title><rect x="1145.3" y="421" width="1.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1148.32" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (212,121,210 samples, 0.64%)</title><rect x="10.7" y="469" width="7.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.71" y="479.5" ></text>
</g>
<g >
<title>__libc_alloca_cutoff (10,101,010 samples, 0.03%)</title><rect x="342.8" y="325" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="345.80" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="1165.7" y="421" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1168.69" y="431.5" ></text>
</g>
<g >
<title>fopen (50,505,050 samples, 0.15%)</title><rect x="37.5" y="421" width="1.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="40.52" y="431.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (10,101,010 samples, 0.03%)</title><rect x="37.2" y="437" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="40.17" y="447.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="277" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1189.43" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1160.7" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1163.69" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="1133.2" y="325" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1136.16" y="335.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="19.3" y="469" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="22.29" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="20.0" y="389" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.01" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="73.3" y="389" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="76.27" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="10.7" y="453" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.71" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="883.3" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="886.29" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1134.2" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1137.24" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="73.6" y="373" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="76.63" y="383.5" ></text>
</g>
<g >
<title>sim::Host::process (666,666,660 samples, 2.00%)</title><rect x="582.3" y="453" width="23.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="585.31" y="463.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.7" y="421" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.65" y="431.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::memory*,  (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="453" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1192.29" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="18.2" y="453" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.22" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="43.2" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="46.24" y="415.5" ></text>
</g>
<g >
<title>sim::Link::get_from (10,101,010 samples, 0.03%)</title><rect x="1167.5" y="453" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1170.48" y="463.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (10,101,010 samples, 0.03%)</title><rect x="594.1" y="357" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="597.10" y="367.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (80,808,080 samples, 0.24%)</title><rect x="1186.4" y="373" width="2.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.43" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1166.8" y="389" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1169.76" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1134.2" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1137.24" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.2" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.17" y="351.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1138.2" y="405" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1141.17" y="415.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (10,101,010 samples, 0.03%)</title><rect x="10.7" y="437" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.71" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.30%)</title><rect x="339.6" y="357" width="3.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="342.58" y="367.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (90,909,090 samples, 0.27%)</title><rect x="597.7" y="405" width="3.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="600.68" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="69.7" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.70" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="38.2" y="149" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.24" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1157.8" y="405" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1160.83" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="377.8" y="437" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="380.83" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="20.0" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.01" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="61.1" y="341" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="64.12" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (20,202,020 samples, 0.06%)</title><rect x="1173.9" y="453" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1176.91" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="885.8" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="888.80" y="319.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="19.7" y="469" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="22.65" y="479.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="883.7" y="389" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="886.65" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="349.6" y="389" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="352.59" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="405" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>vsnprintf (50,505,050 samples, 0.15%)</title><rect x="599.1" y="341" width="1.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="602.11" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.7" y="405" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.65" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1187.9" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1190.86" y="239.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="349.6" y="357" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="352.59" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="64.0" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.98" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="20.0" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.01" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;unsigned int&gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="17.9" y="421" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="20.86" y="431.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (50,505,050 samples, 0.15%)</title><rect x="895.8" y="389" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="898.80" y="399.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="1182.5" y="453" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1185.49" y="463.5" ></text>
</g>
<g >
<title>vsnprintf (232,323,230 samples, 0.70%)</title><rect x="55.4" y="405" width="8.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="58.40" y="415.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="332.4" y="437" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="335.44" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="501" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="600.2" y="277" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="603.18" y="287.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (20,202,020 samples, 0.06%)</title><rect x="933.7" y="437" width="0.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="936.70" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1167.1" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.12" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="599.1" y="293" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="602.11" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="68.3" y="245" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.27" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.2" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.17" y="239.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="1145.7" y="405" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1148.67" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.4" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.37" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="69.3" y="277" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.34" y="287.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (40,404,040 samples, 0.12%)</title><rect x="67.9" y="421" width="1.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="70.91" y="431.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (111,111,110 samples, 0.33%)</title><rect x="339.2" y="389" width="4.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="342.23" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="32.2" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.16" y="303.5" ></text>
</g>
<g >
<title>Size&lt;Byte&gt; parse_with_default&lt;Size&lt;Byte&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="421" width="0.4" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="1192.64" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.2" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.17" y="271.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="591.6" y="405" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="594.60" y="415.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (50,505,050 samples, 0.15%)</title><rect x="343.5" y="421" width="1.8" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="346.52" y="431.5" ></text>
</g>
<g >
<title>malloc (60,606,060 samples, 0.18%)</title><rect x="1165.3" y="437" width="2.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1168.33" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (20,202,020 samples, 0.06%)</title><rect x="344.2" y="405" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="347.23" y="415.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="882.9" y="341" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="885.94" y="351.5" ></text>
</g>
<g >
<title>Logger::info (20,202,020 samples, 0.06%)</title><rect x="1128.2" y="437" width="0.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1131.16" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.03%)</title><rect x="894.4" y="389" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="897.37" y="399.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (30,303,030 samples, 0.09%)</title><rect x="348.9" y="405" width="1.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="351.88" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="64.0" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.98" y="255.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.03%)</title><rect x="891.9" y="405" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="894.87" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (141,414,140 samples, 0.42%)</title><rect x="741.7" y="421" width="5.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="744.74" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.2" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.17" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="589.1" y="309" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="592.10" y="319.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="897.9" y="389" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="900.95" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;* std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_Alloc_node&gt; (30,303,030 samples, 0.09%)</title><rect x="1185.0" y="469" width="1.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1188.00" y="479.5" ></text>
</g>
<g >
<title>sim::Link::transmit (101,010,100 samples, 0.30%)</title><rect x="346.7" y="453" width="3.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="349.73" y="463.5" ></text>
</g>
<g >
<title>std::locale::~locale (10,101,010 samples, 0.03%)</title><rect x="597.7" y="357" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="600.68" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (2,727,272,700 samples, 8.18%)</title><rect x="934.4" y="437" width="96.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="937.41" y="447.5" >std::_Rb_tr..</text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="592.3" y="389" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="595.31" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="599.1" y="325" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="602.11" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="885.8" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="888.80" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="69.3" y="341" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.34" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="886.5" y="309" width="2.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="889.51" y="319.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="882.9" y="373" width="0.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="885.94" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (20,202,020 samples, 0.06%)</title><rect x="337.8" y="373" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="340.80" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1167.1" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.12" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="68.3" y="213" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.27" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="594.8" y="277" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="597.82" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="133" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.43" y="143.5" ></text>
</g>
<g >
<title>YAML::Node::~Node (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="485" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1192.29" y="495.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (10,101,010 samples, 0.03%)</title><rect x="338.5" y="421" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="341.51" y="431.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (141,414,140 samples, 0.42%)</title><rect x="884.7" y="421" width="5.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="887.72" y="431.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (101,010,100 samples, 0.30%)</title><rect x="1131.7" y="389" width="3.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1134.73" y="399.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="1165.0" y="453" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1167.98" y="463.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (10,101,010 samples, 0.03%)</title><rect x="39.3" y="453" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="42.31" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 0.67%)</title><rect x="55.8" y="389" width="7.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="58.76" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (30,303,030 samples, 0.09%)</title><rect x="69.3" y="453" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="72.34" y="463.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1128.5" y="421" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1131.52" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="64.0" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.98" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="71.8" y="373" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="74.84" y="383.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Switch::process (90,909,090 samples, 0.27%)</title><rect x="1152.1" y="469" width="3.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1155.11" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1178.2" y="389" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1181.20" y="399.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="597.3" y="389" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="600.32" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="37.9" y="213" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.88" y="223.5" ></text>
</g>
<g >
<title>__libc_alloca_cutoff (10,101,010 samples, 0.03%)</title><rect x="1144.6" y="325" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1147.60" y="335.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (10,101,010 samples, 0.03%)</title><rect x="1187.1" y="277" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1190.14" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (111,111,110 samples, 0.33%)</title><rect x="1174.6" y="453" width="4.0" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1177.63" y="463.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.03%)</title><rect x="336.0" y="421" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="339.01" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (10,101,010 samples, 0.03%)</title><rect x="1032.0" y="453" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1035.00" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1166.8" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1169.76" y="367.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::export_to_files (232,323,230 samples, 0.70%)</title><rect x="67.9" y="485" width="8.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="70.91" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.7" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.65" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="32.2" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.16" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.7" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.72" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.7" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.65" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;YAML::detail::node&gt;, std::shared_ptr&lt;YAML::detail::node&gt;, std::_Identity&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt;, std::less&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="437" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1192.29" y="447.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (212,121,210 samples, 0.64%)</title><rect x="891.2" y="437" width="7.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="894.16" y="447.5" ></text>
</g>
<g >
<title>Logger::get_instance (40,404,040 samples, 0.12%)</title><rect x="642.0" y="437" width="1.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="645.00" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="68.3" y="197" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.27" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.36" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="886.2" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="889.15" y="239.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1180.0" y="437" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1182.99" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1167.1" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.12" y="239.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::send_packet_now (10,101,010 samples, 0.03%)</title><rect x="1151.8" y="453" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1154.75" y="463.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (101,010,100 samples, 0.30%)</title><rect x="597.3" y="421" width="3.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="600.32" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (20,202,020 samples, 0.06%)</title><rect x="1168.6" y="437" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1171.55" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="68.3" y="261" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.27" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="69.3" y="309" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.34" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1134.6" y="309" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1137.59" y="319.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (80,808,080 samples, 0.24%)</title><rect x="1186.4" y="389" width="2.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.43" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (10,101,010 samples, 0.03%)</title><rect x="37.2" y="453" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="40.17" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1134.2" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1137.24" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="895.8" y="325" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="898.80" y="335.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::export_to_file (232,323,230 samples, 0.70%)</title><rect x="67.9" y="469" width="8.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="70.91" y="479.5" ></text>
</g>
<g >
<title>_IO_file_open (30,303,030 samples, 0.09%)</title><rect x="69.3" y="389" width="1.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="72.34" y="399.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (30,303,030 samples, 0.09%)</title><rect x="1135.3" y="405" width="1.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1138.31" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="389" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (10,101,010 samples, 0.03%)</title><rect x="1151.8" y="421" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1154.75" y="431.5" ></text>
</g>
<g >
<title>sim::Event::Event (222,222,220 samples, 0.67%)</title><rect x="382.1" y="453" width="7.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="385.12" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="31.8" y="421" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="34.81" y="431.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (333,333,330 samples, 1.00%)</title><rect x="42.5" y="421" width="11.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="45.53" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="883.3" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="886.29" y="271.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (90,909,090 samples, 0.27%)</title><rect x="895.1" y="421" width="3.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="898.09" y="431.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::get_max_size (10,101,010 samples, 0.03%)</title><rect x="615.9" y="453" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="618.91" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="886.2" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="889.15" y="255.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (3,575,757,540 samples, 10.72%)</title><rect x="757.5" y="437" width="126.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="760.46" y="447.5" >sim::Link::get_..</text>
</g>
<g >
<title>open64 (30,303,030 samples, 0.09%)</title><rect x="69.3" y="373" width="1.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="72.34" y="383.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::Pop (10,101,010 samples, 0.03%)</title><rect x="1187.9" y="309" width="0.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1190.86" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="20.0" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.01" y="319.5" ></text>
</g>
<g >
<title>malloc (141,414,140 samples, 0.42%)</title><rect x="751.7" y="421" width="5.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="754.74" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="1142.8" y="325" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1145.81" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="20.0" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.01" y="287.5" ></text>
</g>
<g >
<title>operator new (212,121,210 samples, 0.64%)</title><rect x="1107.8" y="437" width="7.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1110.78" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="37.9" y="197" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.88" y="207.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (50,505,050 samples, 0.15%)</title><rect x="583.0" y="421" width="1.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="586.02" y="431.5" ></text>
</g>
<g >
<title>operator new (60,606,060 samples, 0.18%)</title><rect x="1133.2" y="357" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1136.16" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (20,202,020 samples, 0.06%)</title><rect x="604.8" y="437" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="607.83" y="447.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_outlinks (40,404,040 samples, 0.12%)</title><rect x="1167.8" y="453" width="1.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1170.84" y="463.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::~MetricsCollector (10,101,010 samples, 0.03%)</title><rect x="18.2" y="485" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="21.22" y="495.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (20,202,020 samples, 0.06%)</title><rect x="598.0" y="389" width="0.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="601.03" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="69.3" y="261" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.34" y="271.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="70.4" y="453" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="73.41" y="463.5" ></text>
</g>
<g >
<title>vsnprintf (50,505,050 samples, 0.15%)</title><rect x="588.4" y="373" width="1.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="591.38" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="889.4" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="892.37" y="255.5" ></text>
</g>
<g >
<title>sim::Event::get_time (111,111,110 samples, 0.33%)</title><rect x="81.5" y="485" width="3.9" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="84.49" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.7" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.72" y="319.5" ></text>
</g>
<g >
<title>_IO_file_open (50,505,050 samples, 0.15%)</title><rect x="37.5" y="389" width="1.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="40.52" y="399.5" ></text>
</g>
<g >
<title>YAML::detail::node_data::insert_map_pair (10,101,010 samples, 0.03%)</title><rect x="1187.9" y="293" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1190.86" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.43" y="175.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="1145.0" y="389" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1147.96" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1177.1" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.13" y="303.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (80,808,080 samples, 0.24%)</title><rect x="1186.4" y="421" width="2.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.43" y="431.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (30,303,030 samples, 0.09%)</title><rect x="1186.8" y="325" width="1.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1189.78" y="335.5" ></text>
</g>
<g >
<title>nons (33,343,434,010 samples, 100.00%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >nons</text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.03%)</title><rect x="1151.8" y="373" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1154.75" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1158.5" y="421" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.54" y="431.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="870.1" y="421" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="873.07" y="431.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (20,202,020 samples, 0.06%)</title><rect x="756.7" y="437" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="759.75" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="883.3" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="886.29" y="223.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="66.1" y="453" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="69.12" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.6" y="469" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.58" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.2" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.17" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="349.6" y="341" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="352.59" y="351.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (20,202,020 samples, 0.06%)</title><rect x="1137.1" y="437" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1140.09" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="592.3" y="373" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="595.31" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="37.5" y="277" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.52" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1132.8" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1135.81" y="367.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="405" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1192.64" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.27%)</title><rect x="14.6" y="389" width="3.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.65" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="533" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.43" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="20.0" y="405" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.01" y="415.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (70,707,070 samples, 0.21%)</title><rect x="895.8" y="405" width="2.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="898.80" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="37.5" y="261" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.52" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::weak_ptr&lt;sim::ILink&gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (20,202,020 samples, 0.06%)</title><rect x="1157.8" y="453" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1160.83" y="463.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (949,494,940 samples, 2.85%)</title><rect x="900.1" y="437" width="33.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="903.09" y="447.5" >si..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.03%)</title><rect x="337.1" y="389" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="340.08" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (232,323,230 samples, 0.70%)</title><rect x="55.4" y="421" width="8.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="58.40" y="431.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (131,313,130 samples, 0.39%)</title><rect x="885.1" y="389" width="4.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="888.08" y="399.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.03%)</title><rect x="63.6" y="421" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="66.62" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="64.0" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.98" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1187.9" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1190.86" y="223.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (25,717,171,460 samples, 77.13%)</title><rect x="245.2" y="485" width="910.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="248.21" y="495.5" >sim::Scheduler::tick</text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="37.5" y="245" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.52" y="255.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="891.5" y="421" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="894.51" y="431.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="334.2" y="405" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="337.22" y="415.5" ></text>
</g>
<g >
<title>vsnprintf (111,111,110 samples, 0.33%)</title><rect x="339.2" y="373" width="4.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="342.23" y="383.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (70,707,070 samples, 0.21%)</title><rect x="347.8" y="437" width="2.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="350.81" y="447.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanNextToken (10,101,010 samples, 0.03%)</title><rect x="1188.2" y="277" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1191.21" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="36.5" y="405" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="39.45" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1187.9" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1190.86" y="207.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.06%)</title><rect x="1188.6" y="229" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.57" y="239.5" ></text>
</g>
<g >
<title>sim::Link::get_max_to_ingress_queue_size (111,111,110 samples, 0.33%)</title><rect x="605.9" y="453" width="3.9" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="608.90" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1134.2" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1137.24" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="886.2" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="889.15" y="207.5" ></text>
</g>
<g >
<title>malloc (101,010,100 samples, 0.30%)</title><rect x="886.2" y="341" width="3.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="889.15" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="37.5" y="325" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.52" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.2" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.17" y="287.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.03%)</title><rect x="595.2" y="341" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="598.17" y="351.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="1177.8" y="421" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1180.85" y="431.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.09%)</title><rect x="1158.5" y="437" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1161.54" y="447.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (40,404,040 samples, 0.12%)</title><rect x="1169.3" y="453" width="1.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1172.27" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (30,303,030 samples, 0.09%)</title><rect x="71.8" y="421" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="74.84" y="431.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (30,303,030 samples, 0.09%)</title><rect x="1186.8" y="309" width="1.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1189.78" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="883.3" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="886.29" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="19.7" y="437" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.65" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.03%)</title><rect x="894.4" y="373" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="897.37" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (40,404,040 samples, 0.12%)</title><rect x="583.4" y="405" width="1.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="586.38" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1187.9" y="245" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1190.86" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="893.7" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="896.66" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.7" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.72" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="889.4" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="892.37" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1177.1" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.13" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="347.8" y="405" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="350.81" y="415.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_insert_unique&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; const&amp;&gt; (50,505,050 samples, 0.15%)</title><rect x="1178.6" y="453" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1181.56" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (292,929,290 samples, 0.88%)</title><rect x="44.0" y="389" width="10.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="46.96" y="399.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="894.4" y="341" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="897.37" y="351.5" ></text>
</g>
<g >
<title>YAML::Parser::HandleNextDocument (80,808,080 samples, 0.24%)</title><rect x="1186.4" y="453" width="2.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1189.43" y="463.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (50,505,050 samples, 0.15%)</title><rect x="599.1" y="389" width="1.8" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="602.11" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.7" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.72" y="255.5" ></text>
</g>
<g >
<title>operator new (60,606,060 samples, 0.18%)</title><rect x="1165.3" y="453" width="2.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1168.33" y="463.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (30,303,030 samples, 0.09%)</title><rect x="882.6" y="389" width="1.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="885.58" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="36.5" y="389" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="39.45" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="37" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.43" y="47.5" ></text>
</g>
<g >
<title>sim::is_valid_link (20,202,020 samples, 0.06%)</title><rect x="1157.1" y="453" width="0.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1160.11" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="886.2" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="889.15" y="175.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (60,606,060 samples, 0.18%)</title><rect x="609.8" y="453" width="2.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="612.83" y="463.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (10,101,010 samples, 0.03%)</title><rect x="881.9" y="405" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="884.86" y="415.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (4,383,838,340 samples, 13.15%)</title><rect x="85.4" y="485" width="155.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="88.43" y="495.5" >sim::Event::operator&gt;</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="349.6" y="325" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="352.59" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.30%)</title><rect x="886.2" y="325" width="3.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="889.15" y="335.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (50,505,050 samples, 0.15%)</title><rect x="588.4" y="389" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="591.38" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.6" y="437" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.58" y="447.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::send_packets (111,111,110 samples, 0.33%)</title><rect x="592.0" y="437" width="3.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="594.96" y="447.5" ></text>
</g>
<g >
<title>YAML::Stream::eat (10,101,010 samples, 0.03%)</title><rect x="1187.5" y="277" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1190.50" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.03%)</title><rect x="1141.7" y="389" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1144.74" y="399.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (60,606,060 samples, 0.18%)</title><rect x="593.4" y="405" width="2.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="596.39" y="415.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1187.1" y="261" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.14" y="271.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.06%)</title><rect x="1188.6" y="213" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.57" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.43" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="68.6" y="149" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.62" y="159.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (40,404,040 samples, 0.12%)</title><rect x="590.5" y="421" width="1.5" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="593.53" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.2" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.17" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="69.7" y="133" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.70" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="469" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="584.1" y="389" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="587.09" y="399.5" ></text>
</g>
<g >
<title>sim::Host::~Host (191,919,190 samples, 0.58%)</title><rect x="11.1" y="437" width="6.8" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="14.07" y="447.5" ></text>
</g>
<g >
<title>sim::Parser&lt;sim::Link&gt;::parse_object (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="437" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1192.64" y="447.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="75.8" y="453" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="78.77" y="463.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (80,808,080 samples, 0.24%)</title><rect x="72.9" y="437" width="2.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="75.91" y="447.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (50,505,050 samples, 0.15%)</title><rect x="1138.5" y="421" width="1.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1141.52" y="431.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="597.0" y="405" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="599.96" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="66.5" y="469" width="0.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="69.48" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="437" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.29" y="447.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="597.0" y="389" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="599.96" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.7" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.72" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="68.3" y="229" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.27" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (111,111,110 samples, 0.33%)</title><rect x="13.9" y="405" width="4.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.93" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (202,020,200 samples, 0.61%)</title><rect x="47.2" y="357" width="7.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="50.18" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.7" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.72" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (10,101,010 samples, 0.03%)</title><rect x="587.0" y="373" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="589.95" y="383.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::~TcpFlow (10,101,010 samples, 0.03%)</title><rect x="17.9" y="437" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="20.86" y="447.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (60,606,060 samples, 0.18%)</title><rect x="336.4" y="421" width="2.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="339.37" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="71.8" y="357" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="74.84" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="66.5" y="437" width="0.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="69.48" y="447.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (10,101,010 samples, 0.03%)</title><rect x="894.7" y="421" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="897.73" y="431.5" ></text>
</g>
</g>
</svg>
