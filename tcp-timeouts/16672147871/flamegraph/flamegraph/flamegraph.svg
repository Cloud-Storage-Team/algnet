<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (191,919,190 samples, 0.58%)</title><rect x="1138.8" y="437" width="6.8" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1141.76" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;sim::IHost,  (10,101,010 samples, 0.03%)</title><rect x="598.4" y="453" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="601.39" y="463.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (10,101,010 samples, 0.03%)</title><rect x="894.7" y="405" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="897.73" y="415.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::send_packet_now (101,010,100 samples, 0.30%)</title><rect x="587.6" y="437" width="3.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="590.64" y="447.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (30,303,030 samples, 0.09%)</title><rect x="901.9" y="421" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="904.90" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="39.4" y="101" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="42.38" y="111.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::operator (10,101,010 samples, 0.03%)</title><rect x="239.3" y="501" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="242.33" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="898.7" y="325" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="901.67" y="335.5" ></text>
</g>
<g >
<title>sim::SendData::operator (666,666,660 samples, 2.00%)</title><rect x="1127.3" y="485" width="23.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1130.29" y="495.5" >s..</text>
</g>
<g >
<title>sim::Scheduler::tick (25,595,959,340 samples, 76.95%)</title><rect x="246.1" y="501" width="908.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="249.14" y="511.5" >sim::Scheduler::tick</text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (40,404,040 samples, 0.12%)</title><rect x="1187.8" y="341" width="1.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1190.85" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (50,505,050 samples, 0.15%)</title><rect x="893.3" y="421" width="1.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="896.30" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (131,313,130 samples, 0.39%)</title><rect x="1139.8" y="373" width="4.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1142.83" y="383.5" ></text>
</g>
<g >
<title>_start (33,242,423,910 samples, 99.94%)</title><rect x="10.7" y="581" width="1179.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.72" y="591.5" >_start</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.4" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.41" y="303.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (131,313,130 samples, 0.39%)</title><rect x="349.3" y="421" width="4.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="352.34" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="19.7" y="453" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.68" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="596.6" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="599.60" y="239.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.15%)</title><rect x="33.7" y="469" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="36.65" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="342.9" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="345.89" y="223.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.09%)</title><rect x="1168.5" y="469" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1171.50" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (161,616,160 samples, 0.49%)</title><rect x="46.6" y="389" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="49.55" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1138.8" y="421" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1141.76" y="431.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (50,505,050 samples, 0.15%)</title><rect x="1130.5" y="437" width="1.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1133.52" y="447.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="354.4" y="421" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="357.36" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.64" y="303.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1186.1" y="245" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.06" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1169.2" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.22" y="335.5" ></text>
</g>
<g >
<title>sim::Process::~Process (141,414,140 samples, 0.43%)</title><rect x="241.1" y="501" width="5.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="244.13" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="579.4" y="389" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="582.40" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.1" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.05" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="38.0" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.95" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.4" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.41" y="191.5" ></text>
</g>
<g >
<title>operator delete (101,010,100 samples, 0.30%)</title><rect x="746.0" y="453" width="3.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="749.02" y="463.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.15%)</title><rect x="594.8" y="405" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="597.80" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.6" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.59" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1180.7" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.68" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (161,616,160 samples, 0.49%)</title><rect x="46.6" y="373" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="49.55" y="383.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="907.6" y="421" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="910.63" y="431.5" ></text>
</g>
<g >
<title>YAML::Scanner::peek (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="325" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1191.92" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="585.1" y="341" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="588.13" y="351.5" ></text>
</g>
<g >
<title>sim::Host::process (565,656,560 samples, 1.70%)</title><rect x="578.7" y="469" width="20.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="581.68" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="904.8" y="373" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="907.76" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="715.2" y="437" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="718.20" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="715.2" y="421" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="718.20" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="389" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.75" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="38.3" y="325" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.31" y="335.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="11.1" y="421" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="14.08" y="431.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (10,101,010 samples, 0.03%)</title><rect x="38.0" y="453" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="40.95" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="715.2" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="718.20" y="383.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (10,101,010 samples, 0.03%)</title><rect x="76.7" y="517" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="79.65" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="64.8" y="341" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="67.83" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1179.2" y="389" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.25" y="399.5" ></text>
</g>
<g >
<title>_IO_file_fopen (50,505,050 samples, 0.15%)</title><rect x="38.3" y="421" width="1.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="41.31" y="431.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1186.1" y="277" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.06" y="287.5" ></text>
</g>
<g >
<title>operator new (60,606,060 samples, 0.18%)</title><rect x="898.0" y="373" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="900.96" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="589.4" y="309" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="592.43" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.4" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.41" y="239.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (10,101,010 samples, 0.03%)</title><rect x="583.0" y="437" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="585.98" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="342.2" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="345.18" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (30,303,030 samples, 0.09%)</title><rect x="342.2" y="405" width="1.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="345.18" y="415.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1158.8" y="437" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1161.82" y="447.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="277" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1190.85" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="715.2" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="718.20" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="896.9" y="437" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="899.88" y="447.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (333,333,330 samples, 1.00%)</title><rect x="343.6" y="453" width="11.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="346.61" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1166.7" y="469" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1169.71" y="479.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (4,292,929,250 samples, 12.91%)</title><rect x="87.0" y="501" width="152.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="90.04" y="511.5" >sim::Event::operator&gt;</text>
</g>
<g >
<title>sim::LinkQueue::pop (30,303,030 samples, 0.09%)</title><rect x="578.7" y="437" width="1.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="581.68" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1180.0" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.97" y="191.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (30,303,030 samples, 0.09%)</title><rect x="593.0" y="373" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="596.01" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.64" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="898.3" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="901.31" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="51.6" y="341" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="54.57" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (80,808,080 samples, 0.24%)</title><rect x="897.2" y="421" width="2.9" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="900.24" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="76.3" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.29" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (262,626,260 samples, 0.79%)</title><rect x="55.9" y="405" width="9.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="58.87" y="415.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (80,808,080 samples, 0.24%)</title><rect x="1186.4" y="373" width="2.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.42" y="383.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::get_max_size (20,202,020 samples, 0.06%)</title><rect x="608.8" y="469" width="0.7" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="611.78" y="479.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (10,101,010 samples, 0.03%)</title><rect x="68.4" y="453" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="71.41" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1180.7" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.68" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1131.6" y="325" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1134.59" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.4" y="453" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.39" y="463.5" ></text>
</g>
<g >
<title>operator new (161,616,160 samples, 0.49%)</title><rect x="1101.8" y="453" width="5.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1104.85" y="463.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="342.5" y="373" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="345.54" y="383.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="342.5" y="389" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="345.54" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="898.3" y="133" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="901.31" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1180.7" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.68" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="898.3" y="117" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="901.31" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;YAML::detail::node&gt;, std::shared_ptr&lt;YAML::detail::node&gt;, std::_Identity&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt;, std::less&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="453" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1192.28" y="463.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (30,303,030 samples, 0.09%)</title><rect x="1137.7" y="437" width="1.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1140.68" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="596.6" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="599.60" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.1" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.05" y="175.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::export_metrics_to_files (1,636,363,620 samples, 4.92%)</title><rect x="18.6" y="517" width="58.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="21.60" y="527.5" >sim::M..</text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (10,101,010 samples, 0.03%)</title><rect x="68.1" y="453" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="71.05" y="463.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnScalar (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="325" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1190.85" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="905.5" y="341" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="908.48" y="351.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (202,020,200 samples, 0.61%)</title><rect x="901.5" y="453" width="7.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="904.54" y="463.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (30,303,030 samples, 0.09%)</title><rect x="37.2" y="469" width="1.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="40.23" y="479.5" ></text>
</g>
<g >
<title>sim::Host::notify_about_arrival (20,202,020 samples, 0.06%)</title><rect x="340.7" y="453" width="0.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="343.74" y="463.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (323,232,320 samples, 0.97%)</title><rect x="54.8" y="453" width="11.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="57.79" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.7" y="389" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.68" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="38.0" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.95" y="239.5" ></text>
</g>
<g >
<title>nons (33,262,625,930 samples, 100.00%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >nons</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>std::filesystem::status (10,101,010 samples, 0.03%)</title><rect x="76.3" y="453" width="0.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="79.29" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (232,323,230 samples, 0.70%)</title><rect x="44.0" y="405" width="8.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="47.04" y="415.5" ></text>
</g>
<g >
<title>malloc (80,808,080 samples, 0.24%)</title><rect x="1159.2" y="421" width="2.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1162.18" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.6" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.59" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="906.6" y="325" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="909.56" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="358.3" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="361.30" y="367.5" ></text>
</g>
<g >
<title>malloc (484,848,480 samples, 1.46%)</title><rect x="875.4" y="421" width="17.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="878.38" y="431.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1150.6" y="437" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1153.58" y="447.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.03%)</title><rect x="590.5" y="357" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="593.50" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="585.8" y="325" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="588.85" y="335.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::get_size (80,808,080 samples, 0.24%)</title><rect x="609.5" y="469" width="2.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="612.50" y="479.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="1131.6" y="373" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1134.59" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.5" y="357" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.54" y="367.5" ></text>
</g>
<g >
<title>open64 (50,505,050 samples, 0.15%)</title><rect x="38.3" y="389" width="1.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="41.31" y="399.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (20,202,020 samples, 0.06%)</title><rect x="68.8" y="469" width="0.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="71.77" y="479.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (40,404,040 samples, 0.12%)</title><rect x="1186.4" y="325" width="1.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1189.42" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.5" y="325" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.54" y="335.5" ></text>
</g>
<g >
<title>sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::recalculate_paths (888,888,880 samples, 2.67%)</title><rect x="1154.2" y="501" width="31.5" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="1157.17" y="511.5" >si..</text>
</g>
<g >
<title>malloc (111,111,110 samples, 0.33%)</title><rect x="1103.6" y="437" width="4.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1106.64" y="447.5" ></text>
</g>
<g >
<title>sim::write_to_csv (1,282,828,270 samples, 3.86%)</title><rect x="21.1" y="485" width="45.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="24.11" y="495.5" >sim:..</text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1186.1" y="261" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.06" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1180.0" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.97" y="207.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="54.1" y="453" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="57.08" y="463.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (10,101,010 samples, 0.03%)</title><rect x="68.4" y="469" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="71.41" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="76.3" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.29" y="319.5" ></text>
</g>
<g >
<title>fopen (50,505,050 samples, 0.15%)</title><rect x="38.3" y="437" width="1.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="41.31" y="447.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="1134.1" y="437" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1137.10" y="447.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (20,202,020 samples, 0.06%)</title><rect x="1188.2" y="277" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1191.21" y="287.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (50,505,050 samples, 0.15%)</title><rect x="38.3" y="453" width="1.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="41.31" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.7" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.68" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="592.7" y="389" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="595.65" y="399.5" ></text>
</g>
<g >
<title>sim::RoutingModule::update_routing_table (141,414,140 samples, 0.43%)</title><rect x="1157.0" y="485" width="5.0" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1160.03" y="495.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (70,707,070 samples, 0.21%)</title><rect x="73.8" y="469" width="2.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="76.78" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.7" y="421" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.68" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="38.3" y="197" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.31" y="207.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (80,808,080 samples, 0.24%)</title><rect x="583.7" y="421" width="2.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="586.70" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (80,808,080 samples, 0.24%)</title><rect x="1159.2" y="453" width="2.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1162.18" y="463.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (20,202,020 samples, 0.06%)</title><rect x="10.7" y="453" width="0.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.72" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.1" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.05" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="595.5" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="598.52" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1157.0" y="469" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1160.03" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1179.2" y="261" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.25" y="271.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::create_packet (10,101,010 samples, 0.03%)</title><rect x="587.3" y="437" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="590.28" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="342.9" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="345.89" y="287.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="1145.9" y="421" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1148.92" y="431.5" ></text>
</g>
<g >
<title>malloc (161,616,160 samples, 0.49%)</title><rect x="752.1" y="437" width="5.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="755.11" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="38.7" y="165" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.67" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1180.0" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.97" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="358.3" y="341" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="361.30" y="351.5" ></text>
</g>
<g >
<title>cfree (484,848,480 samples, 1.46%)</title><rect x="320.7" y="485" width="17.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="323.68" y="495.5" ></text>
</g>
<g >
<title>operator delete (60,606,060 samples, 0.18%)</title><rect x="80.6" y="501" width="2.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="83.59" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.6" y="405" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.59" y="415.5" ></text>
</g>
<g >
<title>pthread_once (10,101,010 samples, 0.03%)</title><rect x="594.1" y="373" width="0.3" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="597.09" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.36" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.1" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.05" y="335.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.15%)</title><rect x="1180.7" y="421" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1183.68" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.6" y="485" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.60" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="38.0" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.95" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (20,202,020 samples, 0.06%)</title><rect x="579.0" y="421" width="0.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="582.04" y="431.5" ></text>
</g>
<g >
<title>sim::Event::Event (464,646,460 samples, 1.40%)</title><rect x="1107.6" y="453" width="16.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1110.58" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.36" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="405" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1184.6" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1187.62" y="367.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Switch::process (50,505,050 samples, 0.15%)</title><rect x="1152.4" y="485" width="1.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1155.37" y="495.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (80,808,080 samples, 0.24%)</title><rect x="897.2" y="437" width="2.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="900.24" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (171,717,170 samples, 0.52%)</title><rect x="737.8" y="437" width="6.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="740.78" y="447.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (30,303,030 samples, 0.09%)</title><rect x="344.3" y="437" width="1.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="347.33" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="65.9" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.90" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.6" y="437" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.60" y="447.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (30,303,030 samples, 0.09%)</title><rect x="944.9" y="453" width="1.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="947.90" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.4" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.41" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="437" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.64" y="287.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="36.5" y="437" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="39.52" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (20,202,020 samples, 0.06%)</title><rect x="35.8" y="469" width="0.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="38.80" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1179.2" y="405" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.25" y="415.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (10,101,010 samples, 0.03%)</title><rect x="1133.4" y="421" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1136.38" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.4" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.41" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.6" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.60" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (30,303,030 samples, 0.09%)</title><rect x="589.4" y="357" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="592.43" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="389" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="19.7" y="485" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="22.68" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.4" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.41" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1166.3" y="437" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1169.35" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.4" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.41" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="74.1" y="437" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="77.14" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="715.2" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="718.20" y="367.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (5,030,302,980 samples, 15.12%)</title><rect x="398.1" y="469" width="178.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="401.08" y="479.5" >sim::Event::operator&gt;</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="576.2" y="405" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="579.17" y="415.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (10,101,010 samples, 0.03%)</title><rect x="343.3" y="437" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="346.25" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.64" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="38.0" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.95" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.6" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.59" y="303.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.03%)</title><rect x="580.5" y="421" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="583.47" y="431.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="903.3" y="437" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="906.33" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="898.3" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="901.31" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="897.2" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="900.24" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="72.7" y="341" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="75.71" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="72.4" y="357" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="75.35" y="367.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1186.1" y="309" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.06" y="319.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (20,202,020 samples, 0.06%)</title><rect x="907.6" y="437" width="0.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="910.63" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="11.1" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.08" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="898.3" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="901.31" y="255.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="1129.8" y="453" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1132.80" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.30%)</title><rect x="69.5" y="389" width="3.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="72.48" y="399.5" ></text>
</g>
<g >
<title>cfree (60,606,060 samples, 0.18%)</title><rect x="78.4" y="501" width="2.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="81.44" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="437" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.32" y="447.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::Timeout::operator (40,404,040 samples, 0.12%)</title><rect x="1150.9" y="485" width="1.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1153.94" y="495.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::export_to_file (242,424,240 samples, 0.73%)</title><rect x="68.1" y="485" width="8.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="71.05" y="495.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="358.3" y="373" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="361.30" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="342.9" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="345.89" y="319.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (40,404,040 samples, 0.12%)</title><rect x="593.0" y="405" width="1.4" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="596.01" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="19.0" y="469" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.96" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="35.1" y="421" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="38.08" y="431.5" ></text>
</g>
<g >
<title>operator new (232,323,230 samples, 0.70%)</title><rect x="749.6" y="453" width="8.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="752.61" y="463.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="908.3" y="437" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="911.35" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="533" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.03%)</title><rect x="902.6" y="389" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="905.61" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1130.5" y="405" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1133.52" y="415.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="596.6" y="405" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="599.60" y="415.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (10,101,010 samples, 0.03%)</title><rect x="353.6" y="405" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="356.64" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.7" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.68" y="335.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (80,808,080 samples, 0.24%)</title><rect x="591.9" y="437" width="2.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="594.94" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.5" y="277" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.54" y="287.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (20,202,020 samples, 0.06%)</title><rect x="908.7" y="453" width="0.7" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="911.71" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;::size_type std::__detail::__erase_nodes_if&lt;std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;, std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;, sim::RoutingModule::correctify_outlinks (20,202,020 samples, 0.06%)</title><rect x="1170.6" y="453" width="0.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1173.65" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (111,111,110 samples, 0.33%)</title><rect x="349.7" y="373" width="3.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="352.70" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (181,818,180 samples, 0.55%)</title><rect x="1176.0" y="469" width="6.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1179.02" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1179.6" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.61" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="39.7" y="69" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="42.74" y="79.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (10,101,010 samples, 0.03%)</title><rect x="53.0" y="437" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="56.00" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.75" y="303.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (40,404,040 samples, 0.12%)</title><rect x="589.4" y="373" width="1.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="592.43" y="383.5" ></text>
</g>
<g >
<title>_IO_file_fopen (10,101,010 samples, 0.03%)</title><rect x="68.4" y="421" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="71.41" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.75" y="367.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (10,101,010 samples, 0.03%)</title><rect x="358.7" y="405" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="361.66" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (80,808,080 samples, 0.24%)</title><rect x="583.7" y="405" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="586.70" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="39.0" y="117" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="42.03" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="342.9" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="345.89" y="271.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (10,101,010 samples, 0.03%)</title><rect x="895.1" y="421" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="898.09" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="715.2" y="453" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="718.20" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="596.6" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="599.60" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.75" y="383.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (50,505,050 samples, 0.15%)</title><rect x="1130.5" y="453" width="1.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1133.52" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="39.0" y="149" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="42.03" y="159.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::node_data*,  (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="405" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1192.28" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="342.2" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="345.18" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="1159.9" y="389" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1162.90" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1192.64" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (10,101,010 samples, 0.03%)</title><rect x="1174.9" y="469" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1177.95" y="479.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (10,101,010 samples, 0.03%)</title><rect x="900.1" y="437" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="903.11" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;Time&lt;Nanosecond&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (20,202,020 samples, 0.06%)</title><rect x="36.5" y="469" width="0.7" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="39.52" y="479.5" ></text>
</g>
<g >
<title>Logger::info (10,101,010 samples, 0.03%)</title><rect x="339.3" y="453" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="342.31" y="463.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.09%)</title><rect x="1183.9" y="453" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1186.91" y="463.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_outlinks (40,404,040 samples, 0.12%)</title><rect x="1169.9" y="469" width="1.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1172.93" y="479.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="347.2" y="421" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="350.19" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.1" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.05" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1180.7" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.68" y="303.5" ></text>
</g>
<g >
<title>sim::Host::~Host (10,101,010 samples, 0.03%)</title><rect x="10.7" y="437" width="0.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="13.72" y="447.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (60,606,060 samples, 0.18%)</title><rect x="74.1" y="453" width="2.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="77.14" y="463.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (50,505,050 samples, 0.15%)</title><rect x="38.3" y="469" width="1.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="41.31" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="76.3" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.29" y="255.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (40,404,040 samples, 0.12%)</title><rect x="581.5" y="421" width="1.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="584.55" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.1" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.05" y="239.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="592.7" y="405" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="595.65" y="415.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1188.6" y="261" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.57" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="39.7" y="37" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="42.74" y="47.5" ></text>
</g>
<g >
<title>Logger::info (2,292,929,270 samples, 6.89%)</title><rect x="769.3" y="437" width="81.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="772.31" y="447.5" >Logger::i..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.75" y="335.5" ></text>
</g>
<g >
<title>sim::Switch::process (11,626,262,510 samples, 34.95%)</title><rect x="612.4" y="469" width="412.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="615.36" y="479.5" >sim::Switch::process</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="565" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::close (20,202,020 samples, 0.06%)</title><rect x="37.2" y="453" width="0.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="40.23" y="463.5" ></text>
</g>
<g >
<title>sim::Host::~Host (202,020,200 samples, 0.61%)</title><rect x="11.4" y="453" width="7.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="14.43" y="463.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (101,010,100 samples, 0.30%)</title><rect x="896.5" y="453" width="3.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="899.52" y="463.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (40,404,040 samples, 0.12%)</title><rect x="588.0" y="389" width="1.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="591.00" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1144.1" y="309" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1147.13" y="319.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (10,101,010 samples, 0.03%)</title><rect x="892.9" y="421" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="895.94" y="431.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (50,505,050 samples, 0.15%)</title><rect x="74.5" y="437" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="77.50" y="447.5" ></text>
</g>
<g >
<title>YAML::Node::~Node (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="501" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1192.28" y="511.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (60,606,060 samples, 0.18%)</title><rect x="580.8" y="437" width="2.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="583.83" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="342.2" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="345.18" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="50.5" y="357" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="53.49" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1180.7" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.68" y="319.5" ></text>
</g>
<g >
<title>vsnprintf (60,606,060 samples, 0.18%)</title><rect x="904.8" y="389" width="2.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="907.76" y="399.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="1168.9" y="453" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1171.86" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.7" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.68" y="367.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (353,535,350 samples, 1.06%)</title><rect x="1134.1" y="453" width="12.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1137.10" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="65.9" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.90" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.36" y="319.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="373" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1192.64" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.06%)</title><rect x="582.3" y="405" width="0.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="585.26" y="415.5" ></text>
</g>
<g >
<title>__close_nocancel (10,101,010 samples, 0.03%)</title><rect x="37.6" y="421" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="40.59" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.64" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (222,222,220 samples, 0.67%)</title><rect x="10.7" y="485" width="7.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.72" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="342.9" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="345.89" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="584.8" y="357" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="587.77" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.4" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.41" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.36%)</title><rect x="888.3" y="405" width="4.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="891.28" y="415.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleDocument (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="453" width="3.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1189.06" y="463.5" ></text>
</g>
<g >
<title>sim::LinkQueue::LinkQueue (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="421" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1192.64" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="343.6" y="421" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="346.61" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.6" y="453" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.60" y="463.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::data[abi:cxx11] (30,303,030 samples, 0.09%)</title><rect x="20.0" y="485" width="1.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="23.03" y="495.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="501" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1192.64" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (282,828,280 samples, 0.85%)</title><rect x="850.7" y="437" width="10.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="853.66" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1161.7" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.69" y="383.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="73.1" y="437" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="76.07" y="447.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="389" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1192.64" y="399.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="343.6" y="437" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="346.61" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="342.2" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="345.18" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (10,101,010 samples, 0.03%)</title><rect x="1185.0" y="485" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1187.98" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="62.3" y="357" width="2.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="65.32" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="904.0" y="421" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="907.05" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.30%)</title><rect x="1140.9" y="357" width="3.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1143.91" y="367.5" ></text>
</g>
<g >
<title>YAML::detail::memory::create_node (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="293" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1190.85" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1180.7" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.68" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="596.6" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="599.60" y="367.5" ></text>
</g>
<g >
<title>all (33,262,625,930 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1166.3" y="469" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1169.35" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.75" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.6" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.59" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned int&gt;, bool&gt; std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;unsigned int&gt; &gt;::_M_insert_unique&lt;unsigned int const&amp;&gt; (10,101,010 samples, 0.03%)</title><rect x="597.3" y="437" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="600.31" y="447.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (10,101,010 samples, 0.03%)</title><rect x="1187.5" y="309" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1190.49" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="342.2" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="345.18" y="335.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (161,616,160 samples, 0.49%)</title><rect x="348.3" y="437" width="5.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="351.27" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="39.0" y="133" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="42.03" y="143.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (10,101,010 samples, 0.03%)</title><rect x="68.1" y="469" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="71.05" y="479.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;, std::weak_ptr&lt;sim::IProcessingDevice&gt;&amp;&gt; (2,797,979,770 samples, 8.41%)</title><rect x="1024.8" y="469" width="99.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1027.81" y="479.5" >void sim::Sc..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1180.7" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.68" y="255.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (101,010,100 samples, 0.30%)</title><rect x="904.0" y="437" width="3.6" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="907.05" y="447.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (20,202,020 samples, 0.06%)</title><rect x="1134.8" y="437" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1137.82" y="447.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.03%)</title><rect x="68.1" y="437" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="71.05" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.03%)</title><rect x="902.3" y="405" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="905.26" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="38.3" y="341" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.31" y="351.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (40,404,040 samples, 0.12%)</title><rect x="589.4" y="389" width="1.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="592.43" y="399.5" ></text>
</g>
<g >
<title>operator delete (10,101,010 samples, 0.03%)</title><rect x="33.3" y="469" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="36.29" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1169.2" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.22" y="351.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.15%)</title><rect x="1180.7" y="437" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1183.68" y="447.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (20,202,020 samples, 0.06%)</title><rect x="1188.2" y="325" width="0.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1191.21" y="335.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="908.0" y="421" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="910.99" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="898.0" y="341" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="900.96" y="351.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (40,404,040 samples, 0.12%)</title><rect x="354.0" y="437" width="1.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="357.00" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="38.3" y="277" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.31" y="287.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1186.1" y="229" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.06" y="239.5" ></text>
</g>
<g >
<title>std::locale::locale (10,101,010 samples, 0.03%)</title><rect x="1137.3" y="437" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1140.32" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1180.7" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.68" y="335.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (50,505,050 samples, 0.15%)</title><rect x="594.8" y="421" width="1.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="597.80" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="38.0" y="389" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.95" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.5" y="373" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.54" y="383.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="20.8" y="453" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="23.75" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.75" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="76.3" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.29" y="271.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (70,707,070 samples, 0.21%)</title><rect x="601.6" y="469" width="2.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="604.61" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="342.9" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="345.89" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (33,242,423,910 samples, 99.94%)</title><rect x="10.7" y="549" width="1179.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.72" y="559.5" >[libc.so.6]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.4" y="421" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.39" y="431.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (292,929,290 samples, 0.88%)</title><rect x="840.3" y="421" width="10.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="843.26" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.4" y="133" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.41" y="143.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="579.0" y="405" width="0.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="582.04" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.4" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.41" y="175.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.06%)</title><rect x="1186.8" y="293" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.77" y="303.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.12%)</title><rect x="34.0" y="453" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="37.01" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="596.6" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="599.60" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="342.2" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="345.18" y="287.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.15%)</title><rect x="594.8" y="389" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="597.80" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.64" y="239.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="389" width="3.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.06" y="399.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (90,909,090 samples, 0.27%)</title><rect x="904.4" y="421" width="3.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="907.41" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.1" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.05" y="271.5" ></text>
</g>
<g >
<title>vsnprintf (30,303,030 samples, 0.09%)</title><rect x="589.4" y="341" width="1.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="592.43" y="351.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="36.5" y="453" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="39.52" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="596.6" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="599.60" y="207.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (121,212,120 samples, 0.36%)</title><rect x="69.5" y="469" width="4.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="72.48" y="479.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1128.7" y="437" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1131.72" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="34.4" y="437" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="37.37" y="447.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (30,303,030 samples, 0.09%)</title><rect x="1149.9" y="453" width="1.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1152.87" y="463.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (20,202,020 samples, 0.06%)</title><rect x="580.1" y="437" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="583.11" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (60,606,060 samples, 0.18%)</title><rect x="1180.3" y="453" width="2.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1183.32" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (141,414,140 samples, 0.43%)</title><rect x="1139.5" y="405" width="5.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1142.47" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (272,727,270 samples, 0.82%)</title><rect x="55.5" y="437" width="9.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="58.51" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="10.7" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.72" y="415.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1186.1" y="293" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.06" y="303.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="41.5" y="453" width="0.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="44.53" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="581" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1168.9" y="437" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1171.86" y="447.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="54.4" y="453" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="57.43" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (111,111,110 samples, 0.33%)</title><rect x="349.7" y="405" width="3.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="352.70" y="415.5" ></text>
</g>
<g >
<title>main (33,020,201,690 samples, 99.27%)</title><rect x="18.6" y="533" width="1171.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="21.60" y="543.5" >main</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="576.2" y="421" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="579.17" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="596.6" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="599.60" y="175.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (10,101,010 samples, 0.03%)</title><rect x="1133.7" y="453" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1136.74" y="463.5" ></text>
</g>
<g >
<title>sim::Link::get_max_to_ingress_queue_size (80,808,080 samples, 0.24%)</title><rect x="598.7" y="469" width="2.9" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="601.75" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1180.7" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.68" y="223.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (40,404,040 samples, 0.12%)</title><rect x="1132.3" y="453" width="1.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1135.31" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="355.1" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="358.08" y="415.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="1131.6" y="357" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1134.59" y="367.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="902.6" y="373" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="905.61" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="350.8" y="341" width="2.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="353.78" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1143.4" y="325" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1146.42" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="596.6" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="599.60" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="590.1" y="277" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="593.15" y="287.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (212,121,210 samples, 0.64%)</title><rect x="579.8" y="453" width="7.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="582.75" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="517" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>Logger::warn (2,121,212,100 samples, 6.38%)</title><rect x="640.0" y="453" width="75.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="642.95" y="463.5" >Logger::..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="38.0" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.95" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="342.2" y="389" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="345.18" y="399.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (999,999,990 samples, 3.01%)</title><rect x="909.4" y="453" width="35.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="912.42" y="463.5" >sim..</text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (20,202,020 samples, 0.06%)</title><rect x="586.6" y="437" width="0.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="589.56" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="342.2" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="345.18" y="303.5" ></text>
</g>
<g >
<title>utils::create_all_directories (10,101,010 samples, 0.03%)</title><rect x="76.3" y="469" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.29" y="479.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="1156.3" y="485" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1159.32" y="495.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (10,101,010 samples, 0.03%)</title><rect x="73.4" y="437" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="76.43" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="76.3" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.29" y="287.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (10,101,010 samples, 0.03%)</title><rect x="38.0" y="421" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="40.95" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1179.2" y="421" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1182.25" y="431.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="1183.9" y="437" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1186.91" y="447.5" ></text>
</g>
<g >
<title>virtual thunk to sim::RoutingModule::get_id[abi:cxx11] (10,101,010 samples, 0.03%)</title><rect x="587.3" y="421" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="590.28" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="1180.7" y="405" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1183.68" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (10,101,010 samples, 0.03%)</title><rect x="1170.3" y="453" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1173.29" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.5" y="229" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.54" y="239.5" ></text>
</g>
<g >
<title>_IO_file_close (10,101,010 samples, 0.03%)</title><rect x="37.2" y="421" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="40.23" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.5" y="245" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.54" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.75" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.06%)</title><rect x="588.4" y="357" width="0.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="591.35" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="595.9" y="357" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="598.88" y="367.5" ></text>
</g>
<g >
<title>sim::Link::get_to_ingress_queue_size (70,707,070 samples, 0.21%)</title><rect x="604.1" y="469" width="2.5" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="607.12" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="76.3" y="133" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.29" y="143.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_links (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="485" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1192.64" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="549" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="38.3" y="261" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.31" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_erase (30,303,030 samples, 0.09%)</title><rect x="1173.5" y="469" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1176.52" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.75" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="596.6" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="599.60" y="319.5" ></text>
</g>
<g >
<title>operator new (70,707,070 samples, 0.21%)</title><rect x="388.8" y="469" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="391.76" y="479.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (50,505,050 samples, 0.15%)</title><rect x="592.7" y="421" width="1.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="595.65" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.4" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.41" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1184.6" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1187.62" y="399.5" ></text>
</g>
<g >
<title>YAML::Stream::_ReadAheadTo (10,101,010 samples, 0.03%)</title><rect x="1187.5" y="261" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1190.49" y="271.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::Push (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="309" width="0.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1190.85" y="319.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.12%)</title><rect x="1178.9" y="453" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1181.89" y="463.5" ></text>
</g>
<g >
<title>sim::Parser&lt;sim::Link&gt;::parse_object (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="453" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1192.64" y="463.5" ></text>
</g>
<g >
<title>YAML::LoadFile (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="501" width="3.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1189.06" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.5" y="341" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.54" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.5" y="309" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.54" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1184.6" y="405" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1187.62" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="715.2" y="405" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="718.20" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="595.5" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="598.52" y="367.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (60,606,060 samples, 0.18%)</title><rect x="356.9" y="453" width="2.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="359.87" y="463.5" ></text>
</g>
<g >
<title>sim::Link::get_to (10,101,010 samples, 0.03%)</title><rect x="1156.7" y="485" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1159.67" y="495.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_insert_unique&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; const&amp;&gt; (70,707,070 samples, 0.21%)</title><rect x="1182.5" y="469" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1185.47" y="479.5" ></text>
</g>
<g >
<title>sim::Event::get_time (121,212,120 samples, 0.36%)</title><rect x="82.7" y="501" width="4.3" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="85.74" y="511.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::_List::_Impl_deleter::operator (10,101,010 samples, 0.03%)</title><rect x="67.7" y="485" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="70.69" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="38.3" y="229" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.31" y="239.5" ></text>
</g>
<g >
<title>cfree (303,030,300 samples, 0.91%)</title><rect x="860.7" y="437" width="10.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="863.69" y="447.5" ></text>
</g>
<g >
<title>YAML::Load (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="485" width="3.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1189.06" y="495.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="65.5" y="437" width="0.8" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="68.54" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="39.7" y="85" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="42.74" y="95.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (111,111,110 samples, 0.33%)</title><rect x="1186.1" y="517" width="3.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1189.06" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="579.8" y="421" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="582.75" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (20,202,020 samples, 0.06%)</title><rect x="1175.3" y="469" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1178.31" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="421" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="596.6" y="421" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="599.60" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.4" y="469" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.39" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="898.3" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="901.31" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="342.9" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="345.89" y="351.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (30,303,030 samples, 0.09%)</title><rect x="1145.6" y="437" width="1.0" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1148.57" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="437" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="23.75" y="447.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="52.6" y="437" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="55.64" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1158.8" y="421" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.82" y="431.5" ></text>
</g>
<g >
<title>std::locale::~locale (10,101,010 samples, 0.03%)</title><rect x="345.0" y="421" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="348.04" y="431.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1158.8" y="453" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1161.82" y="463.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::operator (90,909,090 samples, 0.27%)</title><rect x="355.8" y="485" width="3.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="358.79" y="495.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (10,101,010 samples, 0.03%)</title><rect x="903.7" y="437" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="906.69" y="447.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (313,131,310 samples, 0.94%)</title><rect x="42.3" y="453" width="11.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="45.25" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="593.7" y="293" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="596.73" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="1159.2" y="405" width="2.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1162.18" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (30,303,030 samples, 0.09%)</title><rect x="342.2" y="437" width="1.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="345.18" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.5" y="389" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.54" y="399.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="596.6" y="389" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="599.60" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="19.0" y="453" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.96" y="463.5" ></text>
</g>
<g >
<title>operator new (575,757,570 samples, 1.73%)</title><rect x="872.2" y="437" width="20.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="875.16" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.4" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.41" y="255.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (20,202,020 samples, 0.06%)</title><rect x="1188.2" y="309" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1191.21" y="319.5" ></text>
</g>
<g >
<title>YAML::Stream::get (10,101,010 samples, 0.03%)</title><rect x="1187.5" y="277" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1190.49" y="287.5" ></text>
</g>
<g >
<title>writev (20,202,020 samples, 0.06%)</title><rect x="65.5" y="421" width="0.8" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="68.54" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (494,949,490 samples, 1.49%)</title><rect x="715.6" y="453" width="17.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="718.56" y="463.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="583.3" y="421" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="586.34" y="431.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (10,101,010 samples, 0.03%)</title><rect x="1186.1" y="325" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1189.06" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (10,101,010 samples, 0.03%)</title><rect x="598.0" y="453" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="601.03" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="590.9" y="373" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="593.86" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="898.3" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="901.31" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.4" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.39" y="367.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (10,101,010 samples, 0.03%)</title><rect x="900.1" y="421" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="903.11" y="431.5" ></text>
</g>
<g >
<title>cfree (303,030,300 samples, 0.91%)</title><rect x="733.1" y="453" width="10.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="736.12" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1179.6" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.61" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="898.3" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="901.31" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1166.3" y="453" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1169.35" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1156.0" y="485" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1158.96" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="589.4" y="293" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="592.43" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="593.0" y="341" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="596.01" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1156.3" y="469" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1159.32" y="479.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1148.8" y="405" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1151.79" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="38.0" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.95" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (242,424,240 samples, 0.73%)</title><rect x="56.6" y="373" width="8.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="59.58" y="383.5" ></text>
</g>
<g >
<title>Logger::get_instance (80,808,080 samples, 0.24%)</title><rect x="766.4" y="437" width="2.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="769.45" y="447.5" ></text>
</g>
<g >
<title>virtual thunk to sim::RoutingModule::get_id[abi:cxx11] (10,101,010 samples, 0.03%)</title><rect x="597.7" y="437" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="600.67" y="447.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (10,101,010 samples, 0.03%)</title><rect x="356.5" y="453" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="359.51" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="38.0" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.95" y="383.5" ></text>
</g>
<g >
<title>sim::Process::operator (40,404,040 samples, 0.12%)</title><rect x="239.7" y="501" width="1.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="242.69" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="75.2" y="357" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="78.22" y="367.5" ></text>
</g>
<g >
<title>open64 (10,101,010 samples, 0.03%)</title><rect x="68.4" y="389" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="71.41" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.1" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.05" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.36" y="271.5" ></text>
</g>
<g >
<title>sim::SendData::SendData (10,101,010 samples, 0.03%)</title><rect x="594.4" y="421" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="597.45" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.4" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.41" y="223.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.03%)</title><rect x="65.2" y="437" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="68.18" y="447.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (60,606,060 samples, 0.18%)</title><rect x="606.6" y="469" width="2.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="609.63" y="479.5" ></text>
</g>
<g >
<title>__default_morecore (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="341" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1192.64" y="351.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (10,101,010 samples, 0.03%)</title><rect x="347.9" y="437" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="350.91" y="447.5" ></text>
</g>
<g >
<title>Logger::info (30,303,030 samples, 0.09%)</title><rect x="638.9" y="453" width="1.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="641.88" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="74.5" y="389" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="77.50" y="399.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (70,707,070 samples, 0.21%)</title><rect x="897.6" y="405" width="2.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="900.60" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1129.1" y="453" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1132.08" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.7" y="405" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.68" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.4" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.41" y="319.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="1136.6" y="421" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1139.61" y="431.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="1100.8" y="453" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1103.77" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="40.8" y="453" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="43.82" y="463.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (60,606,060 samples, 0.18%)</title><rect x="356.9" y="437" width="2.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="359.87" y="447.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (505,050,500 samples, 1.52%)</title><rect x="337.9" y="485" width="17.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="340.88" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.4" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.41" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="339.7" y="453" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="342.67" y="463.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1187.1" y="261" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.13" y="271.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="437" width="3.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.06" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.03%)</title><rect x="597.0" y="437" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="599.95" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.6" y="469" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.60" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.75" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="421" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.75" y="431.5" ></text>
</g>
<g >
<title>malloc@plt (10,101,010 samples, 0.03%)</title><rect x="344.0" y="437" width="0.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="346.97" y="447.5" ></text>
</g>
<g >
<title>fclose (20,202,020 samples, 0.06%)</title><rect x="37.2" y="437" width="0.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="40.23" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1131.6" y="341" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1134.59" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.27%)</title><rect x="1141.3" y="341" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1144.27" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1179.2" y="277" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.25" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.7" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.68" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="898.3" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="901.31" y="175.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (373,737,370 samples, 1.12%)</title><rect x="40.1" y="469" width="13.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="43.10" y="479.5" ></text>
</g>
<g >
<title>sim::IdentifierFactory::~IdentifierFactory (222,222,220 samples, 0.67%)</title><rect x="10.7" y="501" width="7.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="13.72" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.36" y="287.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (10,101,010 samples, 0.03%)</title><rect x="355.4" y="453" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="358.44" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="898.3" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="901.31" y="271.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (90,909,090 samples, 0.27%)</title><rect x="583.3" y="437" width="3.3" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="586.34" y="447.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="590.9" y="389" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="593.86" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (10,101,010 samples, 0.03%)</title><rect x="1174.6" y="469" width="0.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1177.59" y="479.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (60,606,060 samples, 0.18%)</title><rect x="341.5" y="453" width="2.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="344.46" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1146.3" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1149.28" y="415.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="421" width="3.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.06" y="431.5" ></text>
</g>
<g >
<title>malloc (60,606,060 samples, 0.18%)</title><rect x="743.9" y="453" width="2.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="746.87" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="38.0" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.95" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="76.3" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.29" y="335.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (20,202,020 samples, 0.06%)</title><rect x="1188.2" y="293" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1191.21" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="38.0" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.95" y="335.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (50,505,050 samples, 0.15%)</title><rect x="1135.5" y="437" width="1.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1138.53" y="447.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::Arrive (10,101,010 samples, 0.03%)</title><rect x="356.2" y="453" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="359.15" y="463.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="261" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1190.85" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 0.67%)</title><rect x="863.6" y="421" width="7.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="866.56" y="431.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (90,909,090 samples, 0.27%)</title><rect x="588.0" y="405" width="3.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="591.00" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.5" y="293" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.54" y="303.5" ></text>
</g>
<g >
<title>sim::Link::arrive (494,949,490 samples, 1.49%)</title><rect x="338.2" y="469" width="17.6" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="341.24" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="74.5" y="405" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="77.50" y="415.5" ></text>
</g>
<g >
<title>vsnprintf (50,505,050 samples, 0.15%)</title><rect x="74.5" y="421" width="1.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="77.50" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.30%)</title><rect x="69.5" y="373" width="3.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="72.48" y="383.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.03%)</title><rect x="38.0" y="437" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="40.95" y="447.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (181,818,180 samples, 0.55%)</title><rect x="1139.1" y="421" width="6.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1142.12" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="905.1" y="357" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="908.12" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="76.3" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.29" y="159.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1188.6" y="245" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.57" y="255.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1133.0" y="437" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1136.02" y="447.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="10.7" y="421" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="13.72" y="431.5" ></text>
</g>
<g >
<title>vsnprintf (101,010,100 samples, 0.30%)</title><rect x="69.5" y="421" width="3.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="72.48" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="38.3" y="213" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.31" y="223.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::node_ref*,  (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="421" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1192.28" y="431.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="19.7" y="469" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="22.68" y="479.5" ></text>
</g>
<g >
<title>sim::Host::send_packet (646,464,640 samples, 1.94%)</title><rect x="1128.0" y="469" width="22.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1131.01" y="479.5" >s..</text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="871.4" y="437" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="874.44" y="447.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanNextToken (20,202,020 samples, 0.06%)</title><rect x="1186.8" y="309" width="0.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1189.77" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.4" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.39" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1183.9" y="421" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1186.91" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="715.2" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="718.20" y="335.5" ></text>
</g>
<g >
<title>malloc (60,606,060 samples, 0.18%)</title><rect x="898.0" y="357" width="2.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="900.96" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.4" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.39" y="383.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="36.2" y="437" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="39.16" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="76.3" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.29" y="367.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (10,101,010 samples, 0.03%)</title><rect x="348.6" y="421" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="351.63" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="11.1" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.08" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="36.2" y="453" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="39.16" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1169.2" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.22" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1167.4" y="453" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1170.42" y="463.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (70,707,070 samples, 0.21%)</title><rect x="1146.6" y="453" width="2.5" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1149.64" y="463.5" ></text>
</g>
<g >
<title>std::locale::locale (10,101,010 samples, 0.03%)</title><rect x="1024.1" y="453" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1027.09" y="463.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="579.8" y="437" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="582.75" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="1181.0" y="389" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1184.04" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="17.5" y="389" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.53" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (101,010,100 samples, 0.30%)</title><rect x="69.5" y="437" width="3.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="72.48" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="76.3" y="421" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.29" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.4" y="437" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.39" y="447.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (40,404,040 samples, 0.12%)</title><rect x="1186.4" y="341" width="1.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1189.42" y="351.5" ></text>
</g>
<g >
<title>sim::Link::transmit (90,909,090 samples, 0.27%)</title><rect x="355.8" y="469" width="3.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="358.79" y="479.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="405" width="3.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.06" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (2,191,919,170 samples, 6.59%)</title><rect x="946.0" y="453" width="77.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="948.97" y="463.5" >std::_Rb..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="38.3" y="309" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.31" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.03%)</title><rect x="588.7" y="341" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="591.71" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="576.2" y="437" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="579.17" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.4" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.39" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (242,424,240 samples, 0.73%)</title><rect x="56.6" y="389" width="8.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="59.58" y="399.5" ></text>
</g>
<g >
<title>Logger::get_instance (10,101,010 samples, 0.03%)</title><rect x="386.3" y="469" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="389.25" y="479.5" ></text>
</g>
<g >
<title>__uselocale (30,303,030 samples, 0.09%)</title><rect x="1144.5" y="405" width="1.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1147.49" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="596.6" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="599.60" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.1" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.05" y="367.5" ></text>
</g>
<g >
<title>write (10,101,010 samples, 0.03%)</title><rect x="68.1" y="405" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="71.05" y="415.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="1173.9" y="453" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1176.87" y="463.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (10,101,010 samples, 0.03%)</title><rect x="68.1" y="421" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="71.05" y="431.5" ></text>
</g>
<g >
<title>sim::Process::operator (21,565,656,350 samples, 64.83%)</title><rect x="359.0" y="485" width="765.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="362.02" y="495.5" >sim::Process::operator</text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (80,808,080 samples, 0.24%)</title><rect x="1186.4" y="357" width="2.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.42" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="586.9" y="405" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="589.92" y="415.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (101,010,100 samples, 0.30%)</title><rect x="587.6" y="421" width="3.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="590.64" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1180.7" y="389" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.68" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="898.3" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="901.31" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1179.2" y="341" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.25" y="351.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="903.0" y="421" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="905.97" y="431.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="1179.2" y="437" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1182.25" y="447.5" ></text>
</g>
<g >
<title>virtual thunk to sim::RoutingModule::update_routing_table (10,101,010 samples, 0.03%)</title><rect x="1185.7" y="501" width="0.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1188.70" y="511.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (50,505,050 samples, 0.15%)</title><rect x="901.5" y="437" width="1.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="904.54" y="447.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (10,101,010 samples, 0.03%)</title><rect x="1023.7" y="453" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1026.73" y="463.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="902.6" y="357" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="905.61" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1179.2" y="357" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.25" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1148.4" y="437" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1151.43" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (30,303,030 samples, 0.09%)</title><rect x="66.6" y="485" width="1.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="69.62" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="898.3" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="901.31" y="159.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (10,101,010 samples, 0.03%)</title><rect x="1187.5" y="293" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1190.49" y="303.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1187.1" y="229" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.13" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.1" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.05" y="319.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="1131.6" y="389" width="0.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1134.59" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="576.2" y="453" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="579.17" y="463.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (70,707,070 samples, 0.21%)</title><rect x="345.4" y="437" width="2.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="348.40" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.1" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.05" y="207.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="894.4" y="405" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="897.37" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="594.8" y="373" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="597.80" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="453" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>sim::BaseHasher::get_hash (10,101,010 samples, 0.03%)</title><rect x="1148.8" y="437" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1151.79" y="447.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="1131.6" y="405" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1134.59" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="36.9" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="39.88" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="595.5" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="598.52" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.30%)</title><rect x="69.5" y="405" width="3.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="72.48" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="898.3" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="901.31" y="207.5" ></text>
</g>
<g >
<title>strlen@plt (30,303,030 samples, 0.09%)</title><rect x="895.4" y="437" width="1.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="898.45" y="447.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1133.0" y="421" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1136.02" y="431.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (121,212,120 samples, 0.36%)</title><rect x="69.5" y="453" width="4.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="72.48" y="463.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="358.3" y="405" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="361.30" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1169.2" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.22" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="715.2" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="718.20" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="356.9" y="421" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="359.87" y="431.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="340.0" y="437" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="343.03" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="76.3" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.29" y="175.5" ></text>
</g>
<g >
<title>cfree (131,313,130 samples, 0.39%)</title><rect x="13.9" y="437" width="4.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="16.94" y="447.5" ></text>
</g>
<g >
<title>sim::Event::Event (191,919,190 samples, 0.58%)</title><rect x="391.3" y="469" width="6.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="394.27" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_erase (20,202,020 samples, 0.06%)</title><rect x="1172.8" y="469" width="0.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1175.80" y="479.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (60,606,060 samples, 0.18%)</title><rect x="576.5" y="469" width="2.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="579.53" y="479.5" ></text>
</g>
<g >
<title>sim::Link::get_to (10,101,010 samples, 0.03%)</title><rect x="1169.6" y="469" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1172.57" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.1" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.05" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.36%)</title><rect x="14.3" y="421" width="4.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.30" y="431.5" ></text>
</g>
<g >
<title>Logger::warn (20,202,020 samples, 0.06%)</title><rect x="386.6" y="469" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="389.61" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.4" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.39" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1167.8" y="437" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1170.78" y="447.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.03%)</title><rect x="906.9" y="405" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="909.91" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.36" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="39.7" y="53" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="42.74" y="63.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="349.3" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="352.34" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="73.8" y="453" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="76.78" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.75" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="76.3" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.29" y="191.5" ></text>
</g>
<g >
<title>vsnprintf (242,424,240 samples, 0.73%)</title><rect x="43.7" y="421" width="8.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="46.68" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1184.6" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1187.62" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.75" y="239.5" ></text>
</g>
<g >
<title>Logger::info (30,303,030 samples, 0.09%)</title><rect x="1128.0" y="453" width="1.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1131.01" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="356.5" y="437" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="359.51" y="447.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (3,878,787,840 samples, 11.66%)</title><rect x="758.9" y="453" width="137.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="761.92" y="463.5" >sim::Link::get_pa..</text>
</g>
<g >
<title>sim::Event::operator&gt; (20,202,020 samples, 0.06%)</title><rect x="757.8" y="453" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="760.85" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.4" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.41" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="38.3" y="293" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.31" y="303.5" ></text>
</g>
<g >
<title>strlen@plt (10,101,010 samples, 0.03%)</title><rect x="1024.4" y="453" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1027.45" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1179.2" y="373" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.25" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1180.7" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.68" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1179.2" y="293" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.25" y="303.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="588.4" y="373" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="591.35" y="383.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="589.1" y="373" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="592.07" y="383.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (10,101,010 samples, 0.03%)</title><rect x="1186.1" y="357" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1189.06" y="367.5" ></text>
</g>
<g >
<title>vsnprintf (111,111,110 samples, 0.33%)</title><rect x="349.7" y="389" width="3.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="352.70" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (252,525,250 samples, 0.76%)</title><rect x="43.3" y="437" width="9.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="46.33" y="447.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (60,606,060 samples, 0.18%)</title><rect x="893.3" y="437" width="2.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="896.30" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::node*,  (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="437" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1192.28" y="447.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (20,202,020 samples, 0.06%)</title><rect x="344.3" y="421" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="347.33" y="431.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (10,101,010 samples, 0.03%)</title><rect x="1186.1" y="373" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1189.06" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.6" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.59" y="335.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (20,202,020 samples, 0.06%)</title><rect x="892.6" y="437" width="0.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="895.58" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.4" y="405" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.39" y="415.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::~TcpFlow (10,101,010 samples, 0.03%)</title><rect x="11.1" y="437" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="14.08" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="76.3" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.29" y="351.5" ></text>
</g>
<g >
<title>sim::Process::~Process (90,909,090 samples, 0.27%)</title><rect x="1124.1" y="485" width="3.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1127.07" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="589.4" y="325" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="592.43" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="892.6" y="421" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="895.58" y="431.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (10,101,010 samples, 0.03%)</title><rect x="1135.2" y="421" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1138.17" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="74.9" y="373" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="77.86" y="383.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (40,404,040 samples, 0.12%)</title><rect x="593.0" y="389" width="1.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="596.01" y="399.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1187.1" y="277" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.13" y="287.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="19.0" y="485" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="21.96" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="584.1" y="373" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="587.05" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1169.2" y="421" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.22" y="431.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (363,636,360 samples, 1.09%)</title><rect x="53.4" y="469" width="12.9" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="56.36" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 0.67%)</title><rect x="10.7" y="517" width="7.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.72" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="501" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (262,626,260 samples, 0.79%)</title><rect x="705.9" y="437" width="9.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="708.89" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.5" y="405" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.54" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="38.3" y="245" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.31" y="255.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::export_to_files (1,393,939,380 samples, 4.19%)</title><rect x="18.6" y="501" width="49.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="21.60" y="511.5" >sim:..</text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (30,303,030 samples, 0.09%)</title><rect x="342.2" y="421" width="1.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="345.18" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (50,505,050 samples, 0.15%)</title><rect x="1130.5" y="421" width="1.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1133.52" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.6" y="405" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.60" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="342.2" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="345.18" y="255.5" ></text>
</g>
<g >
<title>operator new (80,808,080 samples, 0.24%)</title><rect x="1159.2" y="437" width="2.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1162.18" y="447.5" ></text>
</g>
<g >
<title>YAML::Parser::HandleNextDocument (90,909,090 samples, 0.27%)</title><rect x="1186.1" y="469" width="3.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1189.06" y="479.5" ></text>
</g>
<g >
<title>malloc@plt (10,101,010 samples, 0.03%)</title><rect x="588.7" y="325" width="0.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="591.71" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.36" y="255.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_delivery_rate (10,101,010 samples, 0.03%)</title><rect x="596.6" y="437" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="599.60" y="447.5" ></text>
</g>
<g >
<title>write (10,101,010 samples, 0.03%)</title><rect x="38.0" y="405" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="40.95" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="65.9" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.90" y="223.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="358.3" y="389" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="361.30" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="596.6" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="599.60" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="38.7" y="181" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.67" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="469" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="342.5" y="357" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="345.54" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.1" y="389" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.05" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="76.3" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.29" y="207.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (202,020,200 samples, 0.61%)</title><rect x="11.4" y="469" width="7.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="14.43" y="479.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="586.9" y="421" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="589.92" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.8" y="405" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.75" y="415.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::memory_holder*,  (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="485" width="0.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1192.28" y="495.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (10,101,010 samples, 0.03%)</title><rect x="1133.4" y="437" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1136.38" y="447.5" ></text>
</g>
<g >
<title>fstatat64 (10,101,010 samples, 0.03%)</title><rect x="76.3" y="437" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="79.29" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.7" y="437" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.68" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.03%)</title><rect x="347.6" y="405" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="350.55" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="342.9" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="345.89" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.6" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.59" y="399.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (10,101,010 samples, 0.03%)</title><rect x="349.0" y="421" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="351.99" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (60,606,060 samples, 0.18%)</title><rect x="898.0" y="389" width="2.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="900.96" y="399.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="20.8" y="469" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="23.75" y="479.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (40,404,040 samples, 0.12%)</title><rect x="1171.4" y="469" width="1.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1174.37" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (10,101,010 samples, 0.03%)</title><rect x="582.6" y="389" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="585.62" y="399.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1187.1" y="245" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.13" y="255.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1187.1" y="213" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.13" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (131,313,130 samples, 0.39%)</title><rect x="1157.4" y="469" width="4.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1160.39" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.27%)</title><rect x="350.4" y="357" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="353.42" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="65.9" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.90" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.6" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.59" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="342.2" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="345.18" y="319.5" ></text>
</g>
<g >
<title>vsnprintf (131,313,130 samples, 0.39%)</title><rect x="1139.8" y="389" width="4.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1142.83" y="399.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (10,101,010 samples, 0.03%)</title><rect x="580.1" y="421" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="583.11" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.64" y="223.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_RTT (50,505,050 samples, 0.15%)</title><rect x="594.8" y="437" width="1.8" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="597.80" y="447.5" ></text>
</g>
<g >
<title>vsnprintf (262,626,260 samples, 0.79%)</title><rect x="55.9" y="421" width="9.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="58.87" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1169.2" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.22" y="367.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (50,505,050 samples, 0.15%)</title><rect x="357.2" y="421" width="1.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="360.23" y="431.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1148.8" y="421" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1151.79" y="431.5" ></text>
</g>
<g >
<title>memcpy@plt (10,101,010 samples, 0.03%)</title><rect x="591.9" y="421" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="594.94" y="431.5" ></text>
</g>
<g >
<title>_IO_file_open (50,505,050 samples, 0.15%)</title><rect x="38.3" y="405" width="1.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="41.31" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1180.0" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.97" y="223.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::get_records (10,101,010 samples, 0.03%)</title><rect x="35.4" y="469" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="38.44" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="898.3" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="901.31" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="65.5" y="261" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.54" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="38.3" y="357" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.31" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="593.4" y="309" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="596.37" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1179.2" y="325" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.25" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="342.9" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="345.89" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1134.5" y="421" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1137.46" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1166.3" y="421" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1169.35" y="431.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::memory*,  (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="469" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1192.28" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="596.6" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="599.60" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1180.7" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.68" y="239.5" ></text>
</g>
<g >
<title>__libc_start_main (33,242,423,910 samples, 99.94%)</title><rect x="10.7" y="565" width="1179.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.72" y="575.5" >__libc_start_main</text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (10,101,010 samples, 0.03%)</title><rect x="1186.1" y="341" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1189.06" y="351.5" ></text>
</g>
<g >
<title>sim::Link::Link (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="437" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1192.64" y="447.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (20,202,020 samples, 0.06%)</title><rect x="354.7" y="421" width="0.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="357.72" y="431.5" ></text>
</g>
<g >
<title>__uselocale@plt (10,101,010 samples, 0.03%)</title><rect x="907.3" y="405" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="910.27" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (20,202,020 samples, 0.06%)</title><rect x="10.7" y="469" width="0.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.72" y="479.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::export_to_files (242,424,240 samples, 0.73%)</title><rect x="68.1" y="501" width="8.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="71.05" y="511.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (60,606,060 samples, 0.18%)</title><rect x="904.8" y="405" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="907.76" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.1" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.05" y="255.5" ></text>
</g>
<g >
<title>sim::LinkQueue::empty (30,303,030 samples, 0.09%)</title><rect x="900.5" y="453" width="1.0" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="903.46" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="36.5" y="421" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="39.52" y="431.5" ></text>
</g>
<g >
<title>std::ostream::put (10,101,010 samples, 0.03%)</title><rect x="66.3" y="469" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="69.26" y="479.5" ></text>
</g>
<g >
<title>_IO_file_open (10,101,010 samples, 0.03%)</title><rect x="68.4" y="405" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="71.41" y="415.5" ></text>
</g>
<g >
<title>sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::start (31,262,625,950 samples, 93.99%)</title><rect x="77.0" y="517" width="1109.1" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="80.01" y="527.5" >sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::start</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="65.9" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.90" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="596.6" y="373" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="599.60" y="383.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="309" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1191.92" y="319.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (30,303,030 samples, 0.09%)</title><rect x="578.7" y="453" width="1.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="581.68" y="463.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (20,202,020 samples, 0.06%)</title><rect x="1149.1" y="453" width="0.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1152.15" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="75.9" y="341" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="78.93" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="11.1" y="389" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.08" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="76.3" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.29" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.30%)</title><rect x="15.0" y="405" width="3.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.02" y="415.5" ></text>
</g>
<g >
<title>operator delete (10,101,010 samples, 0.03%)</title><rect x="1168.1" y="469" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1171.14" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_pbump (10,101,010 samples, 0.03%)</title><rect x="581.9" y="405" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="584.90" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 0.67%)</title><rect x="10.7" y="533" width="7.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.72" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="596.6" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="599.60" y="255.5" ></text>
</g>
<g >
<title>brk (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="325" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1192.64" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.1" y="133" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.05" y="143.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (10,101,010 samples, 0.03%)</title><rect x="592.3" y="421" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="595.30" y="431.5" ></text>
</g>
<g >
<title>auto sim::YamlParser::process_links (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="469" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1192.64" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1180.7" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.68" y="191.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="41.9" y="453" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="44.89" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="76.3" y="405" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.29" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.6" y="421" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.60" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="485" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>vsnprintf (80,808,080 samples, 0.24%)</title><rect x="583.7" y="389" width="2.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="586.70" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (343,434,340 samples, 1.03%)</title><rect x="325.7" y="469" width="12.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="328.69" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.1" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.05" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="76.3" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.29" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="76.3" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.29" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="352.9" y="325" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="355.93" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1179.2" y="309" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.25" y="319.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="1146.3" y="421" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1149.28" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="76.3" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.29" y="223.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::SimplePacketQueue (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="405" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1192.64" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.27%)</title><rect x="889.4" y="389" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="892.36" y="399.5" ></text>
</g>
<g >
<title>cfree (30,303,030 samples, 0.09%)</title><rect x="1167.1" y="469" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1170.07" y="479.5" ></text>
</g>
<g >
<title>fopen (10,101,010 samples, 0.03%)</title><rect x="68.4" y="437" width="0.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="71.41" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="38.0" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.95" y="367.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (10,101,010 samples, 0.03%)</title><rect x="758.6" y="453" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="761.56" y="463.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (20,202,020 samples, 0.06%)</title><rect x="591.2" y="437" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="594.22" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.03%)</title><rect x="902.6" y="405" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="905.61" y="415.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="340.0" y="453" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="343.03" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1180.7" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.68" y="271.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::send_packets (111,111,110 samples, 0.33%)</title><rect x="587.3" y="453" width="3.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="590.28" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="593.4" y="325" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="596.37" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="893.7" y="405" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="896.66" y="415.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.03%)</title><rect x="52.3" y="437" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="55.28" y="447.5" ></text>
</g>
<g >
<title>sim::bfs[abi:cxx11] (646,464,640 samples, 1.94%)</title><rect x="1162.0" y="485" width="23.0" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1165.05" y="495.5" >s..</text>
</g>
<g >
<title>operator delete (40,404,040 samples, 0.12%)</title><rect x="387.3" y="469" width="1.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="390.33" y="479.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,101,010 samples, 0.03%)</title><rect x="340.4" y="453" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="343.39" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="346.8" y="421" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="349.84" y="431.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (10,101,010 samples, 0.03%)</title><rect x="900.1" y="453" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="903.11" y="463.5" ></text>
</g>
<g >
<title>vsnprintf (30,303,030 samples, 0.09%)</title><rect x="593.0" y="357" width="1.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="596.01" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="38.3" y="373" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.31" y="383.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10,101,010 samples, 0.03%)</title><rect x="909.1" y="437" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="912.06" y="447.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::update (191,919,190 samples, 0.58%)</title><rect x="591.2" y="453" width="6.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="594.22" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="596.6" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="599.60" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.03%)</title><rect x="1185.3" y="485" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1188.34" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1169.2" y="405" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.22" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="68.1" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.05" y="287.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="69.1" y="453" width="0.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="72.13" y="463.5" ></text>
</g>
</g>
</svg>
