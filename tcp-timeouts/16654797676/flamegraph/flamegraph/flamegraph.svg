<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="614.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="597" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="597" > </text>
<g id="frames">
<g >
<title>sim::BaseHasher::get_hash (70,707,070 samples, 0.21%)</title><rect x="1145.9" y="389" width="2.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1148.91" y="399.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (70,707,070 samples, 0.21%)</title><rect x="906.3" y="389" width="2.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="909.29" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="351.5" y="101" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="354.53" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="340.0" y="325" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="342.97" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="908.1" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="911.10" y="191.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (50,505,050 samples, 0.15%)</title><rect x="913.5" y="357" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="916.52" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (30,303,030 samples, 0.09%)</title><rect x="599.1" y="309" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="602.10" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (40,404,040 samples, 0.12%)</title><rect x="1178.8" y="405" width="1.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1181.80" y="415.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (10,101,010 samples, 0.03%)</title><rect x="66.0" y="437" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="69.02" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1160.4" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1163.36" y="383.5" ></text>
</g>
<g >
<title>nons (32,979,797,650 samples, 100.00%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >nons</text>
</g>
<g >
<title>vsnprintf (50,505,050 samples, 0.15%)</title><rect x="913.5" y="341" width="1.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="916.52" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="351.5" y="133" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="354.53" y="143.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (80,808,080 samples, 0.25%)</title><rect x="913.2" y="389" width="2.9" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="916.16" y="399.5" ></text>
</g>
<g >
<title>sim::Scheduler::get_current_time (20,202,020 samples, 0.06%)</title><rect x="346.1" y="421" width="0.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="349.11" y="431.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="453" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1192.64" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="485" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.7" y="181" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.74" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="35.7" y="261" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.66" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="1166.5" y="389" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1169.51" y="399.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.28%)</title><rect x="1186.0" y="373" width="3.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.02" y="383.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (141,414,140 samples, 0.43%)</title><rect x="1143.4" y="405" width="5.0" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1146.38" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::export_metrics_to_files (1,616,161,600 samples, 4.90%)</title><rect x="17.6" y="469" width="57.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="20.59" y="479.5" >sim::M..</text>
</g>
<g >
<title>[libc.so.6] (111,111,110 samples, 0.34%)</title><rect x="899.4" y="341" width="4.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="902.43" y="351.5" ></text>
</g>
<g >
<title>sim::Link::arrive (525,252,520 samples, 1.59%)</title><rect x="327.3" y="421" width="18.8" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="330.32" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="197" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1190.83" y="207.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (20,202,020 samples, 0.06%)</title><rect x="903.4" y="389" width="0.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="906.40" y="399.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1186.7" y="245" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.75" y="255.5" ></text>
</g>
<g >
<title>cfree (40,404,040 samples, 0.12%)</title><rect x="79.8" y="453" width="1.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="82.75" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (202,020,200 samples, 0.61%)</title><rect x="55.9" y="357" width="7.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="58.90" y="367.5" ></text>
</g>
<g >
<title>std::locale::locale (10,101,010 samples, 0.03%)</title><rect x="345.7" y="405" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="348.75" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="70.4" y="357" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="73.36" y="367.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="600.9" y="357" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="603.90" y="367.5" ></text>
</g>
<g >
<title>YAML::Stream::StreamInUtf8 (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="197" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1189.39" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.06%)</title><rect x="337.1" y="357" width="0.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="340.08" y="367.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="593.7" y="357" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="596.68" y="367.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (40,404,040 samples, 0.12%)</title><rect x="36.7" y="421" width="1.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="39.74" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1179.2" y="357" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1182.16" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.03%)</title><rect x="1158.6" y="421" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1161.56" y="431.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.06%)</title><rect x="1188.6" y="213" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.55" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="913.5" y="325" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="916.52" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="54.5" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="57.45" y="415.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (282,828,280 samples, 0.86%)</title><rect x="856.1" y="373" width="10.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="859.06" y="383.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="912.4" y="389" width="0.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="915.44" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1160.4" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.36" y="319.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="1129.6" y="405" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1132.64" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="32.4" y="373" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="35.41" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="18.0" y="405" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.95" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1160.4" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.36" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="333.5" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="336.46" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="67.5" y="197" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.46" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1128.9" y="421" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1131.92" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1166.9" y="293" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1169.87" y="303.5" ></text>
</g>
<g >
<title>sim::Event::Event (404,040,400 samples, 1.23%)</title><rect x="1111.6" y="405" width="14.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1114.57" y="415.5" ></text>
</g>
<g >
<title>_IO_file_open (40,404,040 samples, 0.12%)</title><rect x="36.7" y="357" width="1.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="39.74" y="367.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.03%)</title><rect x="63.1" y="389" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="66.13" y="399.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="31.0" y="405" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="33.96" y="415.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::write_float&lt;char, fmt::v11::basic_appender&lt;char&gt;, long double&gt; (10,101,010 samples, 0.03%)</title><rect x="612.1" y="357" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="615.11" y="367.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (20,202,020 samples, 0.06%)</title><rect x="1187.1" y="245" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1190.11" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>utils::Statistics::add_record (10,101,010 samples, 0.03%)</title><rect x="612.1" y="389" width="0.4" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="615.11" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="66.7" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.74" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="1161.4" y="341" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.45" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (60,606,060 samples, 0.18%)</title><rect x="609.2" y="373" width="2.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="612.22" y="383.5" ></text>
</g>
<g >
<title>sim::Event::Event (191,919,190 samples, 0.58%)</title><rect x="380.4" y="421" width="6.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="383.44" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_erase (50,505,050 samples, 0.15%)</title><rect x="1172.3" y="421" width="1.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1175.29" y="431.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (70,707,070 samples, 0.21%)</title><rect x="906.3" y="405" width="2.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="909.29" y="415.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (80,808,080 samples, 0.25%)</title><rect x="72.5" y="405" width="2.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="75.52" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.36" y="271.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (10,101,010 samples, 0.03%)</title><rect x="338.9" y="373" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="341.88" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="68.2" y="101" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.19" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.03%)</title><rect x="595.8" y="357" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="598.84" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="17.6" y="437" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="20.59" y="447.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (60,606,060 samples, 0.18%)</title><rect x="594.0" y="389" width="2.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="597.04" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="607.0" y="277" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="610.05" y="287.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (3,676,767,640 samples, 11.15%)</title><rect x="774.7" y="405" width="131.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="777.74" y="415.5" >sim::Link::get_p..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1166.9" y="229" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1169.87" y="239.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (363,636,360 samples, 1.10%)</title><rect x="725.6" y="389" width="13.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="728.59" y="399.5" ></text>
</g>
<g >
<title>sim::Host::~Host (181,818,180 samples, 0.55%)</title><rect x="11.1" y="405" width="6.5" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="14.08" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="351.5" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="354.53" y="303.5" ></text>
</g>
<g >
<title>vsnprintf (20,202,020 samples, 0.06%)</title><rect x="596.6" y="341" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="599.57" y="351.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (20,202,020 samples, 0.06%)</title><rect x="604.9" y="341" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="607.88" y="351.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (40,404,040 samples, 0.12%)</title><rect x="1148.8" y="405" width="1.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1151.80" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (32,959,595,630 samples, 99.94%)</title><rect x="10.7" y="501" width="1179.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.72" y="511.5" >[libc.so.6]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="35.7" y="341" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.66" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.4" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.40" y="303.5" ></text>
</g>
<g >
<title>operator new (60,606,060 samples, 0.18%)</title><rect x="609.2" y="357" width="2.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="612.22" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (70,707,070 samples, 0.21%)</title><rect x="72.5" y="389" width="2.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="75.52" y="399.5" ></text>
</g>
<g >
<title>Logger::warn (2,252,525,230 samples, 6.83%)</title><rect x="658.0" y="405" width="80.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="661.01" y="415.5" >Logger::w..</text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (80,808,080 samples, 0.25%)</title><rect x="1136.9" y="389" width="2.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1139.87" y="399.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="66.4" y="373" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="69.38" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="17.6" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="20.59" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (111,111,110 samples, 0.34%)</title><rect x="1158.9" y="421" width="4.0" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1161.92" y="431.5" ></text>
</g>
<g >
<title>vsnprintf (30,303,030 samples, 0.09%)</title><rect x="599.1" y="293" width="1.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="602.10" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1182.8" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1185.77" y="383.5" ></text>
</g>
<g >
<title>memcpy@plt (10,101,010 samples, 0.03%)</title><rect x="377.2" y="421" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="380.19" y="431.5" ></text>
</g>
<g >
<title>malloc@plt (20,202,020 samples, 0.06%)</title><rect x="884.2" y="389" width="0.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="887.25" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.7" y="229" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.74" y="239.5" ></text>
</g>
<g >
<title>Logger::get_instance (50,505,050 samples, 0.15%)</title><rect x="654.4" y="405" width="1.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="657.39" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="350.8" y="373" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="353.81" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="905.2" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="908.21" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="333.5" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="336.46" y="239.5" ></text>
</g>
<g >
<title>cfree (111,111,110 samples, 0.34%)</title><rect x="13.6" y="389" width="4.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="16.61" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="351.5" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="354.53" y="287.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="69.3" y="405" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="72.27" y="415.5" ></text>
</g>
<g >
<title>_start (32,959,595,630 samples, 99.94%)</title><rect x="10.7" y="533" width="1179.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.72" y="543.5" >_start</text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="604.5" y="373" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="607.52" y="383.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (20,202,020 samples, 0.06%)</title><rect x="1187.1" y="261" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1190.11" y="271.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="344.7" y="357" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="347.66" y="367.5" ></text>
</g>
<g >
<title>sim::Process::~Process (70,707,070 samples, 0.21%)</title><rect x="1126.0" y="437" width="2.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1129.03" y="447.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="905.2" y="341" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="908.21" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="50.5" y="309" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="53.48" y="319.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="53.7" y="389" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="56.73" y="399.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (10,101,010 samples, 0.03%)</title><rect x="1140.5" y="389" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1143.49" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="67.1" y="229" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.10" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (101,010,100 samples, 0.31%)</title><rect x="1176.6" y="421" width="3.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1179.63" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="351.5" y="309" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="354.53" y="319.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="1160.0" y="389" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1163.00" y="399.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (30,303,030 samples, 0.09%)</title><rect x="917.1" y="373" width="1.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="920.14" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="906.7" y="357" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="909.66" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="66.7" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.74" y="335.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (70,707,070 samples, 0.21%)</title><rect x="621.9" y="421" width="2.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="624.87" y="431.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (30,303,030 samples, 0.09%)</title><rect x="346.8" y="421" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="349.83" y="431.5" ></text>
</g>
<g >
<title>sim::Link::get_to (10,101,010 samples, 0.03%)</title><rect x="1158.2" y="405" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.20" y="415.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (20,202,020 samples, 0.06%)</title><rect x="593.3" y="405" width="0.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="596.31" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="66.7" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.74" y="319.5" ></text>
</g>
<g >
<title>sim::Switch::notify_about_arrival (10,101,010 samples, 0.03%)</title><rect x="345.4" y="405" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="348.39" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="34.9" y="357" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.94" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.7" y="165" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.74" y="175.5" ></text>
</g>
<g >
<title>sim::is_valid_link (10,101,010 samples, 0.03%)</title><rect x="1158.2" y="421" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1161.20" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (10,101,010 samples, 0.03%)</title><rect x="1134.7" y="389" width="0.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1137.70" y="399.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::update (303,030,300 samples, 0.92%)</title><rect x="601.6" y="405" width="10.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="604.63" y="415.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="608.5" y="325" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="611.49" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="36.4" y="133" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.38" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.4" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.40" y="383.5" ></text>
</g>
<g >
<title>operator new (292,929,290 samples, 0.89%)</title><rect x="763.5" y="405" width="10.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="766.54" y="415.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleDocument (90,909,090 samples, 0.28%)</title><rect x="1186.0" y="405" width="3.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1189.02" y="415.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="608.5" y="357" width="0.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="611.49" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1177.7" y="261" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.71" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.7" y="133" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.74" y="143.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (10,101,010 samples, 0.03%)</title><rect x="611.7" y="357" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="614.75" y="367.5" ></text>
</g>
<g >
<title>fopen (50,505,050 samples, 0.15%)</title><rect x="67.1" y="389" width="1.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="70.10" y="399.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.03%)</title><rect x="911.7" y="389" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="914.72" y="399.5" ></text>
</g>
<g >
<title>vsnprintf (70,707,070 samples, 0.21%)</title><rect x="72.5" y="373" width="2.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="75.52" y="383.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (20,202,020 samples, 0.06%)</title><rect x="66.4" y="421" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="69.38" y="431.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (20,202,020 samples, 0.06%)</title><rect x="1188.6" y="229" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1191.55" y="239.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (1,060,606,050 samples, 3.22%)</title><rect x="918.2" y="405" width="38.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="921.22" y="415.5" >sim..</text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (70,707,070 samples, 0.21%)</title><rect x="598.4" y="357" width="2.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="601.37" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="66.7" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.74" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.7" y="245" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.74" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.8" y="53" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.83" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>sim::RoutingModule::update_routing_table (171,717,170 samples, 0.52%)</title><rect x="1156.8" y="437" width="6.1" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1159.75" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.03%)</title><rect x="1176.3" y="421" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1179.27" y="431.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (50,505,050 samples, 0.15%)</title><rect x="67.1" y="421" width="1.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="70.10" y="431.5" ></text>
</g>
<g >
<title>operator delete (10,101,010 samples, 0.03%)</title><rect x="1156.4" y="437" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1159.39" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="469" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.4" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.40" y="255.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (90,909,090 samples, 0.28%)</title><rect x="339.2" y="373" width="3.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="342.24" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="609.2" y="309" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="612.22" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="1141.2" y="293" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1144.21" y="303.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="916.4" y="357" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="919.41" y="367.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (50,505,050 samples, 0.15%)</title><rect x="1132.9" y="357" width="1.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1135.90" y="367.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (50,505,050 samples, 0.15%)</title><rect x="1140.8" y="389" width="1.9" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1143.85" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="328.4" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="331.40" y="415.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (80,808,080 samples, 0.25%)</title><rect x="1186.4" y="325" width="2.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.39" y="335.5" ></text>
</g>
<g >
<title>vsnprintf (70,707,070 samples, 0.21%)</title><rect x="340.0" y="341" width="2.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="342.97" y="351.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (80,808,080 samples, 0.25%)</title><rect x="616.1" y="421" width="2.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="619.08" y="431.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (40,404,040 samples, 0.12%)</title><rect x="36.7" y="405" width="1.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="39.74" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="916.1" y="373" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="919.05" y="383.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (80,808,080 samples, 0.25%)</title><rect x="913.2" y="373" width="2.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="916.16" y="383.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="595.5" y="373" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="598.48" y="383.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (10,101,010 samples, 0.03%)</title><rect x="66.7" y="373" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="69.74" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (10,101,010 samples, 0.03%)</title><rect x="1186.0" y="277" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1189.02" y="287.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (101,010,100 samples, 0.31%)</title><rect x="598.0" y="373" width="3.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="601.01" y="383.5" ></text>
</g>
<g >
<title>sim::Process::~Process (131,313,130 samples, 0.40%)</title><rect x="240.6" y="453" width="4.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="243.58" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="37.5" y="117" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.47" y="127.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="608.1" y="229" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="611.13" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1168.0" y="373" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1170.95" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="351.5" y="357" width="0.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="354.53" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="72.5" y="325" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="75.52" y="335.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (10,101,010 samples, 0.03%)</title><rect x="1186.7" y="261" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1189.75" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="914.6" y="277" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="917.61" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="596.6" y="325" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="599.57" y="335.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (20,202,020 samples, 0.06%)</title><rect x="593.3" y="389" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="596.31" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.7" y="293" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.74" y="303.5" ></text>
</g>
<g >
<title>sim::Host::~Host (10,101,010 samples, 0.03%)</title><rect x="10.7" y="389" width="0.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="13.72" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.4" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.40" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1177.7" y="341" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.71" y="351.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="333.5" y="341" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="336.46" y="351.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::export_to_files (252,525,250 samples, 0.77%)</title><rect x="66.4" y="453" width="9.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="69.38" y="463.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::send_packets (111,111,110 samples, 0.34%)</title><rect x="597.7" y="405" width="3.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="600.65" y="415.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1130.0" y="405" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1133.01" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (10,101,010 samples, 0.03%)</title><rect x="337.4" y="341" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="340.44" y="351.5" ></text>
</g>
<g >
<title>Logger::warn (30,303,030 samples, 0.09%)</title><rect x="376.1" y="421" width="1.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="379.11" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="67.5" y="181" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.46" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="908.1" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="911.10" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1166.9" y="309" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1169.87" y="319.5" ></text>
</g>
<g >
<title>operator delete (30,303,030 samples, 0.09%)</title><rect x="81.2" y="453" width="1.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="84.20" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="333.5" y="309" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="336.46" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="351.9" y="293" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="354.89" y="303.5" ></text>
</g>
<g >
<title>sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::BasicCC&gt;, sim::Link&gt;::add_link (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="405" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1192.64" y="415.5" ></text>
</g>
<g >
<title>sim::Switch::process (11,373,737,260 samples, 34.49%)</title><rect x="625.8" y="421" width="407.0" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="628.84" y="431.5" >sim::Switch::process</text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.7" y="197" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.74" y="207.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (30,303,030 samples, 0.09%)</title><rect x="596.2" y="373" width="1.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="599.21" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (20,202,020 samples, 0.06%)</title><rect x="600.2" y="325" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="603.18" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.06%)</title><rect x="606.3" y="325" width="0.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="609.32" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.5" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.48" y="303.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (40,404,040 samples, 0.12%)</title><rect x="916.8" y="405" width="1.4" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="919.77" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (60,606,060 samples, 0.18%)</title><rect x="906.7" y="373" width="2.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="909.66" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="53.4" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.37" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (191,919,190 samples, 0.58%)</title><rect x="10.7" y="437" width="6.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.72" y="447.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (20,202,020 samples, 0.06%)</title><rect x="66.4" y="405" width="0.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="69.38" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="905.2" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="908.21" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (10,101,010 samples, 0.03%)</title><rect x="1180.2" y="421" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1183.24" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="342.1" y="277" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="345.13" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="71.1" y="341" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="74.08" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (20,202,020 samples, 0.06%)</title><rect x="1175.5" y="421" width="0.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1178.54" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="313.2" y="437" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="316.22" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="905.2" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="908.21" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="69.6" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="72.63" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.5" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.48" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="67.1" y="325" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.10" y="335.5" ></text>
</g>
<g >
<title>sim::Link::get_from (10,101,010 samples, 0.03%)</title><rect x="1157.8" y="421" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1160.83" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="51.6" y="293" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="54.56" y="303.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="1183.9" y="421" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1186.86" y="431.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="389" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1192.28" y="399.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="34.6" y="405" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="37.58" y="415.5" ></text>
</g>
<g >
<title>YAML::Stream::eat (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="245" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1189.39" y="255.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="1139.8" y="389" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1142.76" y="399.5" ></text>
</g>
<g >
<title>write (30,303,030 samples, 0.09%)</title><rect x="35.7" y="357" width="1.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="38.66" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (282,828,280 samples, 0.86%)</title><rect x="42.5" y="341" width="10.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="45.53" y="351.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (20,202,020 samples, 0.06%)</title><rect x="1188.6" y="245" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1191.55" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="66.7" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.74" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="71.1" y="325" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="74.08" y="335.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="197" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.92" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="598.4" y="325" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="601.37" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="351.5" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="354.53" y="271.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (60,606,060 samples, 0.18%)</title><rect x="70.0" y="405" width="2.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="72.99" y="415.5" ></text>
</g>
<g >
<title>malloc (80,808,080 samples, 0.25%)</title><rect x="1106.5" y="405" width="2.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1109.51" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1146.3" y="357" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1149.27" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.7" y="149" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.74" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1167.2" y="213" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.23" y="223.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (30,303,030 samples, 0.09%)</title><rect x="35.7" y="389" width="1.0" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="38.66" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.8" y="37" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.83" y="47.5" ></text>
</g>
<g >
<title>cfree (383,838,380 samples, 1.16%)</title><rect x="313.6" y="437" width="13.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="316.58" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1142.3" y="277" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1145.29" y="287.5" ></text>
</g>
<g >
<title>__libc_start_main (32,959,595,630 samples, 99.94%)</title><rect x="10.7" y="517" width="1179.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.72" y="527.5" >__libc_start_main</text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (70,707,070 samples, 0.21%)</title><rect x="69.6" y="421" width="2.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="72.63" y="431.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (202,020,200 samples, 0.61%)</title><rect x="55.9" y="389" width="7.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="58.90" y="399.5" ></text>
</g>
<g >
<title>sim::Host::notify_about_arrival (20,202,020 samples, 0.06%)</title><rect x="329.1" y="405" width="0.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="332.12" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="37.5" y="101" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.47" y="111.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="34.6" y="389" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="37.58" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="53.4" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.37" y="351.5" ></text>
</g>
<g >
<title>vsnprintf (343,434,340 samples, 1.04%)</title><rect x="40.4" y="373" width="12.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="43.36" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="453" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1182.8" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.77" y="319.5" ></text>
</g>
<g >
<title>malloc (434,343,430 samples, 1.32%)</title><rect x="887.9" y="373" width="15.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="890.86" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1167.6" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.59" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="905.2" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="908.21" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="351.5" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="354.53" y="175.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (101,010,100 samples, 0.31%)</title><rect x="594.0" y="405" width="3.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="597.04" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="67.1" y="245" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.10" y="255.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (10,101,010 samples, 0.03%)</title><rect x="338.5" y="389" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="341.52" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="599.8" y="213" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="602.82" y="223.5" ></text>
</g>
<g >
<title>cfree (30,303,030 samples, 0.09%)</title><rect x="1173.0" y="405" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1176.01" y="415.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::Push (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="261" width="0.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1190.83" y="271.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (40,404,040 samples, 0.12%)</title><rect x="607.0" y="325" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="610.05" y="335.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.12%)</title><rect x="1177.4" y="389" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1180.35" y="399.5" ></text>
</g>
<g >
<title>operator new (60,606,060 samples, 0.18%)</title><rect x="1160.7" y="389" width="2.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1163.73" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1177.7" y="357" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.71" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (20,202,020 samples, 0.06%)</title><rect x="596.6" y="357" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="599.57" y="367.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (40,404,040 samples, 0.12%)</title><rect x="907.4" y="357" width="1.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="910.38" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="609.2" y="325" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="612.22" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1165.4" y="421" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1168.42" y="431.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (20,202,020 samples, 0.06%)</title><rect x="68.9" y="421" width="0.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="71.91" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="596.9" y="277" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="599.93" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="35.7" y="181" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.66" y="191.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="351.5" y="325" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="354.53" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="351.5" y="85" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="354.53" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="67.5" y="213" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.46" y="223.5" ></text>
</g>
<g >
<title>__close_nocancel (20,202,020 samples, 0.06%)</title><rect x="34.9" y="373" width="0.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="37.94" y="383.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (5,676,767,620 samples, 17.21%)</title><rect x="387.3" y="421" width="203.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="390.31" y="431.5" >sim::Event::operator&gt;</text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (10,101,010 samples, 0.03%)</title><rect x="1148.4" y="405" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1151.44" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (10,101,010 samples, 0.03%)</title><rect x="1150.2" y="421" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1153.25" y="431.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_outlinks (70,707,070 samples, 0.21%)</title><rect x="1168.7" y="421" width="2.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1171.68" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="351.5" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="354.53" y="239.5" ></text>
</g>
<g >
<title>malloc (60,606,060 samples, 0.18%)</title><rect x="1160.7" y="373" width="2.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1163.73" y="383.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (30,303,030 samples, 0.09%)</title><rect x="336.7" y="373" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="339.71" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="351.5" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="354.53" y="191.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (10,101,010 samples, 0.03%)</title><rect x="1136.5" y="373" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1139.51" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1160.4" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.36" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (10,101,010 samples, 0.03%)</title><rect x="1138.7" y="341" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1141.68" y="351.5" ></text>
</g>
<g >
<title>memcmp@plt (10,101,010 samples, 0.03%)</title><rect x="1156.0" y="437" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1159.03" y="447.5" ></text>
</g>
<g >
<title>vsnprintf (50,505,050 samples, 0.15%)</title><rect x="70.4" y="373" width="1.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="73.36" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="67.1" y="261" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.10" y="271.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (60,606,060 samples, 0.18%)</title><rect x="1187.1" y="309" width="2.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1190.11" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="437" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1160.4" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.36" y="335.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="611.4" y="373" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="614.38" y="383.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (90,909,090 samples, 0.28%)</title><rect x="72.2" y="421" width="3.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="75.16" y="431.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::send_packet_now (111,111,110 samples, 0.34%)</title><rect x="597.7" y="389" width="3.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="600.65" y="399.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (151,515,150 samples, 0.46%)</title><rect x="911.4" y="405" width="5.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="914.35" y="415.5" ></text>
</g>
<g >
<title>sim::bfs[abi:cxx11] (565,656,560 samples, 1.72%)</title><rect x="1162.9" y="437" width="20.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1165.89" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="1131.1" y="357" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1134.09" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.4" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.40" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (50,505,050 samples, 0.15%)</title><rect x="34.9" y="421" width="1.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="37.94" y="431.5" ></text>
</g>
<g >
<title>_IO_file_fopen (40,404,040 samples, 0.12%)</title><rect x="36.7" y="373" width="1.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="39.74" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="10.7" y="421" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.72" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="37.8" y="69" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.83" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.36" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="341.1" y="293" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="344.05" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="333.5" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="336.46" y="255.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (303,030,300 samples, 0.92%)</title><rect x="334.5" y="405" width="10.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="337.55" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="596.6" y="309" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="599.57" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="421" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>fopen (40,404,040 samples, 0.12%)</title><rect x="36.7" y="389" width="1.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="39.74" y="399.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (30,303,030 samples, 0.09%)</title><rect x="606.0" y="341" width="1.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="608.96" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="53.4" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.37" y="319.5" ></text>
</g>
<g >
<title>sim::Link::get_max_to_ingress_queue_size (101,010,100 samples, 0.31%)</title><rect x="612.5" y="421" width="3.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="615.47" y="431.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1186.0" y="261" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.02" y="271.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Host::process (10,101,010 samples, 0.03%)</title><rect x="1152.8" y="437" width="0.3" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1155.77" y="447.5" ></text>
</g>
<g >
<title>cfree (212,121,210 samples, 0.64%)</title><rect x="875.9" y="389" width="7.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="878.94" y="399.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="905.2" y="325" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="908.21" y="335.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (40,404,040 samples, 0.12%)</title><rect x="343.9" y="373" width="1.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="346.94" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (191,919,190 samples, 0.58%)</title><rect x="10.7" y="485" width="6.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.72" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="333.5" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="336.46" y="303.5" ></text>
</g>
<g >
<title>fclose (20,202,020 samples, 0.06%)</title><rect x="34.9" y="389" width="0.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="37.94" y="399.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::data[abi:cxx11] (20,202,020 samples, 0.06%)</title><rect x="20.1" y="437" width="0.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="23.12" y="447.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="1179.2" y="373" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1182.16" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1182.8" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.77" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="333.5" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="336.46" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="37.5" y="85" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.47" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="66.7" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.74" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1162.5" y="325" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1165.53" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (60,606,060 samples, 0.18%)</title><rect x="1160.7" y="405" width="2.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1163.73" y="415.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="181" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.92" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="31.0" y="389" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="33.96" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1182.8" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.77" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="596.6" y="293" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="599.57" y="303.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="1133.6" y="309" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1136.62" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="67.5" y="149" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.46" y="159.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (272,727,270 samples, 0.83%)</title><rect x="54.1" y="421" width="9.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="57.09" y="431.5" ></text>
</g>
<g >
<title>vsnprintf (40,404,040 samples, 0.12%)</title><rect x="607.0" y="309" width="1.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="610.05" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.25%)</title><rect x="14.7" y="373" width="2.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.70" y="383.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::send_packet_now (10,101,010 samples, 0.03%)</title><rect x="1152.4" y="421" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1155.41" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>_IO_file_fopen (50,505,050 samples, 0.15%)</title><rect x="67.1" y="373" width="1.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="70.10" y="383.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (40,404,040 samples, 0.12%)</title><rect x="607.0" y="357" width="1.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="610.05" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="593.0" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="595.95" y="415.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.03%)</title><rect x="52.6" y="389" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="55.65" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="53.4" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.37" y="239.5" ></text>
</g>
<g >
<title>__uselocale (20,202,020 samples, 0.06%)</title><rect x="915.3" y="357" width="0.8" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="918.33" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1182.8" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.77" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1177.7" y="277" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.71" y="287.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="883.5" y="389" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="886.53" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="53.4" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.37" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="1166.5" y="357" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1169.51" y="367.5" ></text>
</g>
<g >
<title>malloc@plt (10,101,010 samples, 0.03%)</title><rect x="30.6" y="421" width="0.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="33.60" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="912.1" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="915.08" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1173.0" y="389" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1176.01" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="66.7" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.74" y="287.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (20,202,020 samples, 0.06%)</title><rect x="1139.0" y="373" width="0.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1142.04" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="905.2" y="133" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="908.21" y="143.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (181,818,180 samples, 0.55%)</title><rect x="11.1" y="421" width="6.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="14.08" y="431.5" ></text>
</g>
<g >
<title>malloc (60,606,060 samples, 0.18%)</title><rect x="1166.5" y="405" width="2.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1169.51" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="35.7" y="229" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.66" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="344.3" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="347.30" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="337.1" y="341" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="340.08" y="351.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.09%)</title><rect x="31.0" y="421" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="33.96" y="431.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (20,202,020 samples, 0.06%)</title><rect x="916.1" y="389" width="0.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="919.05" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="36.4" y="101" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.38" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="67.5" y="133" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.46" y="143.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (80,808,080 samples, 0.25%)</title><rect x="75.4" y="469" width="2.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.42" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="599.1" y="277" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="602.10" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1160.4" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.36" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.5" y="405" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.48" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.5" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.48" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1146.6" y="341" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1149.63" y="351.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="608.9" y="373" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="611.85" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.06%)</title><rect x="1138.3" y="357" width="0.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1141.32" y="367.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (111,111,110 samples, 0.34%)</title><rect x="1186.0" y="469" width="4.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1189.02" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="32.4" y="405" width="0.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="35.41" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="18.0" y="421" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.95" y="431.5" ></text>
</g>
<g >
<title>all (32,979,797,650 samples, 100%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="1143.0" y="373" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1146.02" y="383.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (20,202,020 samples, 0.06%)</title><rect x="333.8" y="389" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="336.82" y="399.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (20,202,020 samples, 0.06%)</title><rect x="1142.7" y="389" width="0.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1145.66" y="399.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="1160.0" y="405" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1163.00" y="415.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="1146.6" y="357" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1149.63" y="367.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::memory_holder*,  (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="437" width="0.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1192.28" y="447.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (20,202,020 samples, 0.06%)</title><rect x="903.4" y="373" width="0.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="906.40" y="383.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (60,606,060 samples, 0.18%)</title><rect x="335.6" y="389" width="2.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="338.63" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.7" y="261" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.74" y="271.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (191,919,190 samples, 0.58%)</title><rect x="1136.5" y="405" width="6.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1139.51" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1182.8" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.77" y="335.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (40,404,040 samples, 0.12%)</title><rect x="907.4" y="341" width="1.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="910.38" y="351.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (545,454,540 samples, 1.65%)</title><rect x="327.3" y="437" width="19.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="330.32" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1177.7" y="293" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.71" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="908.1" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="911.10" y="223.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (30,303,030 samples, 0.09%)</title><rect x="1188.2" y="277" width="1.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1191.19" y="287.5" ></text>
</g>
<g >
<title>std::ostream::put (50,505,050 samples, 0.15%)</title><rect x="63.8" y="421" width="1.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="66.85" y="431.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="916.4" y="373" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="919.41" y="383.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.12%)</title><rect x="1177.4" y="405" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1180.35" y="415.5" ></text>
</g>
<g >
<title>sim::LinkQueue::empty (50,505,050 samples, 0.15%)</title><rect x="909.5" y="405" width="1.9" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="912.55" y="415.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (101,010,100 samples, 0.31%)</title><rect x="338.9" y="389" width="3.6" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="341.88" y="399.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (10,101,010 samples, 0.03%)</title><rect x="1186.0" y="293" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1189.02" y="303.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (10,101,010 samples, 0.03%)</title><rect x="10.7" y="405" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.72" y="415.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (40,404,040 samples, 0.12%)</title><rect x="350.8" y="405" width="1.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="353.81" y="415.5" ></text>
</g>
<g >
<title>vsnprintf (10,101,010 samples, 0.03%)</title><rect x="63.5" y="389" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="66.49" y="399.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (40,404,040 samples, 0.12%)</title><rect x="598.7" y="341" width="1.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="601.74" y="351.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1130.0" y="389" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1133.01" y="399.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (20,202,020 samples, 0.06%)</title><rect x="1186.4" y="309" width="0.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1189.39" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="333.5" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="336.46" y="223.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="19.0" y="421" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="22.04" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="53.4" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.37" y="287.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (80,808,080 samples, 0.25%)</title><rect x="342.5" y="389" width="2.9" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="345.50" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="913.9" y="309" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="916.88" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="599.1" y="245" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="602.10" y="255.5" ></text>
</g>
<g >
<title>YAML::LoadFile (90,909,090 samples, 0.28%)</title><rect x="1186.0" y="453" width="3.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1189.02" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="905.2" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="908.21" y="287.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (434,343,430 samples, 1.32%)</title><rect x="38.6" y="405" width="15.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="41.55" y="415.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::get_size (20,202,020 samples, 0.06%)</title><rect x="625.1" y="421" width="0.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="628.12" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="517" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="67.1" y="277" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.10" y="287.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::Timeout::operator (60,606,060 samples, 0.18%)</title><rect x="1150.6" y="437" width="2.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1153.61" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="603.4" y="389" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="606.43" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="35.7" y="309" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.66" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="599.1" y="261" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="602.10" y="271.5" ></text>
</g>
<g >
<title>sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::recalculate_paths (868,686,860 samples, 2.63%)</title><rect x="1154.9" y="453" width="31.1" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="1157.94" y="463.5" >si..</text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.28%)</title><rect x="1186.0" y="389" width="3.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.02" y="399.5" ></text>
</g>
<g >
<title>open64 (40,404,040 samples, 0.12%)</title><rect x="36.7" y="341" width="1.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="39.74" y="351.5" ></text>
</g>
<g >
<title>malloc (80,808,080 samples, 0.25%)</title><rect x="758.8" y="405" width="2.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="761.84" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="599.1" y="229" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="602.10" y="239.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (50,505,050 samples, 0.15%)</title><rect x="67.1" y="405" width="1.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="70.10" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="333.5" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="336.46" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="17.2" y="341" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.23" y="351.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.09%)</title><rect x="1133.6" y="325" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1136.62" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (282,828,280 samples, 0.86%)</title><rect x="42.5" y="325" width="10.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="45.53" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="17.6" y="405" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="20.59" y="415.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.12%)</title><rect x="907.4" y="309" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="910.38" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="55.5" y="389" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="58.54" y="399.5" ></text>
</g>
<g >
<title>YAML::Node::~Node (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="453" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1192.28" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="67.1" y="293" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.10" y="303.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,101,010 samples, 0.03%)</title><rect x="597.7" y="373" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="600.65" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.7" y="309" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.74" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="35.7" y="293" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.66" y="303.5" ></text>
</g>
<g >
<title>cfree (30,303,030 samples, 0.09%)</title><rect x="18.0" y="437" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="20.95" y="447.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="912.1" y="389" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="915.08" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="34.9" y="325" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.94" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="905.2" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="908.21" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="19.8" y="389" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.76" y="399.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.12%)</title><rect x="907.4" y="325" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="910.38" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (131,313,130 samples, 0.40%)</title><rect x="898.7" y="357" width="4.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="901.70" y="367.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="905.2" y="309" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="908.21" y="319.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (444,444,440 samples, 1.35%)</title><rect x="38.2" y="421" width="15.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="41.19" y="431.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::close (20,202,020 samples, 0.06%)</title><rect x="34.9" y="405" width="0.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="37.94" y="415.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (30,303,030 samples, 0.09%)</title><rect x="35.7" y="405" width="1.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="38.66" y="415.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (30,303,030 samples, 0.09%)</title><rect x="1135.1" y="405" width="1.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1138.07" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;Time&lt;Nanosecond&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (40,404,040 samples, 0.12%)</title><rect x="33.5" y="421" width="1.4" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="36.49" y="431.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanNextToken (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="277" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1189.39" y="287.5" ></text>
</g>
<g >
<title>sim::Host::send_packet (585,858,580 samples, 1.78%)</title><rect x="1129.3" y="421" width="20.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1132.28" y="431.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (25,424,242,170 samples, 77.09%)</title><rect x="245.3" y="453" width="909.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="248.28" y="463.5" >sim::Scheduler::tick</text>
</g>
<g >
<title>[libc.so.6] (272,727,270 samples, 0.83%)</title><rect x="866.2" y="389" width="9.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="869.18" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.4" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.40" y="351.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (30,303,030 samples, 0.09%)</title><rect x="351.2" y="373" width="1.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="354.17" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="53.4" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.37" y="335.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::get_max_size (20,202,020 samples, 0.06%)</title><rect x="624.4" y="421" width="0.7" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="627.40" y="431.5" ></text>
</g>
<g >
<title>sim::Event::Event (10,101,010 samples, 0.03%)</title><rect x="350.4" y="389" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="353.45" y="399.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="608.5" y="341" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="611.49" y="351.5" ></text>
</g>
<g >
<title>cfree (30,303,030 samples, 0.09%)</title><rect x="1174.5" y="405" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1177.46" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="53.4" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.37" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="66.7" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.74" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1169.8" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1172.76" y="383.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (20,202,020 samples, 0.06%)</title><rect x="774.0" y="405" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="777.02" y="415.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (40,404,040 samples, 0.12%)</title><rect x="607.0" y="341" width="1.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="610.05" y="351.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,101,010 samples, 0.03%)</title><rect x="328.8" y="405" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="331.76" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="908.1" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="911.10" y="287.5" ></text>
</g>
<g >
<title>Logger::info (50,505,050 samples, 0.15%)</title><rect x="656.2" y="405" width="1.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="659.20" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (10,101,010 samples, 0.03%)</title><rect x="611.7" y="341" width="0.4" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="614.75" y="351.5" ></text>
</g>
<g >
<title>_IO_file_open (50,505,050 samples, 0.15%)</title><rect x="67.1" y="357" width="1.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="70.10" y="367.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="598.4" y="341" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="601.37" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (131,313,130 samples, 0.40%)</title><rect x="878.8" y="373" width="4.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="881.83" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1166.9" y="325" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1169.87" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="331.3" y="373" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="334.29" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (10,101,010 samples, 0.03%)</title><rect x="65.7" y="437" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="68.66" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (40,404,040 samples, 0.12%)</title><rect x="1183.1" y="437" width="1.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1186.13" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="351.5" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="354.53" y="255.5" ></text>
</g>
<g >
<title>Logger::warn (10,101,010 samples, 0.03%)</title><rect x="603.1" y="389" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="606.07" y="399.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (20,202,020 samples, 0.06%)</title><rect x="1135.4" y="389" width="0.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1138.43" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (20,202,020 samples, 0.06%)</title><rect x="32.0" y="421" width="0.8" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="35.05" y="431.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (40,404,040 samples, 0.12%)</title><rect x="332.4" y="373" width="1.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="335.38" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="35.7" y="277" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.66" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (10,101,010 samples, 0.03%)</title><rect x="606.7" y="309" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="609.69" y="319.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (40,404,040 samples, 0.12%)</title><rect x="350.8" y="389" width="1.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="353.81" y="399.5" ></text>
</g>
<g >
<title>operator new (80,808,080 samples, 0.25%)</title><rect x="1165.8" y="421" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1168.79" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.5" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.48" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.4" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.40" y="319.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="229" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1190.83" y="239.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (20,202,020 samples, 0.06%)</title><rect x="956.2" y="405" width="0.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="959.17" y="415.5" ></text>
</g>
<g >
<title>malloc (252,525,250 samples, 0.77%)</title><rect x="765.0" y="389" width="9.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="767.98" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="35.7" y="325" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.66" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="32.0" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="35.05" y="415.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet const&amp;&gt; (10,101,010 samples, 0.03%)</title><rect x="601.3" y="357" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="604.26" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="67.5" y="165" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.46" y="175.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::Arrive (30,303,030 samples, 0.09%)</title><rect x="349.7" y="405" width="1.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="352.72" y="415.5" ></text>
</g>
<g >
<title>YAML::Stream::get (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="229" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1189.39" y="239.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_RTT (80,808,080 samples, 0.25%)</title><rect x="609.2" y="389" width="2.9" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="612.22" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.5" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.48" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.7" y="213" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.74" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="351.5" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="354.53" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1192.28" y="383.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (20,202,020 samples, 0.06%)</title><rect x="1149.5" y="389" width="0.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1152.52" y="399.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="593.3" y="357" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="596.31" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="35.7" y="165" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.66" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (202,020,200 samples, 0.61%)</title><rect x="751.6" y="389" width="7.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="754.61" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (181,818,180 samples, 0.55%)</title><rect x="56.6" y="325" width="6.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="59.62" y="335.5" ></text>
</g>
<g >
<title>operator delete (50,505,050 samples, 0.15%)</title><rect x="761.7" y="405" width="1.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="764.73" y="415.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.06%)</title><rect x="66.4" y="389" width="0.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="69.38" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (50,505,050 samples, 0.15%)</title><rect x="1140.8" y="357" width="1.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1143.85" y="367.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (10,101,010 samples, 0.03%)</title><rect x="593.7" y="373" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="596.68" y="383.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="597.3" y="389" width="0.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="600.29" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.36" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="351.5" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="354.53" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="1177.4" y="373" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1180.35" y="383.5" ></text>
</g>
<g >
<title>vsnprintf (202,020,200 samples, 0.61%)</title><rect x="55.9" y="373" width="7.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="58.90" y="383.5" ></text>
</g>
<g >
<title>operator new (60,606,060 samples, 0.18%)</title><rect x="1109.4" y="405" width="2.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1112.41" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (60,606,060 samples, 0.18%)</title><rect x="70.0" y="389" width="2.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="72.99" y="399.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (30,303,030 samples, 0.09%)</title><rect x="1147.4" y="373" width="1.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1150.35" y="383.5" ></text>
</g>
<g >
<title>sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::start (30,959,595,650 samples, 93.87%)</title><rect x="78.3" y="469" width="1107.7" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="81.31" y="479.5" >sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::start</text>
</g>
<g >
<title>YAML::Load (90,909,090 samples, 0.28%)</title><rect x="1186.0" y="437" width="3.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1189.02" y="447.5" ></text>
</g>
<g >
<title>std::locale::locale (10,101,010 samples, 0.03%)</title><rect x="605.6" y="325" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="608.60" y="335.5" ></text>
</g>
<g >
<title>Logger::get_instance (30,303,030 samples, 0.09%)</title><rect x="375.0" y="421" width="1.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="378.02" y="431.5" ></text>
</g>
<g >
<title>cfree (262,626,260 samples, 0.80%)</title><rect x="749.4" y="405" width="9.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="752.44" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.7" y="325" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.74" y="335.5" ></text>
</g>
<g >
<title>writev (10,101,010 samples, 0.03%)</title><rect x="53.4" y="373" width="0.3" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="56.37" y="383.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (50,505,050 samples, 0.15%)</title><rect x="1140.8" y="373" width="1.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1143.85" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="533" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (40,404,040 samples, 0.12%)</title><rect x="1133.3" y="341" width="1.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1136.26" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="908.5" y="277" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="911.46" y="287.5" ></text>
</g>
<g >
<title>sim::Event::get_time (80,808,080 samples, 0.25%)</title><rect x="82.3" y="453" width="2.9" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="85.28" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1167.6" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.59" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="1140.8" y="309" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1143.85" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1182.8" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.77" y="367.5" ></text>
</g>
<g >
<title>std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;::size_type std::__detail::__erase_nodes_if&lt;std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;, std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;, sim::RoutingModule::correctify_outlinks (10,101,010 samples, 0.03%)</title><rect x="1170.8" y="405" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1173.85" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="36.0" y="149" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.02" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1166.9" y="277" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1169.87" y="287.5" ></text>
</g>
<g >
<title>sim::Link::get_to_ingress_queue_size (80,808,080 samples, 0.25%)</title><rect x="619.0" y="421" width="2.9" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="621.97" y="431.5" ></text>
</g>
<g >
<title>sim::SendData::operator (616,161,610 samples, 1.87%)</title><rect x="1128.6" y="437" width="22.0" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1131.56" y="447.5" >s..</text>
</g>
<g >
<title>memcpy@plt (10,101,010 samples, 0.03%)</title><rect x="74.7" y="325" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="77.69" y="335.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::export_to_file (252,525,250 samples, 0.77%)</title><rect x="66.4" y="437" width="9.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="69.38" y="447.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;, std::weak_ptr&lt;sim::IProcessingDevice&gt;&amp;&gt; (2,606,060,580 samples, 7.90%)</title><rect x="1032.8" y="421" width="93.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1035.79" y="431.5" >void sim::S..</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="335.3" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="338.27" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="341.1" y="309" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="344.05" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="72.5" y="341" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="75.52" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1133.6" y="293" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1136.62" y="303.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (30,303,030 samples, 0.09%)</title><rect x="599.1" y="325" width="1.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="602.10" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1174.5" y="389" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1177.46" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.4" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.40" y="271.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="65.3" y="405" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="68.30" y="415.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_links (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="437" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1192.64" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="598.0" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="601.01" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="60.6" y="309" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="63.60" y="319.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (30,303,030 samples, 0.09%)</title><rect x="1171.2" y="421" width="1.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1174.21" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (20,202,020 samples, 0.06%)</title><rect x="1170.1" y="405" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1173.12" y="415.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (30,303,030 samples, 0.09%)</title><rect x="1138.0" y="373" width="1.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1140.96" y="383.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="54.8" y="405" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="57.81" y="415.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="213" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1190.83" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (30,303,030 samples, 0.09%)</title><rect x="1184.6" y="437" width="1.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1187.58" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="35.7" y="197" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.66" y="207.5" ></text>
</g>
<g >
<title>Logger::get_instance (70,707,070 samples, 0.21%)</title><rect x="783.1" y="389" width="2.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="786.05" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="334.9" y="389" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="337.91" y="399.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.12%)</title><rect x="1110.1" y="389" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1113.13" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (191,919,190 samples, 0.58%)</title><rect x="56.3" y="341" width="6.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="59.26" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1137.6" y="373" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1140.60" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1178.4" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.43" y="239.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (20,202,020 samples, 0.06%)</title><rect x="1187.1" y="293" width="0.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1190.11" y="303.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (20,202,020 samples, 0.06%)</title><rect x="1186.4" y="293" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1189.39" y="303.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (30,303,030 samples, 0.09%)</title><rect x="1188.2" y="261" width="1.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1191.19" y="271.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1186.7" y="229" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.75" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1178.4" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.43" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1179.2" y="341" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1182.16" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (20,202,020 samples, 0.06%)</title><rect x="32.8" y="421" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="35.77" y="431.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1032.1" y="405" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1035.06" y="415.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="335.3" y="389" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="338.27" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="35.7" y="245" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.66" y="255.5" ></text>
</g>
<g >
<title>pthread_once@plt (10,101,010 samples, 0.03%)</title><rect x="75.1" y="389" width="0.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="78.05" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="351.5" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="354.53" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="389" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="1166.5" y="373" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1169.51" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="35.7" y="213" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.66" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="1160.7" y="357" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1163.73" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1157.5" y="421" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1160.47" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (343,434,340 samples, 1.04%)</title><rect x="40.4" y="357" width="12.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="43.36" y="367.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (4,181,818,140 samples, 12.68%)</title><rect x="85.2" y="453" width="149.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="88.17" y="463.5" >sim::Event::operator&gt;</text>
</g>
<g >
<title>YAML::Scanner::empty (10,101,010 samples, 0.03%)</title><rect x="1186.0" y="325" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1189.02" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="72.5" y="357" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="75.52" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="908.1" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="911.10" y="239.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::memory*,  (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="421" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1192.28" y="431.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (353,535,350 samples, 1.07%)</title><rect x="40.0" y="389" width="12.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="43.00" y="399.5" ></text>
</g>
<g >
<title>YAML::Stream::_ReadAheadTo (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="213" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1189.39" y="223.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1186.0" y="229" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.02" y="239.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.28%)</title><rect x="1186.0" y="341" width="3.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.02" y="351.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.28%)</title><rect x="1186.0" y="357" width="3.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.02" y="367.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (111,111,110 samples, 0.34%)</title><rect x="604.9" y="373" width="4.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="607.88" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.4" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.40" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="19.0" y="405" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.04" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="10.4" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.36" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="36.4" y="117" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.38" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1167.6" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.59" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.5" y="389" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.48" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="13.3" y="389" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.25" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (111,111,110 samples, 0.34%)</title><rect x="1130.7" y="373" width="4.0" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1133.73" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="66.7" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.74" y="239.5" ></text>
</g>
<g >
<title>Logger::info (10,101,010 samples, 0.03%)</title><rect x="1129.3" y="405" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1132.28" y="415.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="337.8" y="389" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="340.80" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (2,101,010,080 samples, 6.37%)</title><rect x="956.9" y="405" width="75.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="959.89" y="415.5" >std::_Rb..</text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="1169.4" y="389" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1172.40" y="399.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="1182.4" y="389" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1185.41" y="399.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1186.0" y="245" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.02" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="405" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (242,424,240 samples, 0.74%)</title><rect x="55.2" y="405" width="8.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="58.18" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="67.8" y="117" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.83" y="127.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1133.6" y="277" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1136.62" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="501" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanNextToken (10,101,010 samples, 0.03%)</title><rect x="1188.2" y="245" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1191.19" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.25%)</title><rect x="14.7" y="357" width="2.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.70" y="367.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (30,303,030 samples, 0.09%)</title><rect x="35.7" y="373" width="1.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="38.66" y="383.5" ></text>
</g>
<g >
<title>open64 (50,505,050 samples, 0.15%)</title><rect x="67.1" y="341" width="1.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="70.10" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (80,808,080 samples, 0.25%)</title><rect x="339.6" y="357" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="342.60" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="17.6" y="421" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="20.59" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="608.1" y="245" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="611.13" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_erase (40,404,040 samples, 0.12%)</title><rect x="1174.1" y="421" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1177.10" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (70,707,070 samples, 0.21%)</title><rect x="331.3" y="389" width="2.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="334.29" y="399.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="32.4" y="389" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="35.41" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="66.7" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.74" y="351.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (40,404,040 samples, 0.12%)</title><rect x="1187.8" y="293" width="1.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1190.83" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="68.2" y="85" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.19" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1177.7" y="325" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.71" y="335.5" ></text>
</g>
<g >
<title>strlen@plt (10,101,010 samples, 0.03%)</title><rect x="1032.4" y="405" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1035.43" y="415.5" ></text>
</g>
<g >
<title>vsnprintf (50,505,050 samples, 0.15%)</title><rect x="1140.8" y="341" width="1.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1143.85" y="351.5" ></text>
</g>
<g >
<title>auto sim::YamlParser::process_links (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="421" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1192.64" y="431.5" ></text>
</g>
<g >
<title>sim::write_to_csv (1,252,525,240 samples, 3.80%)</title><rect x="20.8" y="437" width="44.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="23.84" y="447.5" >sim:..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="34.9" y="309" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.94" y="319.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::operator (161,616,160 samples, 0.49%)</title><rect x="346.8" y="437" width="5.8" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="349.83" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="908.1" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="911.10" y="175.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1187.5" y="229" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.47" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="905.2" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="908.21" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="39.6" y="389" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="42.64" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="351.5" y="117" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="354.53" y="127.5" ></text>
</g>
<g >
<title>sim::RoutingModule::add_inlink (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="389" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1192.64" y="399.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (30,303,030 samples, 0.09%)</title><rect x="604.9" y="357" width="1.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="607.88" y="367.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (20,202,020 samples, 0.06%)</title><rect x="908.8" y="405" width="0.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="911.82" y="415.5" ></text>
</g>
<g >
<title>malloc (60,606,060 samples, 0.18%)</title><rect x="609.2" y="341" width="2.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="612.22" y="351.5" ></text>
</g>
<g >
<title>fmt::v11::detail::format_dragon (10,101,010 samples, 0.03%)</title><rect x="612.1" y="341" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="615.11" y="351.5" ></text>
</g>
<g >
<title>write (10,101,010 samples, 0.03%)</title><rect x="66.7" y="357" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="69.74" y="367.5" ></text>
</g>
<g >
<title>YAML::detail::memory::create_node (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="245" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1190.83" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="908.1" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="911.10" y="207.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="1169.4" y="405" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1172.40" y="415.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (60,606,060 samples, 0.18%)</title><rect x="590.4" y="421" width="2.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="593.42" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.5" y="421" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.48" y="431.5" ></text>
</g>
<g >
<title>Logger::info (2,252,525,230 samples, 6.83%)</title><rect x="785.6" y="389" width="80.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="788.58" y="399.5" >Logger::i..</text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.09%)</title><rect x="1146.3" y="373" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1149.27" y="383.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (10,101,010 samples, 0.03%)</title><rect x="1186.0" y="309" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1189.02" y="319.5" ></text>
</g>
<g >
<title>sim::IdentifierFactory::~IdentifierFactory (191,919,190 samples, 0.58%)</title><rect x="10.7" y="453" width="6.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="13.72" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="53.4" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.37" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="904.1" y="357" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="907.13" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (40,404,040 samples, 0.12%)</title><rect x="904.1" y="373" width="1.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="907.13" y="383.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (30,303,030 samples, 0.09%)</title><rect x="596.2" y="389" width="1.1" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="599.21" y="399.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (10,101,010 samples, 0.03%)</title><rect x="911.7" y="373" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="914.72" y="383.5" ></text>
</g>
<g >
<title>YAML::Parser::HandleNextDocument (90,909,090 samples, 0.28%)</title><rect x="1186.0" y="421" width="3.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1189.02" y="431.5" ></text>
</g>
<g >
<title>sim::BaseHasher::get_hash (30,303,030 samples, 0.09%)</title><rect x="917.1" y="389" width="1.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="920.14" y="399.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.12%)</title><rect x="379.0" y="421" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="382.00" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="905.2" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="908.21" y="207.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.09%)</title><rect x="19.0" y="437" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="22.04" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="913.9" y="293" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="916.88" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.5" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.48" y="383.5" ></text>
</g>
<g >
<title>strlen@plt (20,202,020 samples, 0.06%)</title><rect x="905.6" y="389" width="0.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="908.57" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (10,101,010 samples, 0.03%)</title><rect x="593.3" y="373" width="0.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="596.31" y="383.5" ></text>
</g>
<g >
<title>sim::Process::operator (21,616,161,400 samples, 65.54%)</title><rect x="352.6" y="437" width="773.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="355.62" y="447.5" >sim::Process::operator</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1178.1" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1181.07" y="255.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="333.5" y="357" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="336.46" y="367.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="351.5" y="341" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="354.53" y="351.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="333.5" y="325" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="336.46" y="335.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (121,212,120 samples, 0.37%)</title><rect x="1130.4" y="389" width="4.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1133.37" y="399.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Switch::process (50,505,050 samples, 0.15%)</title><rect x="1153.1" y="437" width="1.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1156.14" y="447.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="905.2" y="357" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="908.21" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (303,030,300 samples, 0.92%)</title><rect x="738.6" y="405" width="10.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="741.60" y="415.5" ></text>
</g>
<g >
<title>main (32,767,676,440 samples, 99.36%)</title><rect x="17.6" y="485" width="1172.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="20.59" y="495.5" >main</text>
</g>
<g >
<title>sim::Host::enqueue_packet (151,515,150 samples, 0.46%)</title><rect x="603.8" y="389" width="5.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="606.79" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="905.2" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="908.21" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.15%)</title><rect x="67.1" y="309" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.10" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="53.4" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.37" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="908.1" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="911.10" y="255.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (30,303,030 samples, 0.09%)</title><rect x="606.0" y="357" width="1.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="608.96" y="367.5" ></text>
</g>
<g >
<title>operator delete (40,404,040 samples, 0.12%)</title><rect x="377.6" y="421" width="1.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="380.55" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;YAML::detail::node&gt;, std::shared_ptr&lt;YAML::detail::node&gt;, std::_Identity&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt;, std::less&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="405" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1192.28" y="415.5" ></text>
</g>
<g >
<title>sim::Process::operator (161,616,160 samples, 0.49%)</title><rect x="234.8" y="453" width="5.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="237.80" y="463.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (10,101,010 samples, 0.03%)</title><rect x="1186.7" y="277" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1189.75" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (212,121,210 samples, 0.64%)</title><rect x="319.7" y="421" width="7.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="322.73" y="431.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (20,202,020 samples, 0.06%)</title><rect x="1135.4" y="373" width="0.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1138.43" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="53.4" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.37" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_insert_unique&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; const&amp;&gt; (70,707,070 samples, 0.21%)</title><rect x="1180.6" y="421" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1183.60" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="34.6" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="37.58" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;* std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_Alloc_node&gt; (10,101,010 samples, 0.03%)</title><rect x="1185.7" y="437" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1188.66" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1183.9" y="405" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1186.86" y="415.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="72.2" y="405" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="75.16" y="415.5" ></text>
</g>
<g >
<title>sim::Scheduler::get_current_time (10,101,010 samples, 0.03%)</title><rect x="352.3" y="421" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="355.25" y="431.5" ></text>
</g>
<g >
<title>sim::Host::process (555,555,550 samples, 1.68%)</title><rect x="592.6" y="421" width="19.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="595.59" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.4" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.40" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="36.7" y="277" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.74" y="287.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (40,404,040 samples, 0.12%)</title><rect x="904.1" y="389" width="1.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="907.13" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="53.0" y="389" width="0.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="56.01" y="399.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::export_to_files (1,363,636,350 samples, 4.13%)</title><rect x="17.6" y="453" width="48.8" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="20.59" y="463.5" >sim:..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="1166.5" y="341" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1169.51" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="905.2" y="293" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="908.21" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (191,919,190 samples, 0.58%)</title><rect x="10.7" y="469" width="6.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.72" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="907.4" y="293" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="910.38" y="303.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="1182.4" y="405" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1185.41" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1166.9" y="261" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1169.87" y="271.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (20,202,020 samples, 0.06%)</title><rect x="1187.1" y="277" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1190.11" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1177.7" y="309" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1180.71" y="319.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanToNextToken (10,101,010 samples, 0.03%)</title><rect x="1186.4" y="261" width="0.3" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="1189.39" y="271.5" ></text>
</g>
<g >
<title>operator new (515,151,510 samples, 1.56%)</title><rect x="885.0" y="389" width="18.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="887.97" y="399.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="612.1" y="373" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="615.11" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1182.8" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.77" y="351.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (131,313,130 samples, 0.40%)</title><rect x="329.8" y="405" width="4.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="332.85" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="34.9" y="341" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.94" y="351.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.09%)</title><rect x="1179.2" y="389" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1182.16" y="399.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnScalar (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="277" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1190.83" y="287.5" ></text>
</g>
<g >
<title>sim::Link::transmit (121,212,120 samples, 0.37%)</title><rect x="347.9" y="421" width="4.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="350.92" y="431.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (10,101,010 samples, 0.03%)</title><rect x="1136.2" y="405" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1139.15" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="607.0" y="261" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="610.05" y="271.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (20,202,020 samples, 0.06%)</title><rect x="600.2" y="341" width="0.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="603.18" y="351.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.03%)</title><rect x="605.6" y="341" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="608.60" y="351.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.03%)</title><rect x="1136.5" y="389" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1139.51" y="399.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (131,313,130 samples, 0.40%)</title><rect x="1130.4" y="405" width="4.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1133.37" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="607.0" y="293" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="610.05" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="1166.9" y="245" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1169.87" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="35.3" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.30" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="53.4" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.37" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="1140.8" y="325" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1143.85" y="335.5" ></text>
</g>
</g>
</svg>
