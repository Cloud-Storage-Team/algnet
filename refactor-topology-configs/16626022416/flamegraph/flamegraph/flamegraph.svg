<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1139.8" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1142.80" y="207.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (20,202,020 samples, 0.11%)</title><rect x="848.1" y="405" width="1.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="851.14" y="415.5" ></text>
</g>
<g >
<title>_IO_file_fopen (80,808,080 samples, 0.43%)</title><rect x="55.1" y="421" width="5.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="58.12" y="431.5" ></text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks (10,101,010 samples, 0.05%)</title><rect x="1104.2" y="437" width="0.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1107.22" y="447.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (90,909,090 samples, 0.48%)</title><rect x="384.3" y="469" width="5.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="387.27" y="479.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (30,303,030 samples, 0.16%)</title><rect x="225.4" y="437" width="1.9" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="228.41" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="848.8" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="851.77" y="303.5" ></text>
</g>
<g >
<title>sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::start (16,979,797,810 samples, 90.52%)</title><rect x="115.5" y="517" width="1068.1" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="118.48" y="527.5" >sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::start</text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (40,404,040 samples, 0.22%)</title><rect x="212.1" y="437" width="2.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="215.07" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1094.0" y="421" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1097.05" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1183.6" y="133" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1186.65" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.6" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.57" y="271.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::get_max_size (20,202,020 samples, 0.11%)</title><rect x="390.0" y="469" width="1.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="392.99" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1146.8" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1149.79" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.9" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.87" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="109.1" y="357" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="112.13" y="367.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (30,303,030 samples, 0.16%)</title><rect x="850.7" y="421" width="1.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="853.68" y="431.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (131,313,130 samples, 0.70%)</title><rect x="854.5" y="453" width="8.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="857.49" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.43%)</title><rect x="55.1" y="213" width="5.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.12" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.54%)</title><rect x="815.7" y="421" width="6.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="818.73" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="181" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="831.44" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="149" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="831.44" y="159.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.05%)</title><rect x="363.9" y="373" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="366.94" y="383.5" ></text>
</g>
<g >
<title>_IO_file_fopen (20,202,020 samples, 0.11%)</title><rect x="104.7" y="421" width="1.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="107.68" y="431.5" ></text>
</g>
<g >
<title>sim::LinkQueue::empty (30,303,030 samples, 0.16%)</title><rect x="852.6" y="453" width="1.9" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="855.58" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="367.1" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="370.11" y="207.5" ></text>
</g>
<g >
<title>writev (30,303,030 samples, 0.16%)</title><rect x="79.9" y="421" width="1.9" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="82.90" y="431.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.05%)</title><rect x="77.4" y="437" width="0.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="80.36" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="1149.3" y="421" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1152.33" y="431.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.16%)</title><rect x="1139.2" y="421" width="1.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1142.17" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="349.3" y="325" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="352.32" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.4" y="405" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.43" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="501" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="104.7" y="181" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.68" y="191.5" ></text>
</g>
<g >
<title>operator new (171,717,170 samples, 0.92%)</title><rect x="1043.9" y="453" width="10.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1046.85" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="54.5" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.48" y="271.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (60,606,060 samples, 0.32%)</title><rect x="111.0" y="437" width="3.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="114.03" y="447.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (20,202,020 samples, 0.11%)</title><rect x="367.7" y="421" width="1.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="370.75" y="431.5" ></text>
</g>
<g >
<title>malloc (70,707,070 samples, 0.38%)</title><rect x="1039.4" y="453" width="4.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1042.40" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (10,101,010 samples, 0.05%)</title><rect x="1177.3" y="485" width="0.6" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1180.29" y="495.5" ></text>
</g>
<g >
<title>brk (10,101,010 samples, 0.05%)</title><rect x="1146.8" y="421" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1149.79" y="431.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.11%)</title><rect x="1137.9" y="437" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1140.89" y="447.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (383,838,380 samples, 2.05%)</title><rect x="60.2" y="469" width="24.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="63.20" y="479.5" >s..</text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.16%)</title><rect x="1170.3" y="437" width="1.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1173.30" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="23.3" y="453" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.34" y="463.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="209.5" y="421" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="212.53" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="367.1" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="370.11" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="79.9" y="325" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="82.90" y="335.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="1130.9" y="485" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1133.90" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.27%)</title><rect x="858.3" y="357" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="861.30" y="367.5" ></text>
</g>
<g >
<title>sim::Link::transmit (70,707,070 samples, 0.38%)</title><rect x="228.6" y="469" width="4.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="231.59" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="319.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="52.6" y="437" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="55.57" y="447.5" ></text>
</g>
<g >
<title>malloc (222,222,220 samples, 1.18%)</title><rect x="829.1" y="421" width="14.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="832.07" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="104.7" y="277" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.68" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="104.7" y="229" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.68" y="239.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="1121.4" y="421" width="0.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1124.37" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (131,313,130 samples, 0.70%)</title><rect x="615.6" y="437" width="8.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="618.57" y="447.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1187.5" y="165" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.46" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="54.5" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.48" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="775.1" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="778.06" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="207.0" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="209.98" y="287.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (30,303,030 samples, 0.16%)</title><rect x="1114.4" y="437" width="1.9" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1117.38" y="447.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (141,414,140 samples, 0.75%)</title><rect x="372.8" y="469" width="8.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="375.83" y="479.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (10,101,010 samples, 0.05%)</title><rect x="340.4" y="453" width="0.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="343.43" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="351.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="863.4" y="405" width="0.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="866.39" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="23.3" y="469" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.34" y="479.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (131,313,130 samples, 0.70%)</title><rect x="1106.1" y="437" width="8.3" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1109.12" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.1" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.07" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.9" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.87" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="207.0" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="209.98" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="81.2" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="84.17" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="821.4" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="824.45" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1176.7" y="421" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1179.66" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.32%)</title><rect x="107.2" y="405" width="3.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="110.22" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.9" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.87" y="319.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="339.2" y="453" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="342.15" y="463.5" ></text>
</g>
<g >
<title>cfree (202,020,200 samples, 1.08%)</title><rect x="809.4" y="437" width="12.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="812.38" y="447.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="822.1" y="437" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="825.08" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="81.2" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="84.17" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.4" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.43" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1150.6" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1153.60" y="367.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::data[abi:cxx11] (20,202,020 samples, 0.11%)</title><rect x="28.4" y="485" width="1.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="31.43" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="117" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="831.44" y="127.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1183.6" y="309" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1186.65" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="775.1" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="778.06" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1141.7" y="437" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1144.71" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (212,121,210 samples, 1.13%)</title><rect x="188.6" y="469" width="13.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="191.56" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="23.3" y="373" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.34" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.9" y="165" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.87" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.4" y="437" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.43" y="447.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (10,101,010 samples, 0.05%)</title><rect x="340.4" y="437" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="343.43" y="447.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::export_to_files (171,717,170 samples, 0.92%)</title><rect x="104.0" y="501" width="10.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="107.04" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="848.8" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="851.77" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="27.2" y="437" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="30.16" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="81.2" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="84.17" y="207.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (80,808,080 samples, 0.43%)</title><rect x="1098.5" y="437" width="5.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1101.50" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.43%)</title><rect x="55.1" y="245" width="5.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.12" y="255.5" ></text>
</g>
<g >
<title>sim::Parser&lt;sim::Link&gt;::parse_object (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="453" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1192.36" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.6" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.57" y="239.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="421" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1192.36" y="431.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (40,404,040 samples, 0.22%)</title><rect x="353.8" y="405" width="2.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="356.77" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="207.0" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="209.98" y="223.5" ></text>
</g>
<g >
<title>cfree (323,232,320 samples, 1.72%)</title><rect x="181.6" y="485" width="20.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="184.57" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="79.9" y="309" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="82.90" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="23.3" y="341" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.34" y="351.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (20,202,020 samples, 0.11%)</title><rect x="104.7" y="469" width="1.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="107.68" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1183.6" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1186.65" y="239.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::Arrive (20,202,020 samples, 0.11%)</title><rect x="229.2" y="453" width="1.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="232.22" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="27.8" y="453" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="30.79" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.43%)</title><rect x="55.1" y="309" width="5.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.12" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="59.6" y="133" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="62.56" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="54.5" y="165" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.48" y="175.5" ></text>
</g>
<g >
<title>vsnprintf (121,212,120 samples, 0.65%)</title><rect x="217.2" y="389" width="7.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="220.15" y="399.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1176.7" y="453" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1179.66" y="463.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.05%)</title><rect x="356.9" y="373" width="0.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="359.95" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.9" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.87" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="207.0" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="209.98" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (20,202,020 samples, 0.11%)</title><rect x="1092.1" y="389" width="1.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1095.14" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1101.7" y="421" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1104.67" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="49.4" y="437" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="52.40" y="447.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (80,808,080 samples, 0.43%)</title><rect x="106.0" y="469" width="5.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="108.95" y="479.5" ></text>
</g>
<g >
<title>sim::Link::get_to (60,606,060 samples, 0.32%)</title><rect x="1153.1" y="469" width="3.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1156.14" y="479.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (10,101,010 samples, 0.05%)</title><rect x="1188.1" y="293" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1191.09" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.1" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.07" y="287.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::update (171,717,170 samples, 0.92%)</title><rect x="358.2" y="453" width="10.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="361.22" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="421" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::~MetricsCollector (10,101,010 samples, 0.05%)</title><rect x="22.1" y="501" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="25.07" y="511.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (20,202,020 samples, 0.11%)</title><rect x="856.4" y="421" width="1.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="859.40" y="431.5" ></text>
</g>
<g >
<title>Logger::info (1,979,797,960 samples, 10.55%)</title><rect x="668.3" y="437" width="124.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="671.31" y="447.5" >Logger::info</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="367.1" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="370.11" y="223.5" ></text>
</g>
<g >
<title>operator new (70,707,070 samples, 0.38%)</title><rect x="1147.4" y="469" width="4.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1150.43" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="775.1" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="778.06" y="367.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::Push (10,101,010 samples, 0.05%)</title><rect x="1183.6" y="341" width="0.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1186.65" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="848.8" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="851.77" y="351.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1186.8" y="293" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1189.82" y="303.5" ></text>
</g>
<g >
<title>operator new (262,626,260 samples, 1.40%)</title><rect x="632.7" y="453" width="16.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="635.72" y="463.5" ></text>
</g>
<g >
<title>vsnprintf (60,606,060 samples, 0.32%)</title><rect x="857.7" y="389" width="3.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="860.67" y="399.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1157.0" y="437" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1159.96" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="80.5" y="245" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="83.53" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.9" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.87" y="335.5" ></text>
</g>
<g >
<title>sim::Switch::process (9,545,454,450 samples, 50.89%)</title><rect x="391.3" y="469" width="600.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="394.26" y="479.5" >sim::Switch::process</text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (80,808,080 samples, 0.43%)</title><rect x="55.1" y="453" width="5.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="58.12" y="463.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (30,303,030 samples, 0.16%)</title><rect x="850.7" y="437" width="1.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="853.68" y="447.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="27.8" y="469" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="30.79" y="479.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.11%)</title><rect x="49.4" y="469" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="52.40" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (232,323,230 samples, 1.24%)</title><rect x="62.7" y="405" width="14.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="65.74" y="415.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.05%)</title><rect x="54.5" y="437" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="57.48" y="447.5" ></text>
</g>
<g >
<title>operator delete (10,101,010 samples, 0.05%)</title><rect x="352.5" y="421" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="355.50" y="431.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (10,101,010 samples, 0.05%)</title><rect x="21.4" y="485" width="0.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="24.44" y="495.5" ></text>
</g>
<g >
<title>YAML::Stream::get (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="293" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1189.19" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="848.8" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="851.77" y="239.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (20,202,020 samples, 0.11%)</title><rect x="861.5" y="437" width="1.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="864.48" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="207.0" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="209.98" y="255.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (10,101,010 samples, 0.05%)</title><rect x="210.2" y="421" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="213.16" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="133" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="831.44" y="143.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1173.5" y="437" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1176.48" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="848.8" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="851.77" y="367.5" ></text>
</g>
<g >
<title>std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;::size_type std::__detail::__erase_nodes_if&lt;std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;, std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;, sim::RoutingModule::correctify_outlinks (20,202,020 samples, 0.11%)</title><rect x="1158.2" y="453" width="1.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1161.23" y="463.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1157.0" y="453" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1159.96" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (40,404,040 samples, 0.22%)</title><rect x="50.7" y="469" width="2.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="53.67" y="479.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (10,101,010 samples, 0.05%)</title><rect x="353.1" y="389" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="356.13" y="399.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (121,212,120 samples, 0.65%)</title><rect x="125.6" y="501" width="7.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="128.65" y="511.5" ></text>
</g>
<g >
<title>_IO_file_open (80,808,080 samples, 0.43%)</title><rect x="55.1" y="405" width="5.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="58.12" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1186.8" y="261" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1189.82" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="85.0" y="453" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="87.98" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="104.7" y="325" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.68" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="104.7" y="373" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.68" y="383.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.11%)</title><rect x="49.4" y="453" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="52.40" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="821.4" y="389" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="824.45" y="399.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (101,010,100 samples, 0.54%)</title><rect x="351.9" y="437" width="6.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="354.86" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.32%)</title><rect x="111.0" y="373" width="3.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="114.03" y="383.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1187.5" y="197" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.46" y="207.5" ></text>
</g>
<g >
<title>YAML::detail::node::equals (10,101,010 samples, 0.05%)</title><rect x="1188.7" y="437" width="0.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1191.73" y="447.5" ></text>
</g>
<g >
<title>strlen@plt (30,303,030 samples, 0.16%)</title><rect x="989.8" y="453" width="1.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="992.84" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.05%)</title><rect x="1181.1" y="485" width="0.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1184.10" y="495.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="29.1" y="453" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="32.06" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (50,505,050 samples, 0.27%)</title><rect x="1163.3" y="469" width="3.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1166.31" y="479.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (70,707,070 samples, 0.38%)</title><rect x="846.2" y="453" width="4.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="849.23" y="463.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.05%)</title><rect x="343.0" y="421" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="345.97" y="431.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (20,202,020 samples, 0.11%)</title><rect x="104.7" y="453" width="1.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="107.68" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.6" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.57" y="287.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (10,101,010 samples, 0.05%)</title><rect x="357.6" y="405" width="0.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="360.58" y="415.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (40,404,040 samples, 0.22%)</title><rect x="230.5" y="453" width="2.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="233.50" y="463.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (70,707,070 samples, 0.38%)</title><rect x="345.5" y="421" width="4.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="348.51" y="431.5" ></text>
</g>
<g >
<title>vsnprintf (60,606,060 samples, 0.32%)</title><rect x="111.0" y="421" width="3.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="114.03" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1139.8" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1142.80" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.43%)</title><rect x="55.1" y="229" width="5.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.12" y="239.5" ></text>
</g>
<g >
<title>main (18,555,555,370 samples, 98.92%)</title><rect x="22.7" y="533" width="1167.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="25.71" y="543.5" >main</text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (50,505,050 samples, 0.27%)</title><rect x="1090.2" y="421" width="3.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1093.24" y="431.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (30,303,030 samples, 0.16%)</title><rect x="350.0" y="437" width="1.9" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="352.96" y="447.5" ></text>
</g>
<g >
<title>fopen (20,202,020 samples, 0.11%)</title><rect x="104.7" y="437" width="1.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="107.68" y="447.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="27.8" y="485" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="30.79" y="495.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (10,101,010 samples, 0.05%)</title><rect x="1123.9" y="453" width="0.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1126.91" y="463.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.05%)</title><rect x="367.1" y="421" width="0.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="370.11" y="431.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (10,101,010 samples, 0.05%)</title><rect x="1184.9" y="341" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1187.92" y="351.5" ></text>
</g>
<g >
<title>pthread_once (10,101,010 samples, 0.05%)</title><rect x="224.8" y="405" width="0.6" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="227.78" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="206.3" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="209.35" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="775.1" y="421" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="778.06" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="485" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="362.0" y="389" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="365.03" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.4" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.43" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="49.4" y="421" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="52.40" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1151.2" y="421" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1154.24" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="105.3" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.32" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (10,101,010 samples, 0.05%)</title><rect x="1174.1" y="469" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1177.11" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="405" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1192.36" y="415.5" ></text>
</g>
<g >
<title>sim::Process::operator (151,515,150 samples, 0.81%)</title><rect x="133.3" y="501" width="9.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="136.27" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1139.8" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1142.80" y="239.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleDocument (80,808,080 samples, 0.43%)</title><rect x="1183.6" y="453" width="5.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1186.65" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.1" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.07" y="335.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="85.6" y="453" width="0.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="88.62" y="463.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="855.8" y="421" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="858.76" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="848.8" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="851.77" y="255.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanValue (10,101,010 samples, 0.05%)</title><rect x="1184.9" y="325" width="0.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1187.92" y="335.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (20,202,020 samples, 0.11%)</title><rect x="1187.5" y="309" width="1.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1190.46" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="204.4" y="421" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="207.44" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="367.1" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="370.11" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.1" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.07" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="848.8" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="851.77" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="367.1" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="370.11" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="831.44" y="207.5" ></text>
</g>
<g >
<title>operator delete (60,606,060 samples, 0.32%)</title><rect x="116.1" y="501" width="3.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="119.12" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.9" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.87" y="303.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (20,202,020 samples, 0.11%)</title><rect x="363.3" y="389" width="1.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="366.30" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (20,202,020 samples, 0.11%)</title><rect x="1188.7" y="501" width="1.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1191.73" y="511.5" ></text>
</g>
<g >
<title>sim::BaseHasher::get_hash (10,101,010 samples, 0.05%)</title><rect x="1121.4" y="437" width="0.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1124.37" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="405" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="831.44" y="415.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (30,303,030 samples, 0.16%)</title><rect x="1096.6" y="421" width="1.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1099.59" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="355.0" y="389" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="358.04" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="104.7" y="197" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.68" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="360.1" y="389" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="363.12" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (80,808,080 samples, 0.43%)</title><rect x="55.1" y="469" width="5.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="58.12" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1173.5" y="405" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1176.48" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1138.5" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1141.53" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_pbump (10,101,010 samples, 0.05%)</title><rect x="355.7" y="357" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="358.68" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="106.0" y="453" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="108.95" y="463.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1173.5" y="421" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1176.48" y="431.5" ></text>
</g>
<g >
<title>vsnprintf (121,212,120 samples, 0.65%)</title><rect x="1106.8" y="389" width="7.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1109.76" y="399.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1135.4" y="453" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1138.35" y="463.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.11%)</title><rect x="51.3" y="453" width="1.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="54.30" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="79.9" y="261" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="82.90" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.27%)</title><rect x="57.0" y="181" width="3.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.02" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="191.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (50,505,050 samples, 0.27%)</title><rect x="854.5" y="437" width="3.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="857.49" y="447.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::export_metrics_to_files (1,464,646,450 samples, 7.81%)</title><rect x="22.7" y="517" width="92.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="25.71" y="527.5" >sim::Metric..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.54%)</title><rect x="1108.0" y="357" width="6.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1111.03" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1138.5" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1141.53" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1146.8" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1149.79" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (111,111,110 samples, 0.59%)</title><rect x="1167.1" y="469" width="7.0" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1170.12" y="479.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (424,242,420 samples, 2.26%)</title><rect x="201.9" y="485" width="26.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="204.90" y="495.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="23.3" y="389" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.34" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.6" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.57" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.05%)</title><rect x="364.6" y="389" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="367.57" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1150.6" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1153.60" y="319.5" ></text>
</g>
<g >
<title>operator new (80,808,080 samples, 0.43%)</title><rect x="292.1" y="469" width="5.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="295.13" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1183.6" y="181" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1186.65" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.54%)</title><rect x="218.4" y="357" width="6.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="221.42" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.27%)</title><rect x="107.9" y="389" width="3.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="110.86" y="399.5" ></text>
</g>
<g >
<title>all (18,757,575,570 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (40,404,040 samples, 0.22%)</title><rect x="230.5" y="437" width="2.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="233.50" y="447.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (50,505,050 samples, 0.27%)</title><rect x="1185.6" y="357" width="3.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1188.55" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.43%)</title><rect x="55.1" y="325" width="5.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.12" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="831.44" y="351.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (474,747,470 samples, 2.53%)</title><rect x="864.7" y="453" width="29.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="867.66" y="463.5" >si..</text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="228.6" y="453" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="231.59" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="207.0" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="209.98" y="207.5" ></text>
</g>
<g >
<title>__default_morecore (10,101,010 samples, 0.05%)</title><rect x="22.1" y="453" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="25.07" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="22.1" y="469" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="25.07" y="479.5" ></text>
</g>
<g >
<title>malloc (202,020,200 samples, 1.08%)</title><rect x="636.5" y="437" width="12.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="639.54" y="447.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="367.1" y="389" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="370.11" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.38%)</title><rect x="220.3" y="341" width="4.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="223.33" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.4" y="453" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.43" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="1149.3" y="389" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1152.33" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="81.2" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="84.17" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="358.9" y="437" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="361.85" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.1" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.07" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (262,626,260 samples, 1.40%)</title><rect x="792.9" y="437" width="16.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="795.85" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="23.3" y="485" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.34" y="495.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (10,101,010 samples, 0.05%)</title><rect x="1184.9" y="357" width="0.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1187.92" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="207.0" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="209.98" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::Pop (10,101,010 samples, 0.05%)</title><rect x="1186.8" y="325" width="0.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1189.82" y="335.5" ></text>
</g>
<g >
<title>operator delete (80,808,080 samples, 0.43%)</title><rect x="627.6" y="453" width="5.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="630.64" y="463.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1187.5" y="229" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.46" y="239.5" ></text>
</g>
<g >
<title>sim::Event::get_time (90,909,090 samples, 0.48%)</title><rect x="119.9" y="501" width="5.7" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="122.93" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (30,303,030 samples, 0.16%)</title><rect x="1139.2" y="453" width="1.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1142.17" y="463.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_delivery_rate (30,303,030 samples, 0.16%)</title><rect x="367.1" y="437" width="1.9" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="370.11" y="447.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (80,808,080 samples, 0.43%)</title><rect x="1183.6" y="421" width="5.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.65" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="79.9" y="373" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="82.90" y="383.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (80,808,080 samples, 0.43%)</title><rect x="1183.6" y="405" width="5.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.65" y="415.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (10,101,010 samples, 0.05%)</title><rect x="850.0" y="405" width="0.7" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="853.04" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1146.8" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1149.79" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (20,202,020 samples, 0.11%)</title><rect x="1187.5" y="325" width="1.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1190.46" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.48%)</title><rect x="15.7" y="421" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.72" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.1" y="421" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.07" y="431.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1141.7" y="469" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1144.71" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="207.0" y="357" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="209.98" y="367.5" ></text>
</g>
<g >
<title>std::locale::~locale (10,101,010 samples, 0.05%)</title><rect x="210.8" y="405" width="0.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="213.80" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.9" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.87" y="207.5" ></text>
</g>
<g >
<title>__default_morecore (10,101,010 samples, 0.05%)</title><rect x="1146.8" y="437" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1149.79" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.22%)</title><rect x="74.8" y="357" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="77.81" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="399.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnScalar (10,101,010 samples, 0.05%)</title><rect x="1184.3" y="357" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1187.28" y="367.5" ></text>
</g>
<g >
<title>std::locale::locale (10,101,010 samples, 0.05%)</title><rect x="1104.9" y="437" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1107.85" y="447.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (20,202,020 samples, 0.11%)</title><rect x="845.0" y="405" width="1.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="847.96" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10,101,010 samples, 0.05%)</title><rect x="864.0" y="437" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="867.02" y="447.5" ></text>
</g>
<g >
<title>Logger::warn (40,404,040 samples, 0.22%)</title><rect x="286.4" y="469" width="2.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="289.41" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1139.8" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1142.80" y="223.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1176.7" y="437" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1179.66" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="831.44" y="255.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (3,131,313,100 samples, 16.69%)</title><rect x="649.2" y="453" width="197.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="652.25" y="463.5" >sim::Link::get_packet</text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.27%)</title><rect x="346.8" y="357" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="349.78" y="367.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1135.4" y="437" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1138.35" y="447.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (80,808,080 samples, 0.43%)</title><rect x="1183.6" y="437" width="5.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.65" y="447.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (50,505,050 samples, 0.27%)</title><rect x="843.1" y="421" width="3.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="846.05" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="356.3" y="325" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="359.31" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1139.8" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1142.80" y="303.5" ></text>
</g>
<g >
<title>sim::Link::get_from (20,202,020 samples, 0.11%)</title><rect x="1132.2" y="485" width="1.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1135.18" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::weak_ptr&lt;sim::ILink&gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="1135.4" y="469" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1138.35" y="479.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (60,606,060 samples, 0.32%)</title><rect x="111.0" y="453" width="3.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="114.03" y="463.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.05%)</title><rect x="353.1" y="405" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="356.13" y="415.5" ></text>
</g>
<g >
<title>writev (10,101,010 samples, 0.05%)</title><rect x="100.9" y="421" width="0.6" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="103.87" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.9" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.87" y="383.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1188.1" y="261" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.09" y="271.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.11%)</title><rect x="53.2" y="453" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="56.21" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="206.3" y="389" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="209.35" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (10,101,010 samples, 0.05%)</title><rect x="54.5" y="453" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="57.48" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="37" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="831.44" y="47.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="228.6" y="437" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="231.59" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="149" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (1,474,747,460 samples, 7.86%)</title><rect x="896.4" y="453" width="92.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="899.43" y="463.5" >std::_Rb_tr..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.05%)</title><rect x="1102.9" y="389" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1105.95" y="399.5" ></text>
</g>
<g >
<title>YAML::Parser::HandleNextDocument (80,808,080 samples, 0.43%)</title><rect x="1183.6" y="469" width="5.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1186.65" y="479.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (60,606,060 samples, 0.32%)</title><rect x="107.2" y="437" width="3.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="110.22" y="447.5" ></text>
</g>
<g >
<title>vsnprintf (50,505,050 samples, 0.27%)</title><rect x="346.8" y="389" width="3.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="349.78" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1138.5" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1141.53" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1138.5" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1141.53" y="271.5" ></text>
</g>
<g >
<title>auto sim::YamlParser::process_links (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="469" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1192.36" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.43%)</title><rect x="55.1" y="277" width="5.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.12" y="287.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (30,303,030 samples, 0.16%)</title><rect x="205.7" y="405" width="1.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="208.71" y="415.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="1146.8" y="469" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1149.79" y="479.5" ></text>
</g>
<g >
<title>sim::Link::get_from (20,202,020 samples, 0.11%)</title><rect x="1151.9" y="469" width="1.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1154.87" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1138.5" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1141.53" y="319.5" ></text>
</g>
<g >
<title>YAML::Scanner::PopIndentToHere (10,101,010 samples, 0.05%)</title><rect x="1185.6" y="293" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1188.55" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="1121.4" y="405" width="0.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1124.37" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (60,606,060 samples, 0.32%)</title><rect x="857.7" y="405" width="3.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="860.67" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="54.5" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.48" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1141.7" y="421" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1144.71" y="431.5" ></text>
</g>
<g >
<title>brk (10,101,010 samples, 0.05%)</title><rect x="22.1" y="437" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="25.07" y="447.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (272,727,270 samples, 1.45%)</title><rect x="775.7" y="421" width="17.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="778.70" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="367.1" y="165" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="370.11" y="175.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1141.7" y="453" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1144.71" y="463.5" ></text>
</g>
<g >
<title>fopen (80,808,080 samples, 0.43%)</title><rect x="55.1" y="437" width="5.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="58.12" y="447.5" ></text>
</g>
<g >
<title>cfree (50,505,050 samples, 0.27%)</title><rect x="24.6" y="485" width="3.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="27.61" y="495.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (121,212,120 samples, 0.65%)</title><rect x="1106.8" y="421" width="7.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1109.76" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1090.2" y="405" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1093.24" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="367.1" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="370.11" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1138.5" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1141.53" y="383.5" ></text>
</g>
<g >
<title>std::locale::~locale (10,101,010 samples, 0.05%)</title><rect x="989.2" y="453" width="0.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="992.20" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (121,212,120 samples, 0.65%)</title><rect x="1106.8" y="405" width="7.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1109.76" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="365.2" y="389" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="368.21" y="399.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (232,323,230 samples, 1.24%)</title><rect x="565.4" y="437" width="14.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="568.37" y="447.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="208.9" y="437" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="211.89" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (80,808,080 samples, 0.43%)</title><rect x="1136.0" y="469" width="5.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1138.99" y="479.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (50,505,050 samples, 0.27%)</title><rect x="204.4" y="437" width="3.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="207.44" y="447.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (383,838,380 samples, 2.05%)</title><rect x="311.8" y="469" width="24.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="314.83" y="479.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.54%)</title><rect x="1108.0" y="341" width="6.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1111.03" y="351.5" ></text>
</g>
<g >
<title>operator new (323,232,320 samples, 1.72%)</title><rect x="822.7" y="437" width="20.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="825.72" y="447.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::send_packets (101,010,100 samples, 0.54%)</title><rect x="351.9" y="453" width="6.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="354.86" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="517" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1138.5" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1141.53" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="1112.5" y="325" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1115.48" y="335.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.16%)</title><rect x="1170.3" y="453" width="1.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1173.30" y="463.5" ></text>
</g>
<g >
<title>sim::write_to_csv (1,181,818,170 samples, 6.30%)</title><rect x="29.7" y="485" width="74.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="32.70" y="495.5" >sim::wri..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="54.5" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.48" y="319.5" ></text>
</g>
<g >
<title>vsnprintf (10,101,010 samples, 0.05%)</title><rect x="83.7" y="437" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="86.71" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (222,222,220 samples, 1.18%)</title><rect x="86.9" y="437" width="14.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="89.89" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;* std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_Alloc_node&gt; (30,303,030 samples, 0.16%)</title><rect x="1181.7" y="485" width="1.9" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1184.74" y="495.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (30,303,030 samples, 0.16%)</title><rect x="850.7" y="453" width="1.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="853.68" y="463.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (303,030,300 samples, 1.62%)</title><rect x="208.3" y="453" width="19.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="211.26" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="1170.3" y="421" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1173.30" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1146.8" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1149.79" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.32%)</title><rect x="111.0" y="405" width="3.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="114.03" y="415.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (20,202,020 samples, 0.11%)</title><rect x="849.4" y="421" width="1.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="852.41" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="216.5" y="405" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="219.52" y="415.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1187.5" y="277" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.46" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="54.5" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.48" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1137.9" y="421" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1140.89" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="831.44" y="271.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (60,606,060 samples, 0.32%)</title><rect x="857.7" y="421" width="3.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="860.67" y="431.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (30,303,030 samples, 0.16%)</title><rect x="343.6" y="437" width="1.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="346.60" y="447.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (30,303,030 samples, 0.16%)</title><rect x="341.7" y="437" width="1.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="344.70" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (191,919,190 samples, 1.02%)</title><rect x="65.3" y="373" width="12.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="68.28" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1139.8" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1142.80" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="421" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="831.44" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="54.5" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.48" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="105.3" y="149" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.32" y="159.5" ></text>
</g>
<g >
<title>YAML::LoadFile (80,808,080 samples, 0.43%)</title><rect x="1183.6" y="501" width="5.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1186.65" y="511.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (20,202,020 samples, 0.11%)</title><rect x="210.2" y="437" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="213.16" y="447.5" ></text>
</g>
<g >
<title>sim::Link::get_max_to_ingress_queue_size (60,606,060 samples, 0.32%)</title><rect x="369.0" y="469" width="3.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="372.02" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="29.1" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.06" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="367.1" y="149" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="370.11" y="159.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_insert_unique&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; const&amp;&gt; (40,404,040 samples, 0.22%)</title><rect x="1174.7" y="469" width="2.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1177.75" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1139.8" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1142.80" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="207.0" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="209.98" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.32%)</title><rect x="857.7" y="373" width="3.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="860.67" y="383.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (30,303,030 samples, 0.16%)</title><rect x="336.0" y="469" width="1.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="338.98" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.9" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.87" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1139.8" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1142.80" y="399.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (60,606,060 samples, 0.32%)</title><rect x="107.2" y="453" width="3.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="110.22" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="29.1" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.06" y="399.5" ></text>
</g>
<g >
<title>cfree (111,111,110 samples, 0.59%)</title><rect x="14.4" y="437" width="7.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="17.45" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="356.3" y="341" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="359.31" y="351.5" ></text>
</g>
<g >
<title>std::ostream::put (30,303,030 samples, 0.16%)</title><rect x="101.5" y="469" width="1.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="104.50" y="479.5" ></text>
</g>
<g >
<title>std::locale::locale (10,101,010 samples, 0.05%)</title><rect x="1097.9" y="405" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1100.86" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="29.1" y="421" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.06" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="54.5" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.48" y="399.5" ></text>
</g>
<g >
<title>std::locale::~locale (10,101,010 samples, 0.05%)</title><rect x="1105.5" y="437" width="0.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1108.49" y="447.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (80,808,080 samples, 0.43%)</title><rect x="1183.6" y="389" width="5.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.65" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 1.18%)</title><rect x="86.9" y="405" width="14.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="89.89" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1139.8" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1142.80" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="565" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.65%)</title><rect x="217.2" y="373" width="7.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="220.15" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="846.9" y="405" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="849.87" y="415.5" ></text>
</g>
<g >
<title>[[hv_netvsc]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="325" width="0.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="831.44" y="335.5" ></text>
</g>
<g >
<title>Logger::get_instance (40,404,040 samples, 0.22%)</title><rect x="283.9" y="469" width="2.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="286.87" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.48%)</title><rect x="15.7" y="405" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.72" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.27%)</title><rect x="57.0" y="197" width="3.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.02" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1138.5" y="389" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1141.53" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="104.7" y="245" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.68" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="469" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="831.44" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1146.8" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1149.79" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.6" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.57" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.4" y="421" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.43" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="165" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="175.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="211.4" y="437" width="0.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="214.43" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.27%)</title><rect x="24.6" y="453" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="27.61" y="463.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_RTT (30,303,030 samples, 0.16%)</title><rect x="365.2" y="437" width="1.9" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="368.21" y="447.5" ></text>
</g>
<g >
<title>vsnprintf (10,101,010 samples, 0.05%)</title><rect x="363.9" y="357" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="366.94" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.6" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.57" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="104.7" y="293" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.68" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.1" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.07" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_erase (30,303,030 samples, 0.16%)</title><rect x="1161.4" y="469" width="1.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1164.41" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="848.8" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="851.77" y="383.5" ></text>
</g>
<g >
<title>sim::Parser&lt;sim::TcpFlow&lt;sim::TcpTahoeCC&gt; &gt;::parse_object (10,101,010 samples, 0.05%)</title><rect x="1188.7" y="469" width="0.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1191.73" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.9" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.87" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="848.8" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="851.77" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1183.6" y="101" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1186.65" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="79.9" y="357" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="82.90" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1088.3" y="453" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1091.33" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.4" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.43" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.32%)</title><rect x="111.0" y="389" width="3.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="114.03" y="399.5" ></text>
</g>
<g >
<title>vsnprintf (60,606,060 samples, 0.32%)</title><rect x="107.2" y="421" width="3.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="110.22" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.9" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.87" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="53" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="831.44" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="340.4" y="405" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="343.43" y="415.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="360.1" y="405" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="363.12" y="415.5" ></text>
</g>
<g >
<title>sim::SendData::operator (595,959,590 samples, 3.18%)</title><rect x="1087.1" y="485" width="37.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1090.06" y="495.5" >sim..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="104.7" y="341" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.68" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="79.9" y="341" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="82.90" y="351.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Switch::process (60,606,060 samples, 0.32%)</title><rect x="1124.6" y="485" width="3.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1127.55" y="495.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (80,808,080 samples, 0.43%)</title><rect x="1183.6" y="373" width="5.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.65" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.32%)</title><rect x="1148.1" y="437" width="3.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1151.06" y="447.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;, std::weak_ptr&lt;sim::IProcessingDevice&gt;&amp;&gt; (1,444,444,430 samples, 7.70%)</title><rect x="991.7" y="469" width="90.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="994.74" y="479.5" >void sim::..</text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;Time&lt;Nanosecond&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (20,202,020 samples, 0.11%)</title><rect x="53.2" y="469" width="1.3" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="56.21" y="479.5" ></text>
</g>
<g >
<title>sim::Event::Event (232,323,230 samples, 1.24%)</title><rect x="297.2" y="469" width="14.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="300.22" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.27%)</title><rect x="24.6" y="469" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="27.61" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="821.4" y="405" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="824.45" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.9" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.87" y="223.5" ></text>
</g>
<g >
<title>write (10,101,010 samples, 0.05%)</title><rect x="54.5" y="405" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="57.48" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.27%)</title><rect x="858.3" y="341" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="861.30" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.6" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.57" y="367.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (171,717,170 samples, 0.92%)</title><rect x="10.6" y="469" width="10.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.64" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.43%)</title><rect x="55.1" y="373" width="5.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.12" y="383.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanNextToken (10,101,010 samples, 0.05%)</title><rect x="1185.6" y="309" width="0.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1188.55" y="319.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (171,717,170 samples, 0.92%)</title><rect x="341.1" y="453" width="10.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="344.06" y="463.5" ></text>
</g>
<g >
<title>sim::Host::process (494,949,490 samples, 2.64%)</title><rect x="337.9" y="469" width="31.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="340.88" y="479.5" >si..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1183.6" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1186.65" y="175.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (20,202,020 samples, 0.11%)</title><rect x="214.6" y="437" width="1.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="217.61" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.6" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.57" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (161,616,160 samples, 0.86%)</title><rect x="90.7" y="373" width="10.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="93.70" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.1" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.07" y="415.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (20,202,020 samples, 0.11%)</title><rect x="350.6" y="421" width="1.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="353.59" y="431.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (30,303,030 samples, 0.16%)</title><rect x="1114.4" y="421" width="1.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1117.38" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="1149.3" y="405" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1152.33" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.6" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.57" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="367.1" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="370.11" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="848.8" y="165" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="851.77" y="175.5" ></text>
</g>
<g >
<title>Logger::get_instance (40,404,040 samples, 0.22%)</title><rect x="435.7" y="453" width="2.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="438.74" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="821.4" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="824.45" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="1139.2" y="405" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1142.17" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (20,202,020 samples, 0.11%)</title><rect x="365.8" y="405" width="1.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="368.84" y="415.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.11%)</title><rect x="53.2" y="437" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="56.21" y="447.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (10,101,010 samples, 0.05%)</title><rect x="362.7" y="405" width="0.6" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="365.67" y="415.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (70,707,070 samples, 0.38%)</title><rect x="345.5" y="437" width="4.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="348.51" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1146.8" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1149.79" y="271.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (141,414,140 samples, 0.75%)</title><rect x="216.5" y="421" width="8.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="219.52" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1139.8" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1142.80" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_sync (10,101,010 samples, 0.05%)</title><rect x="855.8" y="405" width="0.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="858.76" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.4" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.43" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.22%)</title><rect x="347.4" y="341" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="350.42" y="351.5" ></text>
</g>
<g >
<title>sim::Scheduler::get_current_time (20,202,020 samples, 0.11%)</title><rect x="227.3" y="469" width="1.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="230.32" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="389" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="831.44" y="399.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (90,909,090 samples, 0.48%)</title><rect x="359.5" y="437" width="5.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="362.49" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="100.2" y="341" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="103.23" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="23.3" y="405" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.34" y="415.5" ></text>
</g>
<g >
<title>YAML::Load (80,808,080 samples, 0.43%)</title><rect x="1183.6" y="485" width="5.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1186.65" y="495.5" ></text>
</g>
<g >
<title>sim::Process::~Process (70,707,070 samples, 0.38%)</title><rect x="1082.6" y="485" width="4.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1085.61" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.43%)</title><rect x="55.1" y="293" width="5.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.12" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1138.5" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1141.53" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.9" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.87" y="367.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (20,202,020 samples, 0.11%)</title><rect x="1185.6" y="341" width="1.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1188.55" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.05%)</title><rect x="862.1" y="421" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="865.12" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="76.7" y="341" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="79.72" y="351.5" ></text>
</g>
<g >
<title>memcmp@plt (10,101,010 samples, 0.05%)</title><rect x="205.1" y="421" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="208.08" y="431.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (60,606,060 samples, 0.32%)</title><rect x="78.0" y="437" width="3.8" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="80.99" y="447.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (353,535,350 samples, 1.88%)</title><rect x="1094.0" y="453" width="22.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1097.05" y="463.5" >s..</text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1186.8" y="277" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1189.82" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1183.6" y="277" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1186.65" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="581" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>[libc.so.6] (424,242,420 samples, 2.26%)</title><rect x="580.0" y="453" width="26.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="582.98" y="463.5" >[..</text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (10,101,010 samples, 0.05%)</title><rect x="1141.1" y="469" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1144.07" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="206.3" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="209.35" y="383.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (10,101,010 samples, 0.05%)</title><rect x="207.6" y="437" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="210.62" y="447.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (10,101,010 samples, 0.05%)</title><rect x="1188.1" y="277" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1191.09" y="287.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="1102.9" y="421" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1105.95" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1140.4" y="389" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1143.44" y="399.5" ></text>
</g>
<g >
<title>sim::Host::send_packet (585,858,580 samples, 3.12%)</title><rect x="1087.7" y="469" width="36.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1090.70" y="479.5" >sim..</text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.05%)</title><rect x="1097.2" y="405" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1100.23" y="415.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (60,606,060 samples, 0.32%)</title><rect x="1094.7" y="437" width="3.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1097.68" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (121,212,120 samples, 0.65%)</title><rect x="217.2" y="405" width="7.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="220.15" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1183.6" y="117" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1186.65" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.1" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.07" y="383.5" ></text>
</g>
<g >
<title>sim::BaseHasher::get_hash (20,202,020 samples, 0.11%)</title><rect x="862.8" y="437" width="1.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="865.75" y="447.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (10,101,010 samples, 0.05%)</title><rect x="114.8" y="517" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="117.85" y="527.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.05%)</title><rect x="343.0" y="405" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="345.97" y="415.5" ></text>
</g>
<g >
<title>sim::bfs[abi:cxx11] (555,555,550 samples, 2.96%)</title><rect x="1142.3" y="485" width="35.0" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1145.34" y="495.5" >si..</text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="355.7" y="389" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="358.68" y="399.5" ></text>
</g>
<g >
<title>sim::Event::Event (10,101,010 samples, 0.05%)</title><rect x="229.9" y="437" width="0.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="232.86" y="447.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (20,202,020 samples, 0.11%)</title><rect x="1095.3" y="421" width="1.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1098.32" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1183.6" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1186.65" y="255.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (60,606,060 samples, 0.32%)</title><rect x="1089.6" y="437" width="3.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1092.60" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1138.5" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1141.53" y="207.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (20,202,020 samples, 0.11%)</title><rect x="356.3" y="389" width="1.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="359.31" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1183.6" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1186.65" y="207.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (40,404,040 samples, 0.22%)</title><rect x="846.9" y="421" width="2.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="849.87" y="431.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (20,202,020 samples, 0.11%)</title><rect x="226.0" y="421" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="229.05" y="431.5" ></text>
</g>
<g >
<title>nons (18,757,575,570 samples, 100.00%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >nons</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1150.6" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1153.60" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="51.9" y="437" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="54.94" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="831.44" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.9" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.87" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="79.9" y="389" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="82.90" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.05%)</title><rect x="365.2" y="421" width="0.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="368.21" y="431.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1187.5" y="181" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.46" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1184.3" y="341" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1187.28" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="24.0" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.98" y="335.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_links (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="485" width="0.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1192.36" y="495.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (10,101,010 samples, 0.05%)</title><rect x="106.6" y="453" width="0.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="109.59" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (10,101,010 samples, 0.05%)</title><rect x="1157.6" y="453" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1160.59" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="208.9" y="421" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="211.89" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="79.9" y="405" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="82.90" y="415.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (10,101,010 samples, 0.05%)</title><rect x="364.6" y="405" width="0.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="367.57" y="415.5" ></text>
</g>
<g >
<title>malloc (60,606,060 samples, 0.32%)</title><rect x="623.8" y="453" width="3.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="626.83" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="104.7" y="261" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.68" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1139.8" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1142.80" y="367.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (15,545,454,390 samples, 82.88%)</title><rect x="150.4" y="501" width="978.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="153.43" y="511.5" >sim::Scheduler::tick</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="79.9" y="293" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="82.90" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="831.44" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.65%)</title><rect x="1106.8" y="373" width="7.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1109.76" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1183.6" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1186.65" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="831.44" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="54.5" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.48" y="287.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.05%)</title><rect x="356.3" y="373" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="359.31" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="54.5" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.48" y="207.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (30,303,030 samples, 0.16%)</title><rect x="1091.5" y="405" width="1.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1094.51" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="24.0" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.98" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="99.0" y="357" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="101.96" y="367.5" ></text>
</g>
<g >
<title>open64 (80,808,080 samples, 0.43%)</title><rect x="55.1" y="389" width="5.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="58.12" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1138.5" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1141.53" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.4" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.43" y="335.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="367.1" y="405" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="370.11" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="207.0" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="209.98" y="303.5" ></text>
</g>
<g >
<title>sim::Link::get_to_ingress_queue_size (40,404,040 samples, 0.22%)</title><rect x="381.7" y="469" width="2.6" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="384.73" y="479.5" ></text>
</g>
<g >
<title>YAML::Scanner::PopIndent (10,101,010 samples, 0.05%)</title><rect x="1185.6" y="277" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1188.55" y="287.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (60,606,060 samples, 0.32%)</title><rect x="1089.6" y="453" width="3.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1092.60" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.27%)</title><rect x="107.9" y="373" width="3.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="110.86" y="383.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1087.1" y="469" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1090.06" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="860.2" y="325" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="863.21" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1146.8" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1149.79" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="60.8" y="453" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="63.83" y="463.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (30,303,030 samples, 0.16%)</title><rect x="81.8" y="437" width="1.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="84.80" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="110.4" y="341" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="113.40" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="848.8" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="851.77" y="319.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (90,909,090 samples, 0.48%)</title><rect x="359.5" y="421" width="5.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="362.49" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="775.1" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="778.06" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="367.1" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="370.11" y="303.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1102.9" y="357" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1105.95" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (191,919,190 samples, 1.02%)</title><rect x="10.6" y="517" width="12.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.64" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.05%)</title><rect x="1102.9" y="405" width="0.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1105.95" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1138.5" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1141.53" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.1" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.07" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="52.6" y="421" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="55.57" y="431.5" ></text>
</g>
<g >
<title>sim::Process::~Process (121,212,120 samples, 0.65%)</title><rect x="142.8" y="501" width="7.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="145.81" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="86.3" y="437" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="89.25" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1183.6" y="149" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1186.65" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1138.5" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1141.53" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="363.9" y="341" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="366.94" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="101" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="831.44" y="111.5" ></text>
</g>
<g >
<title>sim::Link::arrive (393,939,390 samples, 2.10%)</title><rect x="202.5" y="469" width="24.8" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="205.54" y="479.5" >s..</text>
</g>
<g >
<title>vsnprintf (10,101,010 samples, 0.05%)</title><rect x="356.3" y="357" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="359.31" y="367.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="209.5" y="437" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="212.53" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.05%)</title><rect x="215.9" y="421" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="218.88" y="431.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnMapStart (10,101,010 samples, 0.05%)</title><rect x="1183.6" y="357" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1186.65" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.6" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.57" y="335.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (80,808,080 samples, 0.43%)</title><rect x="353.1" y="421" width="5.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="356.13" y="431.5" ></text>
</g>
<g >
<title>open64 (20,202,020 samples, 0.11%)</title><rect x="104.7" y="389" width="1.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="107.68" y="399.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (60,606,060 samples, 0.32%)</title><rect x="846.9" y="437" width="3.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="849.87" y="447.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="365.2" y="405" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="368.21" y="415.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (50,505,050 samples, 0.27%)</title><rect x="843.1" y="437" width="3.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="846.05" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="23.3" y="357" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.34" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="206.3" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="209.35" y="351.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="437" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1192.36" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (181,818,180 samples, 0.97%)</title><rect x="89.4" y="389" width="11.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="92.43" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="54.5" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.48" y="383.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="22.1" y="485" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="25.07" y="495.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (20,202,020 samples, 0.11%)</title><rect x="1185.6" y="325" width="1.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1188.55" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="367.1" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="370.11" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="831.44" y="367.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="1103.6" y="437" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1106.58" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.1" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.07" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1135.4" y="421" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1138.35" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="549" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1146.8" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1149.79" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="437" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="821.4" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="824.45" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.4" y="389" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.43" y="399.5" ></text>
</g>
<g >
<title>_IO_file_open (20,202,020 samples, 0.11%)</title><rect x="104.7" y="405" width="1.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="107.68" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="533" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="79.9" y="277" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="82.90" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="848.8" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="851.77" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.4" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.43" y="303.5" ></text>
</g>
<g >
<title>Logger::warn (2,232,323,210 samples, 11.90%)</title><rect x="439.6" y="453" width="140.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="442.55" y="463.5" >Logger::warn</text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.05%)</title><rect x="344.9" y="421" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="347.87" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::export_to_file (161,616,160 samples, 0.86%)</title><rect x="104.7" y="485" width="10.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="107.68" y="495.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="207.0" y="373" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="209.98" y="383.5" ></text>
</g>
<g >
<title>Logger::get_instance (80,808,080 samples, 0.43%)</title><rect x="663.2" y="437" width="5.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="666.23" y="447.5" ></text>
</g>
<g >
<title>sim::Link::get_from (10,101,010 samples, 0.05%)</title><rect x="1134.7" y="469" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1137.72" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="53.2" y="421" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.21" y="431.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (20,202,020 samples, 0.11%)</title><rect x="341.7" y="421" width="1.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="344.70" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.43%)</title><rect x="55.1" y="357" width="5.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.12" y="367.5" ></text>
</g>
<g >
<title>YAML::Scanner::VerifySimpleKey (10,101,010 samples, 0.05%)</title><rect x="1184.9" y="309" width="0.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1187.92" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="831.44" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="52.6" y="453" width="0.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="55.57" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="104.7" y="309" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.68" y="319.5" ></text>
</g>
<g >
<title>YAML::detail::node_data::insert_map_pair (10,101,010 samples, 0.05%)</title><rect x="1186.8" y="309" width="0.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1189.82" y="319.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.05%)</title><rect x="103.4" y="469" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="106.41" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="54.5" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.48" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (20,202,020 samples, 0.11%)</title><rect x="367.7" y="405" width="1.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="370.75" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.4" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.43" y="287.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (70,707,070 samples, 0.38%)</title><rect x="345.5" y="405" width="4.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="348.51" y="415.5" ></text>
</g>
<g >
<title>YAML::Node const YAML::Node::operator[]&lt;char [10]&gt; (10,101,010 samples, 0.05%)</title><rect x="1188.7" y="453" width="0.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1191.73" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="20.2" y="389" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="23.17" y="399.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (20,202,020 samples, 0.11%)</title><rect x="356.3" y="405" width="1.3" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="359.31" y="415.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (60,606,060 samples, 0.32%)</title><rect x="204.4" y="453" width="3.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="207.44" y="463.5" ></text>
</g>
<g >
<title>sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::get_devices (10,101,010 samples, 0.05%)</title><rect x="1141.7" y="485" width="0.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1144.71" y="495.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (363,636,360 samples, 1.94%)</title><rect x="61.5" y="453" width="22.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="64.47" y="463.5" >s..</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1146.8" y="453" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1149.79" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="775.1" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="778.06" y="335.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (30,303,030 samples, 0.16%)</title><rect x="862.8" y="453" width="1.9" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="865.75" y="463.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (10,101,010 samples, 0.05%)</title><rect x="232.4" y="421" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="235.40" y="431.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (242,424,240 samples, 1.29%)</title><rect x="62.1" y="437" width="15.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="65.11" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1139.8" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1142.80" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="207.0" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="209.98" y="271.5" ></text>
</g>
<g >
<title>sim::Host::~Host (171,717,170 samples, 0.92%)</title><rect x="10.6" y="453" width="10.8" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="13.64" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (10,101,010 samples, 0.05%)</title><rect x="1123.3" y="453" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1126.28" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.6" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.57" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (30,303,030 samples, 0.16%)</title><rect x="1172.2" y="453" width="1.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1175.21" y="463.5" ></text>
</g>
<g >
<title>malloc (70,707,070 samples, 0.38%)</title><rect x="1147.4" y="453" width="4.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1150.43" y="463.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanValue (10,101,010 samples, 0.05%)</title><rect x="1186.2" y="309" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1189.19" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="356.3" y="309" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="359.31" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="843.7" y="405" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="846.69" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (30,303,030 samples, 0.16%)</title><rect x="360.8" y="405" width="1.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="363.76" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="104.7" y="213" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.68" y="223.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1187.5" y="261" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.46" y="271.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (10,101,010 samples, 0.05%)</title><rect x="1093.4" y="453" width="0.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1096.41" y="463.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="100.9" y="437" width="0.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="103.87" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (171,717,170 samples, 0.92%)</title><rect x="10.6" y="485" width="10.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.64" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="54.5" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.48" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1139.8" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1142.80" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="23.3" y="437" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.34" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1150.6" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1153.60" y="383.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (20,202,020 samples, 0.11%)</title><rect x="1159.5" y="469" width="1.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1162.50" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (191,919,190 samples, 1.02%)</title><rect x="65.3" y="389" width="12.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="68.28" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1183.6" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1186.65" y="271.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="339.8" y="453" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="342.79" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1150.6" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1153.60" y="351.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10,101,010 samples, 0.05%)</title><rect x="1122.0" y="437" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1125.01" y="447.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1187.5" y="245" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.46" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="59.6" y="149" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="62.56" y="159.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (10,101,010 samples, 0.05%)</title><rect x="54.5" y="469" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="57.48" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.43%)</title><rect x="55.1" y="341" width="5.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.12" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="775.1" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="778.06" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.22%)</title><rect x="57.7" y="165" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.66" y="175.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (60,606,060 samples, 0.32%)</title><rect x="111.0" y="469" width="3.8" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="114.03" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.4" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.43" y="271.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (151,515,150 samples, 0.81%)</title><rect x="215.9" y="437" width="9.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="218.88" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="113.6" y="357" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="116.58" y="367.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (101,010,100 samples, 0.54%)</title><rect x="1183.6" y="517" width="6.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1186.65" y="527.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1183.6" y="293" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1186.65" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="363.9" y="309" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="366.94" y="319.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::operator (70,707,070 samples, 0.38%)</title><rect x="228.6" y="485" width="4.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="231.59" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="69" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="831.44" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="453" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.05%)</title><rect x="210.8" y="421" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="213.80" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="207.0" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="209.98" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1138.5" y="405" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1141.53" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="28.4" y="469" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.43" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.6" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.57" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="775.1" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="778.06" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.27%)</title><rect x="346.8" y="373" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="349.78" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.36" y="303.5" ></text>
</g>
<g >
<title>cfree (272,727,270 samples, 1.45%)</title><rect x="606.7" y="453" width="17.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="609.67" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="831.44" y="287.5" ></text>
</g>
<g >
<title>sim::Process::operator (13,505,050,370 samples, 72.00%)</title><rect x="233.0" y="485" width="849.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="236.04" y="495.5" >sim::Process::operator</text>
</g>
<g >
<title>sim::IdentifierFactory::~IdentifierFactory (181,818,180 samples, 0.97%)</title><rect x="10.6" y="501" width="11.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="13.64" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.6" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.57" y="223.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1102.9" y="373" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1105.95" y="383.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10,101,010 samples, 0.05%)</title><rect x="1122.6" y="453" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1125.64" y="463.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.16%)</title><rect x="1139.2" y="437" width="1.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1142.17" y="447.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (242,424,240 samples, 1.29%)</title><rect x="86.3" y="453" width="15.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="89.25" y="463.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="207.0" y="389" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="209.98" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (10,101,010 samples, 0.05%)</title><rect x="340.4" y="421" width="0.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="343.43" y="431.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="29.1" y="469" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="32.06" y="479.5" ></text>
</g>
<g >
<title>_start (18,747,474,560 samples, 99.95%)</title><rect x="10.6" y="581" width="1179.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.64" y="591.5" >_start</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1171.6" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.57" y="383.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_outlinks (40,404,040 samples, 0.22%)</title><rect x="1157.0" y="469" width="2.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1159.96" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="1160.8" y="469" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1163.77" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="831.44" y="319.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.11%)</title><rect x="1137.9" y="453" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1140.89" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="230.5" y="421" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="233.50" y="431.5" ></text>
</g>
<g >
<title>__libc_start_main (18,747,474,560 samples, 99.95%)</title><rect x="10.6" y="565" width="1179.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.64" y="575.5" >__libc_start_main</text>
</g>
<g >
<title>operator delete (10,101,010 samples, 0.05%)</title><rect x="1131.5" y="485" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1134.54" y="495.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (272,727,270 samples, 1.45%)</title><rect x="84.3" y="469" width="17.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="87.35" y="479.5" ></text>
</g>
<g >
<title>sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::recalculate_paths (878,787,870 samples, 4.68%)</title><rect x="1128.4" y="501" width="55.2" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="1131.36" y="511.5" >sim::..</text>
</g>
<g >
<title>Logger::info (10,101,010 samples, 0.05%)</title><rect x="338.5" y="453" width="0.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="341.52" y="463.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="862.8" y="421" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="865.75" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="81.2" y="165" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="84.17" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="54.5" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.48" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="828.4" y="85" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="831.44" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="848.8" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="851.77" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="367.1" y="373" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="370.11" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1150.6" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1153.60" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="367.1" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="370.11" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="104.7" y="357" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.68" y="367.5" ></text>
</g>
<g >
<title>Logger::info (20,202,020 samples, 0.11%)</title><rect x="203.2" y="453" width="1.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="206.17" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="848.8" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="851.77" y="335.5" ></text>
</g>
<g >
<title>Logger::info (20,202,020 samples, 0.11%)</title><rect x="438.3" y="453" width="1.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="441.28" y="463.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1187.5" y="213" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.46" y="223.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanNextToken (10,101,010 samples, 0.05%)</title><rect x="1187.5" y="293" width="0.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1190.46" y="303.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (30,303,030 samples, 0.16%)</title><rect x="894.5" y="453" width="1.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="897.52" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="29.1" y="437" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="32.06" y="447.5" ></text>
</g>
<g >
<title>YAML::detail::memory::create_node (10,101,010 samples, 0.05%)</title><rect x="1183.6" y="325" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1186.65" y="335.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (60,606,060 samples, 0.32%)</title><rect x="857.7" y="437" width="3.8" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="860.67" y="447.5" ></text>
</g>
<g >
<title>sim::RoutingModule::update_routing_table (131,313,130 samples, 0.70%)</title><rect x="1133.4" y="485" width="8.3" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1136.45" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.9" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.87" y="191.5" ></text>
</g>
<g >
<title>Logger::info (10,101,010 samples, 0.05%)</title><rect x="1087.7" y="453" width="0.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1090.70" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.43%)</title><rect x="55.1" y="261" width="5.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.12" y="271.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (30,303,030 samples, 0.16%)</title><rect x="1186.8" y="341" width="1.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.82" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="367.1" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="370.11" y="319.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (101,010,100 samples, 0.54%)</title><rect x="1116.3" y="453" width="6.3" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1119.29" y="463.5" ></text>
</g>
<g >
<title>malloc (151,515,150 samples, 0.81%)</title><rect x="1045.1" y="437" width="9.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1048.12" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1139.8" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1142.80" y="335.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.05%)</title><rect x="848.8" y="389" width="0.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="851.77" y="399.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_flows (10,101,010 samples, 0.05%)</title><rect x="1188.7" y="485" width="0.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1191.73" y="495.5" ></text>
</g>
<g >
<title>vsnprintf (222,222,220 samples, 1.18%)</title><rect x="86.9" y="421" width="14.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="89.89" y="431.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (20,202,020 samples, 0.11%)</title><rect x="365.8" y="421" width="1.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="368.84" y="431.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (10,101,010 samples, 0.05%)</title><rect x="54.5" y="421" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="57.48" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="23.3" y="421" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.34" y="431.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="1094.0" y="437" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1097.05" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.05%)</title><rect x="355.7" y="373" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="358.68" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1173.5" y="389" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1176.48" y="399.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (20,202,020 samples, 0.11%)</title><rect x="363.3" y="405" width="1.3" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="366.30" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (50,505,050 samples, 0.27%)</title><rect x="1177.9" y="485" width="3.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1180.93" y="495.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::export_to_files (1,292,929,280 samples, 6.89%)</title><rect x="22.7" y="501" width="81.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="25.71" y="511.5" >sim::Link..</text>
</g>
<g >
<title>[libc.so.6] (191,919,190 samples, 1.02%)</title><rect x="10.6" y="533" width="12.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.64" y="543.5" ></text>
</g>
<g >
<title>sim::Event::Event (444,444,440 samples, 2.37%)</title><rect x="1054.7" y="453" width="27.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1057.65" y="463.5" >s..</text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (30,303,030 samples, 0.16%)</title><rect x="205.7" y="421" width="1.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="208.71" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="367.1" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="370.11" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1146.8" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1149.79" y="399.5" ></text>
</g>
<g >
<title>operator delete (50,505,050 samples, 0.27%)</title><rect x="289.0" y="469" width="3.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="291.96" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="22.1" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.07" y="319.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="863.4" y="421" width="0.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="866.39" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (18,747,474,560 samples, 99.95%)</title><rect x="10.6" y="549" width="1179.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.64" y="559.5" >[libc.so.6]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1146.8" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1149.79" y="383.5" ></text>
</g>
<g >
<title>vsnprintf (242,424,240 samples, 1.29%)</title><rect x="62.1" y="421" width="15.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="65.11" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="363.9" y="325" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="366.94" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="54.5" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.48" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.05%)</title><rect x="1166.5" y="469" width="0.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1169.49" y="479.5" ></text>
</g>
</g>
</svg>
