<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="694.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="677" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="677" > </text>
<g id="frames">
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="113.5" y="437" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="116.53" y="447.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (50,505,050 samples, 0.26%)</title><rect x="104.2" y="501" width="3.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="107.18" y="511.5" ></text>
</g>
<g >
<title>YAML::Parser::HandleNextDocument (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="501" width="5.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1186.14" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="54.3" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.28" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="215.8" y="405" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="218.81" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.4" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.43" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.26%)</title><rect x="109.2" y="437" width="3.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="112.16" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1092.7" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1095.71" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="202.1" y="501" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="205.09" y="511.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (70,707,070 samples, 0.37%)</title><rect x="107.9" y="501" width="4.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="110.92" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1169.4" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.42" y="303.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1095.2" y="469" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1098.20" y="479.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (30,303,030 samples, 0.16%)</title><rect x="215.2" y="453" width="1.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="218.19" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="485" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.48%)</title><rect x="346.8" y="405" width="5.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="349.79" y="415.5" ></text>
</g>
<g >
<title>operator delete (20,202,020 samples, 0.11%)</title><rect x="116.6" y="533" width="1.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="119.65" y="543.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::node*,  (10,101,010 samples, 0.05%)</title><rect x="1188.8" y="469" width="0.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1191.75" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.2" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.22" y="335.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::export_metrics_to_files (1,494,949,480 samples, 7.82%)</title><rect x="22.5" y="549" width="92.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="25.47" y="559.5" >sim::Metric..</text>
</g>
<g >
<title>operator delete (90,909,090 samples, 0.48%)</title><rect x="286.9" y="501" width="5.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="289.91" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.2" y="437" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.22" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (262,626,260 samples, 1.37%)</title><rect x="81.7" y="469" width="16.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="84.72" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="55.5" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.53" y="207.5" ></text>
</g>
<g >
<title>vsnprintf (80,808,080 samples, 0.42%)</title><rect x="860.7" y="421" width="5.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="863.70" y="431.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::send_packets (60,606,060 samples, 0.32%)</title><rect x="354.3" y="485" width="3.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="357.27" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.8" y="405" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.84" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1142.6" y="485" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1145.60" y="495.5" ></text>
</g>
<g >
<title>YAML::Node const YAML::Node::operator[]&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="453" width="0.6" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1192.38" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="857.0" y="453" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="859.96" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="453" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="864.4" y="357" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="867.44" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="111.7" y="389" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="114.66" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (70,707,070 samples, 0.37%)</title><rect x="847.6" y="453" width="4.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="850.60" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="57.4" y="197" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.40" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="54.3" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.28" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="56.2" y="405" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="59.15" y="415.5" ></text>
</g>
<g >
<title>_IO_file_fopen (50,505,050 samples, 0.26%)</title><rect x="56.2" y="453" width="3.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="59.15" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1185.6" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.63" y="239.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="1121.4" y="485" width="0.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1124.40" y="495.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10,101,010 samples, 0.05%)</title><rect x="1156.3" y="501" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1159.32" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.05%)</title><rect x="346.2" y="453" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="349.16" y="463.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::get_id[abi:cxx11] (10,101,010 samples, 0.05%)</title><rect x="353.6" y="485" width="0.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="356.65" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1092.7" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1095.71" y="319.5" ></text>
</g>
<g >
<title>sim::Host::process (515,151,510 samples, 2.70%)</title><rect x="333.7" y="501" width="31.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="336.69" y="511.5" >si..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.2" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.22" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="100.4" y="421" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="103.43" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1185.6" y="37" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.63" y="47.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1185.6" y="53" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.63" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="54.9" y="277" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.90" y="287.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (90,909,090 samples, 0.48%)</title><rect x="346.8" y="453" width="5.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="349.79" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.8" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.84" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.8" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.84" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="1148.2" y="309" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1151.21" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (242,424,240 samples, 1.27%)</title><rect x="83.0" y="437" width="14.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="85.97" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1188.1" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1191.13" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1188.1" y="149" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1191.13" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.21%)</title><rect x="104.8" y="197" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.80" y="207.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (585,858,580 samples, 3.07%)</title><rect x="200.8" y="517" width="36.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="203.85" y="527.5" >sim..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="25.6" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="28.59" y="287.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (80,808,080 samples, 0.42%)</title><rect x="860.7" y="437" width="5.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="863.70" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="210.8" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="213.82" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1169.4" y="453" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.42" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="100.4" y="501" width="0.7" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="103.43" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanNextToken (10,101,010 samples, 0.05%)</title><rect x="1184.4" y="341" width="0.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1187.39" y="351.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (20,202,020 samples, 0.11%)</title><rect x="217.1" y="453" width="1.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="220.06" y="463.5" ></text>
</g>
<g >
<title>sim::LinkQueue::empty (30,303,030 samples, 0.16%)</title><rect x="853.8" y="485" width="1.9" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="856.84" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (313,131,310 samples, 1.64%)</title><rect x="586.9" y="485" width="19.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="589.90" y="495.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.11%)</title><rect x="1170.7" y="469" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1173.67" y="479.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (30,303,030 samples, 0.16%)</title><rect x="209.6" y="469" width="1.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="212.58" y="479.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::parent_path (10,101,010 samples, 0.05%)</title><rect x="59.3" y="501" width="0.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="62.27" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.2" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.22" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1188.1" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1191.13" y="239.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (222,222,220 samples, 1.16%)</title><rect x="219.6" y="469" width="13.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="222.56" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (20,202,020 samples, 0.11%)</title><rect x="1174.4" y="517" width="1.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1177.41" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.21%)</title><rect x="1147.6" y="373" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1150.59" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="215.8" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="218.81" y="335.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (50,505,050 samples, 0.26%)</title><rect x="848.8" y="437" width="3.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="851.85" y="447.5" ></text>
</g>
<g >
<title>auto sim::YamlParser::process_links (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="501" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1192.38" y="511.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (585,858,580 samples, 3.07%)</title><rect x="870.7" y="485" width="36.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="873.68" y="495.5" >sim..</text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (50,505,050 samples, 0.26%)</title><rect x="338.1" y="453" width="3.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="341.05" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="104.2" y="389" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.18" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.26%)</title><rect x="109.2" y="421" width="3.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="112.16" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="361.8" y="341" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="364.75" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.05%)</title><rect x="52.4" y="501" width="0.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="55.41" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="844.5" y="437" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="847.48" y="447.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (50,505,050 samples, 0.26%)</title><rect x="1184.4" y="373" width="3.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1187.39" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="54.9" y="421" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.90" y="431.5" ></text>
</g>
<g >
<title>fopen (50,505,050 samples, 0.26%)</title><rect x="56.2" y="469" width="3.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="59.15" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;Time&lt;Nanosecond&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (30,303,030 samples, 0.16%)</title><rect x="53.0" y="501" width="1.9" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="56.03" y="511.5" ></text>
</g>
<g >
<title>brk (10,101,010 samples, 0.05%)</title><rect x="100.4" y="389" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="103.43" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;YAML::detail::node&gt;, std::shared_ptr&lt;YAML::detail::node&gt;, std::_Identity&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt;, std::less&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="1188.8" y="485" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1191.75" y="495.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.11%)</title><rect x="218.3" y="469" width="1.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="221.31" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (202,020,200 samples, 1.06%)</title><rect x="85.5" y="405" width="12.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="88.47" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="104.2" y="373" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.18" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1137.0" y="453" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1139.99" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1188.1" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1191.13" y="255.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="437" width="5.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.14" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1169.4" y="437" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.42" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (131,313,130 samples, 0.69%)</title><rect x="1163.8" y="501" width="8.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1166.81" y="511.5" ></text>
</g>
<g >
<title>std::locale::~locale (10,101,010 samples, 0.05%)</title><rect x="1096.4" y="437" width="0.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1099.45" y="447.5" ></text>
</g>
<g >
<title>YAML::Load (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="517" width="5.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1186.14" y="527.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.11%)</title><rect x="1138.9" y="453" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1141.86" y="463.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (10,101,010 samples, 0.05%)</title><rect x="354.9" y="453" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="357.89" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="51.8" y="469" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="54.79" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1169.4" y="469" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.42" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1185.6" y="149" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.63" y="159.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (20,202,020 samples, 0.11%)</title><rect x="1095.8" y="469" width="1.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1098.82" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>YAML::LoadFile (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="533" width="5.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1186.14" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.1" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.10" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (40,404,040 samples, 0.21%)</title><rect x="49.9" y="501" width="2.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="52.92" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (30,303,030 samples, 0.16%)</title><rect x="1170.0" y="485" width="1.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1173.04" y="495.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="827.6" y="469" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="830.64" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.4" y="261" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.43" y="271.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (10,101,010 samples, 0.05%)</title><rect x="1092.7" y="437" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1095.71" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (191,919,190 samples, 1.00%)</title><rect x="10.6" y="549" width="11.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.62" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (171,717,170 samples, 0.90%)</title><rect x="221.4" y="389" width="10.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="224.43" y="399.5" ></text>
</g>
<g >
<title>vsnprintf (50,505,050 samples, 0.26%)</title><rect x="109.2" y="453" width="3.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="112.16" y="463.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="857.0" y="469" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="859.96" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1169.4" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.42" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="851.3" y="421" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="854.34" y="431.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Switch::process (101,010,100 samples, 0.53%)</title><rect x="1122.0" y="517" width="6.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1125.02" y="527.5" ></text>
</g>
<g >
<title>sim::Process::operator (13,595,959,460 samples, 71.14%)</title><rect x="243.3" y="517" width="839.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="246.26" y="527.5" >sim::Process::operator</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.2" y="421" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.22" y="431.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;sim::IHost,  (10,101,010 samples, 0.05%)</title><rect x="364.9" y="485" width="0.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="367.87" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="58.0" y="181" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="61.02" y="191.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (70,707,070 samples, 0.37%)</title><rect x="1184.4" y="389" width="4.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1187.39" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="104.2" y="261" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.18" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_erase (40,404,040 samples, 0.21%)</title><rect x="1156.9" y="501" width="2.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1159.95" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1149.5" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1152.46" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="54.9" y="389" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.90" y="399.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="1088.3" y="485" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1091.34" y="495.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.05%)</title><rect x="1103.9" y="453" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1106.93" y="463.5" ></text>
</g>
<g >
<title>Logger::info (10,101,010 samples, 0.05%)</title><rect x="436.6" y="485" width="0.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="439.60" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="517" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.21%)</title><rect x="338.1" y="437" width="2.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="341.05" y="447.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::data[abi:cxx11] (20,202,020 samples, 0.11%)</title><rect x="26.2" y="517" width="1.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="29.22" y="527.5" ></text>
</g>
<g >
<title>vsnprintf (10,101,010 samples, 0.05%)</title><rect x="361.8" y="389" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="364.75" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1153.2" y="453" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1156.20" y="463.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (10,101,010 samples, 0.05%)</title><rect x="357.4" y="421" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="360.39" y="431.5" ></text>
</g>
<g >
<title>main (18,909,090,720 samples, 98.94%)</title><rect x="22.5" y="565" width="1167.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="25.47" y="575.5" >main</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="25.0" y="469" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="27.97" y="479.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (10,101,010 samples, 0.05%)</title><rect x="341.2" y="453" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="344.17" y="463.5" ></text>
</g>
<g >
<title>sim::Switch::process (9,767,676,670 samples, 51.11%)</title><rect x="391.7" y="501" width="603.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="394.69" y="511.5" >sim::Switch::process</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.1" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.10" y="367.5" ></text>
</g>
<g >
<title>_start (19,101,009,910 samples, 99.95%)</title><rect x="10.6" y="613" width="1179.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.62" y="623.5" >_start</text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (10,101,010 samples, 0.05%)</title><rect x="1185.0" y="325" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1188.01" y="335.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="870.1" y="453" width="0.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="873.05" y="463.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (121,212,120 samples, 0.63%)</title><rect x="344.9" y="469" width="7.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="347.92" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.42%)</title><rect x="860.7" y="405" width="5.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="863.70" y="415.5" ></text>
</g>
<g >
<title>std::ostream::put (20,202,020 samples, 0.11%)</title><rect x="98.6" y="501" width="1.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="101.56" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="55.5" y="181" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.53" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="345.5" y="453" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="348.54" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="104.2" y="277" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.18" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.21%)</title><rect x="1100.2" y="453" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1103.19" y="463.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnScalar (20,202,020 samples, 0.11%)</title><rect x="1187.5" y="357" width="1.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1190.51" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.1" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.10" y="351.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (363,636,360 samples, 1.90%)</title><rect x="309.4" y="501" width="22.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="312.37" y="511.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.4" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.43" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="56.2" y="357" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="59.15" y="367.5" ></text>
</g>
<g >
<title>sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::recalculate_paths (888,888,880 samples, 4.65%)</title><rect x="1128.3" y="533" width="54.8" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="1131.26" y="543.5" >sim::..</text>
</g>
<g >
<title>sim::Host::~Host (10,101,010 samples, 0.05%)</title><rect x="10.6" y="469" width="0.6" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="13.62" y="479.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (60,606,060 samples, 0.32%)</title><rect x="338.1" y="469" width="3.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="341.05" y="479.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_links (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="517" width="0.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1192.38" y="527.5" ></text>
</g>
<g >
<title>std::locale::operator= (10,101,010 samples, 0.05%)</title><rect x="213.9" y="437" width="0.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="216.94" y="447.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (20,202,020 samples, 0.11%)</title><rect x="866.3" y="469" width="1.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="869.31" y="479.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (60,606,060 samples, 0.32%)</title><rect x="338.1" y="485" width="3.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="341.05" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (40,404,040 samples, 0.21%)</title><rect x="1176.3" y="517" width="2.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1179.28" y="527.5" ></text>
</g>
<g >
<title>pthread_once (10,101,010 samples, 0.05%)</title><rect x="78.0" y="469" width="0.6" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="80.98" y="479.5" ></text>
</g>
<g >
<title>sim::Process::~Process (40,404,040 samples, 0.21%)</title><rect x="1082.7" y="517" width="2.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1085.73" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="1158.8" y="485" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1161.82" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.1" y="469" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.10" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="54.9" y="373" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.90" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.8" y="453" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.84" y="463.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (20,202,020 samples, 0.11%)</title><rect x="1187.5" y="373" width="1.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1190.51" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.4" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.43" y="335.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (40,404,040 samples, 0.21%)</title><rect x="906.8" y="485" width="2.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="909.85" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="501" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1131.4" y="501" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1134.37" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="54.9" y="309" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.90" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="25.6" y="453" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="28.59" y="463.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (60,606,060 samples, 0.32%)</title><rect x="209.0" y="485" width="3.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="211.95" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1137.0" y="437" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1139.99" y="447.5" ></text>
</g>
<g >
<title>vsnprintf (30,303,030 samples, 0.16%)</title><rect x="112.9" y="453" width="1.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="115.91" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="54.3" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.28" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.11%)</title><rect x="343.7" y="437" width="1.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="346.67" y="447.5" ></text>
</g>
<g >
<title>__uselocale (20,202,020 samples, 0.11%)</title><rect x="232.0" y="437" width="1.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="235.03" y="447.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1185.6" y="277" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1188.63" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="351.8" y="357" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="354.78" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="613" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.1" y="501" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.10" y="511.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::memory*,  (10,101,010 samples, 0.05%)</title><rect x="1188.8" y="501" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1191.75" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.8" y="389" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.84" y="399.5" ></text>
</g>
<g >
<title>nons (19,111,110,920 samples, 100.00%)</title><rect x="10.0" y="629" width="1180.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >nons</text>
</g>
<g >
<title>sim::Link::Transmit::operator (101,010,100 samples, 0.53%)</title><rect x="237.0" y="517" width="6.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="240.02" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="210.8" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="213.82" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="1161.3" y="485" width="0.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1164.31" y="495.5" ></text>
</g>
<g >
<title>operator new (191,919,190 samples, 1.00%)</title><rect x="1052.2" y="485" width="11.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1055.17" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.2" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.22" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.26%)</title><rect x="238.9" y="453" width="3.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="241.89" y="463.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="210.8" y="405" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="213.82" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.05%)</title><rect x="1114.5" y="453" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1117.53" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="100.4" y="485" width="0.7" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="103.43" y="495.5" ></text>
</g>
<g >
<title>operator new (191,919,190 samples, 1.00%)</title><rect x="634.3" y="485" width="11.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="637.30" y="495.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1173.2" y="469" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1176.16" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="25.6" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="28.59" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="54.9" y="261" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.90" y="271.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (373,737,370 samples, 1.96%)</title><rect x="212.7" y="485" width="23.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="215.70" y="495.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.4" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.43" y="239.5" ></text>
</g>
<g >
<title>Logger::warn (2,424,242,400 samples, 12.68%)</title><rect x="437.2" y="485" width="149.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="440.22" y="495.5" >Logger::warn</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="351.8" y="341" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="354.78" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.42%)</title><rect x="347.4" y="373" width="5.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="350.41" y="383.5" ></text>
</g>
<g >
<title>__libc_start_main (19,101,009,910 samples, 99.95%)</title><rect x="10.6" y="597" width="1179.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.62" y="607.5" >__libc_start_main</text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="1111.4" y="357" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1114.42" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.42%)</title><rect x="17.5" y="437" width="5.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.48" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (50,505,050 samples, 0.26%)</title><rect x="101.1" y="517" width="3.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="104.06" y="527.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="453" width="5.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.14" y="463.5" ></text>
</g>
<g >
<title>vsnprintf (202,020,200 samples, 1.06%)</title><rect x="219.6" y="421" width="12.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="222.56" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1092.7" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1095.71" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="360.5" y="421" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="363.51" y="431.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="437" width="0.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1192.38" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (161,616,160 samples, 0.85%)</title><rect x="619.3" y="469" width="10.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="622.33" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1185.6" y="69" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.63" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1188.1" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1191.13" y="207.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::~Arrive (10,101,010 samples, 0.05%)</title><rect x="131.6" y="533" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="134.62" y="543.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="1104.6" y="469" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1107.56" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1092.7" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1095.71" y="335.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="25.6" y="501" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="28.59" y="511.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanValue (10,101,010 samples, 0.05%)</title><rect x="1186.9" y="341" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1189.88" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (90,909,090 samples, 0.48%)</title><rect x="346.8" y="437" width="5.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="349.79" y="447.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (20,202,020 samples, 0.11%)</title><rect x="54.9" y="501" width="1.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="57.90" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.4" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.43" y="383.5" ></text>
</g>
<g >
<title>vsnprintf (252,525,250 samples, 1.32%)</title><rect x="62.4" y="453" width="15.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="65.39" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="54.3" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.28" y="271.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.05%)</title><rect x="99.2" y="485" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="102.19" y="495.5" ></text>
</g>
<g >
<title>operator new (252,525,250 samples, 1.32%)</title><rect x="828.9" y="469" width="15.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="831.89" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.42%)</title><rect x="347.4" y="389" width="5.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="350.41" y="399.5" ></text>
</g>
<g >
<title>sim::bfs[abi:cxx11] (555,555,550 samples, 2.91%)</title><rect x="1140.1" y="517" width="34.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1143.11" y="527.5" >si..</text>
</g>
<g >
<title>vsnprintf (90,909,090 samples, 0.48%)</title><rect x="346.8" y="421" width="5.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="349.79" y="431.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="341.8" y="453" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="344.80" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="25.6" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="28.59" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.2" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.22" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (191,919,190 samples, 1.00%)</title><rect x="10.6" y="517" width="11.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.62" y="527.5" ></text>
</g>
<g >
<title>open64 (50,505,050 samples, 0.26%)</title><rect x="56.2" y="421" width="3.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="59.15" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.21%)</title><rect x="1147.6" y="389" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1150.59" y="399.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (333,333,330 samples, 1.74%)</title><rect x="59.9" y="501" width="20.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="62.89" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.26%)</title><rect x="19.4" y="421" width="3.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.36" y="431.5" ></text>
</g>
<g >
<title>YAML::Node::~Node (10,101,010 samples, 0.05%)</title><rect x="1188.8" y="533" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1191.75" y="543.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="336.8" y="485" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="339.81" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_sync (10,101,010 samples, 0.05%)</title><rect x="216.4" y="421" width="0.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="219.44" y="431.5" ></text>
</g>
<g >
<title>sim::Host::~Host (181,818,180 samples, 0.95%)</title><rect x="11.2" y="485" width="11.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="14.25" y="495.5" ></text>
</g>
<g >
<title>cfree (353,535,350 samples, 1.85%)</title><rect x="179.0" y="517" width="21.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="182.02" y="527.5" >c..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (40,404,040 samples, 0.21%)</title><rect x="112.3" y="501" width="2.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="115.28" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1092.7" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1095.71" y="351.5" ></text>
</g>
<g >
<title>malloc (161,616,160 samples, 0.85%)</title><rect x="636.2" y="469" width="10.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="639.17" y="479.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (292,929,290 samples, 1.53%)</title><rect x="80.5" y="501" width="18.1" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="83.48" y="511.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (10,101,010 samples, 0.05%)</title><rect x="97.9" y="469" width="0.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="100.94" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.1" y="453" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.10" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="54.9" y="341" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.90" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="113.5" y="405" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="116.53" y="415.5" ></text>
</g>
<g >
<title>sim::ECN::get_congestion_mark (10,101,010 samples, 0.05%)</title><rect x="295.6" y="501" width="0.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="298.64" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.4" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.43" y="287.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (222,222,220 samples, 1.16%)</title><rect x="219.6" y="453" width="13.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="222.56" y="463.5" ></text>
</g>
<g >
<title>operator delete (30,303,030 samples, 0.16%)</title><rect x="632.4" y="485" width="1.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="635.43" y="495.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.05%)</title><rect x="213.9" y="453" width="0.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="216.94" y="463.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.26%)</title><rect x="292.5" y="501" width="3.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="295.53" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (262,626,260 samples, 1.37%)</title><rect x="184.6" y="501" width="16.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="187.63" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="104.2" y="325" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.18" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="1147.0" y="421" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1149.97" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.2" y="485" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.22" y="495.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="361.1" y="421" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="364.13" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="54.9" y="245" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.90" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="212.7" y="453" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="215.70" y="463.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (50,505,050 samples, 0.26%)</title><rect x="387.9" y="501" width="3.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="390.95" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="210.8" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="213.82" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="23.7" y="485" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="26.72" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="54.3" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.28" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (212,121,210 samples, 1.11%)</title><rect x="84.8" y="421" width="13.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="87.84" y="431.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.11%)</title><rect x="1138.9" y="469" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1141.86" y="479.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (30,303,030 samples, 0.16%)</title><rect x="359.9" y="437" width="1.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="362.88" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.8" y="469" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.84" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="104.2" y="341" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.18" y="351.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (222,222,220 samples, 1.16%)</title><rect x="573.2" y="469" width="13.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="576.18" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1092.7" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1095.71" y="415.5" ></text>
</g>
<g >
<title>memcmp@plt (10,101,010 samples, 0.05%)</title><rect x="845.1" y="437" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="848.11" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1185.6" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.63" y="175.5" ></text>
</g>
<g >
<title>Logger::get_instance (50,505,050 samples, 0.26%)</title><rect x="433.5" y="485" width="3.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="436.48" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::memory_holder*,  (10,101,010 samples, 0.05%)</title><rect x="1188.8" y="517" width="0.6" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1191.75" y="527.5" ></text>
</g>
<g >
<title>vsnprintf (111,111,110 samples, 0.58%)</title><rect x="1106.4" y="421" width="6.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1109.43" y="431.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (50,505,050 samples, 0.26%)</title><rect x="104.2" y="485" width="3.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="107.18" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.26%)</title><rect x="228.9" y="357" width="3.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="231.91" y="367.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (10,101,010 samples, 0.05%)</title><rect x="361.8" y="421" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="364.75" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="549" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="25.6" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="28.59" y="399.5" ></text>
</g>
<g >
<title>__default_morecore (10,101,010 samples, 0.05%)</title><rect x="100.4" y="405" width="0.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="103.43" y="415.5" ></text>
</g>
<g >
<title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (10,101,010 samples, 0.05%)</title><rect x="79.9" y="469" width="0.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="82.85" y="479.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.26%)</title><rect x="629.3" y="485" width="3.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="632.31" y="495.5" ></text>
</g>
<g >
<title>sim::Link::get_max_to_ingress_queue_size (141,414,140 samples, 0.74%)</title><rect x="365.5" y="501" width="8.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="368.50" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::weak_ptr&lt;sim::ILink&gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="1132.6" y="501" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1135.62" y="511.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (10,101,010 samples, 0.05%)</title><rect x="363.0" y="437" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="366.00" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="25.6" y="421" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="28.59" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="104.2" y="245" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.18" y="255.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet const&amp;&gt; (10,101,010 samples, 0.05%)</title><rect x="363.0" y="453" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="366.00" y="463.5" ></text>
</g>
<g >
<title>_IO_file_open (50,505,050 samples, 0.26%)</title><rect x="56.2" y="437" width="3.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="59.15" y="447.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (20,202,020 samples, 0.11%)</title><rect x="844.5" y="469" width="1.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="847.48" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (10,101,010 samples, 0.05%)</title><rect x="344.3" y="421" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="347.29" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.1" y="437" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.10" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_erase (40,404,040 samples, 0.21%)</title><rect x="1159.4" y="501" width="2.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1162.44" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="1147.0" y="437" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1149.97" y="447.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (50,505,050 samples, 0.26%)</title><rect x="354.9" y="469" width="3.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="357.89" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1185.6" y="261" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1188.63" y="271.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (60,606,060 samples, 0.32%)</title><rect x="359.9" y="469" width="3.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="362.88" y="479.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="100.4" y="437" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="103.43" y="447.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.21%)</title><rect x="47.4" y="501" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="50.42" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="25.6" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="28.59" y="383.5" ></text>
</g>
<g >
<title>sim::Process::~Process (80,808,080 samples, 0.42%)</title><rect x="136.0" y="533" width="5.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="138.98" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="104.2" y="213" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.18" y="223.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_RTT (20,202,020 samples, 0.11%)</title><rect x="363.6" y="469" width="1.3" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="366.63" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="437" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>sim::Event::get_time (90,909,090 samples, 0.48%)</title><rect x="117.9" y="533" width="5.6" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="120.90" y="543.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.05%)</title><rect x="1092.7" y="421" width="0.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1095.71" y="431.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="1142.6" y="501" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1145.60" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.4" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.43" y="367.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_insert_unique&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; const&amp;&gt; (30,303,030 samples, 0.16%)</title><rect x="1171.9" y="501" width="1.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1174.91" y="511.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanNextToken (10,101,010 samples, 0.05%)</title><rect x="1183.1" y="373" width="0.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1186.14" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (151,515,150 samples, 0.79%)</title><rect x="222.7" y="373" width="9.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="225.67" y="383.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (80,808,080 samples, 0.42%)</title><rect x="1183.8" y="405" width="5.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.76" y="415.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (80,808,080 samples, 0.42%)</title><rect x="238.3" y="485" width="5.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="241.27" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.1" y="485" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.10" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1185.6" y="133" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.63" y="143.5" ></text>
</g>
<g >
<title>std::locale::locale (10,101,010 samples, 0.05%)</title><rect x="1105.2" y="469" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1108.18" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="111.7" y="373" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="114.66" y="383.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (40,404,040 samples, 0.21%)</title><rect x="355.5" y="453" width="2.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="358.52" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1150.1" y="453" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1153.08" y="463.5" ></text>
</g>
<g >
<title>Logger::get_instance (80,808,080 samples, 0.42%)</title><rect x="664.9" y="469" width="5.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="667.86" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (111,111,110 samples, 0.58%)</title><rect x="1133.2" y="501" width="6.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1136.25" y="511.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (181,818,180 samples, 0.95%)</title><rect x="11.2" y="501" width="11.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="14.25" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="48.0" y="453" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="51.04" y="463.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="1160.7" y="485" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1163.69" y="495.5" ></text>
</g>
<g >
<title>sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::start (17,303,030,130 samples, 90.54%)</title><rect x="114.8" y="549" width="1068.3" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="117.78" y="559.5" >sim::Simulator&lt;sim::Host, sim::Switch, sim::TcpFlow&lt;sim::TcpTahoeCC&gt;, sim::Link&gt;::start</text>
</g>
<g >
<title>Logger::info (20,202,020 samples, 0.11%)</title><rect x="334.9" y="485" width="1.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="337.94" y="495.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (60,606,060 samples, 0.32%)</title><rect x="1090.2" y="485" width="3.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1093.21" y="495.5" ></text>
</g>
<g >
<title>sim::SendData::operator (595,959,590 samples, 3.12%)</title><rect x="1085.2" y="517" width="36.8" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1088.22" y="527.5" >sim..</text>
</g>
<g >
<title>malloc (121,212,120 samples, 0.63%)</title><rect x="1143.8" y="485" width="7.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1146.85" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="56.2" y="309" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="59.15" y="319.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (20,202,020 samples, 0.11%)</title><rect x="54.9" y="485" width="1.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="57.90" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.05%)</title><rect x="1163.2" y="501" width="0.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1166.18" y="511.5" ></text>
</g>
<g >
<title>Logger::info (1,989,898,970 samples, 10.41%)</title><rect x="669.9" y="469" width="122.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="672.85" y="479.5" >Logger::info</text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (30,303,030 samples, 0.16%)</title><rect x="852.0" y="485" width="1.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="854.97" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="104.2" y="357" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.18" y="367.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="1121.4" y="469" width="0.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1124.40" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (212,121,210 samples, 1.11%)</title><rect x="814.5" y="453" width="13.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="817.55" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1185.6" y="85" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.63" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="1148.8" y="277" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1151.84" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.42%)</title><rect x="860.7" y="389" width="5.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="863.70" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="53.7" y="437" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.66" y="447.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (191,919,190 samples, 1.00%)</title><rect x="855.7" y="485" width="11.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="858.71" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="25.6" y="485" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.59" y="495.5" ></text>
</g>
<g >
<title>virtual thunk to sim::RoutingModule::get_id[abi:cxx11] (10,101,010 samples, 0.05%)</title><rect x="1173.8" y="501" width="0.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1176.78" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.8" y="325" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.84" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.48%)</title><rect x="1107.7" y="389" width="5.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1110.67" y="399.5" ></text>
</g>
<g >
<title>all (19,111,110,920 samples, 100%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="581" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (20,202,020 samples, 0.11%)</title><rect x="211.4" y="469" width="1.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="214.45" y="479.5" ></text>
</g>
<g >
<title>strlen@plt (10,101,010 samples, 0.05%)</title><rect x="994.2" y="485" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="997.16" y="495.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (70,707,070 samples, 0.37%)</title><rect x="107.9" y="485" width="4.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="110.92" y="495.5" ></text>
</g>
<g >
<title>_IO_file_fopen (50,505,050 samples, 0.26%)</title><rect x="104.2" y="453" width="3.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="107.18" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="53.7" y="389" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.66" y="399.5" ></text>
</g>
<g >
<title>YAML::Scanner::InsertPotentialSimpleKey (10,101,010 samples, 0.05%)</title><rect x="1185.6" y="325" width="0.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1188.63" y="335.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="213.3" y="453" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="216.32" y="463.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.05%)</title><rect x="242.6" y="437" width="0.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="245.63" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="25.6" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="28.59" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1169.4" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.42" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (20,202,020 samples, 0.11%)</title><rect x="54.9" y="453" width="1.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="57.90" y="463.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (131,313,130 samples, 0.69%)</title><rect x="374.2" y="501" width="8.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="377.23" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="25.6" y="469" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="28.59" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="54.3" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.28" y="335.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1132.6" y="485" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1135.62" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="1130.1" y="517" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1133.13" y="527.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.05%)</title><rect x="865.7" y="437" width="0.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="868.69" y="447.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.05%)</title><rect x="210.8" y="437" width="0.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="213.82" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="210.8" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="213.82" y="351.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (303,030,300 samples, 1.59%)</title><rect x="61.8" y="485" width="18.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="64.77" y="495.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::Push (20,202,020 samples, 0.11%)</title><rect x="1187.5" y="341" width="1.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1190.51" y="351.5" ></text>
</g>
<g >
<title>malloc (181,818,180 samples, 0.95%)</title><rect x="833.3" y="453" width="11.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="836.26" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="54.3" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.28" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="286.3" y="501" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="289.29" y="511.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1173.2" y="485" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1176.16" y="495.5" ></text>
</g>
<g >
<title>fopen (50,505,050 samples, 0.26%)</title><rect x="104.2" y="469" width="3.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="107.18" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1169.4" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.42" y="335.5" ></text>
</g>
<g >
<title>malloc@plt (10,101,010 samples, 0.05%)</title><rect x="828.3" y="469" width="0.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="831.27" y="479.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="355.5" y="437" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="358.52" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="25.6" y="437" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="28.59" y="447.5" ></text>
</g>
<g >
<title>sim::Event::Event (303,030,300 samples, 1.59%)</title><rect x="1064.0" y="485" width="18.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1067.02" y="495.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (20,202,020 samples, 0.11%)</title><rect x="852.6" y="453" width="1.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="855.59" y="463.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanToNextToken (10,101,010 samples, 0.05%)</title><rect x="1183.1" y="357" width="0.7" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="1186.14" y="367.5" ></text>
</g>
<g >
<title>cfree (30,303,030 samples, 0.16%)</title><rect x="23.7" y="517" width="1.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="26.72" y="527.5" ></text>
</g>
<g >
<title>sim::Link::get_to_ingress_queue_size (90,909,090 samples, 0.48%)</title><rect x="382.3" y="501" width="5.6" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="385.34" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (10,101,010 samples, 0.05%)</title><rect x="858.8" y="437" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="861.83" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="104.2" y="293" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.18" y="303.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (10,101,010 samples, 0.05%)</title><rect x="357.4" y="437" width="0.6" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="360.39" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.8" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.84" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (20,202,020 samples, 0.11%)</title><rect x="1178.8" y="517" width="1.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1181.77" y="527.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (20,202,020 samples, 0.11%)</title><rect x="356.1" y="437" width="1.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="359.14" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.21%)</title><rect x="109.8" y="405" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="112.79" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="56.2" y="389" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="59.15" y="399.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (131,313,130 samples, 0.69%)</title><rect x="123.5" y="533" width="8.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="126.51" y="543.5" ></text>
</g>
<g >
<title>std::locale::~locale (10,101,010 samples, 0.05%)</title><rect x="343.0" y="453" width="0.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="346.04" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="1147.0" y="405" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1149.97" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="54.3" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.28" y="303.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.11%)</title><rect x="858.2" y="453" width="1.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="861.20" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1092.7" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1095.71" y="367.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (20,202,020 samples, 0.11%)</title><rect x="343.7" y="469" width="1.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="346.67" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.8" y="357" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.84" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.1" y="517" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.10" y="527.5" ></text>
</g>
<g >
<title>YAML::Stream::StreamInUtf8 (10,101,010 samples, 0.05%)</title><rect x="1185.0" y="277" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1188.01" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (10,101,010 samples, 0.05%)</title><rect x="1154.5" y="485" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1157.45" y="495.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1095.2" y="453" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1098.20" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="210.8" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="213.82" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.42%)</title><rect x="92.9" y="389" width="5.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="95.95" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1188.1" y="133" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1191.13" y="143.5" ></text>
</g>
<g >
<title>YAML::Scanner::PopIndentToHere (10,101,010 samples, 0.05%)</title><rect x="1184.4" y="325" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1187.39" y="335.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="236.4" y="485" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="239.40" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.2" y="453" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.22" y="463.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::export_to_file (171,717,170 samples, 0.90%)</title><rect x="104.2" y="517" width="10.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="107.18" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1169.4" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.42" y="367.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="335.6" y="469" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="338.56" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.42%)</title><rect x="17.5" y="453" width="5.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.48" y="463.5" ></text>
</g>
<g >
<title>sim::Link::arrive (555,555,550 samples, 2.91%)</title><rect x="202.7" y="501" width="34.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="205.72" y="511.5" >si..</text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (121,212,120 samples, 0.63%)</title><rect x="1105.8" y="469" width="7.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1108.80" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="210.8" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="213.82" y="271.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.11%)</title><rect x="1187.5" y="309" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1190.51" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="57.4" y="245" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.40" y="255.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnScalar (10,101,010 samples, 0.05%)</title><rect x="1183.8" y="389" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1186.76" y="399.5" ></text>
</g>
<g >
<title>YAML::Stream::get (10,101,010 samples, 0.05%)</title><rect x="1185.0" y="309" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1188.01" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="57.4" y="261" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.40" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="210.8" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="213.82" y="287.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1183.8" y="341" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1186.76" y="351.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.11%)</title><rect x="78.6" y="469" width="1.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="81.60" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (111,111,110 samples, 0.58%)</title><rect x="1106.4" y="405" width="6.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1109.43" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="237.6" y="485" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="240.64" y="495.5" ></text>
</g>
<g >
<title>operator new (121,212,120 samples, 0.63%)</title><rect x="1143.8" y="501" width="7.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1146.85" y="511.5" ></text>
</g>
<g >
<title>Logger::info (30,303,030 samples, 0.16%)</title><rect x="1085.2" y="485" width="1.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1088.22" y="495.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="215.8" y="389" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="218.81" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1138.9" y="437" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1141.86" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (20,202,020 samples, 0.11%)</title><rect x="363.6" y="437" width="1.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="366.63" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.05%)</title><rect x="361.8" y="405" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="364.75" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1188.1" y="181" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1191.13" y="191.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (40,404,040 samples, 0.21%)</title><rect x="1090.8" y="453" width="2.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1093.84" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="57.4" y="229" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.40" y="239.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (20,202,020 samples, 0.11%)</title><rect x="242.0" y="453" width="1.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="245.01" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="96.1" y="373" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="99.07" y="383.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (50,505,050 samples, 0.26%)</title><rect x="56.2" y="485" width="3.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="59.15" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1092.1" y="437" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1095.08" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="54.9" y="405" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.90" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.4" y="309" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.43" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="25.6" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="28.59" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (252,525,250 samples, 1.32%)</title><rect x="62.4" y="437" width="15.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="65.39" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;* std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_Alloc_node&gt; (20,202,020 samples, 0.11%)</title><rect x="1180.0" y="517" width="1.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1183.02" y="527.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::Push (10,101,010 samples, 0.05%)</title><rect x="1183.8" y="373" width="0.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1186.76" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (19,101,009,910 samples, 99.95%)</title><rect x="10.6" y="581" width="1179.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.62" y="591.5" >[libc.so.6]</text>
</g>
<g >
<title>sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned int&gt;::get_flag (10,101,010 samples, 0.05%)</title><rect x="337.4" y="485" width="0.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="340.43" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1153.8" y="437" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1156.83" y="447.5" ></text>
</g>
<g >
<title>YAML::Stream::_ReadAheadTo (10,101,010 samples, 0.05%)</title><rect x="1185.0" y="293" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1188.01" y="303.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (90,909,090 samples, 0.48%)</title><rect x="1115.8" y="485" width="5.6" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1118.78" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="114.2" y="389" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="117.15" y="399.5" ></text>
</g>
<g >
<title>sim::Process::operator (60,606,060 samples, 0.32%)</title><rect x="132.2" y="533" width="3.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="135.24" y="543.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (50,505,050 samples, 0.26%)</title><rect x="1184.4" y="357" width="3.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1187.39" y="367.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1186.9" y="293" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1189.88" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1173.2" y="453" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1176.16" y="463.5" ></text>
</g>
<g >
<title>strlen@plt (20,202,020 samples, 0.11%)</title><rect x="845.7" y="469" width="1.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="848.73" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="1147.0" y="453" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1149.97" y="463.5" ></text>
</g>
<g >
<title>cfree (373,737,370 samples, 1.96%)</title><rect x="606.2" y="485" width="23.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="609.24" y="495.5" >c..</text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.05%)</title><rect x="1103.3" y="437" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1106.31" y="447.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (30,303,030 samples, 0.16%)</title><rect x="233.9" y="453" width="1.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="236.90" y="463.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (30,303,030 samples, 0.16%)</title><rect x="331.8" y="501" width="1.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="334.82" y="511.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1183.1" y="341" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1186.14" y="351.5" ></text>
</g>
<g >
<title>malloc@plt (10,101,010 samples, 0.05%)</title><rect x="46.8" y="501" width="0.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="49.80" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="100.4" y="517" width="0.7" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="103.43" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1149.5" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1152.46" y="255.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (10,101,010 samples, 0.05%)</title><rect x="361.8" y="437" width="0.6" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="364.75" y="447.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.11%)</title><rect x="1136.4" y="469" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1139.36" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="25.6" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="28.59" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="1175.7" y="517" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1178.66" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="56.2" y="341" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="59.15" y="351.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="341.2" y="437" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="344.17" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.4" y="341" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.43" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="60.5" y="485" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="63.52" y="495.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.11%)</title><rect x="53.7" y="469" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="56.66" y="479.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1186.9" y="309" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1189.88" y="319.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (20,202,020 samples, 0.11%)</title><rect x="852.6" y="469" width="1.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="855.59" y="479.5" ></text>
</g>
<g >
<title>sim::Switch::notify_about_arrival (10,101,010 samples, 0.05%)</title><rect x="235.8" y="485" width="0.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="238.77" y="495.5" ></text>
</g>
<g >
<title>Logger::info (10,101,010 samples, 0.05%)</title><rect x="207.1" y="485" width="0.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="210.08" y="495.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (50,505,050 samples, 0.26%)</title><rect x="1090.8" y="469" width="3.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1093.84" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.2" y="501" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.22" y="511.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1132.6" y="469" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1135.62" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1185.6" y="181" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.63" y="191.5" ></text>
</g>
<g >
<title>_IO_file_open (50,505,050 samples, 0.26%)</title><rect x="104.2" y="437" width="3.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="107.18" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (10,101,010 samples, 0.05%)</title><rect x="10.6" y="485" width="0.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.62" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="100.4" y="469" width="0.7" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="103.43" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="53.7" y="421" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.66" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1188.1" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1191.13" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1185.6" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.63" y="255.5" ></text>
</g>
<g >
<title>sim::Host::notify_about_arrival (10,101,010 samples, 0.05%)</title><rect x="208.3" y="485" width="0.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="211.33" y="495.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::get_max_size (10,101,010 samples, 0.05%)</title><rect x="391.1" y="501" width="0.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="394.07" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.16%)</title><rect x="57.4" y="213" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.40" y="223.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (10,101,010 samples, 0.05%)</title><rect x="1094.0" y="469" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1096.95" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="361.8" y="325" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="364.75" y="335.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (90,909,090 samples, 0.48%)</title><rect x="860.7" y="453" width="5.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="863.70" y="463.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (333,333,330 samples, 1.74%)</title><rect x="1094.6" y="485" width="20.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1097.58" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="210.8" y="389" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="213.82" y="399.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (101,010,100 samples, 0.53%)</title><rect x="860.1" y="469" width="6.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="863.07" y="479.5" ></text>
</g>
<g >
<title>sim::BaseHasher::get_hash (20,202,020 samples, 0.11%)</title><rect x="869.4" y="469" width="1.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="872.43" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (20,202,020 samples, 0.11%)</title><rect x="1161.9" y="501" width="1.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1164.93" y="511.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (30,303,030 samples, 0.16%)</title><rect x="112.9" y="469" width="1.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="115.91" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.8" y="437" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.84" y="447.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (30,303,030 samples, 0.16%)</title><rect x="1185.0" y="341" width="1.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1188.01" y="351.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (10,101,010 samples, 0.05%)</title><rect x="1183.1" y="405" width="0.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1186.14" y="415.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.21%)</title><rect x="47.4" y="485" width="2.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="50.42" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="54.9" y="357" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.90" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (111,111,110 samples, 0.58%)</title><rect x="1144.5" y="469" width="6.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1147.47" y="479.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.05%)</title><rect x="1183.1" y="325" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1186.14" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="565" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1169.4" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.42" y="319.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1089.6" y="485" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1092.59" y="495.5" ></text>
</g>
<g >
<title>virtual thunk to sim::RoutingModule::get_id[abi:cxx11] (30,303,030 samples, 0.16%)</title><rect x="1181.3" y="517" width="1.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1184.27" y="527.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (20,202,020 samples, 0.11%)</title><rect x="363.6" y="453" width="1.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="366.63" y="463.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1172.5" y="485" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1175.54" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1169.4" y="485" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1172.42" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.8" y="485" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.84" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="361.8" y="373" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="364.75" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.8" y="373" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.84" y="383.5" ></text>
</g>
<g >
<title>sim::Event::Event (212,121,210 samples, 1.11%)</title><rect x="296.3" y="501" width="13.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="299.27" y="511.5" ></text>
</g>
<g >
<title>sim::RoutingModule::update_routing_table (141,414,140 samples, 0.74%)</title><rect x="1131.4" y="517" width="8.7" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1134.37" y="527.5" ></text>
</g>
<g >
<title>operator delete (10,101,010 samples, 0.05%)</title><rect x="1143.2" y="501" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1146.22" y="511.5" ></text>
</g>
<g >
<title>vsnprintf (242,424,240 samples, 1.27%)</title><rect x="83.0" y="453" width="14.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="85.97" y="463.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="235.1" y="437" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="238.15" y="447.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (10,101,010 samples, 0.05%)</title><rect x="342.4" y="453" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="345.42" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="210.8" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="213.82" y="335.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (20,202,020 samples, 0.11%)</title><rect x="866.3" y="453" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="869.31" y="463.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="469" width="5.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.14" y="479.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (40,404,040 samples, 0.21%)</title><rect x="359.9" y="453" width="2.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="362.88" y="463.5" ></text>
</g>
<g >
<title>sim::TcpFlow&lt;sim::TcpTahoeCC&gt;::update (111,111,110 samples, 0.58%)</title><rect x="358.0" y="485" width="6.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="361.01" y="495.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (20,202,020 samples, 0.11%)</title><rect x="352.4" y="469" width="1.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="355.40" y="479.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (30,303,030 samples, 0.16%)</title><rect x="857.6" y="469" width="1.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="860.58" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="10.6" y="501" width="0.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.62" y="511.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (10,101,010 samples, 0.05%)</title><rect x="1183.1" y="389" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1186.14" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="54.9" y="229" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.90" y="239.5" ></text>
</g>
<g >
<title>YAML::Stream::GetNextByte (10,101,010 samples, 0.05%)</title><rect x="1185.0" y="261" width="0.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1188.01" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.1" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.10" y="399.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.11%)</title><rect x="1102.7" y="453" width="1.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1105.68" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="113.5" y="421" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="116.53" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="469" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (10,101,010 samples, 0.05%)</title><rect x="1093.3" y="437" width="0.7" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1096.33" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1185.6" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.63" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="104.2" y="309" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.18" y="319.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (191,919,190 samples, 1.00%)</title><rect x="341.8" y="485" width="11.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="344.80" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="209.6" y="453" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="212.58" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1087.1" y="485" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1090.09" y="495.5" ></text>
</g>
<g >
<title>YAML::Stream::operator bool (10,101,010 samples, 0.05%)</title><rect x="1186.3" y="325" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1189.26" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="1148.8" y="293" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1151.84" y="303.5" ></text>
</g>
<g >
<title>std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;::size_type std::__detail::__erase_nodes_if&lt;std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;, std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;, sim::RoutingModule::correctify_outlinks (20,202,020 samples, 0.11%)</title><rect x="1155.1" y="485" width="1.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1158.07" y="495.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="51.8" y="485" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="54.79" y="495.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.11%)</title><rect x="1136.4" y="485" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1139.36" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="55.5" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.53" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="215.8" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="218.81" y="367.5" ></text>
</g>
<g >
<title>sim::is_valid_link (10,101,010 samples, 0.05%)</title><rect x="1132.0" y="501" width="0.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1135.00" y="511.5" ></text>
</g>
<g >
<title>sim::Link::transmit (90,909,090 samples, 0.48%)</title><rect x="237.6" y="501" width="5.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="240.64" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1188.1" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1191.13" y="175.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="107.3" y="501" width="0.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="110.29" y="511.5" ></text>
</g>
<g >
<title>cfree (80,808,080 samples, 0.42%)</title><rect x="17.5" y="469" width="5.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="20.48" y="479.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (20,202,020 samples, 0.11%)</title><rect x="844.5" y="453" width="1.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="847.48" y="463.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.11%)</title><rect x="1170.7" y="453" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1173.67" y="463.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.11%)</title><rect x="53.7" y="485" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="56.66" y="495.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.16%)</title><rect x="1050.3" y="485" width="1.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1053.30" y="495.5" ></text>
</g>
<g >
<title>malloc (131,313,130 samples, 0.69%)</title><rect x="1055.9" y="469" width="8.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1058.91" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1169.4" y="421" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.42" y="431.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.05%)</title><rect x="213.9" y="469" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="216.94" y="479.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="533" width="0.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1192.38" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1169.4" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.42" y="351.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::export_to_files (171,717,170 samples, 0.90%)</title><rect x="104.2" y="533" width="10.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="107.18" y="543.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="213.3" y="469" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="216.32" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="421" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (202,020,200 samples, 1.06%)</title><rect x="64.9" y="421" width="12.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="67.88" y="431.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (363,636,360 samples, 1.90%)</title><rect x="770.3" y="453" width="22.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="773.26" y="463.5" >v..</text>
</g>
<g >
<title>Logger::get_instance (40,404,040 samples, 0.21%)</title><rect x="283.2" y="501" width="2.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="286.17" y="511.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="1089.0" y="485" width="0.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1091.96" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="336.2" y="485" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="339.18" y="495.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (10,101,010 samples, 0.05%)</title><rect x="1094.0" y="485" width="0.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1096.95" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="56.2" y="373" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="59.15" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.21%)</title><rect x="1147.6" y="341" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1150.59" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1169.4" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1172.42" y="383.5" ></text>
</g>
<g >
<title>strlen@plt (10,101,010 samples, 0.05%)</title><rect x="77.4" y="421" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="80.36" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1139.5" y="421" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1142.48" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (40,404,040 samples, 0.21%)</title><rect x="1137.6" y="485" width="2.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1140.61" y="495.5" ></text>
</g>
<g >
<title>sim::Link::get_to (10,101,010 samples, 0.05%)</title><rect x="1130.8" y="517" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1133.75" y="527.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (70,707,070 samples, 0.37%)</title><rect x="238.9" y="469" width="4.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="241.89" y="479.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::export_to_files (1,323,232,310 samples, 6.92%)</title><rect x="22.5" y="533" width="81.7" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="25.47" y="543.5" >sim::Link..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="58.6" y="133" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="61.65" y="143.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (282,828,280 samples, 1.48%)</title><rect x="81.1" y="485" width="17.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="84.10" y="495.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="25.6" y="517" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="28.59" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.48%)</title><rect x="1107.7" y="373" width="5.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1110.67" y="383.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (10,101,010 samples, 0.05%)</title><rect x="210.8" y="453" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="213.82" y="463.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (15,989,898,830 samples, 83.67%)</title><rect x="141.0" y="533" width="987.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="143.97" y="543.5" >sim::Scheduler::tick</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="108.5" y="453" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="111.54" y="463.5" ></text>
</g>
<g >
<title>YAML::Token&amp; std::deque&lt;YAML::Token, std::allocator&lt;YAML::Token&gt; &gt;::emplace_back&lt;YAML::Token&gt; (10,101,010 samples, 0.05%)</title><rect x="1186.9" y="325" width="0.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1189.88" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1135.7" y="485" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1138.74" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (181,818,180 samples, 0.95%)</title><rect x="66.1" y="405" width="11.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="69.13" y="415.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.16%)</title><rect x="1152.6" y="485" width="1.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1155.58" y="495.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (80,808,080 samples, 0.42%)</title><rect x="847.0" y="485" width="5.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="849.98" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="58.0" y="165" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="61.02" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (191,919,190 samples, 1.00%)</title><rect x="10.6" y="565" width="11.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.62" y="575.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (111,111,110 samples, 0.58%)</title><rect x="1183.1" y="549" width="6.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1186.14" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.1" y="421" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.10" y="431.5" ></text>
</g>
<g >
<title>YAML::detail::memory::create_node (10,101,010 samples, 0.05%)</title><rect x="1183.8" y="357" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1186.76" y="367.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.05%)</title><rect x="99.8" y="501" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="102.81" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="56.2" y="293" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="59.15" y="303.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (20,202,020 samples, 0.11%)</title><rect x="342.4" y="469" width="1.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="345.42" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="54.3" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.28" y="255.5" ></text>
</g>
<g >
<title>Logger::warn (10,101,010 samples, 0.05%)</title><rect x="285.7" y="501" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="288.67" y="511.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="210.8" y="421" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="213.82" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1187.5" y="277" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1190.51" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.2" y="469" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.22" y="479.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_id[abi:cxx11] (10,101,010 samples, 0.05%)</title><rect x="1115.2" y="485" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1118.16" y="495.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (30,303,030 samples, 0.16%)</title><rect x="1113.3" y="469" width="1.9" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1116.29" y="479.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (60,606,060 samples, 0.32%)</title><rect x="108.5" y="469" width="3.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="111.54" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="53.7" y="405" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.66" y="415.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::_M_split_cmpts (10,101,010 samples, 0.05%)</title><rect x="59.3" y="485" width="0.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="62.27" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="848.2" y="437" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="851.22" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.05%)</title><rect x="215.8" y="421" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="218.81" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.2" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.22" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1188.1" y="117" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1191.13" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (10,101,010 samples, 0.05%)</title><rect x="1102.7" y="437" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1105.68" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.42%)</title><rect x="860.7" y="373" width="5.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="863.70" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="597" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;, std::weak_ptr&lt;sim::IProcessingDevice&gt;&amp;&gt; (1,424,242,410 samples, 7.45%)</title><rect x="994.8" y="501" width="87.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="997.79" y="511.5" >void sim::..</text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (121,212,120 samples, 0.63%)</title><rect x="1097.1" y="469" width="7.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1100.07" y="479.5" ></text>
</g>
<g >
<title>sim::IdentifierFactory::~IdentifierFactory (191,919,190 samples, 1.00%)</title><rect x="10.6" y="533" width="11.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="13.62" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="58.6" y="149" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="61.65" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="106.0" y="181" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.05" y="191.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (60,606,060 samples, 0.32%)</title><rect x="214.6" y="469" width="3.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="217.57" y="479.5" ></text>
</g>
<g >
<title>sim::Host::send_packet (595,959,590 samples, 3.12%)</title><rect x="1085.2" y="501" width="36.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1088.22" y="511.5" >sim..</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="361.8" y="357" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="364.75" y="367.5" ></text>
</g>
<g >
<title>std::locale::~locale (10,101,010 samples, 0.05%)</title><rect x="362.4" y="453" width="0.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="365.38" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="1170.7" y="437" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1173.67" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1185.6" y="101" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.63" y="111.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="341.8" y="469" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="344.80" y="479.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,101,010 samples, 0.05%)</title><rect x="207.7" y="485" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="210.71" y="495.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleDocument (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="485" width="5.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1186.14" y="495.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (10,101,010 samples, 0.05%)</title><rect x="1093.3" y="453" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1096.33" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (252,525,250 samples, 1.32%)</title><rect x="62.4" y="469" width="15.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="65.39" y="479.5" ></text>
</g>
<g >
<title>sim::write_to_csv (1,181,818,170 samples, 6.18%)</title><rect x="27.5" y="517" width="72.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="30.46" y="527.5" >sim::wri..</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="215.8" y="373" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="218.81" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="53.7" y="373" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.66" y="383.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (121,212,120 samples, 0.63%)</title><rect x="1105.8" y="453" width="7.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1108.80" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.11%)</title><rect x="215.8" y="437" width="1.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="218.81" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="104.2" y="405" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.18" y="415.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="212.7" y="469" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="215.70" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="25.6" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="28.59" y="319.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (10,101,010 samples, 0.05%)</title><rect x="212.1" y="453" width="0.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="215.07" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="55.5" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.53" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="54.9" y="293" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.90" y="303.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.05%)</title><rect x="1185.6" y="293" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1188.63" y="303.5" ></text>
</g>
<g >
<title>__munmap (10,101,010 samples, 0.05%)</title><rect x="26.8" y="501" width="0.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="29.84" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1160.7" y="469" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1163.69" y="479.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (111,111,110 samples, 0.58%)</title><rect x="1106.4" y="437" width="6.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1109.43" y="447.5" ></text>
</g>
<g >
<title>cfree (303,030,300 samples, 1.59%)</title><rect x="808.9" y="469" width="18.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="811.93" y="479.5" ></text>
</g>
<g >
<title>Size&lt;Byte&gt; parse_with_default&lt;Size&lt;Byte&gt; &gt; (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="469" width="0.6" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="1192.38" y="479.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.11%)</title><rect x="1187.5" y="293" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1190.51" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.11%)</title><rect x="53.7" y="453" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.66" y="463.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (70,707,070 samples, 0.37%)</title><rect x="847.6" y="469" width="4.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="850.60" y="479.5" ></text>
</g>
<g >
<title>memchr@plt (10,101,010 samples, 0.05%)</title><rect x="61.1" y="485" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="64.14" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="100.4" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.43" y="255.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (10,101,010 samples, 0.05%)</title><rect x="340.5" y="437" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="343.55" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="56.2" y="325" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="59.15" y="335.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.05%)</title><rect x="856.3" y="469" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="859.33" y="479.5" ></text>
</g>
<g >
<title>open64 (50,505,050 samples, 0.26%)</title><rect x="104.2" y="421" width="3.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="107.18" y="431.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.05%)</title><rect x="1096.4" y="453" width="0.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1099.45" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.11%)</title><rect x="54.9" y="325" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.90" y="335.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (3,252,525,220 samples, 17.02%)</title><rect x="646.2" y="485" width="200.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="649.15" y="495.5" >sim::Link::get_packet</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.05%)</title><rect x="100.4" y="453" width="0.7" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="103.43" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.8" y="421" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.84" y="431.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.11%)</title><rect x="54.9" y="469" width="1.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="57.90" y="479.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.11%)</title><rect x="343.7" y="453" width="1.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="346.67" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="215.8" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="218.81" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="25.6" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="28.59" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.2" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.22" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1185.6" y="117" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.63" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (1,373,737,360 samples, 7.19%)</title><rect x="909.3" y="485" width="84.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="912.34" y="495.5" >std::_Rb_..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="23.1" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.10" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="357.4" y="405" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="360.39" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.2" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.22" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="76.7" y="389" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="79.73" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="1185.6" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1188.63" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.16%)</title><rect x="23.7" y="501" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="26.72" y="511.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.05%)</title><rect x="1094.6" y="469" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1097.58" y="479.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (40,404,040 samples, 0.21%)</title><rect x="233.3" y="469" width="2.5" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="236.28" y="479.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (50,505,050 samples, 0.26%)</title><rect x="56.2" y="501" width="3.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="59.15" y="511.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.48%)</title><rect x="1183.1" y="421" width="5.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1186.14" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.21%)</title><rect x="1147.6" y="325" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1150.59" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1094.6" y="453" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1097.58" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (202,020,200 samples, 1.06%)</title><rect x="219.6" y="405" width="12.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="222.56" y="415.5" ></text>
</g>
<g >
<title>write (20,202,020 samples, 0.11%)</title><rect x="54.9" y="437" width="1.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="57.90" y="447.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (40,404,040 samples, 0.21%)</title><rect x="112.3" y="485" width="2.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="115.28" y="495.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.05%)</title><rect x="233.3" y="453" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="236.28" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1094.0" y="453" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1096.95" y="463.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.16%)</title><rect x="1152.6" y="469" width="1.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1155.58" y="479.5" ></text>
</g>
<g >
<title>YAML::Scanner::PushIndentTo (10,101,010 samples, 0.05%)</title><rect x="1185.6" y="309" width="0.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1188.63" y="319.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (50,505,050 samples, 0.26%)</title><rect x="867.6" y="485" width="3.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="870.56" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.05%)</title><rect x="1132.6" y="453" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1135.62" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (262,626,260 samples, 1.37%)</title><rect x="792.7" y="469" width="16.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="795.72" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.21%)</title><rect x="1147.6" y="357" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1150.59" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.26%)</title><rect x="104.2" y="229" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.18" y="239.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.05%)</title><rect x="859.5" y="469" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="862.45" y="479.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.05%)</title><rect x="1089.6" y="469" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1092.59" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.21%)</title><rect x="47.4" y="469" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="50.42" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="26.8" y="293" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.84" y="303.5" ></text>
</g>
<g >
<title>YAML::detail::memory::create_node (20,202,020 samples, 0.11%)</title><rect x="1187.5" y="325" width="1.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1190.51" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.21%)</title><rect x="56.8" y="277" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="59.78" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.05%)</title><rect x="10.0" y="533" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>sim::Parser&lt;sim::Link&gt;::parse_object (10,101,010 samples, 0.05%)</title><rect x="1189.4" y="485" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1192.38" y="495.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (202,020,200 samples, 1.06%)</title><rect x="219.6" y="437" width="12.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="222.56" y="447.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_outlinks (80,808,080 samples, 0.42%)</title><rect x="1151.3" y="501" width="5.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1154.33" y="511.5" ></text>
</g>
</g>
</svg>
