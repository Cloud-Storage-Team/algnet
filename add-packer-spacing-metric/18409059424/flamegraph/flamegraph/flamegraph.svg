<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="806.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="789" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="789" > </text>
<g id="frames">
<g >
<title>malloc (10,101,010 samples, 0.49%)</title><rect x="1011.6" y="357" width="5.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1014.56" y="367.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (30,303,030 samples, 1.46%)</title><rect x="994.3" y="373" width="17.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="997.29" y="383.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanValue (10,101,010 samples, 0.49%)</title><rect x="913.7" y="437" width="5.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="916.71" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,202,020 samples, 0.98%)</title><rect x="723.8" y="245" width="11.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="726.76" y="255.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.49%)</title><rect x="867.7" y="373" width="5.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="870.66" y="383.5" ></text>
</g>
<g >
<title>_IO_file_open (10,101,010 samples, 0.49%)</title><rect x="125.1" y="549" width="5.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="128.12" y="559.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.49%)</title><rect x="833.1" y="437" width="5.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="836.12" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="338.1" y="405" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.10" y="415.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,101,010 samples, 0.49%)</title><rect x="654.7" y="645" width="5.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="657.68" y="655.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.49%)</title><rect x="1005.8" y="341" width="5.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1008.80" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="764.0" y="501" width="5.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="767.05" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="1184.2" y="549" width="5.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1187.24" y="559.5" ></text>
</g>
<g >
<title>sim::ConfigNode::operator[] (10,101,010 samples, 0.49%)</title><rect x="775.6" y="501" width="5.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="778.56" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="654.7" y="501" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="657.68" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,202,020 samples, 0.98%)</title><rect x="723.8" y="165" width="11.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="726.76" y="175.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.98%)</title><rect x="861.9" y="405" width="11.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="864.90" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="10.0" y="661" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1120.9" y="197" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1123.93" y="207.5" ></text>
</g>
<g >
<title>YAML::Scanner::pop (10,101,010 samples, 0.49%)</title><rect x="919.5" y="469" width="5.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="922.46" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,202,020 samples, 0.98%)</title><rect x="723.8" y="261" width="11.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="726.76" y="271.5" ></text>
</g>
<g >
<title>sim::Process::operator (242,424,240 samples, 11.71%)</title><rect x="441.7" y="629" width="138.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="444.71" y="639.5" >sim::Process::ope..</text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (30,303,030 samples, 1.46%)</title><rect x="343.9" y="597" width="17.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="346.85" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1011.6" y="181" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1014.56" y="191.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanNextToken (30,303,030 samples, 1.46%)</title><rect x="821.6" y="453" width="17.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="824.61" y="463.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,101,010 samples, 0.49%)</title><rect x="338.1" y="613" width="5.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="341.10" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.98%)</title><rect x="936.7" y="341" width="11.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="939.73" y="351.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.49%)</title><rect x="338.1" y="597" width="5.8" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="341.10" y="607.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::Push (50,505,050 samples, 2.44%)</title><rect x="925.2" y="437" width="28.8" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="928.22" y="447.5" >YA..</text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.49%)</title><rect x="21.5" y="565" width="5.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="24.51" y="575.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (30,303,030 samples, 1.46%)</title><rect x="389.9" y="629" width="17.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="392.90" y="639.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 1.46%)</title><rect x="936.7" y="389" width="17.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="939.73" y="399.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (151,515,150 samples, 7.32%)</title><rect x="723.8" y="645" width="86.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="726.76" y="655.5" >sim::YamlP..</text>
</g>
<g >
<title>memchr@plt (10,101,010 samples, 0.49%)</title><rect x="148.1" y="597" width="5.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="151.15" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1028.8" y="325" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1031.83" y="335.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.49%)</title><rect x="833.1" y="389" width="5.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="836.12" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="10.0" y="645" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>sim::Host::send_packet (60,606,060 samples, 2.93%)</title><rect x="579.9" y="613" width="34.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="582.85" y="623.5" >si..</text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.49%)</title><rect x="510.8" y="533" width="5.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="513.78" y="543.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.98%)</title><rect x="1161.2" y="245" width="11.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1164.22" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="10.0" y="597" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="948.2" y="277" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="951.24" y="287.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (40,404,040 samples, 1.95%)</title><rect x="1126.7" y="325" width="23.0" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1129.68" y="335.5" >i..</text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (40,404,040 samples, 1.95%)</title><rect x="1149.7" y="341" width="23.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1152.71" y="351.5" >Y..</text>
</g>
<g >
<title>YAML::NodeBuilder::Push (10,101,010 samples, 0.49%)</title><rect x="815.9" y="469" width="5.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="818.85" y="479.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.49%)</title><rect x="505.0" y="517" width="5.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="508.02" y="527.5" ></text>
</g>
<g >
<title>sim::IdentifierFactory::~IdentifierFactory (20,202,020 samples, 0.98%)</title><rect x="15.8" y="645" width="11.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="18.76" y="655.5" ></text>
</g>
<g >
<title>YAML::Stream::operator bool (10,101,010 samples, 0.49%)</title><rect x="1017.3" y="405" width="5.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1020.32" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="338.1" y="389" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.10" y="399.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.49%)</title><rect x="769.8" y="501" width="5.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="772.80" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="815.9" y="357" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="818.85" y="367.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::Push (10,101,010 samples, 0.49%)</title><rect x="810.1" y="501" width="5.8" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="813.10" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="38.8" y="597" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="41.78" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="361.1" y="533" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.12" y="543.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10,101,010 samples, 0.49%)</title><rect x="625.9" y="613" width="5.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="628.90" y="623.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (40,404,040 samples, 1.95%)</title><rect x="487.8" y="549" width="23.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="490.76" y="559.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,202,020 samples, 0.98%)</title><rect x="723.8" y="517" width="11.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="726.76" y="527.5" ></text>
</g>
<g >
<title>writev (10,101,010 samples, 0.49%)</title><rect x="654.7" y="613" width="5.7" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="657.68" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="338.1" y="549" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.10" y="559.5" ></text>
</g>
<g >
<title>YAML::LoadFile (666,666,660 samples, 32.20%)</title><rect x="810.1" y="629" width="379.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="813.10" y="639.5" >YAML::LoadFile</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="10.0" y="549" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.49%)</title><rect x="1028.8" y="373" width="5.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1031.83" y="383.5" ></text>
</g>
<g >
<title>YAML::Stream::eat (10,101,010 samples, 0.49%)</title><rect x="827.4" y="421" width="5.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="830.37" y="431.5" ></text>
</g>
<g >
<title>sim::SendDataAction::~SendDataAction (10,101,010 samples, 0.49%)</title><rect x="643.2" y="645" width="5.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="646.17" y="655.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,060,606,040 samples, 99.51%)</title><rect x="15.8" y="693" width="1174.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.76" y="703.5" >[libc.so.6]</text>
</g>
<g >
<title>YAML::Stream::eat (10,101,010 samples, 0.49%)</title><rect x="1103.7" y="325" width="5.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1106.66" y="335.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;, std::weak_ptr&lt;sim::IProcessingDevice&gt;&amp;&gt; (30,303,030 samples, 1.46%)</title><rect x="562.6" y="613" width="17.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="565.59" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,202,020 samples, 0.98%)</title><rect x="723.8" y="181" width="11.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="726.76" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="654.7" y="341" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="657.68" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1120.9" y="229" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1123.93" y="239.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_connection (111,111,110 samples, 5.37%)</title><rect x="741.0" y="597" width="63.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="744.02" y="607.5" >sim::Y..</text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (10,101,010 samples, 0.49%)</title><rect x="516.5" y="597" width="5.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="519.54" y="607.5" ></text>
</g>
<g >
<title>sim::FlowParser::parse_i_flow (70,707,070 samples, 3.41%)</title><rect x="764.0" y="533" width="40.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="767.05" y="543.5" >sim..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1011.6" y="277" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1014.56" y="287.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::node_data*,  (60,606,060 samples, 2.93%)</title><rect x="689.2" y="549" width="34.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="692.22" y="559.5" >st..</text>
</g>
<g >
<title>YAML::NodeBuilder::Push (10,101,010 samples, 0.49%)</title><rect x="1172.7" y="341" width="5.8" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1175.73" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1120.9" y="117" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1123.93" y="127.5" ></text>
</g>
<g >
<title>vsnprintf (20,202,020 samples, 0.98%)</title><rect x="343.9" y="565" width="11.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="346.85" y="575.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.49%)</title><rect x="620.1" y="613" width="5.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="623.15" y="623.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (40,404,040 samples, 1.95%)</title><rect x="1149.7" y="293" width="23.0" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1152.71" y="303.5" >i..</text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.49%)</title><rect x="119.4" y="613" width="5.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="122.37" y="623.5" ></text>
</g>
<g >
<title>sim::ConnectionParser::parse_i_connection (111,111,110 samples, 5.37%)</title><rect x="741.0" y="565" width="63.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="744.02" y="575.5" >sim::C..</text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 3.41%)</title><rect x="1051.9" y="309" width="40.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1054.85" y="319.5" >[li..</text>
</g>
<g >
<title>__default_morecore (10,101,010 samples, 0.49%)</title><rect x="948.2" y="357" width="5.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="951.24" y="367.5" ></text>
</g>
<g >
<title>_start (2,060,606,040 samples, 99.51%)</title><rect x="15.8" y="725" width="1174.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="18.76" y="735.5" >_start</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="654.7" y="357" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="657.68" y="367.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (10,101,010 samples, 0.49%)</title><rect x="453.2" y="613" width="5.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="456.22" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.98%)</title><rect x="1074.9" y="213" width="11.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1077.88" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="338.1" y="469" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.10" y="479.5" ></text>
</g>
<g >
<title>YAML::Scanner::PushIndentTo (10,101,010 samples, 0.49%)</title><rect x="1011.6" y="389" width="5.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1014.56" y="399.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (20,202,020 samples, 0.98%)</title><rect x="395.7" y="597" width="11.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="398.66" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="338.1" y="501" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.10" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="125.1" y="405" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="128.12" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="338.1" y="533" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.10" y="543.5" ></text>
</g>
<g >
<title>sim::Host::notify_about_arrival (10,101,010 samples, 0.49%)</title><rect x="389.9" y="597" width="5.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="392.90" y="607.5" ></text>
</g>
<g >
<title>sim::Link::arrive (30,303,030 samples, 1.46%)</title><rect x="389.9" y="613" width="17.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="392.90" y="623.5" ></text>
</g>
<g >
<title>YAML::Stream::operator bool (10,101,010 samples, 0.49%)</title><rect x="902.2" y="421" width="5.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="905.20" y="431.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::operator (60,606,060 samples, 2.93%)</title><rect x="407.2" y="629" width="34.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="410.17" y="639.5" >si..</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="349.6" y="533" width="5.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="352.61" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;YAML::detail::node&gt;, std::shared_ptr&lt;YAML::detail::node&gt;, std::_Identity&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt;, std::less&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt; &gt;::_M_erase (20,202,020 samples, 0.98%)</title><rect x="666.2" y="581" width="11.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="669.20" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,202,020 samples, 0.98%)</title><rect x="723.8" y="325" width="11.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="726.76" y="335.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (646,464,640 samples, 31.22%)</title><rect x="815.9" y="517" width="368.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="818.85" y="527.5" >YAML::SingleDocParser::HandleBlockMap</text>
</g>
<g >
<title>sim::Summary::write_to_csv (10,101,010 samples, 0.49%)</title><rect x="654.7" y="661" width="5.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="657.68" y="671.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (131,313,130 samples, 6.34%)</title><rect x="844.6" y="453" width="74.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="847.63" y="463.5" >YAML::Sc..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (20,202,020 samples, 0.98%)</title><rect x="15.8" y="629" width="11.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="18.76" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (20,202,020 samples, 0.98%)</title><rect x="545.3" y="597" width="11.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="548.32" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="654.7" y="405" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="657.68" y="415.5" ></text>
</g>
<g >
<title>sim::ConfigNode::begin (10,101,010 samples, 0.49%)</title><rect x="746.8" y="533" width="5.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="749.78" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="948.2" y="293" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="951.24" y="303.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (30,303,030 samples, 1.46%)</title><rect x="879.2" y="389" width="17.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="882.17" y="399.5" ></text>
</g>
<g >
<title>YAML::Stream::operator bool (10,101,010 samples, 0.49%)</title><rect x="856.1" y="421" width="5.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="859.15" y="431.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.49%)</title><rect x="815.9" y="437" width="5.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="818.85" y="447.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (929,292,920 samples, 44.88%)</title><rect x="660.4" y="661" width="529.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="663.44" y="671.5" >sim::YamlParser::build_simulator_from_config</text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.98%)</title><rect x="15.8" y="677" width="11.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.76" y="687.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.49%)</title><rect x="637.4" y="613" width="5.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="640.41" y="623.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (656,565,650 samples, 31.71%)</title><rect x="810.1" y="565" width="374.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="813.10" y="575.5" >YAML::SingleDocParser::HandleNode</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1028.8" y="117" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1031.83" y="127.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="810.1" y="437" width="5.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="813.10" y="447.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.49%)</title><rect x="643.2" y="629" width="5.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="646.17" y="639.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (272,727,270 samples, 13.17%)</title><rect x="1028.8" y="453" width="155.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1031.83" y="463.5" >YAML::SingleDocPars..</text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (656,565,650 samples, 31.71%)</title><rect x="810.1" y="549" width="374.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="813.10" y="559.5" >YAML::SingleDocParser::HandleBlockMap</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1011.6" y="325" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1014.56" y="335.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.49%)</title><rect x="1011.6" y="373" width="5.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1014.56" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1028.8" y="165" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1031.83" y="175.5" ></text>
</g>
<g >
<title>double sim::simple_parse_with_default&lt;double&gt; (30,303,030 samples, 1.46%)</title><rect x="787.1" y="469" width="17.2" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="790.07" y="479.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.98%)</title><rect x="1161.2" y="229" width="11.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1164.22" y="239.5" ></text>
</g>
<g >
<title>YAML::Scanner::PushIndentTo (10,101,010 samples, 0.49%)</title><rect x="896.4" y="405" width="5.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="899.44" y="415.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::shared_ptr&lt;sim::IConnection&gt;  (111,111,110 samples, 5.37%)</title><rect x="741.0" y="581" width="63.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="744.02" y="591.5" >std::_..</text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (10,101,010 samples, 0.49%)</title><rect x="510.8" y="549" width="5.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="513.78" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.98%)</title><rect x="424.4" y="565" width="11.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="427.44" y="575.5" ></text>
</g>
<g >
<title>std::deque&lt;YAML::Token, std::allocator&lt;YAML::Token&gt; &gt;::_M_reallocate_map (10,101,010 samples, 0.49%)</title><rect x="908.0" y="405" width="5.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="910.95" y="415.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (10,101,010 samples, 0.49%)</title><rect x="1172.7" y="373" width="5.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1175.73" y="383.5" ></text>
</g>
<g >
<title>YAML::Stream::get (10,101,010 samples, 0.49%)</title><rect x="988.5" y="389" width="5.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="991.54" y="399.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (10,101,010 samples, 0.49%)</title><rect x="539.6" y="597" width="5.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="542.56" y="607.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (10,101,010 samples, 0.49%)</title><rect x="1034.6" y="373" width="5.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1037.59" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="361.1" y="485" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.12" y="495.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.49%)</title><rect x="38.8" y="629" width="5.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="41.78" y="639.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (10,101,010 samples, 0.49%)</title><rect x="510.8" y="581" width="5.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="513.78" y="591.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 1.46%)</title><rect x="936.7" y="373" width="17.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="939.73" y="383.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.49%)</title><rect x="33.0" y="629" width="5.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="36.02" y="639.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="654.7" y="469" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="657.68" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1011.6" y="197" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1014.56" y="207.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (30,303,030 samples, 1.46%)</title><rect x="879.2" y="405" width="17.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="882.17" y="415.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (454,545,450 samples, 21.95%)</title><rect x="925.2" y="469" width="259.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="928.22" y="479.5" >YAML::SingleDocParser::HandleNode</text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned int&gt;, bool&gt; std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;unsigned int&gt; &gt;::_M_insert_unique&lt;unsigned int const&amp;&gt; (10,101,010 samples, 0.49%)</title><rect x="470.5" y="581" width="5.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="473.49" y="591.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (10,101,010 samples, 0.49%)</title><rect x="602.9" y="565" width="5.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="605.88" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="815.9" y="373" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="818.85" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,202,020 samples, 0.98%)</title><rect x="723.8" y="341" width="11.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="726.76" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="815.9" y="309" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="818.85" y="319.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (30,303,030 samples, 1.46%)</title><rect x="821.6" y="485" width="17.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="824.61" y="495.5" ></text>
</g>
<g >
<title>YAML::detail::memory::create_node (50,505,050 samples, 2.44%)</title><rect x="925.2" y="421" width="28.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="928.22" y="431.5" >YA..</text>
</g>
<g >
<title>operator new (70,707,070 samples, 3.41%)</title><rect x="1051.9" y="341" width="40.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1054.85" y="351.5" >ope..</text>
</g>
<g >
<title>operator new (30,303,030 samples, 1.46%)</title><rect x="936.7" y="405" width="17.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="939.73" y="415.5" ></text>
</g>
<g >
<title>sim::Summary::Summary (10,101,010 samples, 0.49%)</title><rect x="648.9" y="661" width="5.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="651.93" y="671.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (10,101,010 samples, 0.49%)</title><rect x="637.4" y="629" width="5.8" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="640.41" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,202,020 samples, 0.98%)</title><rect x="723.8" y="293" width="11.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="726.76" y="303.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanToNextToken (20,202,020 samples, 0.98%)</title><rect x="821.6" y="437" width="11.5" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="824.61" y="447.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer (10,101,010 samples, 0.49%)</title><rect x="1184.2" y="597" width="5.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1187.24" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="125.1" y="373" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="128.12" y="383.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.49%)</title><rect x="130.9" y="565" width="5.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="133.88" y="575.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.49%)</title><rect x="574.1" y="581" width="5.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="577.10" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,202,020 samples, 0.98%)</title><rect x="723.8" y="213" width="11.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="726.76" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1011.6" y="309" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1014.56" y="319.5" ></text>
</g>
<g >
<title>YAML::Stream::AdvanceCurrent (10,101,010 samples, 0.49%)</title><rect x="982.8" y="389" width="5.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="985.78" y="399.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (90,909,090 samples, 4.39%)</title><rect x="1097.9" y="389" width="51.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1100.90" y="399.5" >YAML:..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="654.7" y="373" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="657.68" y="383.5" ></text>
</g>
<g >
<title>sim::ConnectionImpl::send_data (10,101,010 samples, 0.49%)</title><rect x="384.1" y="613" width="5.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="387.15" y="623.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.49%)</title><rect x="971.3" y="405" width="5.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="974.27" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1028.8" y="101" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1031.83" y="111.5" ></text>
</g>
<g >
<title>all (2,070,707,050 samples, 100%)</title><rect x="10.0" y="757" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1120.9" y="245" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1123.93" y="255.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.98%)</title><rect x="884.9" y="373" width="11.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="887.93" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,202,020 samples, 0.98%)</title><rect x="723.8" y="533" width="11.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="726.76" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="631.7" y="565" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="634.66" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,202,020 samples, 0.98%)</title><rect x="723.8" y="469" width="11.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="726.76" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,202,020 samples, 0.98%)</title><rect x="723.8" y="149" width="11.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="726.76" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="654.7" y="597" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="657.68" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="125.1" y="517" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="128.12" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="942.5" y="197" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="945.49" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.98%)</title><rect x="936.7" y="325" width="11.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="939.73" y="335.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (50,505,050 samples, 2.44%)</title><rect x="579.9" y="597" width="28.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="582.85" y="607.5" >si..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1120.9" y="165" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1123.93" y="175.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (10,101,010 samples, 0.49%)</title><rect x="125.1" y="597" width="5.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="128.12" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.49%)</title><rect x="729.5" y="53" width="5.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="732.51" y="63.5" ></text>
</g>
<g >
<title>sim::get_target_connections (20,202,020 samples, 0.98%)</title><rect x="723.8" y="549" width="11.5" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="726.76" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="10.0" y="501" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.49%)</title><rect x="1184.2" y="581" width="5.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1187.24" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="815.9" y="341" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="818.85" y="351.5" ></text>
</g>
<g >
<title>brk (10,101,010 samples, 0.49%)</title><rect x="948.2" y="341" width="5.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="951.24" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,202,020 samples, 0.98%)</title><rect x="723.8" y="229" width="11.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="726.76" y="239.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (151,515,150 samples, 7.32%)</title><rect x="723.8" y="629" width="86.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="726.76" y="639.5" >std::_Func..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 2.44%)</title><rect x="1057.6" y="261" width="28.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1060.61" y="271.5" >[[..</text>
</g>
<g >
<title>vsnprintf (10,101,010 samples, 0.49%)</title><rect x="510.8" y="517" width="5.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="513.78" y="527.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (131,313,130 samples, 6.34%)</title><rect x="954.0" y="453" width="74.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="957.00" y="463.5" >YAML::Sc..</text>
</g>
<g >
<title>YAML::Stream::GetNextByte (10,101,010 samples, 0.49%)</title><rect x="1120.9" y="293" width="5.8" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1123.93" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="1184.2" y="533" width="5.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1187.24" y="543.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (40,404,040 samples, 1.95%)</title><rect x="1149.7" y="357" width="23.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1152.71" y="367.5" >Y..</text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (30,303,030 samples, 1.46%)</title><rect x="821.6" y="469" width="17.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="824.61" y="479.5" ></text>
</g>
<g >
<title>sim::ConfigNode::~ConfigNode (111,111,110 samples, 5.37%)</title><rect x="660.4" y="645" width="63.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="663.44" y="655.5" >sim::C..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1028.8" y="133" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1031.83" y="143.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (40,404,040 samples, 1.95%)</title><rect x="1149.7" y="325" width="23.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1152.71" y="335.5" >Y..</text>
</g>
<g >
<title>sim::Scheduler::tick (404,040,400 samples, 19.51%)</title><rect x="384.1" y="645" width="230.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="387.15" y="655.5" >sim::Scheduler::tick</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="10.0" y="677" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.98%)</title><rect x="1074.9" y="245" width="11.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1077.88" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.98%)</title><rect x="343.9" y="549" width="11.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="346.85" y="559.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::node*,  (10,101,010 samples, 0.49%)</title><rect x="672.0" y="565" width="5.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="674.95" y="575.5" ></text>
</g>
<g >
<title>sim::Simulator::start (484,848,480 samples, 23.41%)</title><rect x="366.9" y="661" width="276.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="369.88" y="671.5" >sim::Simulator::start</text>
</g>
<g >
<title>__libc_start_main (2,060,606,040 samples, 99.51%)</title><rect x="15.8" y="709" width="1174.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="18.76" y="719.5" >__libc_start_main</text>
</g>
<g >
<title>YAML::Stream::get (10,101,010 samples, 0.49%)</title><rect x="1120.9" y="325" width="5.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1123.93" y="335.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (656,565,650 samples, 31.71%)</title><rect x="810.1" y="533" width="374.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="813.10" y="543.5" >YAML::SingleDocParser::HandleNode</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1120.9" y="181" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1123.93" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1120.9" y="149" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1123.93" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="942.5" y="261" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="945.49" y="271.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (242,424,240 samples, 11.71%)</title><rect x="1040.3" y="405" width="138.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1043.34" y="415.5" >YAML::SingleDocPa..</text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (40,404,040 samples, 1.95%)</title><rect x="487.8" y="565" width="23.0" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="490.76" y="575.5" >s..</text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,101,010 samples, 0.49%)</title><rect x="798.6" y="437" width="5.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="801.59" y="447.5" ></text>
</g>
<g >
<title>sim::Link::transmit (50,505,050 samples, 2.44%)</title><rect x="407.2" y="613" width="28.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="410.17" y="623.5" >si..</text>
</g>
<g >
<title>sim::ActionParser::parse (30,303,030 samples, 1.46%)</title><rect x="723.8" y="581" width="17.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="726.76" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="948.2" y="325" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="951.24" y="335.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (10,101,010 samples, 0.49%)</title><rect x="412.9" y="581" width="5.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="415.93" y="591.5" ></text>
</g>
<g >
<title>sim::Simulator::~Simulator (10,101,010 samples, 0.49%)</title><rect x="643.2" y="661" width="5.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="646.17" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="942.5" y="181" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="945.49" y="191.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnScalar (10,101,010 samples, 0.49%)</title><rect x="1028.8" y="421" width="5.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1031.83" y="431.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.49%)</title><rect x="597.1" y="549" width="5.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="600.12" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="10.0" y="581" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>YAML::Load (656,565,650 samples, 31.71%)</title><rect x="810.1" y="613" width="374.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="813.10" y="623.5" >YAML::Load</text>
</g>
<g >
<title>sim::LinkQueue::push (40,404,040 samples, 1.95%)</title><rect x="487.8" y="581" width="23.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="490.76" y="591.5" >s..</text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.49%)</title><rect x="971.3" y="357" width="5.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="974.27" y="367.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.49%)</title><rect x="631.7" y="581" width="5.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="634.66" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.98%)</title><rect x="1074.9" y="229" width="11.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1077.88" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1028.8" y="293" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1031.83" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="33.0" y="597" width="5.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="36.02" y="607.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.49%)</title><rect x="890.7" y="357" width="5.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="893.68" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="510.8" y="501" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="513.78" y="511.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (10,101,010 samples, 0.49%)</title><rect x="412.9" y="597" width="5.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="415.93" y="607.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.49%)</title><rect x="631.7" y="597" width="5.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="634.66" y="607.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::Push (10,101,010 samples, 0.49%)</title><rect x="1028.8" y="405" width="5.8" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1031.83" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1011.6" y="117" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1014.56" y="127.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (131,313,130 samples, 6.34%)</title><rect x="954.0" y="437" width="74.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="957.00" y="447.5" >YAML::Sc..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.98%)</title><rect x="1074.9" y="149" width="11.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1077.88" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 2.93%)</title><rect x="689.2" y="517" width="34.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="692.22" y="527.5" >[l..</text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.98%)</title><rect x="861.9" y="421" width="11.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="864.90" y="431.5" ></text>
</g>
<g >
<title>YAML::Stream::_ReadAheadTo (10,101,010 samples, 0.49%)</title><rect x="988.5" y="373" width="5.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="991.54" y="383.5" ></text>
</g>
<g >
<title>sim::write_to_csv (505,050,500 samples, 24.39%)</title><rect x="44.5" y="629" width="287.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="47.54" y="639.5" >sim::write_to_csv</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,202,020 samples, 0.98%)</title><rect x="723.8" y="197" width="11.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="726.76" y="207.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.49%)</title><rect x="833.1" y="405" width="5.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="836.12" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="125.1" y="485" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="128.12" y="495.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.49%)</title><rect x="1005.8" y="325" width="5.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1008.80" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="10.0" y="709" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (60,606,060 samples, 2.93%)</title><rect x="1115.2" y="357" width="34.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1118.17" y="367.5" >YA..</text>
</g>
<g >
<title>sim::Packet::Packet (10,101,010 samples, 0.49%)</title><rect x="608.6" y="597" width="5.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="611.63" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="338.1" y="421" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.10" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="338.1" y="437" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.10" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="338.1" y="565" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.10" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1080.6" y="133" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1083.63" y="143.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (30,303,030 samples, 1.46%)</title><rect x="591.4" y="581" width="17.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="594.37" y="591.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanNextToken (50,505,050 samples, 2.44%)</title><rect x="844.6" y="437" width="28.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="847.63" y="447.5" >YA..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="125.1" y="421" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="128.12" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1028.8" y="149" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1031.83" y="159.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.49%)</title><rect x="38.8" y="613" width="5.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="41.78" y="623.5" ></text>
</g>
<g >
<title>open64 (10,101,010 samples, 0.49%)</title><rect x="125.1" y="533" width="5.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="128.12" y="543.5" ></text>
</g>
<g >
<title>YAML::Stream::_ReadAheadTo (10,101,010 samples, 0.49%)</title><rect x="1120.9" y="309" width="5.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1123.93" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1086.4" y="261" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1089.39" y="271.5" ></text>
</g>
<g >
<title>writev (10,101,010 samples, 0.49%)</title><rect x="338.1" y="581" width="5.8" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="341.10" y="591.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::export_metrics_to_files (595,959,590 samples, 28.78%)</title><rect x="27.3" y="661" width="339.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="30.27" y="671.5" >sim::MetricsCollector::export_metrics_to_files</text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.49%)</title><rect x="1184.2" y="565" width="5.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1187.24" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1028.8" y="245" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1031.83" y="255.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.49%)</title><rect x="1005.8" y="357" width="5.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1008.80" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (20,202,020 samples, 0.98%)</title><rect x="343.9" y="581" width="11.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="346.85" y="591.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="349.6" y="517" width="5.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="352.61" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (10,101,010 samples, 0.49%)</title><rect x="735.3" y="549" width="5.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="738.27" y="559.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnMapStart (10,101,010 samples, 0.49%)</title><rect x="815.9" y="485" width="5.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="818.85" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1080.6" y="101" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1083.63" y="111.5" ></text>
</g>
<g >
<title>YAML::Stream::eat (10,101,010 samples, 0.49%)</title><rect x="913.7" y="421" width="5.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="916.71" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 1.46%)</title><rect x="706.5" y="485" width="17.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="709.49" y="495.5" ></text>
</g>
<g >
<title>std::ostream::put (10,101,010 samples, 0.49%)</title><rect x="326.6" y="613" width="5.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="329.59" y="623.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.49%)</title><rect x="769.8" y="485" width="5.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="772.80" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 2.93%)</title><rect x="286.3" y="501" width="34.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="289.29" y="511.5" >[l..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.98%)</title><rect x="1074.9" y="181" width="11.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1077.88" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.98%)</title><rect x="1074.9" y="165" width="11.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1077.88" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="338.1" y="453" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.10" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1086.4" y="165" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1089.39" y="175.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.98%)</title><rect x="1138.2" y="293" width="11.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1141.20" y="303.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (20,202,020 samples, 0.98%)</title><rect x="424.4" y="581" width="11.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="427.44" y="591.5" ></text>
</g>
<g >
<title>sim::ConfigNode::operator[] (20,202,020 samples, 0.98%)</title><rect x="752.5" y="533" width="11.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="755.54" y="543.5" ></text>
</g>
<g >
<title>YAML::detail::memory::create_node (10,101,010 samples, 0.49%)</title><rect x="810.1" y="485" width="5.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="813.10" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="654.7" y="533" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="657.68" y="543.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (30,303,030 samples, 1.46%)</title><rect x="343.9" y="613" width="17.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="346.85" y="623.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (40,404,040 samples, 1.95%)</title><rect x="873.4" y="421" width="23.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="876.41" y="431.5" >Y..</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="792.8" y="421" width="5.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="795.83" y="431.5" ></text>
</g>
<g >
<title>sim::SendData::operator (60,606,060 samples, 2.93%)</title><rect x="579.9" y="629" width="34.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="582.85" y="639.5" >si..</text>
</g>
<g >
<title>YAML::NodeBuilder::OnScalar (101,010,100 samples, 4.88%)</title><rect x="1040.3" y="389" width="57.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1043.34" y="399.5" >YAML::..</text>
</g>
<g >
<title>malloc (70,707,070 samples, 3.41%)</title><rect x="1051.9" y="325" width="40.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1054.85" y="335.5" >mal..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="815.9" y="277" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="818.85" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="10.0" y="517" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="597.1" y="517" width="5.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="600.12" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="10.0" y="533" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.49%)</title><rect x="792.8" y="437" width="5.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="795.83" y="447.5" ></text>
</g>
<g >
<title>YAML::Exp::PlainScalar (10,101,010 samples, 0.49%)</title><rect x="850.4" y="421" width="5.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="853.39" y="431.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (262,626,260 samples, 12.68%)</title><rect x="171.2" y="581" width="149.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="174.17" y="591.5" >[libstdc++.so.6.0.33]</text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 2.93%)</title><rect x="689.2" y="501" width="34.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="692.22" y="511.5" >[l..</text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (40,404,040 samples, 1.95%)</title><rect x="1149.7" y="277" width="23.0" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1152.71" y="287.5" >i..</text>
</g>
<g >
<title>_IO_file_fopen (10,101,010 samples, 0.49%)</title><rect x="125.1" y="565" width="5.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="128.12" y="575.5" ></text>
</g>
<g >
<title>sim::AddDataToConnection::operator (10,101,010 samples, 0.49%)</title><rect x="384.1" y="629" width="5.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="387.15" y="639.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="10.0" y="565" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::ParseProperties (10,101,010 samples, 0.49%)</title><rect x="1178.5" y="421" width="5.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1181.49" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,202,020 samples, 0.98%)</title><rect x="723.8" y="389" width="11.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="726.76" y="399.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.49%)</title><rect x="574.1" y="597" width="5.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="577.10" y="607.5" ></text>
</g>
<g >
<title>utils::create_all_directories (10,101,010 samples, 0.49%)</title><rect x="361.1" y="613" width="5.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="364.12" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1011.6" y="229" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1014.56" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="654.7" y="389" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="657.68" y="399.5" ></text>
</g>
<g >
<title>sim::Host::~Host (10,101,010 samples, 0.49%)</title><rect x="21.5" y="581" width="5.8" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="24.51" y="591.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (20,202,020 samples, 0.98%)</title><rect x="591.4" y="565" width="11.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="594.37" y="575.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (10,101,010 samples, 0.49%)</title><rect x="384.1" y="565" width="5.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="387.15" y="575.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.98%)</title><rect x="1138.2" y="277" width="11.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1141.20" y="287.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (10,101,010 samples, 0.49%)</title><rect x="21.5" y="597" width="5.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="24.51" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1028.8" y="85" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1031.83" y="95.5" ></text>
</g>
<g >
<title>YAML::Stream::StreamInUtf8 (10,101,010 samples, 0.49%)</title><rect x="988.5" y="357" width="5.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="991.54" y="367.5" ></text>
</g>
<g >
<title>sim::TcpFlowParser::parse_tcp_flow (60,606,060 samples, 2.93%)</title><rect x="769.8" y="517" width="34.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="772.80" y="527.5" >si..</text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (10,101,010 samples, 0.49%)</title><rect x="510.8" y="565" width="5.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="513.78" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (10,101,010 samples, 0.49%)</title><rect x="332.3" y="629" width="5.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="335.34" y="639.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.49%)</title><rect x="833.1" y="421" width="5.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="836.12" y="431.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_packet_now (10,101,010 samples, 0.49%)</title><rect x="384.1" y="581" width="5.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="387.15" y="591.5" ></text>
</g>
<g >
<title>main (2,040,404,020 samples, 98.54%)</title><rect x="27.3" y="677" width="1162.7" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="30.27" y="687.5" >main</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="654.7" y="485" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="657.68" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,202,020 samples, 0.98%)</title><rect x="723.8" y="501" width="11.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="726.76" y="511.5" ></text>
</g>
<g >
<title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (10,101,010 samples, 0.49%)</title><rect x="355.4" y="581" width="5.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="358.37" y="591.5" ></text>
</g>
<g >
<title>YAML::detail::iterator_base&lt;YAML::detail::iterator_value const&gt;::operator* (10,101,010 samples, 0.49%)</title><rect x="804.3" y="565" width="5.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="807.34" y="575.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="769.8" y="469" width="5.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="772.80" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="815.9" y="293" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="818.85" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="338.1" y="517" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.10" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="1028.8" y="341" width="5.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1031.83" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::memory_holder*,  (111,111,110 samples, 5.37%)</title><rect x="660.4" y="629" width="63.4" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="663.44" y="639.5" >std::_..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="10.0" y="725" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="948.2" y="309" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="951.24" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="10.0" y="613" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>sim::ConfigNode::operator[] (10,101,010 samples, 0.49%)</title><rect x="764.0" y="517" width="5.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="767.05" y="527.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (151,515,150 samples, 7.32%)</title><rect x="723.8" y="613" width="86.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="726.76" y="623.5" >std::_Func..</text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (272,727,270 samples, 13.17%)</title><rect x="1028.8" y="437" width="155.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1031.83" y="447.5" >YAML::SingleDocPars..</text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.49%)</title><rect x="1028.8" y="357" width="5.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1031.83" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,202,020 samples, 0.98%)</title><rect x="723.8" y="421" width="11.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="726.76" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="654.7" y="517" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="657.68" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (181,818,180 samples, 8.78%)</title><rect x="217.2" y="533" width="103.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="220.22" y="543.5" >[libc.so.6]</text>
</g>
<g >
<title>sim::Simulator::recalculate_paths (50,505,050 samples, 2.44%)</title><rect x="614.4" y="645" width="28.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="617.39" y="655.5" >si..</text>
</g>
<g >
<title>YAML::Scanner::empty (40,404,040 samples, 1.95%)</title><rect x="1149.7" y="373" width="23.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1152.71" y="383.5" >Y..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1011.6" y="101" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1014.56" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,202,020 samples, 0.98%)</title><rect x="723.8" y="117" width="11.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="726.76" y="127.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::export_to_file (50,505,050 samples, 2.44%)</title><rect x="338.1" y="629" width="28.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="341.10" y="639.5" >si..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 2.44%)</title><rect x="1057.6" y="277" width="28.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1060.61" y="287.5" >[[..</text>
</g>
<g >
<title>nons (2,070,707,050 samples, 100.00%)</title><rect x="10.0" y="741" width="1180.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.00" y="751.5" >nons</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,202,020 samples, 0.98%)</title><rect x="723.8" y="373" width="11.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="726.76" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1011.6" y="293" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1014.56" y="303.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.49%)</title><rect x="965.5" y="389" width="5.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="968.51" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 2.44%)</title><rect x="1057.6" y="293" width="28.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1060.61" y="303.5" >[[..</text>
</g>
<g >
<title>YAML::detail::node_data::get&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (10,101,010 samples, 0.49%)</title><rect x="775.6" y="485" width="5.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="778.56" y="495.5" ></text>
</g>
<g >
<title>YAML::detail::memory::create_node (10,101,010 samples, 0.49%)</title><rect x="1092.1" y="373" width="5.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1095.15" y="383.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,101,010 samples, 0.49%)</title><rect x="447.5" y="613" width="5.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="450.46" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1028.8" y="261" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1031.83" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="815.9" y="261" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="818.85" y="271.5" ></text>
</g>
<g >
<title>sim::ConfigNode::Iterator::operator* (10,101,010 samples, 0.49%)</title><rect x="741.0" y="533" width="5.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="744.02" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,202,020 samples, 0.98%)</title><rect x="723.8" y="133" width="11.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="726.76" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,101,010 samples, 0.49%)</title><rect x="729.5" y="69" width="5.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="732.51" y="79.5" ></text>
</g>
<g >
<title>YAML::Stream::operator bool (10,101,010 samples, 0.49%)</title><rect x="1109.4" y="341" width="5.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1112.41" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="27.3" y="645" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="30.27" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1011.6" y="85" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1014.56" y="95.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.98%)</title><rect x="15.8" y="661" width="11.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.76" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="361.1" y="549" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.12" y="559.5" ></text>
</g>
<g >
<title>operator delete (20,202,020 samples, 0.98%)</title><rect x="366.9" y="645" width="11.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="369.88" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1028.8" y="181" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1031.83" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="654.7" y="565" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="657.68" y="575.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleDocument (656,565,650 samples, 31.71%)</title><rect x="810.1" y="581" width="374.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="813.10" y="591.5" >YAML::SingleDocParser::HandleDocument</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="643.2" y="597" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="646.17" y="607.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (90,909,090 samples, 4.39%)</title><rect x="977.0" y="421" width="51.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="980.02" y="431.5" >YAML:..</text>
</g>
<g >
<title>void std::deque&lt;YAML::Token, std::allocator&lt;YAML::Token&gt; &gt;::_M_push_back_aux&lt;YAML::Token const&amp;&gt; (10,101,010 samples, 0.49%)</title><rect x="908.0" y="421" width="5.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="910.95" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.49%)</title><rect x="729.5" y="37" width="5.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="732.51" y="47.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="620.1" y="597" width="5.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="623.15" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.98%)</title><rect x="1074.9" y="197" width="11.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1077.88" y="207.5" ></text>
</g>
<g >
<title>YAML::Scanner::InsertPotentialSimpleKey (10,101,010 samples, 0.49%)</title><rect x="1011.6" y="405" width="5.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1014.56" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="942.5" y="309" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="945.49" y="319.5" ></text>
</g>
<g >
<title>sim::Switch::process (151,515,150 samples, 7.32%)</title><rect x="476.2" y="613" width="86.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="479.24" y="623.5" >sim::Switc..</text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (40,404,040 samples, 1.95%)</title><rect x="1149.7" y="309" width="23.0" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1152.71" y="319.5" >i..</text>
</g>
<g >
<title>sim::load_file (666,666,660 samples, 32.20%)</title><rect x="810.1" y="645" width="379.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="813.10" y="655.5" >sim::load_file</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="125.1" y="437" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="128.12" y="447.5" ></text>
</g>
<g >
<title>YAML::detail::memory::create_node (90,909,090 samples, 4.39%)</title><rect x="1040.3" y="357" width="51.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1043.34" y="367.5" >YAML:..</text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (60,606,060 samples, 2.93%)</title><rect x="977.0" y="405" width="34.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="980.02" y="415.5" >YA..</text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::memory*,  (111,111,110 samples, 5.37%)</title><rect x="660.4" y="613" width="63.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="663.44" y="623.5" >std::_..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1086.4" y="197" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1089.39" y="207.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::node_ref*,  (60,606,060 samples, 2.93%)</title><rect x="689.2" y="565" width="34.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="692.22" y="575.5" >st..</text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.49%)</title><rect x="654.7" y="629" width="5.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="657.68" y="639.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="948.2" y="261" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="951.24" y="271.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (131,313,130 samples, 6.34%)</title><rect x="844.6" y="469" width="74.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="847.63" y="479.5" >YAML::Sc..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,202,020 samples, 0.98%)</title><rect x="723.8" y="357" width="11.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="726.76" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="130.9" y="549" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="133.88" y="559.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanToNextToken (10,101,010 samples, 0.49%)</title><rect x="965.5" y="405" width="5.8" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="968.51" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="654.7" y="437" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="657.68" y="447.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer (10,101,010 samples, 0.49%)</title><rect x="130.9" y="597" width="5.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="133.88" y="607.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (40,404,040 samples, 1.95%)</title><rect x="1126.7" y="309" width="23.0" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1129.68" y="319.5" >i..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="338.1" y="485" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.10" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,202,020 samples, 0.98%)</title><rect x="723.8" y="85" width="11.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="726.76" y="95.5" ></text>
</g>
<g >
<title>cfree (60,606,060 samples, 2.93%)</title><rect x="689.2" y="533" width="34.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="692.22" y="543.5" >cf..</text>
</g>
<g >
<title>brk (10,101,010 samples, 0.49%)</title><rect x="1086.4" y="277" width="5.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1089.39" y="287.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_links (10,101,010 samples, 0.49%)</title><rect x="804.3" y="597" width="5.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="807.34" y="607.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnScalar (50,505,050 samples, 2.44%)</title><rect x="925.2" y="453" width="28.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="928.22" y="463.5" >YA..</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="401.4" y="565" width="5.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="404.41" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="361.1" y="501" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.12" y="511.5" ></text>
</g>
<g >
<title>sim::ScenarioParser::parse (30,303,030 samples, 1.46%)</title><rect x="723.8" y="597" width="17.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="726.76" y="607.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="798.6" y="421" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="801.59" y="431.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (303,030,300 samples, 14.63%)</title><rect x="153.9" y="597" width="172.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="156.90" y="607.5" >std::ostreambuf_iterat..</text>
</g>
<g >
<title>sim::bfs[abi:cxx11] (40,404,040 samples, 1.95%)</title><rect x="614.4" y="629" width="23.0" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="617.39" y="639.5" >s..</text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.49%)</title><rect x="810.1" y="453" width="5.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="813.10" y="463.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.49%)</title><rect x="867.7" y="357" width="5.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="870.66" y="367.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_data (10,101,010 samples, 0.49%)</title><rect x="384.1" y="597" width="5.8" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="387.15" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1086.4" y="229" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1089.39" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="654.7" y="549" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="657.68" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1080.6" y="85" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1083.63" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.49%)</title><rect x="21.5" y="613" width="5.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="24.51" y="623.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_insert_unique&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; const&amp;&gt; (10,101,010 samples, 0.49%)</title><rect x="631.7" y="613" width="5.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="634.66" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1080.6" y="117" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1083.63" y="127.5" ></text>
</g>
<g >
<title>sim::TahoeCCParser::parse_tahoe_cc (30,303,030 samples, 1.46%)</title><rect x="787.1" y="485" width="17.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="790.07" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1120.9" y="277" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1123.93" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="948.2" y="245" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="951.24" y="255.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (10,101,010 samples, 0.49%)</title><rect x="1034.6" y="405" width="5.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1037.59" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="510.8" y="485" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="513.78" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="942.5" y="277" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="945.49" y="287.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.49%)</title><rect x="815.9" y="421" width="5.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="818.85" y="431.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (606,060,600 samples, 29.27%)</title><rect x="838.9" y="485" width="345.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="841.88" y="495.5" >YAML::SingleDocParser::HandleBlockMap</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,202,020 samples, 0.98%)</title><rect x="723.8" y="405" width="11.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="726.76" y="415.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::export_to_files (50,505,050 samples, 2.44%)</title><rect x="338.1" y="645" width="28.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="341.10" y="655.5" >si..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="10.0" y="485" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="942.5" y="293" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="945.49" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1028.8" y="309" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1031.83" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1120.9" y="261" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1123.93" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,202,020 samples, 0.98%)</title><rect x="723.8" y="437" width="11.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="726.76" y="447.5" ></text>
</g>
<g >
<title>sim::ConfigNode::Iterator::operator* (10,101,010 samples, 0.49%)</title><rect x="804.3" y="581" width="5.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="807.34" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1028.8" y="229" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1031.83" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1086.4" y="213" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1089.39" y="223.5" ></text>
</g>
<g >
<title>sim::ActionParser::parse_send_data (30,303,030 samples, 1.46%)</title><rect x="723.8" y="565" width="17.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="726.76" y="575.5" ></text>
</g>
<g >
<title>sim::ConfigNode::ConfigNode (10,101,010 samples, 0.49%)</title><rect x="741.0" y="517" width="5.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="744.02" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1086.4" y="245" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1089.39" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1120.9" y="133" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1123.93" y="143.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (20,202,020 samples, 0.98%)</title><rect x="579.9" y="565" width="11.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="582.85" y="575.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;YAML::detail::node*,  (80,808,080 samples, 3.90%)</title><rect x="677.7" y="581" width="46.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="680.71" y="591.5" >std:..</text>
</g>
<g >
<title>YAML::Stream::get (10,101,010 samples, 0.49%)</title><rect x="913.7" y="405" width="5.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="916.71" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.49%)</title><rect x="597.1" y="533" width="5.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="600.12" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,202,020 samples, 0.98%)</title><rect x="723.8" y="277" width="11.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="726.76" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (232,323,230 samples, 11.22%)</title><rect x="188.4" y="549" width="132.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="191.44" y="559.5" >[libc.so.6]</text>
</g>
<g >
<title>sim::LinkQueue::push (20,202,020 samples, 0.98%)</title><rect x="579.9" y="581" width="11.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="582.85" y="591.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.49%)</title><rect x="971.3" y="389" width="5.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="974.27" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="125.1" y="501" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="128.12" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="361.1" y="565" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.12" y="575.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="643.2" y="613" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="646.17" y="623.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (20,202,020 samples, 0.98%)</title><rect x="579.9" y="549" width="11.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="582.85" y="559.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.49%)</title><rect x="810.1" y="469" width="5.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="813.10" y="479.5" ></text>
</g>
<g >
<title>sim::TcpFlow::update (30,303,030 samples, 1.46%)</title><rect x="459.0" y="597" width="17.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="461.98" y="607.5" ></text>
</g>
<g >
<title>__default_morecore (10,101,010 samples, 0.49%)</title><rect x="1086.4" y="293" width="5.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1089.39" y="303.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnScalar (10,101,010 samples, 0.49%)</title><rect x="1172.7" y="357" width="5.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1175.73" y="367.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (30,303,030 samples, 1.46%)</title><rect x="994.3" y="389" width="17.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="997.29" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="942.5" y="245" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="945.49" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.98%)</title><rect x="309.3" y="485" width="11.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="312.32" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1011.6" y="261" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1014.56" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="654.7" y="421" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="657.68" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="815.9" y="405" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="818.85" y="415.5" ></text>
</g>
<g >
<title>YAML::detail::memory::create_node (10,101,010 samples, 0.49%)</title><rect x="815.9" y="453" width="5.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="818.85" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1011.6" y="245" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1014.56" y="255.5" ></text>
</g>
<g >
<title>YAML::Stream::get (10,101,010 samples, 0.49%)</title><rect x="827.4" y="405" width="5.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="830.37" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.98%)</title><rect x="936.7" y="357" width="11.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="939.73" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;YAML::detail::node&gt;, std::shared_ptr&lt;YAML::detail::node&gt;, std::_Identity&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt;, std::less&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;YAML::detail::node&gt; &gt; &gt;::_M_erase (111,111,110 samples, 5.37%)</title><rect x="660.4" y="597" width="63.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="663.44" y="607.5" >std::_..</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="499.3" y="533" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="502.27" y="543.5" ></text>
</g>
<g >
<title>YAML::Stream::peek (10,101,010 samples, 0.49%)</title><rect x="1023.1" y="405" width="5.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1026.07" y="415.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (60,606,060 samples, 2.93%)</title><rect x="1115.2" y="341" width="34.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1118.17" y="351.5" >YA..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="654.7" y="453" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="657.68" y="463.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnScalar (10,101,010 samples, 0.49%)</title><rect x="810.1" y="517" width="5.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="813.10" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1011.6" y="165" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1014.56" y="175.5" ></text>
</g>
<g >
<title>std::filesystem::status (10,101,010 samples, 0.49%)</title><rect x="361.1" y="597" width="5.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="364.12" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="815.9" y="325" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="818.85" y="335.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (10,101,010 samples, 0.49%)</title><rect x="436.0" y="613" width="5.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="438.95" y="623.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (10,101,010 samples, 0.49%)</title><rect x="1034.6" y="389" width="5.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1037.59" y="399.5" ></text>
</g>
<g >
<title>YAML::Stream::operator bool (10,101,010 samples, 0.49%)</title><rect x="1034.6" y="357" width="5.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1037.59" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="942.5" y="229" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="945.49" y="239.5" ></text>
</g>
<g >
<title>YAML::Scanner::GetValueRegex (10,101,010 samples, 0.49%)</title><rect x="954.0" y="421" width="5.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="957.00" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="10.0" y="629" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (646,464,640 samples, 31.22%)</title><rect x="815.9" y="501" width="368.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="818.85" y="511.5" >YAML::SingleDocParser::HandleNode</text>
</g>
<g >
<title>sim::LinkQueue::pop (30,303,030 samples, 1.46%)</title><rect x="418.7" y="597" width="17.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="421.68" y="607.5" ></text>
</g>
<g >
<title>sim::ConfigNode::operator[] (30,303,030 samples, 1.46%)</title><rect x="787.1" y="453" width="17.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="790.07" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="125.1" y="453" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="128.12" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,202,020 samples, 0.98%)</title><rect x="723.8" y="453" width="11.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="726.76" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="942.5" y="149" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="945.49" y="159.5" ></text>
</g>
<g >
<title>YAML::detail::memory::create_node (10,101,010 samples, 0.49%)</title><rect x="1028.8" y="389" width="5.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1031.83" y="399.5" ></text>
</g>
<g >
<title>YAML::Scanner::InsertPotentialSimpleKey (10,101,010 samples, 0.49%)</title><rect x="896.4" y="421" width="5.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="899.44" y="431.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (252,525,250 samples, 12.20%)</title><rect x="1034.6" y="421" width="143.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1037.59" y="431.5" >YAML::SingleDocPar..</text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (10,101,010 samples, 0.49%)</title><rect x="401.4" y="581" width="5.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="404.41" y="591.5" ></text>
</g>
<g >
<title>sim::ConfigNode::operator[] (10,101,010 samples, 0.49%)</title><rect x="781.3" y="485" width="5.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="784.32" y="495.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (20,202,020 samples, 0.98%)</title><rect x="125.1" y="613" width="11.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="128.12" y="623.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="33.0" y="581" width="5.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="36.02" y="591.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::export_to_files (535,353,530 samples, 25.85%)</title><rect x="33.0" y="645" width="305.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="36.02" y="655.5" >sim::LinksQueueSizeStorage::export_to_files</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="10.0" y="693" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>YAML::Parser::HandleNextDocument (656,565,650 samples, 31.71%)</title><rect x="810.1" y="597" width="374.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="813.10" y="607.5" >YAML::Parser::HandleNextDocument</text>
</g>
<g >
<title>YAML::Scanner::ScanToNextToken (10,101,010 samples, 0.49%)</title><rect x="1103.7" y="341" width="5.7" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="1106.66" y="351.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.49%)</title><rect x="505.0" y="533" width="5.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="508.02" y="543.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.49%)</title><rect x="1005.8" y="309" width="5.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1008.80" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="1011.6" y="341" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1014.56" y="351.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanNextToken (30,303,030 samples, 1.46%)</title><rect x="959.8" y="421" width="17.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="962.76" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="815.9" y="389" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="818.85" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="654.7" y="581" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="657.68" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1011.6" y="133" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1014.56" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1120.9" y="213" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1123.93" y="223.5" ></text>
</g>
<g >
<title>sim::ConnectionParser::parse_connection (111,111,110 samples, 5.37%)</title><rect x="741.0" y="549" width="63.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="744.02" y="559.5" >sim::C..</text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (30,303,030 samples, 1.46%)</title><rect x="522.3" y="597" width="17.3" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="525.29" y="607.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.49%)</title><rect x="971.3" y="373" width="5.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="974.27" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,202,020 samples, 0.98%)</title><rect x="723.8" y="485" width="11.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="726.76" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1086.4" y="181" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1089.39" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="942.5" y="165" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="945.49" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1028.8" y="213" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1031.83" y="223.5" ></text>
</g>
<g >
<title>YAML::detail::memory::create_node (10,101,010 samples, 0.49%)</title><rect x="1172.7" y="325" width="5.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1175.73" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,202,020 samples, 0.98%)</title><rect x="723.8" y="101" width="11.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="726.76" y="111.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.49%)</title><rect x="130.9" y="581" width="5.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="133.88" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="125.1" y="469" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="128.12" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1028.8" y="277" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1031.83" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="361.1" y="453" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.12" y="463.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,101,010 samples, 0.49%)</title><rect x="378.4" y="645" width="5.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="381.39" y="655.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (10,101,010 samples, 0.49%)</title><rect x="556.8" y="597" width="5.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="559.83" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="125.1" y="389" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="128.12" y="399.5" ></text>
</g>
<g >
<title>fopen (10,101,010 samples, 0.49%)</title><rect x="125.1" y="581" width="5.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="128.12" y="591.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (60,606,060 samples, 2.93%)</title><rect x="482.0" y="597" width="34.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="485.00" y="607.5" >si..</text>
</g>
<g >
<title>YAML::NodeBuilder::Push (90,909,090 samples, 4.39%)</title><rect x="1040.3" y="373" width="51.8" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1043.34" y="383.5" >YAML:..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1011.6" y="149" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1014.56" y="159.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (10,101,010 samples, 0.49%)</title><rect x="602.9" y="549" width="5.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="605.88" y="559.5" ></text>
</g>
<g >
<title>sim::Host::process (30,303,030 samples, 1.46%)</title><rect x="459.0" y="613" width="17.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="461.98" y="623.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (40,404,040 samples, 1.95%)</title><rect x="1149.7" y="261" width="23.0" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1152.71" y="271.5" >i..</text>
</g>
<g >
<title>vsnprintf (232,323,230 samples, 11.22%)</title><rect x="188.4" y="565" width="132.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="191.44" y="575.5" >vsnprintf</text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (90,909,090 samples, 4.39%)</title><rect x="1097.9" y="373" width="51.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1100.90" y="383.5" >YAML:..</text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (10,101,010 samples, 0.49%)</title><rect x="1184.2" y="613" width="5.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1187.24" y="623.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (333,333,330 samples, 16.10%)</title><rect x="136.6" y="613" width="190.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="139.63" y="623.5" >std::ostream&amp; std::ostre..</text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (50,505,050 samples, 2.44%)</title><rect x="1149.7" y="389" width="28.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1152.71" y="399.5" >YA..</text>
</g>
<g >
<title>YAML::Scanner::ScanNextToken (20,202,020 samples, 0.98%)</title><rect x="1103.7" y="357" width="11.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1106.66" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="361.1" y="469" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.12" y="479.5" ></text>
</g>
<g >
<title>sim::TcpCCParser::parse_i_tcp_cc (40,404,040 samples, 1.95%)</title><rect x="781.3" y="501" width="23.0" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="784.32" y="511.5" >s..</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="33.0" y="613" width="5.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="36.02" y="623.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.49%)</title><rect x="1167.0" y="213" width="5.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1169.98" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="361.1" y="517" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="364.12" y="527.5" ></text>
</g>
<g >
<title>fstatat64 (10,101,010 samples, 0.49%)</title><rect x="361.1" y="581" width="5.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="364.12" y="591.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (70,707,070 samples, 3.41%)</title><rect x="873.4" y="437" width="40.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="876.41" y="447.5" >YAM..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="942.5" y="213" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="945.49" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (161,616,160 samples, 7.80%)</title><rect x="228.7" y="517" width="92.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="231.73" y="527.5" >[libc.so.6]</text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.49%)</title><rect x="320.8" y="581" width="5.8" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="323.83" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1028.8" y="197" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1031.83" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.49%)</title><rect x="1011.6" y="213" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1014.56" y="223.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.49%)</title><rect x="867.7" y="389" width="5.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="870.66" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.49%)</title><rect x="349.6" y="501" width="5.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="352.61" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,202,020 samples, 0.98%)</title><rect x="723.8" y="309" width="11.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="726.76" y="319.5" ></text>
</g>
<g >
<title>YAML::Stream::AdvanceCurrent (10,101,010 samples, 0.49%)</title><rect x="827.4" y="389" width="5.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="830.37" y="399.5" ></text>
</g>
</g>
</svg>
