<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="484.5" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="487.54" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.22%)</title><rect x="95.3" y="325" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="98.27" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.13%)</title><rect x="103.2" y="405" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="106.21" y="415.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.09%)</title><rect x="109.6" y="501" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="112.57" y="511.5" ></text>
</g>
<g >
<title>sim::Link::~Link (50,505,050 samples, 0.22%)</title><rect x="19.0" y="453" width="2.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="22.00" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.13%)</title><rect x="93.7" y="309" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="96.68" y="319.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.04%)</title><rect x="1148.7" y="453" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1151.69" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.13%)</title><rect x="86.3" y="357" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="89.27" y="367.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet const&amp;&gt; (10,101,010 samples, 0.04%)</title><rect x="1134.9" y="421" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1137.92" y="431.5" ></text>
</g>
<g >
<title>sim::FlowParser::parse_tcp_flow (10,101,010 samples, 0.04%)</title><rect x="1188.9" y="421" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1191.94" y="431.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (101,010,100 samples, 0.45%)</title><rect x="858.5" y="437" width="5.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="861.46" y="447.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (70,707,070 samples, 0.31%)</title><rect x="1125.4" y="453" width="3.7" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1128.39" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.09%)</title><rect x="802.8" y="405" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="805.85" y="415.5" ></text>
</g>
<g >
<title>YAML::Parser::HandleNextDocument (90,909,090 samples, 0.40%)</title><rect x="1184.2" y="469" width="4.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1187.17" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="26.4" y="437" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.42" y="447.5" ></text>
</g>
<g >
<title>main (22,272,727,050 samples, 98.97%)</title><rect x="22.2" y="533" width="1167.8" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="25.18" y="543.5" >main</text>
</g>
<g >
<title>std::ostream::put (20,202,020 samples, 0.09%)</title><rect x="90.0" y="469" width="1.0" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="92.97" y="479.5" ></text>
</g>
<g >
<title>vsnprintf (30,303,030 samples, 0.13%)</title><rect x="103.2" y="421" width="1.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="106.21" y="431.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.04%)</title><rect x="1187.4" y="213" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.35" y="223.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (121,212,120 samples, 0.54%)</title><rect x="479.8" y="453" width="6.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="482.78" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.09%)</title><rect x="1158.8" y="421" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.75" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="22.7" y="373" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.71" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="389" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="453" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.13%)</title><rect x="93.7" y="213" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="96.68" y="223.5" ></text>
</g>
<g >
<title>operator delete (10,101,010 samples, 0.04%)</title><rect x="1140.7" y="485" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1143.75" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="1175.7" y="405" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1178.70" y="415.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::get_size (10,101,010 samples, 0.04%)</title><rect x="486.1" y="453" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="489.13" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.13%)</title><rect x="1157.2" y="325" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1160.16" y="335.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.09%)</title><rect x="1185.8" y="261" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1188.76" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (20,202,020 samples, 0.09%)</title><rect x="1170.9" y="469" width="1.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1173.93" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="26.4" y="421" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.42" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.31%)</title><rect x="46.5" y="309" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="49.54" y="319.5" ></text>
</g>
<g >
<title>sim::LinkQueue::empty (30,303,030 samples, 0.13%)</title><rect x="864.3" y="453" width="1.6" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="867.28" y="463.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (50,505,050 samples, 0.22%)</title><rect x="472.4" y="405" width="2.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="475.36" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (90,909,090 samples, 0.40%)</title><rect x="480.8" y="437" width="4.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="483.83" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.13%)</title><rect x="17.4" y="405" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.41" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (10,101,010 samples, 0.04%)</title><rect x="808.7" y="405" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="811.67" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="55.0" y="437" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="58.02" y="447.5" ></text>
</g>
<g >
<title>sim::Simulator::add_link (10,101,010 samples, 0.04%)</title><rect x="1189.5" y="437" width="0.5" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="1192.47" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="105.9" y="357" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.86" y="367.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (15,171,717,020 samples, 67.41%)</title><rect x="344.2" y="501" width="795.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="347.19" y="511.5" >sim::Scheduler::tick</text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.04%)</title><rect x="1148.7" y="469" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1151.69" y="479.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.04%)</title><rect x="1127.5" y="421" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1130.50" y="431.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (202,020,200 samples, 0.90%)</title><rect x="11.6" y="469" width="10.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="14.59" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="26.9" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.95" y="287.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (30,303,030 samples, 0.13%)</title><rect x="103.2" y="437" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="106.21" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="105.3" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.33" y="335.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (60,606,060 samples, 0.27%)</title><rect x="471.8" y="421" width="3.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="474.83" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (70,707,070 samples, 0.31%)</title><rect x="859.0" y="421" width="3.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="861.99" y="431.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (10,101,010 samples, 0.04%)</title><rect x="74.1" y="453" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="77.08" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="484.5" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="487.54" y="207.5" ></text>
</g>
<g >
<title>pthread_once@plt (10,101,010 samples, 0.04%)</title><rect x="73.0" y="437" width="0.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="76.03" y="447.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.04%)</title><rect x="1184.7" y="261" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1187.70" y="271.5" ></text>
</g>
<g >
<title>sim::Host::~Host (141,414,140 samples, 0.63%)</title><rect x="11.6" y="453" width="7.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="14.59" y="463.5" ></text>
</g>
<g >
<title>fstatat64 (10,101,010 samples, 0.04%)</title><rect x="105.9" y="437" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="108.86" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="565" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="484.5" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="487.54" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.18%)</title><rect x="1156.6" y="421" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1159.63" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="45.5" y="245" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.48" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.09%)</title><rect x="24.3" y="453" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="27.30" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.04%)</title><rect x="1163.5" y="469" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1166.52" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="808.1" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="811.14" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="357" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.04%)</title><rect x="808.1" y="405" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="811.14" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.27%)</title><rect x="69.8" y="357" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="72.85" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (20,202,020 samples, 0.09%)</title><rect x="861.6" y="389" width="1.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="864.63" y="399.5" ></text>
</g>
<g >
<title>sim::Link::transmit (171,717,170 samples, 0.76%)</title><rect x="477.7" y="469" width="9.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="480.66" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (242,424,240 samples, 1.08%)</title><rect x="75.1" y="405" width="12.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="78.14" y="415.5" ></text>
</g>
<g >
<title>std::filesystem::status (10,101,010 samples, 0.04%)</title><rect x="98.4" y="469" width="0.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="101.45" y="479.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.04%)</title><rect x="104.8" y="437" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="107.80" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="801.8" y="453" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="804.79" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.09%)</title><rect x="25.4" y="453" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.36" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.22%)</title><rect x="99.5" y="389" width="2.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="102.51" y="399.5" ></text>
</g>
<g >
<title>sim::RoutingModule::add_outlink (10,101,010 samples, 0.04%)</title><rect x="1189.5" y="421" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1192.47" y="431.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.04%)</title><rect x="474.5" y="389" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="477.48" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="55.5" y="421" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="58.55" y="431.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.04%)</title><rect x="1184.7" y="213" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1187.70" y="223.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.09%)</title><rect x="1175.2" y="437" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1178.17" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="26.4" y="325" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.42" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="105.9" y="421" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.86" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.22%)</title><rect x="95.3" y="213" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="98.27" y="223.5" ></text>
</g>
<g >
<title>sim::Switch::process (2,373,737,350 samples, 10.55%)</title><rect x="834.6" y="469" width="124.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="837.62" y="479.5" >sim::Switch::pr..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="1186.3" y="181" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.29" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="808.1" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="811.14" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.31%)</title><rect x="46.5" y="325" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="49.54" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.22%)</title><rect x="95.3" y="245" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="98.27" y="255.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (70,707,070 samples, 0.31%)</title><rect x="1185.2" y="341" width="3.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1188.23" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="105.3" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.33" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.22%)</title><rect x="47.6" y="181" width="2.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="50.60" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="1155.0" y="469" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1158.04" y="479.5" ></text>
</g>
<g >
<title>sim::SendData::operator (191,919,190 samples, 0.85%)</title><rect x="1120.1" y="485" width="10.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1123.09" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="22.7" y="341" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.71" y="351.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.04%)</title><rect x="1184.7" y="277" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1187.70" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="105.9" y="325" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.86" y="335.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.04%)</title><rect x="90.5" y="453" width="0.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="93.50" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 0.99%)</title><rect x="451.7" y="469" width="11.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="454.71" y="479.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::data[abi:cxx11] (20,202,020 samples, 0.09%)</title><rect x="26.4" y="485" width="1.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="29.42" y="495.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (10,101,010 samples, 0.04%)</title><rect x="808.7" y="421" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="811.67" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (20,202,020 samples, 0.09%)</title><rect x="42.8" y="453" width="1.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="45.84" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="1175.7" y="373" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1178.70" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="22.7" y="405" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.71" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.18%)</title><rect x="95.8" y="181" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="98.80" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.13%)</title><rect x="93.7" y="261" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="96.68" y="271.5" ></text>
</g>
<g >
<title>sim::Simulator::start (20,555,555,350 samples, 91.34%)</title><rect x="106.4" y="517" width="1077.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="109.39" y="527.5" >sim::Simulator::start</text>
</g>
<g >
<title>vsnprintf (242,424,240 samples, 1.08%)</title><rect x="75.1" y="421" width="12.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="78.14" y="431.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (50,505,050 samples, 0.22%)</title><rect x="102.7" y="469" width="2.6" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="105.68" y="479.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (70,707,070 samples, 0.31%)</title><rect x="46.5" y="453" width="3.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="49.54" y="463.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.13%)</title><rect x="1159.8" y="437" width="1.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1162.81" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="23.2" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.24" y="319.5" ></text>
</g>
<g >
<title>__uselocale@plt (10,101,010 samples, 0.04%)</title><rect x="102.2" y="437" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="105.15" y="447.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.09%)</title><rect x="1145.5" y="453" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1148.51" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="862.2" y="261" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="865.16" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="105.9" y="405" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.86" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (50,505,050 samples, 0.22%)</title><rect x="1168.3" y="469" width="2.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1171.29" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="277" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (60,606,060 samples, 0.27%)</title><rect x="1145.5" y="469" width="3.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1148.51" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="1186.3" y="165" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.29" y="175.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (10,101,010 samples, 0.04%)</title><rect x="1184.7" y="309" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1187.70" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.22%)</title><rect x="16.4" y="421" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="19.36" y="431.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.09%)</title><rect x="1145.5" y="437" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1148.51" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="293" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.31%)</title><rect x="46.5" y="277" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="49.54" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="105.9" y="389" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.86" y="399.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.04%)</title><rect x="1184.2" y="309" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1187.17" y="319.5" ></text>
</g>
<g >
<title>operator new (80,808,080 samples, 0.36%)</title><rect x="1155.6" y="469" width="4.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1158.57" y="479.5" ></text>
</g>
<g >
<title>sim::TcpFlow::update (70,707,070 samples, 0.31%)</title><rect x="807.6" y="453" width="3.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="810.61" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="1186.3" y="213" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.29" y="223.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (80,808,080 samples, 0.36%)</title><rect x="1184.7" y="357" width="4.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1187.70" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::export_to_file (252,525,250 samples, 1.12%)</title><rect x="93.2" y="485" width="13.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="96.15" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="1186.3" y="133" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.29" y="143.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (10,101,010 samples, 0.04%)</title><rect x="807.1" y="421" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="810.08" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.09%)</title><rect x="51.8" y="453" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="54.84" y="463.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.09%)</title><rect x="88.4" y="437" width="1.0" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="91.38" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="473.9" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="476.95" y="207.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (10,101,010 samples, 0.04%)</title><rect x="1184.7" y="341" width="0.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1187.70" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (20,202,020 samples, 0.09%)</title><rect x="1182.1" y="485" width="1.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1185.06" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.09%)</title><rect x="72.0" y="341" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="74.97" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.09%)</title><rect x="861.6" y="341" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="864.63" y="351.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (10,101,010 samples, 0.04%)</title><rect x="1184.7" y="325" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1187.70" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="806.0" y="421" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="809.02" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.18%)</title><rect x="1156.6" y="389" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1159.63" y="399.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.04%)</title><rect x="1184.2" y="261" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1187.17" y="271.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (60,606,060 samples, 0.27%)</title><rect x="99.0" y="437" width="3.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="101.98" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.18%)</title><rect x="472.4" y="357" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="475.36" y="367.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (4,090,909,050 samples, 18.18%)</title><rect x="120.7" y="501" width="214.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="123.69" y="511.5" >sim::Event::operator&gt;</text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::export_to_files (1,353,535,340 samples, 6.01%)</title><rect x="22.2" y="501" width="71.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="25.18" y="511.5" >sim::Lin..</text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (494,949,490 samples, 2.20%)</title><rect x="868.0" y="453" width="25.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="870.99" y="463.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="94.2" y="197" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="97.21" y="207.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (30,303,030 samples, 0.13%)</title><rect x="833.0" y="469" width="1.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="836.03" y="479.5" ></text>
</g>
<g >
<title>sim::Link::get_to (10,101,010 samples, 0.04%)</title><rect x="1141.3" y="485" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.27" y="495.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.04%)</title><rect x="1187.4" y="245" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.35" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="1145.0" y="421" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1147.98" y="431.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (40,404,040 samples, 0.18%)</title><rect x="1186.8" y="309" width="2.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1189.82" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="473.4" y="245" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="476.42" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_erase (80,808,080 samples, 0.36%)</title><rect x="1164.0" y="469" width="4.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1167.05" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="473.9" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="476.95" y="191.5" ></text>
</g>
<g >
<title>fopen (50,505,050 samples, 0.22%)</title><rect x="95.3" y="437" width="2.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="98.27" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="808.1" y="373" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="811.14" y="383.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.04%)</title><rect x="1184.7" y="229" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1187.70" y="239.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.04%)</title><rect x="1184.7" y="245" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1187.70" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (171,717,170 samples, 0.76%)</title><rect x="78.9" y="389" width="9.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="81.85" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="484.5" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="487.54" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="473.9" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="476.95" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.22%)</title><rect x="859.0" y="405" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="861.99" y="415.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,101,010 samples, 0.04%)</title><rect x="477.1" y="469" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="480.13" y="479.5" ></text>
</g>
<g >
<title>sim::bfs[abi:cxx11] (595,959,590 samples, 2.65%)</title><rect x="1149.2" y="485" width="31.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1152.22" y="495.5" >si..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="473.4" y="309" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="476.42" y="319.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (30,303,030 samples, 0.13%)</title><rect x="93.7" y="437" width="1.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="96.68" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="105.3" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.33" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.13%)</title><rect x="1157.2" y="341" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1160.16" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.22%)</title><rect x="95.3" y="373" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="98.27" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.13%)</title><rect x="1157.2" y="357" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1160.16" y="367.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.04%)</title><rect x="1188.9" y="373" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1191.94" y="383.5" ></text>
</g>
<g >
<title>std::ostream::put (10,101,010 samples, 0.04%)</title><rect x="92.6" y="485" width="0.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="95.62" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="501" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.04%)</title><rect x="1128.6" y="421" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1131.56" y="431.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.13%)</title><rect x="45.0" y="437" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="47.96" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="22.7" y="421" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.71" y="431.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (10,101,010 samples, 0.04%)</title><rect x="1124.9" y="437" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1127.86" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (40,404,040 samples, 0.18%)</title><rect x="1176.2" y="453" width="2.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1179.23" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="26.9" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.95" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.18%)</title><rect x="1146.6" y="405" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1149.57" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="405" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="309" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (70,707,070 samples, 0.31%)</title><rect x="99.0" y="469" width="3.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="101.98" y="479.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (20,202,020 samples, 0.09%)</title><rect x="862.7" y="421" width="1.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="865.69" y="431.5" ></text>
</g>
<g >
<title>sim::Host::~Host (20,202,020 samples, 0.09%)</title><rect x="10.5" y="437" width="1.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="13.53" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="105.3" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.33" y="255.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.13%)</title><rect x="1176.8" y="437" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1179.76" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="484.5" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="487.54" y="287.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (60,606,060 samples, 0.27%)</title><rect x="1122.2" y="453" width="3.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1125.21" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;unsigned int&gt; &gt;::_M_erase (10,101,010 samples, 0.04%)</title><rect x="21.7" y="437" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="24.65" y="447.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (30,303,030 samples, 0.13%)</title><rect x="1123.3" y="405" width="1.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1126.27" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.22%)</title><rect x="19.0" y="405" width="2.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.00" y="415.5" ></text>
</g>
<g >
<title>sim::write_to_csv (1,212,121,200 samples, 5.39%)</title><rect x="27.5" y="485" width="63.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="30.48" y="495.5" >sim::w..</text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.40%)</title><rect x="1184.2" y="437" width="4.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1187.17" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.22%)</title><rect x="95.3" y="293" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="98.27" y="303.5" ></text>
</g>
<g >
<title>sim::Switch::notify_about_arrival (10,101,010 samples, 0.04%)</title><rect x="476.1" y="453" width="0.5" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="479.07" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="437" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>__uselocale@plt (10,101,010 samples, 0.04%)</title><rect x="87.9" y="437" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="90.85" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="97.4" y="85" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="100.39" y="95.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.09%)</title><rect x="861.6" y="357" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="864.63" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="26.4" y="357" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.42" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.13%)</title><rect x="1157.2" y="277" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1160.16" y="287.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.09%)</title><rect x="25.4" y="469" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="28.36" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="1186.3" y="69" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.29" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="45.5" y="405" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.48" y="415.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (30,303,030 samples, 0.13%)</title><rect x="93.7" y="453" width="1.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="96.68" y="463.5" ></text>
</g>
<g >
<title>sim::Process::~Process (101,010,100 samples, 0.45%)</title><rect x="338.9" y="501" width="5.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="341.90" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="45.5" y="357" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.48" y="367.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (10,101,010 samples, 0.04%)</title><rect x="811.3" y="453" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="814.32" y="463.5" ></text>
</g>
<g >
<title>sim::Event::Event (171,717,170 samples, 0.76%)</title><rect x="533.3" y="469" width="9.0" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="536.27" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.09%)</title><rect x="1185.8" y="245" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1188.76" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="94.2" y="165" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="97.21" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.27%)</title><rect x="47.1" y="197" width="3.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="50.07" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="808.1" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="811.14" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.09%)</title><rect x="103.7" y="389" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="106.74" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.31%)</title><rect x="46.5" y="261" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="49.54" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="1186.3" y="117" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.29" y="127.5" ></text>
</g>
<g >
<title>sim::Link::arrive (252,525,250 samples, 1.12%)</title><rect x="463.4" y="469" width="13.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="466.36" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="474.5" y="309" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="477.48" y="319.5" ></text>
</g>
<g >
<title>YAML::LoadFile (90,909,090 samples, 0.40%)</title><rect x="1184.2" y="501" width="4.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1187.17" y="511.5" ></text>
</g>
<g >
<title>_start (22,494,949,270 samples, 99.96%)</title><rect x="10.5" y="581" width="1179.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.53" y="591.5" >_start</text>
</g>
<g >
<title>sim::MetricsCollector::add_cwnd (20,202,020 samples, 0.09%)</title><rect x="809.2" y="437" width="1.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="812.20" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="808.1" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="811.14" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.31%)</title><rect x="46.5" y="341" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="49.54" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (10,101,010 samples, 0.04%)</title><rect x="809.7" y="405" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="812.73" y="415.5" ></text>
</g>
<g >
<title>sim::Host::send_packet (181,818,180 samples, 0.81%)</title><rect x="1120.6" y="469" width="9.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1123.62" y="479.5" ></text>
</g>
<g >
<title>void sim::YamlParser::process_identifiables&lt;sim::IFlow&gt; (10,101,010 samples, 0.04%)</title><rect x="1188.9" y="469" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1191.94" y="479.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.22%)</title><rect x="530.6" y="469" width="2.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="533.62" y="479.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_packets (40,404,040 samples, 0.18%)</title><rect x="805.5" y="453" width="2.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="808.49" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="862.2" y="213" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="865.16" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="97.4" y="117" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="100.39" y="127.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.09%)</title><rect x="1175.2" y="421" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1178.17" y="431.5" ></text>
</g>
<g >
<title>_IO_file_fopen (50,505,050 samples, 0.22%)</title><rect x="95.3" y="421" width="2.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="98.27" y="431.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;, std::weak_ptr&lt;sim::IProcessingDevice&gt;&amp;&gt; (3,060,606,030 samples, 13.60%)</title><rect x="959.1" y="469" width="160.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="962.08" y="479.5" >void sim::Scheduler:..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.13%)</title><rect x="93.7" y="357" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="96.68" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="533" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (30,303,030 samples, 0.13%)</title><rect x="483.5" y="405" width="1.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="486.48" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.13%)</title><rect x="1157.2" y="309" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1160.16" y="319.5" ></text>
</g>
<g >
<title>sim::TcpFlow::retransmit_packet (10,101,010 samples, 0.04%)</title><rect x="1134.9" y="469" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1137.92" y="479.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.09%)</title><rect x="25.4" y="485" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="28.36" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="862.2" y="293" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="865.16" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="517" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>write (30,303,030 samples, 0.13%)</title><rect x="93.7" y="405" width="1.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="96.68" y="415.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (444,444,440 samples, 1.97%)</title><rect x="50.3" y="469" width="23.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="53.25" y="479.5" >s..</text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.13%)</title><rect x="100.6" y="357" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="103.57" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.13%)</title><rect x="1157.2" y="293" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1160.16" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.18%)</title><rect x="1156.6" y="405" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1159.63" y="415.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.04%)</title><rect x="40.7" y="469" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="43.72" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 0.99%)</title><rect x="10.5" y="533" width="11.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.53" y="543.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.04%)</title><rect x="102.7" y="453" width="0.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="105.68" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="861.6" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="864.63" y="335.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_packet_now (20,202,020 samples, 0.09%)</title><rect x="806.6" y="437" width="1.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="809.55" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="473.4" y="293" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="476.42" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.22%)</title><rect x="19.0" y="421" width="2.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.00" y="431.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (20,202,020 samples, 0.09%)</title><rect x="1188.9" y="501" width="1.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1191.94" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="105.3" y="405" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.33" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (10,101,010 samples, 0.04%)</title><rect x="857.9" y="421" width="0.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="860.93" y="431.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.09%)</title><rect x="24.3" y="485" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="27.30" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.31%)</title><rect x="46.5" y="357" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="49.54" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="1186.3" y="197" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.29" y="207.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.04%)</title><rect x="808.1" y="421" width="0.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="811.14" y="431.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (313,131,310 samples, 1.39%)</title><rect x="73.6" y="469" width="16.4" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="76.55" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="1176.8" y="373" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1179.76" y="383.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (252,525,250 samples, 1.12%)</title><rect x="463.4" y="485" width="13.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="466.36" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="22.7" y="389" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.71" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (333,333,330 samples, 1.48%)</title><rect x="55.5" y="437" width="17.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="58.55" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="1186.3" y="149" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.29" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="45.5" y="325" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.48" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.22%)</title><rect x="95.3" y="309" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="98.27" y="319.5" ></text>
</g>
<g >
<title>nons (22,505,050,280 samples, 100.00%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >nons</text>
</g>
<g >
<title>[libc.so.6] (171,717,170 samples, 0.76%)</title><rect x="78.9" y="373" width="9.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="81.85" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="1157.7" y="245" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1160.69" y="255.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (20,202,020 samples, 0.09%)</title><rect x="809.2" y="421" width="1.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="812.20" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="22.7" y="453" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.71" y="463.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.04%)</title><rect x="1184.2" y="293" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1187.17" y="303.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.18%)</title><rect x="1146.6" y="437" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1149.57" y="447.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.04%)</title><rect x="866.9" y="421" width="0.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="869.93" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="473.4" y="261" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="476.42" y="271.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanNextToken (10,101,010 samples, 0.04%)</title><rect x="1186.8" y="293" width="0.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1189.82" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="94.2" y="181" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="97.21" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.13%)</title><rect x="470.2" y="421" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="473.24" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.18%)</title><rect x="95.8" y="197" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="98.80" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="484.5" y="245" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="487.54" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="1140.2" y="485" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1143.22" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.18%)</title><rect x="472.4" y="389" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="475.36" y="399.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Switch::process (80,808,080 samples, 0.36%)</title><rect x="1135.4" y="485" width="4.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1138.45" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.09%)</title><rect x="1145.5" y="421" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1148.51" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.27%)</title><rect x="99.0" y="405" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="101.98" y="415.5" ></text>
</g>
<g >
<title>sim::Switch::process (40,404,040 samples, 0.18%)</title><rect x="1130.2" y="485" width="2.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1133.15" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (40,404,040 samples, 0.18%)</title><rect x="1146.6" y="453" width="2.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1149.57" y="463.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (50,505,050 samples, 0.22%)</title><rect x="95.3" y="453" width="2.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="98.27" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.13%)</title><rect x="93.7" y="341" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="96.68" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="23.2" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.24" y="303.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (10,101,010 samples, 0.04%)</title><rect x="1134.9" y="437" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1137.92" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="45.5" y="213" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.48" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (303,030,300 samples, 1.35%)</title><rect x="57.1" y="405" width="15.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="60.14" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="22.7" y="357" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.71" y="367.5" ></text>
</g>
<g >
<title>operator delete (10,101,010 samples, 0.04%)</title><rect x="93.2" y="453" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="96.15" y="463.5" ></text>
</g>
<g >
<title>sim::Process::operator (12,060,605,940 samples, 53.59%)</title><rect x="487.2" y="485" width="632.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="490.19" y="495.5" >sim::Process::operator</text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="94.2" y="149" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="97.21" y="159.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (20,202,020 samples, 0.09%)</title><rect x="1129.1" y="453" width="1.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1132.09" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="1157.7" y="229" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1160.69" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="485" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>brk (10,101,010 samples, 0.04%)</title><rect x="862.2" y="309" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="865.16" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.13%)</title><rect x="93.7" y="293" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="96.68" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.13%)</title><rect x="96.3" y="149" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="99.33" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="23.2" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.24" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.09%)</title><rect x="1160.3" y="421" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1163.34" y="431.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (101,010,100 samples, 0.45%)</title><rect x="858.5" y="453" width="5.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="861.46" y="463.5" ></text>
</g>
<g >
<title>all (22,505,050,280 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>fopen (70,707,070 samples, 0.31%)</title><rect x="46.5" y="437" width="3.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="49.54" y="447.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::Push (30,303,030 samples, 0.13%)</title><rect x="1185.2" y="309" width="1.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1188.23" y="319.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.04%)</title><rect x="809.2" y="389" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="812.20" y="399.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (10,101,010 samples, 0.04%)</title><rect x="480.3" y="437" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="483.31" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="105.9" y="341" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.86" y="351.5" ></text>
</g>
<g >
<title>sim::is_valid_link (30,303,030 samples, 0.13%)</title><rect x="1143.4" y="469" width="1.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1146.39" y="479.5" ></text>
</g>
<g >
<title>sim::Simulator::get_devices (10,101,010 samples, 0.04%)</title><rect x="1148.7" y="485" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1151.69" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="473.4" y="277" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="476.42" y="287.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (10,101,010 samples, 0.04%)</title><rect x="1184.2" y="341" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1187.17" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (10,101,010 samples, 0.04%)</title><rect x="1188.9" y="405" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1191.94" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="484.5" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="487.54" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="484.5" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="487.54" y="319.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (60,606,060 samples, 0.27%)</title><rect x="802.3" y="453" width="3.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="805.32" y="463.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (10,101,010 samples, 0.04%)</title><rect x="485.6" y="437" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="488.60" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.18%)</title><rect x="472.4" y="373" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="475.36" y="383.5" ></text>
</g>
<g >
<title>mkdir (10,101,010 samples, 0.04%)</title><rect x="105.3" y="421" width="0.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="108.33" y="431.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (30,303,030 samples, 0.13%)</title><rect x="93.7" y="421" width="1.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="96.68" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="1160.9" y="405" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1163.87" y="415.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.13%)</title><rect x="1185.2" y="277" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1188.23" y="287.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.04%)</title><rect x="474.5" y="373" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="477.48" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (10,101,010 samples, 0.04%)</title><rect x="1161.4" y="453" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1164.40" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="805.0" y="389" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="807.96" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="1186.3" y="229" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.29" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="1142.9" y="469" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1145.86" y="479.5" ></text>
</g>
<g >
<title>vsnprintf (60,606,060 samples, 0.27%)</title><rect x="99.0" y="421" width="3.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="101.98" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="484.5" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="487.54" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="45.5" y="293" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.48" y="303.5" ></text>
</g>
<g >
<title>sim::TcpFlow::create_packet (10,101,010 samples, 0.04%)</title><rect x="806.0" y="437" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="809.02" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="105.3" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.33" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="469" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="105.3" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.33" y="383.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (40,404,040 samples, 0.18%)</title><rect x="103.2" y="453" width="2.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="106.21" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.18%)</title><rect x="48.1" y="149" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="51.13" y="159.5" ></text>
</g>
<g >
<title>sim::FlowParser::parse_i_flow (10,101,010 samples, 0.04%)</title><rect x="1188.9" y="437" width="0.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1191.94" y="447.5" ></text>
</g>
<g >
<title>sim::Process::~Process (10,101,010 samples, 0.04%)</title><rect x="1119.6" y="485" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1122.56" y="495.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (10,101,010 samples, 0.04%)</title><rect x="863.8" y="453" width="0.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="866.75" y="463.5" ></text>
</g>
<g >
<title>sim::BaseHasher::get_hash (30,303,030 samples, 0.13%)</title><rect x="1127.5" y="437" width="1.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1130.50" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="40.7" y="421" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="43.72" y="431.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (10,101,010 samples, 0.04%)</title><rect x="802.3" y="421" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="805.32" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (212,121,210 samples, 0.94%)</title><rect x="61.9" y="389" width="11.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="64.90" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="1148.7" y="405" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1151.69" y="415.5" ></text>
</g>
<g >
<title>std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;::size_type std::__detail::__erase_nodes_if&lt;std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;, std::set&lt;std::weak_ptr&lt;sim::ILink&gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::weak_ptr&lt;sim::ILink&gt; &gt; &gt;, sim::RoutingModule::correctify_outlinks (10,101,010 samples, 0.04%)</title><rect x="1161.9" y="453" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1164.93" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.31%)</title><rect x="46.5" y="373" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="49.54" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="45.5" y="229" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.48" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="26.4" y="469" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.42" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="45.5" y="373" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.48" y="383.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.18%)</title><rect x="1146.6" y="421" width="2.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1149.57" y="431.5" ></text>
</g>
<g >
<title>open64 (70,707,070 samples, 0.31%)</title><rect x="46.5" y="389" width="3.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="49.54" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="1186.3" y="101" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.29" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="26.4" y="389" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.42" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="1127.5" y="405" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1130.50" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="26.9" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.95" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_insert_unique&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; const&amp;&gt; (40,404,040 samples, 0.18%)</title><rect x="1178.3" y="469" width="2.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1181.35" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.13%)</title><rect x="93.7" y="325" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="96.68" y="335.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::export_metrics_to_files (1,606,060,590 samples, 7.14%)</title><rect x="22.2" y="517" width="84.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="25.18" y="527.5" >sim::Metr..</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="1122.7" y="405" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1125.74" y="415.5" ></text>
</g>
<g >
<title>malloc (161,616,160 samples, 0.72%)</title><rect x="1088.8" y="437" width="8.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1091.84" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="484.5" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="487.54" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="94.7" y="133" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="97.74" y="143.5" ></text>
</g>
<g >
<title>cfree (333,333,330 samples, 1.48%)</title><rect x="445.9" y="485" width="17.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="448.88" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (30,303,030 samples, 0.13%)</title><rect x="91.0" y="485" width="1.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="94.03" y="495.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::get_records (10,101,010 samples, 0.04%)</title><rect x="41.2" y="469" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="44.25" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="484.5" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="487.54" y="239.5" ></text>
</g>
<g >
<title>_IO_file_fopen (70,707,070 samples, 0.31%)</title><rect x="46.5" y="421" width="3.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="49.54" y="431.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.09%)</title><rect x="861.6" y="373" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="864.63" y="383.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (20,202,020 samples, 0.09%)</title><rect x="861.6" y="405" width="1.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="864.63" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="1146.0" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1149.04" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 0.99%)</title><rect x="10.5" y="517" width="11.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.53" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="26.4" y="453" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.42" y="463.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.04%)</title><rect x="1145.0" y="453" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1147.98" y="463.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (40,404,040 samples, 0.18%)</title><rect x="1186.8" y="325" width="2.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1189.82" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="97.4" y="69" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="100.39" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="105.9" y="373" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.86" y="383.5" ></text>
</g>
<g >
<title>sim::TcpFlow::~TcpFlow (10,101,010 samples, 0.04%)</title><rect x="21.7" y="453" width="0.5" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="24.65" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.13%)</title><rect x="481.4" y="421" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="484.36" y="431.5" ></text>
</g>
<g >
<title>sim::Link::get_max_to_ingress_queue_size (141,414,140 samples, 0.63%)</title><rect x="811.8" y="469" width="7.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="814.85" y="479.5" ></text>
</g>
<g >
<title>sim::Host::process (212,121,210 samples, 0.94%)</title><rect x="800.7" y="469" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="803.73" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="862.2" y="229" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="865.16" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="22.7" y="469" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.71" y="479.5" ></text>
</g>
<g >
<title>YAML::detail::memory::create_node (30,303,030 samples, 0.13%)</title><rect x="1185.2" y="293" width="1.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1188.23" y="303.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (10,101,010 samples, 0.04%)</title><rect x="479.2" y="453" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="482.25" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="104.3" y="373" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="107.27" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="373" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.09%)</title><rect x="45.5" y="421" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="48.48" y="431.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (20,202,020 samples, 0.09%)</title><rect x="10.5" y="453" width="1.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.53" y="463.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.04%)</title><rect x="40.7" y="453" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="43.72" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;* std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_Alloc_node&gt; (20,202,020 samples, 0.09%)</title><rect x="1183.1" y="485" width="1.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1186.11" y="495.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanNextToken (10,101,010 samples, 0.04%)</title><rect x="1184.2" y="325" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1187.17" y="335.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.09%)</title><rect x="52.9" y="453" width="1.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="55.90" y="463.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.09%)</title><rect x="1167.2" y="453" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1170.23" y="463.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.40%)</title><rect x="1184.2" y="405" width="4.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1187.17" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="862.2" y="277" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="865.16" y="287.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.04%)</title><rect x="809.2" y="405" width="0.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="812.20" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.04%)</title><rect x="485.1" y="421" width="0.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="488.07" y="431.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.13%)</title><rect x="1159.8" y="453" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1162.81" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="97.4" y="101" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="100.39" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="23.2" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="26.24" y="287.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (111,111,110 samples, 0.49%)</title><rect x="819.3" y="469" width="5.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="822.26" y="479.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.04%)</title><rect x="809.2" y="373" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="812.20" y="383.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.04%)</title><rect x="1184.2" y="245" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1187.17" y="255.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (20,202,020 samples, 0.09%)</title><rect x="475.0" y="437" width="1.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="478.01" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="26.4" y="405" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.42" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="26.9" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.95" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.04%)</title><rect x="43.9" y="469" width="0.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="46.90" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.13%)</title><rect x="93.7" y="389" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="96.68" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="484.5" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="487.54" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="45.5" y="309" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.48" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (20,202,020 samples, 0.09%)</title><rect x="1181.0" y="485" width="1.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1184.00" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="808.1" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="811.14" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="484.5" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="487.54" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="45.5" y="197" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.48" y="207.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (10,101,010 samples, 0.04%)</title><rect x="1187.4" y="277" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1190.35" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.13%)</title><rect x="1157.2" y="261" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1160.16" y="271.5" ></text>
</g>
<g >
<title>vsnprintf (323,232,320 samples, 1.44%)</title><rect x="56.1" y="421" width="16.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="59.08" y="431.5" ></text>
</g>
<g >
<title>utils::create_all_directories (20,202,020 samples, 0.09%)</title><rect x="105.3" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.33" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="474.5" y="357" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="477.48" y="367.5" ></text>
</g>
<g >
<title>open64 (50,505,050 samples, 0.22%)</title><rect x="95.3" y="389" width="2.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="98.27" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_RTT (20,202,020 samples, 0.09%)</title><rect x="808.1" y="437" width="1.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="811.14" y="447.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_packet_now (10,101,010 samples, 0.04%)</title><rect x="1134.9" y="453" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1137.92" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (121,212,120 samples, 0.54%)</title><rect x="1172.0" y="469" width="6.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1174.99" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.27%)</title><rect x="47.1" y="245" width="3.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="50.07" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.22%)</title><rect x="47.6" y="165" width="2.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="50.60" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="862.2" y="245" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="865.16" y="255.5" ></text>
</g>
<g >
<title>sim::Event::Event (424,242,420 samples, 1.89%)</title><rect x="1097.3" y="453" width="22.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1100.32" y="463.5" >s..</text>
</g>
<g >
<title>__default_morecore (10,101,010 samples, 0.04%)</title><rect x="862.2" y="325" width="0.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="865.16" y="335.5" ></text>
</g>
<g >
<title>std::filesystem::status (10,101,010 samples, 0.04%)</title><rect x="105.9" y="453" width="0.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="108.86" y="463.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::operator (191,919,190 samples, 0.85%)</title><rect x="476.6" y="485" width="10.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="479.60" y="495.5" ></text>
</g>
<g >
<title>YAML::Load (90,909,090 samples, 0.40%)</title><rect x="1184.2" y="485" width="4.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1187.17" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="40.7" y="437" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="43.72" y="447.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (40,404,040 samples, 0.18%)</title><rect x="865.9" y="453" width="2.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="868.87" y="463.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (10,101,010 samples, 0.04%)</title><rect x="1184.7" y="293" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1187.70" y="303.5" ></text>
</g>
<g >
<title>sim::Link::get_to_ingress_queue_size (151,515,150 samples, 0.67%)</title><rect x="825.1" y="469" width="7.9" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="828.09" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="549" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.22%)</title><rect x="95.3" y="357" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="98.27" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="1158.2" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1161.22" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="45.5" y="261" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.48" y="271.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.40%)</title><rect x="1184.2" y="421" width="4.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1187.17" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="105.3" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.33" y="351.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.40%)</title><rect x="1184.2" y="373" width="4.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1187.17" y="383.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::~Transmit (10,101,010 samples, 0.04%)</title><rect x="486.7" y="485" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="489.66" y="495.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.04%)</title><rect x="1187.4" y="261" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.35" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="1176.8" y="357" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1179.76" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.13%)</title><rect x="93.7" y="245" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="96.68" y="255.5" ></text>
</g>
<g >
<title>YAML::Stream::operator bool (10,101,010 samples, 0.04%)</title><rect x="1188.4" y="277" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1191.41" y="287.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (30,303,030 samples, 0.13%)</title><rect x="1187.4" y="293" width="1.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1190.35" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="808.1" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="811.14" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="18.5" y="389" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.47" y="399.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (363,636,360 samples, 1.62%)</title><rect x="54.5" y="453" width="19.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="57.49" y="463.5" ></text>
</g>
<g >
<title>malloc (70,707,070 samples, 0.31%)</title><rect x="1156.1" y="453" width="3.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1159.10" y="463.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (50,505,050 samples, 0.22%)</title><rect x="802.8" y="437" width="2.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="805.85" y="447.5" ></text>
</g>
<g >
<title>operator new (202,020,200 samples, 0.90%)</title><rect x="1086.7" y="453" width="10.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1089.72" y="463.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (10,101,010 samples, 0.04%)</title><rect x="89.4" y="437" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="92.44" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="46.0" y="405" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="49.01" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="1146.0" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1149.04" y="367.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (50,505,050 samples, 0.22%)</title><rect x="1122.2" y="437" width="2.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1125.21" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="25.9" y="437" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.89" y="447.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.09%)</title><rect x="42.8" y="437" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="45.84" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="45.5" y="389" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.48" y="399.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (10,101,010 samples, 0.04%)</title><rect x="802.3" y="437" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="805.32" y="447.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (10,101,010 samples, 0.04%)</title><rect x="1184.2" y="357" width="0.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1187.17" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.18%)</title><rect x="95.8" y="165" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="98.80" y="175.5" ></text>
</g>
<g >
<title>__libc_start_main (22,494,949,270 samples, 99.96%)</title><rect x="10.5" y="565" width="1179.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.53" y="575.5" >__libc_start_main</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="1148.7" y="421" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1151.69" y="431.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.04%)</title><rect x="1188.9" y="389" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1191.94" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.22%)</title><rect x="95.3" y="261" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="98.27" y="271.5" ></text>
</g>
<g >
<title>sim::Simulator::recalculate_paths (848,484,840 samples, 3.77%)</title><rect x="1139.7" y="501" width="44.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1142.69" y="511.5" >sim:..</text>
</g>
<g >
<title>operator delete (101,010,100 samples, 0.45%)</title><rect x="110.6" y="501" width="5.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="113.63" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="23.8" y="485" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="26.77" y="495.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.04%)</title><rect x="54.0" y="453" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="56.96" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="1175.7" y="389" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1178.70" y="399.5" ></text>
</g>
<g >
<title>cfree (60,606,060 samples, 0.27%)</title><rect x="15.8" y="437" width="3.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="18.83" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="861.6" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="864.63" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="473.4" y="325" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="476.42" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="808.1" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="811.14" y="303.5" ></text>
</g>
<g >
<title>std::filesystem::create_directories (10,101,010 samples, 0.04%)</title><rect x="105.3" y="453" width="0.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="108.33" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="24.8" y="437" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="27.83" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (10,101,010 samples, 0.04%)</title><rect x="1180.5" y="485" width="0.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1183.47" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="105.3" y="389" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.33" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="45.5" y="277" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.48" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="1146.0" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1149.04" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (20,202,020 samples, 0.09%)</title><rect x="10.5" y="469" width="1.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.53" y="479.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.04%)</title><rect x="1186.8" y="277" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.82" y="287.5" ></text>
</g>
<g >
<title>sim::BaseHasher::get_hash (10,101,010 samples, 0.04%)</title><rect x="866.9" y="437" width="0.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="869.93" y="447.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (111,111,110 samples, 0.49%)</title><rect x="1184.2" y="517" width="5.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1187.17" y="527.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (70,707,070 samples, 0.31%)</title><rect x="797.0" y="469" width="3.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="800.02" y="479.5" ></text>
</g>
<g >
<title>sim::Host::notify_about_arrival (10,101,010 samples, 0.04%)</title><rect x="466.5" y="453" width="0.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="469.54" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="1145.5" y="389" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1148.51" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (40,404,040 samples, 0.18%)</title><rect x="1122.7" y="421" width="2.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1125.74" y="431.5" ></text>
</g>
<g >
<title>_IO_file_open (50,505,050 samples, 0.22%)</title><rect x="95.3" y="405" width="2.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="98.27" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::get_instance (10,101,010 samples, 0.04%)</title><rect x="810.3" y="437" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="813.26" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="809.2" y="357" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="812.20" y="367.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.04%)</title><rect x="1184.2" y="277" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1187.17" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="45.5" y="341" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.48" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="26.4" y="373" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.42" y="383.5" ></text>
</g>
<g >
<title>sim::TcpFlow::Timeout::operator (60,606,060 samples, 0.27%)</title><rect x="1132.3" y="485" width="3.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1135.27" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.13%)</title><rect x="93.7" y="229" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="96.68" y="239.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (4,858,585,810 samples, 21.59%)</title><rect x="542.3" y="469" width="254.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="545.27" y="479.5" >sim::Event::operator&gt;</text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.04%)</title><rect x="1128.6" y="405" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1131.56" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="474.5" y="325" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="477.48" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="1145.5" y="405" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1148.51" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (191,919,190 samples, 0.85%)</title><rect x="63.0" y="373" width="10.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="65.96" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.09%)</title><rect x="24.3" y="469" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="27.30" y="479.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (10,101,010 samples, 0.04%)</title><rect x="1128.0" y="421" width="0.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1131.03" y="431.5" ></text>
</g>
<g >
<title>sim::Process::operator (70,707,070 samples, 0.31%)</title><rect x="335.2" y="501" width="3.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="338.19" y="511.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (50,505,050 samples, 0.22%)</title><rect x="95.3" y="469" width="2.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="98.27" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.31%)</title><rect x="46.5" y="293" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="49.54" y="303.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (40,404,040 samples, 0.18%)</title><rect x="93.2" y="469" width="2.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="96.15" y="479.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::export_to_files (252,525,250 samples, 1.12%)</title><rect x="93.2" y="501" width="13.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="96.15" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="861.6" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="864.63" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.09%)</title><rect x="86.8" y="341" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="89.80" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="325" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_outlinks (50,505,050 samples, 0.22%)</title><rect x="1159.8" y="469" width="2.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1162.81" y="479.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (292,929,290 samples, 1.30%)</title><rect x="74.6" y="453" width="15.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="77.61" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="479.2" y="437" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="482.25" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="105.3" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.33" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.13%)</title><rect x="472.9" y="341" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="475.89" y="351.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (30,303,030 samples, 0.13%)</title><rect x="464.9" y="453" width="1.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="467.95" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="1145.5" y="373" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1148.51" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (50,505,050 samples, 0.22%)</title><rect x="802.8" y="421" width="2.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="805.85" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="1148.7" y="437" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1151.69" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (1,242,424,230 samples, 5.52%)</title><rect x="893.9" y="453" width="65.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="896.94" y="463.5" >std::_R..</text>
</g>
<g >
<title>void sim::YamlParser::process_identifiables&lt;sim::ILink&gt; (10,101,010 samples, 0.04%)</title><rect x="1189.5" y="469" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1192.47" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="49.7" y="117" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="52.72" y="127.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (121,212,120 samples, 0.54%)</title><rect x="468.7" y="437" width="6.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="471.65" y="447.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_flows (10,101,010 samples, 0.04%)</title><rect x="1188.9" y="485" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1191.94" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::weak_ptr&lt;sim::ILink&gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (10,101,010 samples, 0.04%)</title><rect x="1145.0" y="469" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1147.98" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.13%)</title><rect x="93.7" y="277" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="96.68" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="96.9" y="133" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="99.86" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="808.1" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="811.14" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="22.7" y="485" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.71" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.27%)</title><rect x="47.1" y="213" width="3.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="50.07" y="223.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.13%)</title><rect x="1176.8" y="421" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1179.76" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.27%)</title><rect x="47.1" y="229" width="3.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="50.07" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="474.5" y="341" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="477.48" y="351.5" ></text>
</g>
<g >
<title>std::filesystem::create_directories (10,101,010 samples, 0.04%)</title><rect x="105.3" y="437" width="0.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="108.33" y="447.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10,101,010 samples, 0.04%)</title><rect x="867.5" y="437" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="870.46" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.18%)</title><rect x="100.0" y="373" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="103.04" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="1146.0" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1149.04" y="319.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (70,707,070 samples, 0.31%)</title><rect x="46.5" y="469" width="3.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="49.54" y="479.5" ></text>
</g>
<g >
<title>sim::IdentifierFactory::~IdentifierFactory (222,222,220 samples, 0.99%)</title><rect x="10.5" y="501" width="11.7" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="13.53" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="26.4" y="341" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.42" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.18%)</title><rect x="19.5" y="389" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.53" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="22.7" y="437" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.71" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.13%)</title><rect x="1147.1" y="389" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1150.10" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.09%)</title><rect x="49.2" y="133" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="52.19" y="143.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleDocument (90,909,090 samples, 0.40%)</title><rect x="1184.2" y="453" width="4.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1187.17" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.13%)</title><rect x="1157.2" y="373" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1160.16" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (222,222,220 samples, 0.99%)</title><rect x="10.5" y="485" width="11.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.53" y="495.5" ></text>
</g>
<g >
<title>sim::RoutingModule::update_routing_table (131,313,130 samples, 0.58%)</title><rect x="1141.8" y="485" width="6.9" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1144.80" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.22%)</title><rect x="95.3" y="341" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="98.27" y="351.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (10,101,010 samples, 0.04%)</title><rect x="857.9" y="405" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="860.93" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="1176.8" y="389" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1179.76" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.31%)</title><rect x="1156.1" y="437" width="3.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1159.10" y="447.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (171,717,170 samples, 0.76%)</title><rect x="467.1" y="453" width="9.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="470.06" y="463.5" ></text>
</g>
<g >
<title>YAML::Scanner::InsertPotentialSimpleKey (10,101,010 samples, 0.04%)</title><rect x="1187.9" y="277" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1190.88" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="1167.8" y="437" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1170.76" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="473.9" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="476.95" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.22%)</title><rect x="95.3" y="277" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="98.27" y="287.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (40,404,040 samples, 0.18%)</title><rect x="483.0" y="421" width="2.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="485.95" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="484.5" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="487.54" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="341" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.13%)</title><rect x="93.7" y="373" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="96.68" y="383.5" ></text>
</g>
<g >
<title>cfree (50,505,050 samples, 0.22%)</title><rect x="19.0" y="437" width="2.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="22.00" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (22,494,949,270 samples, 99.96%)</title><rect x="10.5" y="549" width="1179.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.53" y="559.5" >[libc.so.6]</text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.04%)</title><rect x="810.8" y="437" width="0.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="813.79" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (40,404,040 samples, 0.18%)</title><rect x="41.8" y="469" width="2.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="44.78" y="479.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_links (10,101,010 samples, 0.04%)</title><rect x="1189.5" y="485" width="0.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1192.47" y="495.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (30,303,030 samples, 0.13%)</title><rect x="803.9" y="405" width="1.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="806.90" y="415.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.22%)</title><rect x="1084.1" y="453" width="2.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1087.08" y="463.5" ></text>
</g>
<g >
<title>_IO_file_open (70,707,070 samples, 0.31%)</title><rect x="46.5" y="405" width="3.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="49.54" y="415.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (10,101,010 samples, 0.04%)</title><rect x="1189.5" y="453" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1192.47" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.22%)</title><rect x="95.3" y="229" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="98.27" y="239.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (252,525,250 samples, 1.12%)</title><rect x="74.6" y="437" width="13.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="77.61" y="447.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.04%)</title><rect x="1187.4" y="197" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.35" y="207.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.04%)</title><rect x="1127.0" y="437" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1129.97" y="447.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.13%)</title><rect x="45.0" y="453" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="47.96" y="463.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.40%)</title><rect x="1184.2" y="389" width="4.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1187.17" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.13%)</title><rect x="1176.8" y="405" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1179.76" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="97.4" y="37" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="100.39" y="47.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::shared_ptr&lt;sim::IFlow&gt;  (10,101,010 samples, 0.04%)</title><rect x="1188.9" y="453" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1191.94" y="463.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (131,313,130 samples, 0.58%)</title><rect x="851.6" y="453" width="6.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="854.57" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="861.6" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="864.63" y="319.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (20,202,020 samples, 0.09%)</title><rect x="1162.5" y="469" width="1.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1165.46" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="421" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="1186.3" y="85" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1189.29" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="97.4" y="53" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="100.39" y="63.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.04%)</title><rect x="1187.4" y="229" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.35" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="1121.7" y="453" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1124.68" y="463.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.04%)</title><rect x="808.1" y="389" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="811.14" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="808.1" y="261" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="811.14" y="271.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.04%)</title><rect x="485.6" y="421" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="488.60" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;Time&lt;Nanosecond&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (40,404,040 samples, 0.18%)</title><rect x="44.4" y="469" width="2.1" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="47.43" y="479.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.04%)</title><rect x="1145.0" y="437" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1147.98" y="447.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,101,010 samples, 0.04%)</title><rect x="97.9" y="469" width="0.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="100.92" y="479.5" ></text>
</g>
<g >
<title>sim::Event::get_time (90,909,090 samples, 0.40%)</title><rect x="115.9" y="501" width="4.8" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="118.92" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.09%)</title><rect x="1177.3" y="389" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1180.29" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="105.3" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.33" y="287.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnScalar (30,303,030 samples, 0.13%)</title><rect x="1185.2" y="325" width="1.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1188.23" y="335.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.09%)</title><rect x="1175.2" y="453" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1178.17" y="463.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (70,707,070 samples, 0.31%)</title><rect x="99.0" y="453" width="3.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="101.98" y="463.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::Arrive (20,202,020 samples, 0.09%)</title><rect x="478.2" y="453" width="1.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="481.19" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.04%)</title><rect x="10.0" y="581" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.04%)</title><rect x="109.0" y="501" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="112.04" y="511.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (10,101,010 samples, 0.04%)</title><rect x="857.9" y="437" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="860.93" y="447.5" ></text>
</g>
</g>
</svg>
