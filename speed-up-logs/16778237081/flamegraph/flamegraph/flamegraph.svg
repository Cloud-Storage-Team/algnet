<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="950.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="933" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="933" > </text>
<g id="frames">
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="677" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>sim::Link::get_to (10,101,010 samples, 0.03%)</title><rect x="1157.3" y="773" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1160.31" y="783.5" ></text>
</g>
<g >
<title>vsnprintf (191,919,190 samples, 0.58%)</title><rect x="1136.5" y="677" width="6.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1139.48" y="687.5" ></text>
</g>
<g >
<title>sim::bfs[abi:cxx11] (555,555,550 samples, 1.67%)</title><rect x="1163.4" y="773" width="19.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1166.42" y="783.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (60,606,060 samples, 0.18%)</title><rect x="352.0" y="725" width="2.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="354.97" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="61.7" y="517" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="64.73" y="527.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (20,202,020 samples, 0.06%)</title><rect x="1151.6" y="725" width="0.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1154.56" y="735.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="68.9" y="709" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="71.91" y="719.5" ></text>
</g>
<g >
<title>std::locale::locale (10,101,010 samples, 0.03%)</title><rect x="599.8" y="693" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="602.82" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1171.3" y="677" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.32" y="687.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="60.6" y="629" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="63.65" y="639.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::data[abi:cxx11] (20,202,020 samples, 0.06%)</title><rect x="19.7" y="773" width="0.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="22.70" y="783.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="74.3" y="645" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="77.30" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="52.0" y="597" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.03" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.1" y="469" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.06" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="32.6" y="709" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="35.63" y="719.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="896.2" y="677" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="899.17" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="197" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1129.78" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1142.6" y="597" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1145.58" y="607.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.03%)</title><rect x="599.8" y="709" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="602.82" y="719.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="1174.9" y="741" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1177.91" y="751.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="614.5" y="613" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="617.55" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.03%)</title><rect x="31.9" y="757" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="34.91" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="52.7" y="469" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.75" y="479.5" ></text>
</g>
<g >
<title>strlen@plt (10,101,010 samples, 0.03%)</title><rect x="1026.9" y="741" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1029.92" y="751.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="901.9" y="629" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="904.91" y="639.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (30,303,030 samples, 0.09%)</title><rect x="1186.8" y="581" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1189.77" y="591.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (10,101,010 samples, 0.03%)</title><rect x="612.8" y="709" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="615.75" y="719.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="896.9" y="613" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="899.89" y="623.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="606.3" y="709" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="609.29" y="719.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="596.6" y="741" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="599.59" y="751.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="1140.4" y="613" width="2.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1143.43" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="52.0" y="533" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.03" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="821" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="831.5" ></text>
</g>
<g >
<title>[libc.so.6] (141,414,140 samples, 0.43%)</title><rect x="1138.3" y="629" width="5.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1141.27" y="639.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1156.6" y="757" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1159.59" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1160.5" y="693" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.54" y="703.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="892.9" y="693" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="895.93" y="703.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.03%)</title><rect x="1143.3" y="693" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1146.30" y="703.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.15%)</title><rect x="1161.3" y="725" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1164.26" y="735.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="14.3" y="693" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.31" y="703.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (70,707,070 samples, 0.21%)</title><rect x="613.1" y="709" width="2.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="616.11" y="719.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="485" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.92" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="52.7" y="437" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.75" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="613" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1179.2" y="693" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.22" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="725" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (40,404,040 samples, 0.12%)</title><rect x="600.2" y="725" width="1.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="603.18" y="735.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (383,838,380 samples, 1.16%)</title><rect x="1131.4" y="741" width="13.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1134.45" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="67.5" y="533" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.47" y="543.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="616.0" y="709" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="618.98" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="29.8" y="645" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.76" y="655.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="1151.9" y="661" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1154.92" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="52.0" y="581" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.03" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (2,404,040,380 samples, 7.25%)</title><rect x="941.4" y="741" width="85.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="944.43" y="751.5" >std::_Rb_t..</text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.27%)</title><rect x="1186.0" y="725" width="3.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.05" y="735.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="601.3" y="645" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="604.26" y="655.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="1181.0" y="725" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1184.02" y="735.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="70.7" y="645" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="73.71" y="655.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (20,202,020 samples, 0.06%)</title><rect x="1132.9" y="709" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1135.89" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="181" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.1" y="597" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.06" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="33.7" y="517" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="36.71" y="527.5" ></text>
</g>
<g >
<title>operator new (121,212,120 samples, 0.37%)</title><rect x="1103.1" y="741" width="4.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1106.07" y="751.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (10,101,010 samples, 0.03%)</title><rect x="1130.7" y="709" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1133.73" y="719.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (20,202,020 samples, 0.06%)</title><rect x="33.7" y="741" width="0.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="36.71" y="751.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (40,404,040 samples, 0.12%)</title><rect x="1187.8" y="629" width="1.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1190.84" y="639.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="67.5" y="565" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.47" y="575.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (10,101,010 samples, 0.03%)</title><rect x="1151.9" y="677" width="0.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1154.92" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.03%)</title><rect x="900.1" y="693" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="903.12" y="703.5" ></text>
</g>
<g >
<title>malloc (222,222,220 samples, 0.67%)</title><rect x="767.2" y="725" width="7.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="770.21" y="735.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (484,848,480 samples, 1.46%)</title><rect x="332.2" y="773" width="17.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="335.21" y="783.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="18.6" y="773" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="21.62" y="783.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_insert_unique&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; const&amp;&gt; (40,404,040 samples, 0.12%)</title><rect x="1181.7" y="757" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1184.74" y="767.5" ></text>
</g>
<g >
<title>sim::TcpFlow::update (191,919,190 samples, 0.58%)</title><rect x="609.9" y="741" width="6.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="612.88" y="751.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.03%)</title><rect x="50.9" y="725" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="53.95" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="52.7" y="453" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.75" y="463.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1185.7" y="757" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1188.69" y="767.5" ></text>
</g>
<g >
<title>all (33,181,817,850 samples, 100%)</title><rect x="10.0" y="901" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="911.5" ></text>
</g>
<g >
<title>Logger::info (20,202,020 samples, 0.06%)</title><rect x="595.9" y="741" width="0.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="598.87" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::ILink&gt;, std::shared_ptr&lt;sim::ILink&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::ILink&gt; &gt; &gt;::_M_erase (20,202,020 samples, 0.06%)</title><rect x="1174.6" y="757" width="0.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1177.55" y="767.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1172.0" y="709" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1175.04" y="719.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="334.7" y="709" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="337.72" y="719.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="335.8" y="693" width="0.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="338.80" y="703.5" ></text>
</g>
<g >
<title>write (20,202,020 samples, 0.06%)</title><rect x="33.7" y="693" width="0.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="36.71" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="661" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.64" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="165" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="175.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (70,707,070 samples, 0.21%)</title><rect x="69.3" y="757" width="2.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="72.27" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1127.9" y="405" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1130.86" y="415.5" ></text>
</g>
<g >
<title>sim::BaseHasher::get_hash (10,101,010 samples, 0.03%)</title><rect x="905.1" y="725" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="908.15" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="613" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.34" y="623.5" ></text>
</g>
<g >
<title>sim::Host::~Host (121,212,120 samples, 0.37%)</title><rect x="10.7" y="741" width="4.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="13.72" y="751.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (50,505,050 samples, 0.15%)</title><rect x="626.4" y="757" width="1.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="629.40" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="66.4" y="677" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.40" y="687.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="616.7" y="741" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="619.70" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="757" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="1132.2" y="725" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1135.17" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="34.4" y="581" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.43" y="591.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (60,606,060 samples, 0.18%)</title><rect x="69.3" y="725" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="72.27" y="735.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (60,606,060 samples, 0.18%)</title><rect x="334.4" y="725" width="2.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="337.37" y="735.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (10,101,010 samples, 0.03%)</title><rect x="607.4" y="661" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="610.36" y="671.5" ></text>
</g>
<g >
<title>[libc.so.6] (303,030,300 samples, 0.91%)</title><rect x="749.6" y="725" width="10.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="752.61" y="735.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (191,919,190 samples, 0.58%)</title><rect x="1136.5" y="693" width="6.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1139.48" y="703.5" ></text>
</g>
<g >
<title>cfree (353,535,350 samples, 1.07%)</title><rect x="319.3" y="773" width="12.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="322.28" y="783.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.21%)</title><rect x="344.1" y="645" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="347.06" y="655.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_links (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="773" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1192.64" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="629" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1129.78" y="639.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="900.5" y="709" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="903.48" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="66.4" y="613" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.40" y="623.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (30,303,030 samples, 0.09%)</title><rect x="1188.2" y="597" width="1.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1191.20" y="607.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (30,303,030 samples, 0.09%)</title><rect x="349.5" y="757" width="1.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="352.45" y="767.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::export_to_files (242,424,240 samples, 0.73%)</title><rect x="66.4" y="789" width="8.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="69.40" y="799.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="58.1" y="645" width="2.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="61.13" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1127.9" y="501" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1130.86" y="511.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (10,101,010 samples, 0.03%)</title><rect x="1133.6" y="709" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1136.60" y="719.5" ></text>
</g>
<g >
<title>[libc.so.6] (191,919,190 samples, 0.58%)</title><rect x="1136.5" y="661" width="6.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1139.48" y="671.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.09%)</title><rect x="32.6" y="741" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="35.63" y="751.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1151.9" y="581" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1154.92" y="591.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="70.0" y="677" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="72.99" y="687.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="71.8" y="741" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="74.78" y="751.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (10,101,010 samples, 0.03%)</title><rect x="609.5" y="709" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="612.52" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.03%)</title><rect x="1177.1" y="757" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1180.07" y="767.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="894.4" y="693" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="897.37" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="35.1" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.14" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (242,424,240 samples, 0.73%)</title><rect x="42.3" y="677" width="8.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="45.33" y="687.5" ></text>
</g>
<g >
<title>malloc (90,909,090 samples, 0.27%)</title><rect x="1099.8" y="741" width="3.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1102.84" y="751.5" ></text>
</g>
<g >
<title>sim::Scheduler::get_current_time (20,202,020 samples, 0.06%)</title><rect x="348.7" y="757" width="0.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="351.73" y="767.5" ></text>
</g>
<g >
<title>vsnprintf (10,101,010 samples, 0.03%)</title><rect x="1151.9" y="645" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1154.92" y="655.5" ></text>
</g>
<g >
<title>open64 (30,303,030 samples, 0.09%)</title><rect x="34.4" y="677" width="1.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="37.43" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="35.1" y="405" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.14" y="415.5" ></text>
</g>
<g >
<title>sim::Link::transmit (90,909,090 samples, 0.27%)</title><rect x="350.9" y="757" width="3.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="353.89" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1179.6" y="645" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.58" y="655.5" ></text>
</g>
<g >
<title>vsnprintf (10,101,010 samples, 0.03%)</title><rect x="609.2" y="629" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="612.16" y="639.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="15.0" y="693" width="2.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.03" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1127.9" y="533" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1130.86" y="543.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1159.5" y="741" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1162.47" y="751.5" ></text>
</g>
<g >
<title>[libc.so.6] (161,616,160 samples, 0.49%)</title><rect x="55.3" y="693" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="58.26" y="703.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (111,111,110 samples, 0.33%)</title><rect x="1126.1" y="741" width="3.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1129.06" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="66.8" y="565" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.75" y="575.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="50.6" y="629" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="53.59" y="639.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="837" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="847.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="19.3" y="757" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="22.34" y="767.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1124.3" y="741" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1127.26" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="67.5" y="661" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.47" y="671.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1147.6" y="709" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1150.61" y="719.5" ></text>
</g>
<g >
<title>malloc (60,606,060 samples, 0.18%)</title><rect x="1170.6" y="741" width="2.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1173.60" y="751.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.03%)</title><rect x="61.0" y="725" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="64.01" y="735.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_id[abi:cxx11] (10,101,010 samples, 0.03%)</title><rect x="626.0" y="757" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="629.04" y="767.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (10,101,010 samples, 0.03%)</title><rect x="1151.9" y="693" width="0.4" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1154.92" y="703.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="378.2" y="757" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="381.19" y="767.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (202,020,200 samples, 0.61%)</title><rect x="1136.5" y="709" width="7.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1139.48" y="719.5" ></text>
</g>
<g >
<title>[libc.so.6] (252,525,250 samples, 0.76%)</title><rect x="322.9" y="757" width="9.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="325.87" y="767.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (4,373,737,330 samples, 13.18%)</title><rect x="86.2" y="789" width="155.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="89.15" y="799.5" >sim::Event::operator&gt;</text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.03%)</title><rect x="342.3" y="693" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="345.27" y="703.5" ></text>
</g>
<g >
<title>sim::IdentifierFactory::add_object (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="741" width="0.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1192.64" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1179.6" y="597" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.58" y="607.5" ></text>
</g>
<g >
<title>_IO_file_open (40,404,040 samples, 0.12%)</title><rect x="67.5" y="693" width="1.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="70.47" y="703.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1158.4" y="757" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.39" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.1" y="629" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.06" y="639.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (10,101,010 samples, 0.03%)</title><rect x="1131.1" y="741" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1134.09" y="751.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="1135.8" y="725" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1138.76" y="735.5" ></text>
</g>
<g >
<title>sim::Link::~Link (80,808,080 samples, 0.24%)</title><rect x="15.0" y="741" width="2.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="18.03" y="751.5" ></text>
</g>
<g >
<title>sim::Host::process (10,101,010 samples, 0.03%)</title><rect x="331.9" y="773" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="334.85" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="61.7" y="565" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="64.73" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="29.8" y="533" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.76" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::shared_ptr&lt;sim::IRoutingDevice&gt;, std::_Identity&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::less&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;sim::IRoutingDevice&gt; &gt; &gt;::_M_erase (50,505,050 samples, 0.15%)</title><rect x="1175.3" y="757" width="1.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1178.27" y="767.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="896.5" y="661" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="899.53" y="671.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="337.6" y="709" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="340.60" y="719.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="353.8" y="677" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="356.76" y="687.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.12%)</title><rect x="1178.5" y="725" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1181.51" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="517" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="527.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="905.1" y="709" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="908.15" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="34.8" y="469" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.79" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1125.0" y="725" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1127.98" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="35.1" y="421" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.14" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="805" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="61.7" y="645" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="64.73" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="549" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="559.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="598.0" y="693" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="601.02" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1171.7" y="533" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.68" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="33.7" y="549" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="36.71" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="66.8" y="517" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.75" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="66.8" y="501" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.75" y="511.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.15%)</title><rect x="1161.3" y="709" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1164.26" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.1" y="517" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.06" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.3" y="661" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.26" y="671.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="72.9" y="693" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="75.86" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.1" y="661" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.06" y="671.5" ></text>
</g>
<g >
<title>memchr@plt (10,101,010 samples, 0.03%)</title><rect x="39.1" y="741" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="42.10" y="751.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1174.9" y="725" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1177.91" y="735.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (40,404,040 samples, 0.12%)</title><rect x="51.7" y="725" width="1.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="54.67" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1171.3" y="613" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.32" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1160.5" y="677" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.54" y="687.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="343.7" y="661" width="2.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="346.70" y="671.5" ></text>
</g>
<g >
<title>sim::TcpFlow::Timeout::operator (60,606,060 samples, 0.18%)</title><rect x="1150.1" y="773" width="2.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1153.13" y="783.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="29.8" y="725" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="32.76" y="735.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="336.2" y="645" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="339.16" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="773" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="29.8" y="757" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="32.76" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="29.8" y="629" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.76" y="639.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1127.9" y="597" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1130.86" y="607.5" ></text>
</g>
<g >
<title>[libc.so.6] (212,121,210 samples, 0.64%)</title><rect x="10.7" y="821" width="7.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.72" y="831.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.03%)</title><rect x="613.1" y="693" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="616.11" y="703.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (10,101,010 samples, 0.03%)</title><rect x="348.0" y="725" width="0.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="351.02" y="735.5" ></text>
</g>
<g >
<title>fopen (30,303,030 samples, 0.09%)</title><rect x="34.4" y="725" width="1.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="37.43" y="735.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (40,404,040 samples, 0.12%)</title><rect x="67.5" y="741" width="1.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="70.47" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="34.4" y="533" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.43" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="67.5" y="597" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.47" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (10,101,010 samples, 0.03%)</title><rect x="900.1" y="677" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="903.12" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="61.7" y="661" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="64.73" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (30,303,030 samples, 0.09%)</title><rect x="64.6" y="773" width="1.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="67.60" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="34.1" y="485" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.07" y="495.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (30,303,030 samples, 0.09%)</title><rect x="66.4" y="757" width="1.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="69.40" y="767.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (171,717,170 samples, 0.52%)</title><rect x="54.9" y="725" width="6.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="57.90" y="735.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.27%)</title><rect x="1186.0" y="645" width="3.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.05" y="655.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_packets (111,111,110 samples, 0.33%)</title><rect x="605.9" y="741" width="4.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="608.93" y="751.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="899.0" y="709" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="902.04" y="719.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="1159.8" y="709" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1162.83" y="719.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (30,303,030 samples, 0.09%)</title><rect x="597.3" y="709" width="1.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="600.31" y="719.5" ></text>
</g>
<g >
<title>cfree (383,838,380 samples, 1.16%)</title><rect x="746.7" y="741" width="13.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="749.74" y="751.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (20,202,020 samples, 0.06%)</title><rect x="612.0" y="725" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="615.03" y="735.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="903.4" y="613" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="906.35" y="623.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (60,606,060 samples, 0.18%)</title><rect x="352.0" y="741" width="2.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="354.97" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (10,101,010 samples, 0.03%)</title><rect x="1134.7" y="677" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1137.68" y="687.5" ></text>
</g>
<g >
<title>sim::Link::arrive (454,545,450 samples, 1.37%)</title><rect x="332.6" y="757" width="16.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="335.57" y="767.5" ></text>
</g>
<g >
<title>malloc (60,606,060 samples, 0.18%)</title><rect x="868.5" y="725" width="2.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="871.51" y="735.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="693" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1192.64" y="703.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="344.8" y="629" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="347.78" y="639.5" ></text>
</g>
<g >
<title>operator new (70,707,070 samples, 0.21%)</title><rect x="382.5" y="757" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="385.50" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="37" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="47.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (494,949,490 samples, 1.49%)</title><rect x="36.2" y="757" width="17.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="39.22" y="767.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="18.6" y="757" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.62" y="767.5" ></text>
</g>
<g >
<title>main (32,949,494,620 samples, 99.30%)</title><rect x="18.3" y="821" width="1171.7" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="21.26" y="831.5" >main</text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;, std::weak_ptr&lt;sim::IProcessingDevice&gt;&amp;&gt; (2,545,454,520 samples, 7.67%)</title><rect x="1027.6" y="757" width="90.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1030.64" y="767.5" >void sim::..</text>
</g>
<g >
<title>sim::Event::operator&gt; (10,101,010 samples, 0.03%)</title><rect x="606.6" y="709" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="609.65" y="719.5" ></text>
</g>
<g >
<title>sim::Process::operator (80,808,080 samples, 0.24%)</title><rect x="242.4" y="789" width="2.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="245.41" y="799.5" ></text>
</g>
<g >
<title>malloc (515,151,510 samples, 1.55%)</title><rect x="873.9" y="709" width="18.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="876.90" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="33.7" y="533" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="36.71" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="67.1" y="485" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.11" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="34.4" y="661" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.43" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="693" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (70,707,070 samples, 0.21%)</title><rect x="334.4" y="741" width="2.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="337.37" y="751.5" ></text>
</g>
<g >
<title>[libc.so.6] (222,222,220 samples, 0.67%)</title><rect x="850.5" y="725" width="8.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="853.55" y="735.5" ></text>
</g>
<g >
<title>std::locale::locale (10,101,010 samples, 0.03%)</title><rect x="343.3" y="725" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="346.35" y="735.5" ></text>
</g>
<g >
<title>Logger::warn (2,202,020,180 samples, 6.64%)</title><rect x="653.0" y="741" width="78.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="655.98" y="751.5" >Logger::w..</text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (10,101,010 samples, 0.03%)</title><rect x="1158.7" y="757" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1161.75" y="767.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="72.9" y="677" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="75.86" y="687.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Host::process (20,202,020 samples, 0.06%)</title><rect x="1152.3" y="773" width="0.7" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1155.28" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1171.7" y="549" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.68" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="853" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="34.8" y="501" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.79" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="61.7" y="533" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="64.73" y="543.5" ></text>
</g>
<g >
<title>Logger::info (20,202,020 samples, 0.06%)</title><rect x="1123.5" y="741" width="0.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1126.55" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.3" y="597" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.26" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="61.7" y="549" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="64.73" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1127.9" y="453" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1130.86" y="463.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (20,202,020 samples, 0.06%)</title><rect x="614.2" y="677" width="0.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="617.19" y="687.5" ></text>
</g>
<g >
<title>[libc.so.6] (212,121,210 samples, 0.64%)</title><rect x="10.7" y="805" width="7.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.72" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="709" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_RTT (30,303,030 samples, 0.09%)</title><rect x="615.6" y="725" width="1.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="618.63" y="735.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (3,323,232,290 samples, 10.02%)</title><rect x="775.5" y="741" width="118.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="778.47" y="751.5" >sim::Link::get..</text>
</g>
<g >
<title>_start (33,161,615,830 samples, 99.94%)</title><rect x="10.7" y="869" width="1179.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.72" y="879.5" >_start</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="66.4" y="645" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.40" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1127.9" y="565" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1130.86" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="29.8" y="677" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.76" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="725" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.34" y="735.5" ></text>
</g>
<g >
<title>sim::Event::get_time (131,313,130 samples, 0.40%)</title><rect x="81.5" y="789" width="4.7" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="84.48" y="799.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="604.1" y="613" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="607.13" y="623.5" ></text>
</g>
<g >
<title>[libc.so.6] (131,313,130 samples, 0.40%)</title><rect x="56.3" y="661" width="4.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="59.34" y="671.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="900.1" y="709" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="903.12" y="719.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (10,101,010 samples, 0.03%)</title><rect x="1151.6" y="709" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1154.56" y="719.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1155.9" y="773" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1158.88" y="783.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (30,303,030 samples, 0.09%)</title><rect x="34.4" y="757" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="37.43" y="767.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (30,303,030 samples, 0.09%)</title><rect x="597.3" y="725" width="1.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="600.31" y="735.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::operator/= (10,101,010 samples, 0.03%)</title><rect x="75.0" y="789" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="78.02" y="799.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::export_metrics_to_files (1,606,060,590 samples, 4.84%)</title><rect x="18.3" y="805" width="57.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="21.26" y="815.5" >sim::M..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="69" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="33.7" y="629" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="36.71" y="639.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1151.9" y="629" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1154.92" y="639.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="52.0" y="501" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.03" y="511.5" ></text>
</g>
<g >
<title>sim::TcpFlow::retransmit_packet (20,202,020 samples, 0.06%)</title><rect x="1151.6" y="757" width="0.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1154.56" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="629" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (70,707,070 samples, 0.21%)</title><rect x="72.1" y="741" width="2.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="75.14" y="751.5" ></text>
</g>
<g >
<title>sim::FlowParser::parse_i_flow (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="725" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1192.28" y="735.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.09%)</title><rect x="1172.8" y="741" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1175.76" y="751.5" ></text>
</g>
<g >
<title>std::locale::locale (10,101,010 samples, 0.03%)</title><rect x="613.8" y="693" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="616.83" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1179.6" y="581" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.58" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.3" y="677" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.26" y="687.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="13.2" y="709" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.23" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="29.8" y="693" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.76" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="693" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.34" y="703.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="20.1" y="741" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="23.06" y="751.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="1181.0" y="709" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1184.02" y="719.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (202,020,200 samples, 0.61%)</title><rect x="598.7" y="741" width="7.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="601.74" y="751.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (10,101,010 samples, 0.03%)</title><rect x="609.2" y="677" width="0.3" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="612.16" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="597" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.34" y="607.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (20,202,020 samples, 0.06%)</title><rect x="1189.3" y="789" width="0.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1192.28" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="213" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="223.5" ></text>
</g>
<g >
<title>std::locale::~locale (10,101,010 samples, 0.03%)</title><rect x="348.4" y="741" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="351.37" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="66.8" y="549" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.75" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1127.9" y="613" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1130.86" y="623.5" ></text>
</g>
<g >
<title>YAML::Stream::eat (10,101,010 samples, 0.03%)</title><rect x="1188.2" y="549" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1191.20" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="677" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.64" y="687.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (969,696,960 samples, 2.92%)</title><rect x="905.5" y="741" width="34.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="908.51" y="751.5" >si..</text>
</g>
<g >
<title>[libc.so.6] (232,323,230 samples, 0.70%)</title><rect x="42.7" y="661" width="8.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="45.69" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.3" y="741" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.26" y="751.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (5,646,464,590 samples, 17.02%)</title><rect x="393.6" y="757" width="200.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="396.63" y="767.5" >sim::Event::operator&gt;</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="67.8" y="485" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.83" y="495.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (40,404,040 samples, 0.12%)</title><rect x="61.4" y="725" width="1.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="64.37" y="735.5" ></text>
</g>
<g >
<title>Logger::info (1,868,686,850 samples, 5.63%)</title><rect x="784.1" y="725" width="66.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="787.09" y="735.5" >Logger:..</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="601.6" y="709" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="604.62" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="66.4" y="597" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.40" y="607.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (111,111,110 samples, 0.33%)</title><rect x="1186.0" y="805" width="4.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1189.05" y="815.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="33.3" y="693" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="36.35" y="703.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (80,808,080 samples, 0.24%)</title><rect x="1145.1" y="741" width="2.9" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1148.10" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="62.4" y="437" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="65.44" y="447.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (10,101,010 samples, 0.03%)</title><rect x="1130.7" y="725" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1133.73" y="735.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="614.5" y="629" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="617.55" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="597" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="693" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1192.28" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="501" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="511.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1163.1" y="741" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1166.06" y="751.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (10,101,010 samples, 0.03%)</title><rect x="65.7" y="773" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="68.68" y="783.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1181.0" y="693" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1184.02" y="703.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (303,030,300 samples, 0.91%)</title><rect x="40.2" y="725" width="10.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="43.17" y="735.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::export_to_files (1,353,535,340 samples, 4.08%)</title><rect x="18.3" y="789" width="48.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="21.26" y="799.5" >sim:..</text>
</g>
<g >
<title>sim::MetricsStorage::add_record (80,808,080 samples, 0.24%)</title><rect x="1127.1" y="677" width="2.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1130.14" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="709" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.34" y="719.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (40,404,040 samples, 0.12%)</title><rect x="607.7" y="677" width="1.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="610.72" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.3" y="613" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.26" y="623.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.06%)</title><rect x="1188.6" y="549" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.56" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="62.1" y="469" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="65.09" y="479.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="615.6" y="709" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="618.63" y="719.5" ></text>
</g>
<g >
<title>Logger::info (10,101,010 samples, 0.03%)</title><rect x="332.6" y="741" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="335.57" y="751.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="615.6" y="645" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="618.63" y="655.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="1170.6" y="725" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1173.60" y="735.5" ></text>
</g>
<g >
<title>sim::Simulator::recalculate_paths (888,888,880 samples, 2.68%)</title><rect x="1154.4" y="789" width="31.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1157.44" y="799.5" >si..</text>
</g>
<g >
<title>cfree (70,707,070 samples, 0.21%)</title><rect x="12.5" y="725" width="2.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="15.51" y="735.5" ></text>
</g>
<g >
<title>vsnprintf (50,505,050 samples, 0.15%)</title><rect x="72.9" y="709" width="1.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="75.86" y="719.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (30,303,030 samples, 0.09%)</title><rect x="66.4" y="725" width="1.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="69.40" y="735.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="606.3" y="661" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="609.29" y="671.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.27%)</title><rect x="1186.0" y="677" width="3.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.05" y="687.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (70,707,070 samples, 0.21%)</title><rect x="607.0" y="709" width="2.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="610.00" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="57.8" y="597" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.77" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="61.7" y="693" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="64.73" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="66.8" y="533" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.75" y="543.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (10,101,010 samples, 0.03%)</title><rect x="336.5" y="725" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="339.52" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (10,101,010 samples, 0.03%)</title><rect x="1173.8" y="741" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1176.84" y="751.5" ></text>
</g>
<g >
<title>std::ostream::put (40,404,040 samples, 0.12%)</title><rect x="63.2" y="757" width="1.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="66.16" y="767.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="69.3" y="693" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="72.27" y="703.5" ></text>
</g>
<g >
<title>sim::Simulator::start (31,181,817,870 samples, 93.97%)</title><rect x="77.2" y="805" width="1108.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="80.17" y="815.5" >sim::Simulator::start</text>
</g>
<g >
<title>sim::Link::Arrive::operator (10,101,010 samples, 0.03%)</title><rect x="241.7" y="789" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="244.69" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="85" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="95.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1186.0" y="581" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.05" y="591.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (20,202,020 samples, 0.06%)</title><rect x="892.2" y="709" width="0.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="895.22" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="52.0" y="517" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.03" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (131,313,130 samples, 0.40%)</title><rect x="56.3" y="677" width="4.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="59.34" y="687.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (30,303,030 samples, 0.09%)</title><rect x="1188.2" y="565" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1191.20" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="57.8" y="629" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.77" y="639.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1147.6" y="693" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1150.61" y="703.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="533" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1190.84" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="615.6" y="661" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="618.63" y="671.5" ></text>
</g>
<g >
<title>vsnprintf (20,202,020 samples, 0.06%)</title><rect x="614.2" y="645" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="617.19" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="35.1" y="437" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.14" y="447.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (90,909,090 samples, 0.27%)</title><rect x="601.6" y="725" width="3.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="604.62" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1179.2" y="661" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.22" y="671.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="725" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1192.64" y="735.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="1127.1" y="629" width="2.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1130.14" y="639.5" ></text>
</g>
<g >
<title>operator delete (101,010,100 samples, 0.30%)</title><rect x="77.9" y="789" width="3.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="80.89" y="799.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (242,424,240 samples, 0.73%)</title><rect x="54.5" y="741" width="8.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="57.54" y="751.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (20,202,020 samples, 0.06%)</title><rect x="33.7" y="709" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="36.71" y="719.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (20,202,020 samples, 0.06%)</title><rect x="599.5" y="725" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="602.46" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::weak_ptr&lt;sim::ILink&gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (20,202,020 samples, 0.06%)</title><rect x="1159.1" y="757" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1162.11" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="61.7" y="501" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="64.73" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1127.9" y="517" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1130.86" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (121,212,120 samples, 0.37%)</title><rect x="1177.4" y="757" width="4.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1180.43" y="767.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (10,101,010 samples, 0.03%)</title><rect x="599.5" y="709" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="602.46" y="719.5" ></text>
</g>
<g >
<title>pthread_once (10,101,010 samples, 0.03%)</title><rect x="51.3" y="725" width="0.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="54.31" y="735.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="72.9" y="661" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="75.86" y="671.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="565" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1190.84" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="53" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1129.78" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="869" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="879.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="901.6" y="661" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="904.56" y="671.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (30,303,030 samples, 0.09%)</title><rect x="34.4" y="741" width="1.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="37.43" y="751.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="77.2" y="789" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="80.17" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="67.5" y="549" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.47" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="33.7" y="581" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="36.71" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.3" y="629" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.26" y="639.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="353.8" y="645" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="356.76" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="29.8" y="581" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.76" y="591.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="615.3" y="661" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="618.27" y="671.5" ></text>
</g>
<g >
<title>vsnprintf (303,030,300 samples, 0.91%)</title><rect x="40.2" y="709" width="10.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="43.17" y="719.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (20,202,020 samples, 0.06%)</title><rect x="33.7" y="757" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="36.71" y="767.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (40,404,040 samples, 0.12%)</title><rect x="899.4" y="725" width="1.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="902.40" y="735.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (60,606,060 samples, 0.18%)</title><rect x="901.6" y="725" width="2.1" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="904.56" y="735.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="48.1" y="645" width="2.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="51.08" y="655.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="32.6" y="725" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="35.63" y="735.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::~Arrive (10,101,010 samples, 0.03%)</title><rect x="242.0" y="789" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="245.05" y="799.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (30,303,030 samples, 0.09%)</title><rect x="608.1" y="661" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="611.08" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1171.3" y="709" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.32" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1171.7" y="517" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.68" y="527.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="709" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1192.64" y="719.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="32.3" y="741" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="35.27" y="751.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="1161.3" y="693" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.26" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="597" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.64" y="607.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="501" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.92" y="511.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_packet_now (101,010,100 samples, 0.30%)</title><rect x="606.3" y="725" width="3.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="609.29" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="34.4" y="613" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.43" y="623.5" ></text>
</g>
<g >
<title>sim::write_to_csv (1,242,424,230 samples, 3.74%)</title><rect x="20.4" y="773" width="44.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="23.42" y="783.5" >sim:..</text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,101,010 samples, 0.03%)</title><rect x="608.8" y="645" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="611.80" y="655.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.24%)</title><rect x="15.0" y="709" width="2.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.03" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.1" y="709" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.06" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="33.7" y="597" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="36.71" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.3" y="773" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.26" y="783.5" ></text>
</g>
<g >
<title>YAML::detail::memory::create_node (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="581" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1190.84" y="591.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (262,626,260 samples, 0.79%)</title><rect x="53.8" y="757" width="9.4" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="56.82" y="767.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="19.3" y="773" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="22.34" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.3" y="709" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.26" y="719.5" ></text>
</g>
<g >
<title>_IO_file_fopen (40,404,040 samples, 0.12%)</title><rect x="67.5" y="709" width="1.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="70.47" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="33.7" y="661" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="36.71" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="67.8" y="517" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.83" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1171.3" y="693" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.32" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="29.8" y="597" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.76" y="607.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (50,505,050 samples, 0.15%)</title><rect x="75.4" y="805" width="1.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.38" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (90,909,090 samples, 0.27%)</title><rect x="1159.8" y="757" width="3.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1162.83" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="34.8" y="453" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.79" y="463.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (30,303,030 samples, 0.09%)</title><rect x="66.4" y="709" width="1.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="69.40" y="719.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (20,202,020 samples, 0.06%)</title><rect x="63.9" y="741" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="66.88" y="751.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (80,808,080 samples, 0.24%)</title><rect x="343.7" y="693" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="346.70" y="703.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="896.9" y="629" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="899.89" y="639.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.1" y="613" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.06" y="623.5" ></text>
</g>
<g >
<title>sim::RoutingModule::update_routing_table (151,515,150 samples, 0.46%)</title><rect x="1157.7" y="773" width="5.4" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1160.67" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="437" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1190.84" y="447.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (90,909,090 samples, 0.27%)</title><rect x="339.8" y="725" width="3.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="342.75" y="735.5" ></text>
</g>
<g >
<title>_IO_file_fopen (30,303,030 samples, 0.09%)</title><rect x="34.4" y="709" width="1.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="37.43" y="719.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::shared_ptr&lt;sim::IFlow&gt;  (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="741" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1192.28" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="67.5" y="581" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.47" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (10,101,010 samples, 0.03%)</title><rect x="1135.0" y="677" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1138.04" y="687.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (40,404,040 samples, 0.12%)</title><rect x="335.1" y="709" width="1.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="338.08" y="719.5" ></text>
</g>
<g >
<title>operator new (80,808,080 samples, 0.24%)</title><rect x="1169.9" y="757" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1172.88" y="767.5" ></text>
</g>
<g >
<title>operator delete (111,111,110 samples, 0.33%)</title><rect x="378.5" y="757" width="4.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="381.55" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="629" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.64" y="639.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1187.5" y="565" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.49" y="575.5" ></text>
</g>
<g >
<title>sim::BaseHasher::get_hash (10,101,010 samples, 0.03%)</title><rect x="1147.6" y="725" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1150.61" y="735.5" ></text>
</g>
<g >
<title>Logger::get_instance (20,202,020 samples, 0.06%)</title><rect x="376.0" y="757" width="0.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="379.03" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="33.7" y="501" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="36.71" y="511.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="549" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1190.84" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="33.7" y="565" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="36.71" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="325" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="335.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="613.5" y="693" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="616.47" y="703.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.30%)</title><rect x="888.6" y="677" width="3.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="891.62" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="453" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1190.84" y="463.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (111,111,110 samples, 0.33%)</title><rect x="893.7" y="725" width="3.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="896.65" y="735.5" ></text>
</g>
<g >
<title>sim::Process::operator (21,484,848,270 samples, 64.75%)</title><rect x="354.1" y="773" width="764.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="357.12" y="783.5" >sim::Process::operator</text>
</g>
<g >
<title>cfree (80,808,080 samples, 0.24%)</title><rect x="15.0" y="725" width="2.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="18.03" y="735.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::~MetricsCollector (10,101,010 samples, 0.03%)</title><rect x="17.9" y="789" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="20.90" y="799.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1147.6" y="677" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1150.61" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="581" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.64" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="66.4" y="629" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.40" y="639.5" ></text>
</g>
<g >
<title>__default_morecore (10,101,010 samples, 0.03%)</title><rect x="1129.7" y="613" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1132.65" y="623.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="603.4" y="629" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="606.41" y="639.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1163.1" y="757" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1166.06" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="61.7" y="581" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="64.73" y="591.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.12%)</title><rect x="337.2" y="725" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="340.24" y="735.5" ></text>
</g>
<g >
<title>Logger::get_instance (60,606,060 samples, 0.18%)</title><rect x="650.8" y="741" width="2.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="653.83" y="751.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (70,707,070 samples, 0.21%)</title><rect x="69.3" y="741" width="2.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="72.27" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.1" y="533" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.06" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="606.3" y="677" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="609.29" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;* std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::weak_ptr&lt;sim::ILink&gt;, std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt;, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt;::_Alloc_node&gt; (30,303,030 samples, 0.09%)</title><rect x="1185.0" y="773" width="1.0" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1187.97" y="783.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="1135.4" y="709" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1138.40" y="719.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1162.0" y="677" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.98" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (10,101,010 samples, 0.03%)</title><rect x="1027.3" y="757" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1030.28" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1160.9" y="645" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.90" y="655.5" ></text>
</g>
<g >
<title>std::locale::~locale (10,101,010 samples, 0.03%)</title><rect x="339.4" y="709" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="342.39" y="719.5" ></text>
</g>
<g >
<title>sim::FlowParser::parse_tcp_flow (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="709" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1192.28" y="719.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1159.5" y="725" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1162.47" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.1" y="485" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.06" y="495.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (10,101,010 samples, 0.03%)</title><rect x="897.2" y="709" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="900.25" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="613" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.64" y="623.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="341.9" y="709" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="344.91" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1179.6" y="613" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.58" y="623.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (40,404,040 samples, 0.12%)</title><rect x="594.4" y="757" width="1.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="597.43" y="767.5" ></text>
</g>
<g >
<title>malloc (70,707,070 samples, 0.21%)</title><rect x="760.4" y="741" width="2.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="763.39" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="61.7" y="485" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="64.73" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="52.0" y="485" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.03" y="495.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (70,707,070 samples, 0.21%)</title><rect x="602.3" y="709" width="2.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="605.33" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.06%)</title><rect x="600.9" y="693" width="0.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="603.90" y="703.5" ></text>
</g>
<g >
<title>vsnprintf (60,606,060 samples, 0.18%)</title><rect x="69.3" y="709" width="2.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="72.27" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="67.5" y="629" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.47" y="639.5" ></text>
</g>
<g >
<title>sim::Event::Event (242,424,240 samples, 0.73%)</title><rect x="385.0" y="757" width="8.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="388.01" y="767.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (20,202,020 samples, 0.06%)</title><rect x="896.5" y="677" width="0.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="899.53" y="687.5" ></text>
</g>
<g >
<title>sim::Simulator::get_devices (10,101,010 samples, 0.03%)</title><rect x="1163.1" y="773" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1166.06" y="783.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="603.1" y="645" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="606.05" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="229" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="239.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (50,505,050 samples, 0.15%)</title><rect x="603.1" y="693" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="606.05" y="703.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="903.7" y="725" width="0.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="906.71" y="735.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="615.6" y="693" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="618.63" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1160.5" y="661" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1163.54" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="405" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="415.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (10,101,010 samples, 0.03%)</title><rect x="901.2" y="725" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="904.20" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="52.7" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.75" y="399.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::operator (131,313,130 samples, 0.40%)</title><rect x="349.5" y="773" width="4.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="352.45" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1171.3" y="581" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.32" y="591.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="600.9" y="709" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="603.90" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="421" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="52.0" y="629" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.03" y="639.5" ></text>
</g>
<g >
<title>YAML::Stream::peek (10,101,010 samples, 0.03%)</title><rect x="1188.2" y="533" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1191.20" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="352.3" y="709" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="355.33" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.3" y="645" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.26" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="645" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.64" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="645" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.34" y="655.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer (10,101,010 samples, 0.03%)</title><rect x="68.9" y="741" width="0.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="71.91" y="751.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (30,303,030 samples, 0.09%)</title><rect x="338.7" y="725" width="1.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="341.68" y="735.5" ></text>
</g>
<g >
<title>bool std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="677" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1129.78" y="687.5" ></text>
</g>
<g >
<title>malloc (80,808,080 samples, 0.24%)</title><rect x="1127.1" y="645" width="2.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1130.14" y="655.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="335.4" y="693" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="338.44" y="703.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="900.8" y="725" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="903.84" y="735.5" ></text>
</g>
<g >
<title>strlen@plt (10,101,010 samples, 0.03%)</title><rect x="893.3" y="725" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="896.29" y="735.5" ></text>
</g>
<g >
<title>std::ostream::put (10,101,010 samples, 0.03%)</title><rect x="66.0" y="773" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="69.04" y="783.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1144.4" y="693" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1147.38" y="703.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (50,505,050 samples, 0.15%)</title><rect x="1186.0" y="629" width="1.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1189.05" y="639.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (30,303,030 samples, 0.09%)</title><rect x="1188.2" y="581" width="1.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1191.20" y="591.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1151.9" y="597" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1154.92" y="607.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (50,505,050 samples, 0.15%)</title><rect x="1186.0" y="613" width="1.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1189.05" y="623.5" ></text>
</g>
<g >
<title>__uselocale (10,101,010 samples, 0.03%)</title><rect x="71.4" y="725" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="74.42" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="33.7" y="613" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="36.71" y="623.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.18%)</title><rect x="901.6" y="645" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="904.56" y="655.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (80,808,080 samples, 0.24%)</title><rect x="343.7" y="709" width="2.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="346.70" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;sim::Identifiable&gt; &gt; &gt; &gt;::_M_erase (202,020,200 samples, 0.61%)</title><rect x="10.7" y="773" width="7.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.72" y="783.5" ></text>
</g>
<g >
<title>void sim::YamlParser::process_identifiables&lt;sim::ILink&gt; (10,101,010 samples, 0.03%)</title><rect x="1189.6" y="757" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1192.64" y="767.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1151.9" y="613" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1154.92" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="517" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1190.84" y="527.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (10,101,010 samples, 0.03%)</title><rect x="892.9" y="709" width="0.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="895.93" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="52.0" y="693" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.03" y="703.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20,202,020 samples, 0.06%)</title><rect x="605.2" y="709" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="608.21" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="34.4" y="565" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.43" y="575.5" ></text>
</g>
<g >
<title>sim::IdentifierFactory::~IdentifierFactory (202,020,200 samples, 0.61%)</title><rect x="10.7" y="789" width="7.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="13.72" y="799.5" ></text>
</g>
<g >
<title>sim::Host::notify_about_arrival (30,303,030 samples, 0.09%)</title><rect x="333.3" y="741" width="1.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="336.29" y="751.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="332.9" y="741" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="335.93" y="751.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (50,505,050 samples, 0.15%)</title><rect x="67.5" y="757" width="1.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="70.47" y="767.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="615.6" y="677" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="618.63" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="581" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.1" y="581" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.06" y="591.5" ></text>
</g>
<g >
<title>memcpy@plt (10,101,010 samples, 0.03%)</title><rect x="341.5" y="709" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="344.55" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="68.2" y="453" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.19" y="463.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (20,202,020 samples, 0.06%)</title><rect x="892.2" y="725" width="0.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="895.22" y="735.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="14.7" y="677" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.67" y="687.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="68.9" y="693" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="71.91" y="703.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (10,101,010 samples, 0.03%)</title><rect x="53.5" y="725" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="56.46" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1127.9" y="469" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1130.86" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="18.6" y="725" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.62" y="735.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1172.8" y="709" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1175.76" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="34.8" y="517" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.79" y="527.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (20,202,020 samples, 0.06%)</title><rect x="614.9" y="677" width="0.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="617.91" y="687.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (80,808,080 samples, 0.24%)</title><rect x="894.4" y="709" width="2.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="897.37" y="719.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (40,404,040 samples, 0.12%)</title><rect x="346.6" y="725" width="1.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="349.58" y="735.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="347.7" y="693" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="350.66" y="703.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::get_records (10,101,010 samples, 0.03%)</title><rect x="30.1" y="757" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="33.12" y="767.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (25,464,646,210 samples, 76.74%)</title><rect x="248.9" y="789" width="905.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="251.87" y="799.5" >sim::Scheduler::tick</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="661" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.34" y="671.5" ></text>
</g>
<g >
<title>nons (33,181,817,850 samples, 100.00%)</title><rect x="10.0" y="885" width="1180.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.00" y="895.5" >nons</text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="17.9" y="757" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="20.90" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.1" y="501" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.06" y="511.5" ></text>
</g>
<g >
<title>Logger::warn (40,404,040 samples, 0.12%)</title><rect x="376.8" y="757" width="1.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="379.75" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="485" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1190.84" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="34.4" y="597" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.43" y="607.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (90,909,090 samples, 0.27%)</title><rect x="1186.0" y="709" width="3.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.05" y="719.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (60,606,060 samples, 0.18%)</title><rect x="901.6" y="709" width="2.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="904.56" y="719.5" ></text>
</g>
<g >
<title>operator delete (10,101,010 samples, 0.03%)</title><rect x="31.6" y="741" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="34.55" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="741" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="68.9" y="725" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="71.91" y="735.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1159.5" y="709" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1162.47" y="719.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::export_to_file (232,323,230 samples, 0.70%)</title><rect x="66.4" y="773" width="8.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="69.40" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1127.9" y="421" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1130.86" y="431.5" ></text>
</g>
<g >
<title>vsnprintf (60,606,060 samples, 0.18%)</title><rect x="901.6" y="677" width="2.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="904.56" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="67.1" y="469" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.11" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="789" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="799.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="20.1" y="725" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="23.06" y="735.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="1128.2" y="613" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1131.22" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1171.3" y="597" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.32" y="607.5" ></text>
</g>
<g >
<title>[libc.so.6] (151,515,150 samples, 0.46%)</title><rect x="863.1" y="709" width="5.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="866.12" y="719.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (80,808,080 samples, 0.24%)</title><rect x="71.8" y="757" width="2.9" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="74.78" y="767.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="1156.6" y="773" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1159.59" y="783.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="20.1" y="757" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="23.06" y="767.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (202,020,200 samples, 0.61%)</title><rect x="10.7" y="757" width="7.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.72" y="767.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.03%)</title><rect x="613.1" y="677" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="616.11" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="52.0" y="677" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.03" y="687.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (212,121,210 samples, 0.64%)</title><rect x="843.0" y="709" width="7.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="846.00" y="719.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.03%)</title><rect x="607.4" y="677" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="610.36" y="687.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (30,303,030 samples, 0.09%)</title><rect x="604.8" y="725" width="1.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="607.85" y="735.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (60,606,060 samples, 0.18%)</title><rect x="607.4" y="693" width="2.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="610.36" y="703.5" ></text>
</g>
<g >
<title>write (30,303,030 samples, 0.09%)</title><rect x="66.4" y="693" width="1.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="69.40" y="703.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="346.2" y="613" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="349.22" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="277" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="287.5" ></text>
</g>
<g >
<title>sim::Event::Event (20,202,020 samples, 0.06%)</title><rect x="898.0" y="725" width="0.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="900.96" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="67.8" y="501" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.83" y="511.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (10,101,010 samples, 0.03%)</title><rect x="892.9" y="725" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="895.93" y="735.5" ></text>
</g>
<g >
<title>operator delete (60,606,060 samples, 0.18%)</title><rect x="762.9" y="741" width="2.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="765.90" y="751.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="1178.9" y="709" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1181.86" y="719.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (10,101,010 samples, 0.03%)</title><rect x="1136.1" y="725" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1139.12" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="34.4" y="645" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.43" y="655.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (282,828,280 samples, 0.85%)</title><rect x="721.2" y="725" width="10.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="724.23" y="735.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (30,303,030 samples, 0.09%)</title><rect x="897.6" y="741" width="1.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="900.60" y="751.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Switch::process (40,404,040 samples, 0.12%)</title><rect x="1153.0" y="773" width="1.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1156.00" y="783.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (20,202,020 samples, 0.06%)</title><rect x="35.5" y="757" width="0.7" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="38.50" y="767.5" ></text>
</g>
<g >
<title>[libc.so.6] (161,616,160 samples, 0.49%)</title><rect x="1137.6" y="645" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1140.56" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="261" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="271.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="1125.0" y="741" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1127.98" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.3" y="757" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.26" y="767.5" ></text>
</g>
<g >
<title>sim::YamlParser::process_flows (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="773" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1192.28" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1171.3" y="661" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.32" y="671.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1163.1" y="725" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1166.06" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="66.4" y="661" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.40" y="671.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (30,303,030 samples, 0.09%)</title><rect x="1132.9" y="725" width="1.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1135.89" y="735.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="353.8" y="709" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="356.76" y="719.5" ></text>
</g>
<g >
<title>[libc.so.6] (434,343,430 samples, 1.31%)</title><rect x="731.3" y="741" width="15.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="734.29" y="751.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (20,202,020 samples, 0.06%)</title><rect x="33.7" y="725" width="0.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="36.71" y="735.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::Push (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="597" width="0.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1190.84" y="607.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (10,101,010 samples, 0.03%)</title><rect x="1151.9" y="709" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1154.92" y="719.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,101,010 samples, 0.03%)</title><rect x="609.2" y="645" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="612.16" y="655.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (40,404,040 samples, 0.12%)</title><rect x="1148.7" y="741" width="1.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1151.69" y="751.5" ></text>
</g>
<g >
<title>writev (30,303,030 samples, 0.09%)</title><rect x="61.7" y="709" width="1.1" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="64.73" y="719.5" ></text>
</g>
<g >
<title>open64 (40,404,040 samples, 0.12%)</title><rect x="67.5" y="677" width="1.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="70.47" y="687.5" ></text>
</g>
<g >
<title>sim::Link::get_to_ingress_queue_size (80,808,080 samples, 0.24%)</title><rect x="623.2" y="757" width="2.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="626.17" y="767.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="601.3" y="661" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="604.26" y="671.5" ></text>
</g>
<g >
<title>operator new (20,202,020 samples, 0.06%)</title><rect x="335.8" y="677" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="338.80" y="687.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.12%)</title><rect x="70.0" y="661" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="72.99" y="671.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.09%)</title><rect x="16.8" y="677" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="19.82" y="687.5" ></text>
</g>
<g >
<title>[libc.so.6] (303,030,300 samples, 0.91%)</title><rect x="40.2" y="693" width="10.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="43.17" y="703.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="596.9" y="725" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="599.95" y="735.5" ></text>
</g>
<g >
<title>vsnprintf (161,616,160 samples, 0.49%)</title><rect x="55.3" y="709" width="5.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="58.26" y="719.5" ></text>
</g>
<g >
<title>YAML::LoadFile (90,909,090 samples, 0.27%)</title><rect x="1186.0" y="789" width="3.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1189.05" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.03%)</title><rect x="601.3" y="677" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="604.26" y="687.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="18.6" y="741" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.62" y="751.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="347.7" y="709" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="350.66" y="719.5" ></text>
</g>
<g >
<title>sim::Event::Event (303,030,300 samples, 0.91%)</title><rect x="1107.4" y="741" width="10.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1110.38" y="751.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="353.8" y="661" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="356.76" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="661" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="57.8" y="645" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.77" y="655.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (50,505,050 samples, 0.15%)</title><rect x="1161.3" y="741" width="1.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1164.26" y="751.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (404,040,400 samples, 1.22%)</title><rect x="39.5" y="741" width="14.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="42.46" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="645" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (20,202,020 samples, 0.06%)</title><rect x="614.2" y="661" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="617.19" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="62.1" y="453" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="65.09" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="597.3" y="693" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="600.31" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="52.0" y="613" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.03" y="623.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="29.8" y="741" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="32.76" y="751.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (20,202,020 samples, 0.06%)</title><rect x="1149.4" y="725" width="0.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1152.41" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="565" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="575.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (20,202,020 samples, 0.06%)</title><rect x="338.7" y="709" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="341.68" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (40,404,040 samples, 0.12%)</title><rect x="30.5" y="757" width="1.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="33.47" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="61.7" y="613" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="64.73" y="623.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="606.3" y="693" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="609.29" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="52.0" y="645" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.03" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (10,101,010 samples, 0.03%)</title><rect x="608.4" y="645" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="611.44" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="629" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.34" y="639.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1173.5" y="693" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1176.48" y="703.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (101,010,100 samples, 0.30%)</title><rect x="1126.4" y="693" width="3.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1129.42" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1127.9" y="485" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1130.86" y="495.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="599.1" y="725" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="602.10" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1127.9" y="581" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1130.86" y="591.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1151.9" y="565" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1154.92" y="575.5" ></text>
</g>
<g >
<title>__sbrk (10,101,010 samples, 0.03%)</title><rect x="1129.7" y="597" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1132.65" y="607.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (10,101,010 samples, 0.03%)</title><rect x="617.1" y="741" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="620.06" y="751.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="661" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1192.28" y="671.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (80,808,080 samples, 0.24%)</title><rect x="343.7" y="725" width="2.9" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="346.70" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1171.3" y="565" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.32" y="575.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (20,202,020 samples, 0.06%)</title><rect x="614.9" y="693" width="0.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="617.91" y="703.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="899.0" y="725" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="902.04" y="735.5" ></text>
</g>
<g >
<title>operator new (606,060,600 samples, 1.83%)</title><rect x="870.7" y="725" width="21.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="873.66" y="735.5" >o..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="67.8" y="469" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.83" y="479.5" ></text>
</g>
<g >
<title>std::locale::locale (10,101,010 samples, 0.03%)</title><rect x="617.4" y="741" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="620.42" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="149" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1129.78" y="159.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (10,101,010 samples, 0.03%)</title><rect x="775.1" y="741" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="778.11" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="29.8" y="709" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.76" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;Time&lt;Nanosecond&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (40,404,040 samples, 0.12%)</title><rect x="32.3" y="757" width="1.4" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="35.27" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.1" y="565" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.06" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="52.7" y="405" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.75" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="405" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1190.84" y="415.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="342.6" y="709" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="345.63" y="719.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1185.7" y="741" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1188.69" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="29.8" y="613" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.76" y="623.5" ></text>
</g>
<g >
<title>writev (30,303,030 samples, 0.09%)</title><rect x="52.0" y="709" width="1.1" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="55.03" y="719.5" ></text>
</g>
<g >
<title>YAML::NodeBuilder::OnScalar (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="613" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1190.84" y="623.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="62.8" y="725" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="65.80" y="735.5" ></text>
</g>
<g >
<title>operator new (80,808,080 samples, 0.24%)</title><rect x="1127.1" y="661" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1130.14" y="671.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (202,020,200 samples, 0.61%)</title><rect x="1136.5" y="725" width="7.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1139.48" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt;, std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::less&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.03%)</title><rect x="17.9" y="773" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="20.90" y="783.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (30,303,030 samples, 0.09%)</title><rect x="597.3" y="741" width="1.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="600.31" y="751.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (313,131,310 samples, 0.94%)</title><rect x="337.2" y="741" width="11.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="340.24" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="613" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (30,303,030 samples, 0.09%)</title><rect x="1183.2" y="773" width="1.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1186.18" y="783.5" ></text>
</g>
<g >
<title>sim::LinkQueue::empty (10,101,010 samples, 0.03%)</title><rect x="898.7" y="741" width="0.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="901.68" y="751.5" ></text>
</g>
<g >
<title>sim::Link::get_max_to_ingress_queue_size (40,404,040 samples, 0.12%)</title><rect x="617.8" y="757" width="1.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="620.78" y="767.5" ></text>
</g>
<g >
<title>sim::Switch::process (11,222,222,110 samples, 33.82%)</title><rect x="628.2" y="757" width="399.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="631.20" y="767.5" >sim::Switch::process</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="309" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::map&lt;std::weak_ptr&lt;sim::ILink&gt;, int, std::owner_less&lt;std::weak_ptr&lt;sim::ILink&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;sim::ILink&gt; const, int&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (50,505,050 samples, 0.15%)</title><rect x="1179.9" y="741" width="1.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1182.94" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (30,303,030 samples, 0.09%)</title><rect x="1134.3" y="693" width="1.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1137.32" y="703.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (10,101,010 samples, 0.03%)</title><rect x="336.9" y="741" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="339.88" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.1" y="677" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.06" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="34.4" y="549" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.43" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="389" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1129.78" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 0.06%)</title><rect x="1181.0" y="677" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1184.02" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="61.7" y="677" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="64.73" y="687.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (101,010,100 samples, 0.30%)</title><rect x="1126.4" y="725" width="3.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1129.42" y="735.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (20,202,020 samples, 0.06%)</title><rect x="1148.0" y="741" width="0.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1150.97" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="677" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="22.34" y="687.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.15%)</title><rect x="603.1" y="661" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="606.05" y="671.5" ></text>
</g>
<g >
<title>malloc (101,010,100 samples, 0.30%)</title><rect x="1103.8" y="725" width="3.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1106.79" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="66.4" y="581" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.40" y="591.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (10,101,010 samples, 0.03%)</title><rect x="598.0" y="677" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="601.02" y="687.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (50,505,050 samples, 0.15%)</title><rect x="895.4" y="693" width="1.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="898.45" y="703.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (30,303,030 samples, 0.09%)</title><rect x="66.4" y="741" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="69.40" y="751.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt; (10,101,010 samples, 0.03%)</title><rect x="609.2" y="661" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="612.16" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="373" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (20,202,020 samples, 0.06%)</title><rect x="616.0" y="693" width="0.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="618.98" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="437" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1129.78" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.37%)</title><rect x="887.9" y="693" width="4.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="890.91" y="703.5" ></text>
</g>
<g >
<title>Logger::get_instance (10,101,010 samples, 0.03%)</title><rect x="1123.2" y="741" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1126.19" y="751.5" ></text>
</g>
<g >
<title>operator delete (10,101,010 samples, 0.03%)</title><rect x="607.0" y="693" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="610.00" y="703.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 0.06%)</title><rect x="30.8" y="741" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="33.83" y="751.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="614.5" y="597" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="617.55" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="421" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1190.84" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1179.6" y="629" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.58" y="639.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="52.0" y="565" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.03" y="575.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (30,303,030 samples, 0.09%)</title><rect x="1144.0" y="709" width="1.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1147.02" y="719.5" ></text>
</g>
<g >
<title>void sim::YamlParser::process_identifiables&lt;sim::IFlow&gt; (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="757" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1192.28" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.1" y="693" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.06" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="61.7" y="629" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="64.73" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="101" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1129.78" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="29.8" y="549" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.76" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (20,202,020 samples, 0.06%)</title><rect x="1184.3" y="773" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1187.25" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="33.7" y="677" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="36.71" y="687.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.03%)</title><rect x="1132.5" y="725" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1135.53" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="453" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="463.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,101,010 samples, 0.03%)</title><rect x="53.1" y="725" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="56.11" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="57.8" y="613" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.77" y="623.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="335.8" y="661" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="338.80" y="671.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (10,101,010 samples, 0.03%)</title><rect x="54.2" y="741" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="57.18" y="751.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (30,303,030 samples, 0.09%)</title><rect x="1188.2" y="613" width="1.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1191.20" y="623.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (10,101,010 samples, 0.03%)</title><rect x="343.0" y="725" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="345.99" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="117" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="127.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.06%)</title><rect x="896.5" y="645" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="899.53" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.3" y="693" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.26" y="703.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (10,101,010 samples, 0.03%)</title><rect x="1188.9" y="517" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.92" y="527.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (40,404,040 samples, 0.12%)</title><rect x="940.0" y="741" width="1.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="942.99" y="751.5" ></text>
</g>
<g >
<title>vsnprintf (80,808,080 samples, 0.24%)</title><rect x="343.7" y="677" width="2.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="346.70" y="687.5" ></text>
</g>
<g >
<title>vsnprintf (50,505,050 samples, 0.15%)</title><rect x="603.1" y="677" width="1.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="606.05" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="533" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1129.78" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="67.5" y="645" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.47" y="655.5" ></text>
</g>
<g >
<title>cfree (282,828,280 samples, 0.85%)</title><rect x="858.5" y="725" width="10.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="861.45" y="735.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleDocument (90,909,090 samples, 0.27%)</title><rect x="1186.0" y="741" width="3.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1189.05" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="469" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1190.84" y="479.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="602.0" y="709" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="604.98" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="485" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1129.78" y="495.5" ></text>
</g>
<g >
<title>_IO_file_open (30,303,030 samples, 0.09%)</title><rect x="34.4" y="693" width="1.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="37.43" y="703.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.12%)</title><rect x="1178.5" y="741" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1181.51" y="751.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,101,010 samples, 0.03%)</title><rect x="1189.3" y="677" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1192.28" y="687.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="38.7" y="741" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="41.74" y="751.5" ></text>
</g>
<g >
<title>sim::Packet::to_string[abi:cxx11] (141,414,140 samples, 0.43%)</title><rect x="899.0" y="741" width="5.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="902.04" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="34.8" y="485" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.79" y="495.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.03%)</title><rect x="1132.5" y="709" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1135.53" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="33.7" y="645" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="36.71" y="655.5" ></text>
</g>
<g >
<title>cfree (10,101,010 samples, 0.03%)</title><rect x="1183.9" y="757" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1186.89" y="767.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="19.3" y="741" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.34" y="751.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.09%)</title><rect x="1172.8" y="725" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1175.76" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="61.7" y="597" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="64.73" y="607.5" ></text>
</g>
<g >
<title>operator new (282,828,280 samples, 0.85%)</title><rect x="765.1" y="741" width="10.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="768.06" y="751.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (40,404,040 samples, 0.12%)</title><rect x="1143.7" y="725" width="1.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1146.66" y="735.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long double&gt; (20,202,020 samples, 0.06%)</title><rect x="614.2" y="693" width="0.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="617.19" y="703.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (50,505,050 samples, 0.15%)</title><rect x="1134.0" y="725" width="1.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1136.96" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="581" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1129.78" y="591.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (40,404,040 samples, 0.12%)</title><rect x="1186.4" y="597" width="1.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1189.41" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="293" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1129.78" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="661" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::~__basic_file (10,101,010 samples, 0.03%)</title><rect x="74.7" y="773" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="77.66" y="783.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_packet_now (20,202,020 samples, 0.06%)</title><rect x="1151.6" y="741" width="0.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1154.56" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="501" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1190.84" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="62.4" y="421" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="65.44" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="357" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="469" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="479.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (10,101,010 samples, 0.03%)</title><rect x="353.8" y="693" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="356.76" y="703.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (40,404,040 samples, 0.12%)</title><rect x="904.1" y="741" width="1.4" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="907.07" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="133" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="143.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_outlinks (40,404,040 samples, 0.12%)</title><rect x="1172.8" y="757" width="1.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1175.76" y="767.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="1163.1" y="709" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1166.06" y="719.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="609.2" y="613" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="612.16" y="623.5" ></text>
</g>
<g >
<title>sim::Host::send_packet (777,777,770 samples, 2.34%)</title><rect x="1122.5" y="757" width="27.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1125.47" y="767.5" >s..</text>
</g>
<g >
<title>sim::Host::enqueue_packet (80,808,080 samples, 0.24%)</title><rect x="612.8" y="725" width="2.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="615.75" y="735.5" ></text>
</g>
<g >
<title>sim::Process::~Process (111,111,110 samples, 0.33%)</title><rect x="1118.2" y="773" width="3.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1121.16" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="29.8" y="661" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.76" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="29.8" y="565" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.76" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1171.7" y="501" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.68" y="511.5" ></text>
</g>
<g >
<title>sim::SendData::operator (787,878,780 samples, 2.37%)</title><rect x="1122.1" y="773" width="28.0" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1125.11" y="783.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="52.0" y="661" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.03" y="671.5" ></text>
</g>
<g >
<title>YAML::Load (90,909,090 samples, 0.27%)</title><rect x="1186.0" y="773" width="3.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1189.05" y="783.5" ></text>
</g>
<g >
<title>fopen (40,404,040 samples, 0.12%)</title><rect x="67.5" y="725" width="1.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="70.47" y="735.5" ></text>
</g>
<g >
<title>[libc.so.6] (33,161,615,830 samples, 99.94%)</title><rect x="10.7" y="837" width="1179.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.72" y="847.5" >[libc.so.6]</text>
</g>
<g >
<title>YAML::Parser::HandleNextDocument (90,909,090 samples, 0.27%)</title><rect x="1186.0" y="757" width="3.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1189.05" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1127.9" y="549" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1130.86" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="18.3" y="725" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.26" y="735.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.27%)</title><rect x="1186.0" y="693" width="3.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.05" y="703.5" ></text>
</g>
<g >
<title>Logger::get_instance (60,606,060 samples, 0.18%)</title><rect x="781.9" y="725" width="2.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="784.94" y="735.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="614.5" y="581" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="617.55" y="591.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="903.4" y="597" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="906.35" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1187.8" y="389" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1190.84" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.12%)</title><rect x="67.5" y="613" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.47" y="623.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanNextToken (10,101,010 samples, 0.03%)</title><rect x="1186.0" y="597" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1189.05" y="607.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (10,101,010 samples, 0.03%)</title><rect x="1125.7" y="741" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1128.70" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="52.7" y="421" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.75" y="431.5" ></text>
</g>
<g >
<title>sim::Process::~Process (101,010,100 samples, 0.30%)</title><rect x="245.3" y="789" width="3.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="248.28" y="799.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (60,606,060 samples, 0.18%)</title><rect x="901.6" y="693" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="904.56" y="703.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (111,111,110 samples, 0.33%)</title><rect x="893.7" y="741" width="3.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="896.65" y="751.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (90,909,090 samples, 0.27%)</title><rect x="1186.0" y="661" width="3.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1189.05" y="671.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (10,101,010 samples, 0.03%)</title><rect x="598.4" y="741" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="601.38" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="645" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1129.78" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.1" y="549" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.06" y="559.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,101,010 samples, 0.03%)</title><rect x="347.3" y="709" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="350.30" y="719.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (30,303,030 samples, 0.09%)</title><rect x="1130.0" y="741" width="1.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1133.01" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="245" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1129.78" y="255.5" ></text>
</g>
<g >
<title>__libc_start_main (33,161,615,830 samples, 99.94%)</title><rect x="10.7" y="853" width="1179.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.72" y="863.5" >__libc_start_main</text>
</g>
<g >
<title>sim::Link::get_packet (111,111,110 samples, 0.33%)</title><rect x="619.2" y="757" width="4.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="622.22" y="767.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.12%)</title><rect x="1159.8" y="725" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1162.83" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="1127.9" y="437" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1130.86" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1179.2" y="677" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.22" y="687.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (101,010,100 samples, 0.30%)</title><rect x="1126.4" y="709" width="3.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1129.42" y="719.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (10,101,010 samples, 0.03%)</title><rect x="350.5" y="757" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="353.53" y="767.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (70,707,070 samples, 0.21%)</title><rect x="72.1" y="725" width="2.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="75.14" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="10.0" y="597" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1171.3" y="629" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.32" y="639.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="52.0" y="549" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.03" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="52.7" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.75" y="383.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10,101,010 samples, 0.03%)</title><rect x="1174.2" y="757" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1177.19" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,101,010 samples, 0.03%)</title><rect x="1126.8" y="341" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1129.78" y="351.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.12%)</title><rect x="1159.8" y="741" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1162.83" y="751.5" ></text>
</g>
<g >
<title>sim::Host::process (616,161,610 samples, 1.86%)</title><rect x="595.9" y="757" width="21.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="598.87" y="767.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,101,010 samples, 0.03%)</title><rect x="20.1" y="645" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.06" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,202,020 samples, 0.06%)</title><rect x="1171.3" y="645" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1174.32" y="655.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (30,303,030 samples, 0.09%)</title><rect x="1134.3" y="709" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1137.32" y="719.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (20,202,020 samples, 0.06%)</title><rect x="1188.6" y="533" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.56" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.09%)</title><rect x="34.4" y="629" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="37.43" y="639.5" ></text>
</g>
</g>
</svg>
